### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
  commentId: T:BindOpen.Data.Elements.Schema.SchemaZoneElement
  id: SchemaZoneElement
  parent: BindOpen.Data.Elements.Schema
  children:
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor(System.String,System.Object[])
  - BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement(BindOpen.Data.Elements.Schema.SchemaElement)
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId(System.String,BindOpen.Data.Elements.Schema.SchemaElement)
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements
  langs:
  - csharp
  - vb
  name: SchemaZoneElement
  nameWithType: SchemaZoneElement
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SchemaZoneElement
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 13
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nThis class represents a schema zone element.\n"
  example: []
  syntax:
    content: 'public class SchemaZoneElement : SchemaElement, IIndexedDataItem, IDataElement, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed, INotifyPropertyChanged'
    content.vb: >-
      Public Class SchemaZoneElement
          Inherits SchemaElement
          Implements IIndexedDataItem, IDataElement, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed, INotifyPropertyChanged
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.StoredDataItem
  - BindOpen.Data.Items.NamedDataItem
  - BindOpen.Data.Items.TitledDataItem
  - BindOpen.Data.Items.DescribedDataItem
  - BindOpen.Data.Items.IndexedDataItem
  - BindOpen.Data.Elements.DataElement
  - BindOpen.Data.Elements.Schema.SchemaElement
  implements:
  - BindOpen.Data.Items.IIndexedDataItem
  - BindOpen.Data.Elements.IDataElement
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  - BindOpen.Data.Items.IIndexed
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - BindOpen.Data.Elements.Schema.SchemaElement.ParentZone
  - BindOpen.Data.Elements.Schema.SchemaElement.ImageFileName
  - BindOpen.Data.Elements.Schema.SchemaElement.EntityUniqueName
  - BindOpen.Data.Elements.Schema.SchemaElement.Entity
  - BindOpen.Data.Elements.Schema.SchemaElement.Specification
  - BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification
  - BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement(BindOpen.Data.Elements.Schema.SchemaElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement})
  - BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaZoneElement})
  - BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.MoveElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.CreateElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.AddElement(BindOpen.Data.Elements.Schema.SchemaZoneElement,BindOpen.Data.Elements.Schema.SchemaElement)
  - BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility(BindOpen.Data.Common.AccessibilityLevels,System.Boolean)
  - BindOpen.Data.Elements.Schema.SchemaElement.PropertyChanged
  - BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged(System.String)
  - BindOpen.Data.Elements.Schema.SchemaElement.Dispose(System.Boolean)
  - BindOpen.Data.Elements.DataElement.ValueType
  - BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  - BindOpen.Data.Elements.DataElement.ItemizationMode
  - BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  - BindOpen.Data.Elements.DataElement.ItemReference
  - BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  - BindOpen.Data.Elements.DataElement.ItemScript
  - BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  - BindOpen.Data.Elements.DataElement.Items
  - BindOpen.Data.Elements.DataElement.SpecificationSpecified
  - BindOpen.Data.Elements.DataElement.Item(System.Int32)
  - BindOpen.Data.Elements.DataElement.Item(System.String)
  - BindOpen.Data.Elements.DataElement.First
  - BindOpen.Data.Elements.DataElement.PropertyDetail
  - BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  - BindOpen.Data.Elements.DataElement.EventKind
  - BindOpen.Data.Elements.DataElement.EventKindSpecified
  - BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.ClearItems
  - BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  - BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  - BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
  - BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
  - BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  - BindOpen.Data.Elements.DataElement.GetDefaultControlType
  - BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
  - BindOpen.Data.Elements.DataElement.ToString
  - BindOpen.Data.Elements.DataElement.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Elements.DataElement.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Elements.DataElement.Clone(System.String[])
  - BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
  - BindOpen.Data.Items.IndexedDataItem.Index
  - BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  - BindOpen.Data.Items.DescribedDataItem.Description
  - BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  - BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.Title
  - BindOpen.Data.Items.TitledDataItem.TitleSpecified
  - BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  - BindOpen.Data.Items.NamedDataItem.Name
  - BindOpen.Data.Items.NamedDataItem.NameSpecified
  - BindOpen.Data.Items.NamedDataItem.Key
  - BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  - BindOpen.Data.Items.StoredDataItem.NamePreffix
  - BindOpen.Data.Items.StoredDataItem.CreationDate
  - BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.LastModificationDate
  - BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Data.Elements.Schema.SchemaZoneElement.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.Schema.SchemaZoneElement})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements
  commentId: P:BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements
  id: _SubSchemaElements
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: _SubSchemaElements
  nameWithType: SchemaZoneElement._SubSchemaElements
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: _SubSchemaElements
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 36
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nThe serialized schema elements of this instance.\n"
  example: []
  syntax:
    content: public List<SchemaElement> _SubSchemaElements { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement}
    content.vb: Public Property _SubSchemaElements As List(Of SchemaElement)
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements
  commentId: P:BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements
  id: SubElements
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: SubElements
  nameWithType: SchemaZoneElement.SubElements
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SubElements
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 47
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nThe sub elements of this instance.\n"
  example: []
  syntax:
    content: public ObservableCollection<SchemaElement> SubElements { get; set; }
    parameters: []
    return:
      type: System.Collections.ObjectModel.ObservableCollection{BindOpen.Data.Elements.Schema.SchemaElement}
    content.vb: Public Property SubElements As ObservableCollection(Of SchemaElement)
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor
  commentId: M:BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: SchemaZoneElement()
  nameWithType: SchemaZoneElement.SchemaZoneElement()
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.SchemaZoneElement()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 76
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nInitializes a new instance of the SchemaZoneElement class.\n"
  example: []
  syntax:
    content: public SchemaZoneElement()
    content.vb: Public Sub New
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor(System.String,System.Object[])
  commentId: M:BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor(System.String,System.Object[])
  id: '#ctor(System.String,System.Object[])'
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: SchemaZoneElement(String, Object[])
  nameWithType: SchemaZoneElement.SchemaZoneElement(String, Object[])
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.SchemaZoneElement(System.String, System.Object[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 86
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nInitializes a new instance of the SchemaZoneElement class.\n"
  example: []
  syntax:
    content: public SchemaZoneElement(string name, params object[] items)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    - id: items
      type: System.Object[]
      description: The items to consider.
    content.vb: Public Sub New(name As String, ParamArray items As Object())
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor*
  nameWithType.vb: SchemaZoneElement.SchemaZoneElement(String, Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Elements.Schema.SchemaZoneElement.SchemaZoneElement(System.String, System.Object())
  name.vb: SchemaZoneElement(String, Object())
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree
  commentId: M:BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree
  id: BuildTree
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: BuildTree()
  nameWithType: SchemaZoneElement.BuildTree()
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BuildTree
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 108
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nBuilds the tree of this instance.\n"
  example: []
  syntax:
    content: public virtual void BuildTree()
    content.vb: Public Overridable Sub BuildTree
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement(BindOpen.Data.Elements.Schema.SchemaElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement(BindOpen.Data.Elements.Schema.SchemaElement)
  id: AddSubElement(BindOpen.Data.Elements.Schema.SchemaElement)
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: AddSubElement(SchemaElement)
  nameWithType: SchemaZoneElement.AddSubElement(SchemaElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement(BindOpen.Data.Elements.Schema.SchemaElement)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSubElement
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 127
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nAdds the specified sub schema element.\n"
  example: []
  syntax:
    content: public void AddSubElement(SchemaElement aSchemaElement)
    parameters:
    - id: aSchemaElement
      type: BindOpen.Data.Elements.Schema.SchemaElement
    content.vb: Public Sub AddSubElement(aSchemaElement As SchemaElement)
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId(System.String,BindOpen.Data.Elements.Schema.SchemaElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId(System.String,BindOpen.Data.Elements.Schema.SchemaElement)
  id: GetElementWithId(System.String,BindOpen.Data.Elements.Schema.SchemaElement)
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: GetElementWithId(String, SchemaElement)
  nameWithType: SchemaZoneElement.GetElementWithId(String, SchemaElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId(System.String, BindOpen.Data.Elements.Schema.SchemaElement)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetElementWithId
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 152
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nGets the schema element with the specified ID.\n"
  example: []
  syntax:
    content: public SchemaElement GetElementWithId(string id, SchemaElement parentSchemaElement = null)
    parameters:
    - id: id
      type: System.String
      description: The ID of the schema element to consider.
    - id: parentSchemaElement
      type: BindOpen.Data.Elements.Schema.SchemaElement
      description: The parent schema element to consider.
    return:
      type: BindOpen.Data.Elements.Schema.SchemaElement
      description: The bschema element with the specified ID.
    content.vb: Public Function GetElementWithId(id As String, parentSchemaElement As SchemaElement = Nothing) As SchemaElement
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone
  commentId: M:BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone
  id: Clone
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: SchemaZoneElement.Clone()
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 184
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overrides Function Clone As Object
  overridden: BindOpen.Data.Elements.Schema.SchemaElement.Clone
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  id: Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaZoneElement
  langs:
  - csharp
  - vb
  name: Clone(SchemaZoneElement)
  nameWithType: SchemaZoneElement.Clone(SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Elements/Schema/SchemaZoneElement.cs
    startLine: 194
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements.Schema
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone(SchemaZoneElement parentZoneElement)
    parameters:
    - id: parentZoneElement
      type: BindOpen.Data.Elements.Schema.SchemaZoneElement
      description: The parent schema element group to consider.
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overrides Function Clone(parentZoneElement As SchemaZoneElement) As Object
  overridden: BindOpen.Data.Elements.Schema.SchemaElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  overload: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BindOpen.Data.Elements.Schema
  commentId: N:BindOpen.Data.Elements.Schema
  name: BindOpen.Data.Elements.Schema
  nameWithType: BindOpen.Data.Elements.Schema
  fullName: BindOpen.Data.Elements.Schema
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.StoredDataItem
  commentId: T:BindOpen.Data.Items.StoredDataItem
  parent: BindOpen.Data.Items
  name: StoredDataItem
  nameWithType: StoredDataItem
  fullName: BindOpen.Data.Items.StoredDataItem
- uid: BindOpen.Data.Items.NamedDataItem
  commentId: T:BindOpen.Data.Items.NamedDataItem
  parent: BindOpen.Data.Items
  name: NamedDataItem
  nameWithType: NamedDataItem
  fullName: BindOpen.Data.Items.NamedDataItem
- uid: BindOpen.Data.Items.TitledDataItem
  commentId: T:BindOpen.Data.Items.TitledDataItem
  parent: BindOpen.Data.Items
  name: TitledDataItem
  nameWithType: TitledDataItem
  fullName: BindOpen.Data.Items.TitledDataItem
- uid: BindOpen.Data.Items.DescribedDataItem
  commentId: T:BindOpen.Data.Items.DescribedDataItem
  parent: BindOpen.Data.Items
  name: DescribedDataItem
  nameWithType: DescribedDataItem
  fullName: BindOpen.Data.Items.DescribedDataItem
- uid: BindOpen.Data.Items.IndexedDataItem
  commentId: T:BindOpen.Data.Items.IndexedDataItem
  parent: BindOpen.Data.Items
  name: IndexedDataItem
  nameWithType: IndexedDataItem
  fullName: BindOpen.Data.Items.IndexedDataItem
- uid: BindOpen.Data.Elements.DataElement
  commentId: T:BindOpen.Data.Elements.DataElement
  parent: BindOpen.Data.Elements
  name: DataElement
  nameWithType: DataElement
  fullName: BindOpen.Data.Elements.DataElement
- uid: BindOpen.Data.Elements.Schema.SchemaElement
  commentId: T:BindOpen.Data.Elements.Schema.SchemaElement
  parent: BindOpen.Data.Elements.Schema
  name: SchemaElement
  nameWithType: SchemaElement
  fullName: BindOpen.Data.Elements.Schema.SchemaElement
- uid: BindOpen.Data.Items.IIndexedDataItem
  commentId: T:BindOpen.Data.Items.IIndexedDataItem
  parent: BindOpen.Data.Items
  name: IIndexedDataItem
  nameWithType: IIndexedDataItem
  fullName: BindOpen.Data.Items.IIndexedDataItem
- uid: BindOpen.Data.Elements.IDataElement
  commentId: T:BindOpen.Data.Elements.IDataElement
  parent: BindOpen.Data.Elements
  name: IDataElement
  nameWithType: IDataElement
  fullName: BindOpen.Data.Elements.IDataElement
- uid: BindOpen.Data.Items.IDescribedDataItem
  commentId: T:BindOpen.Data.Items.IDescribedDataItem
  parent: BindOpen.Data.Items
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  commentId: T:BindOpen.Data.Items.ITitledDataItem
  parent: BindOpen.Data.Items
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  commentId: T:BindOpen.Data.Items.INamedDataItem
  parent: BindOpen.Data.Items
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  commentId: T:BindOpen.Data.Items.IStoredDataItem
  parent: BindOpen.Data.Items
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  commentId: T:BindOpen.Data.Items.IStorable
  parent: BindOpen.Data.Items
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  commentId: T:BindOpen.Data.Items.IGloballyTitled
  parent: BindOpen.Data.Items
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.IIndexed
  commentId: T:BindOpen.Data.Items.IIndexed
  parent: BindOpen.Data.Items
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: BindOpen.Data.Elements.Schema.SchemaElement.ParentZone
  commentId: P:BindOpen.Data.Elements.Schema.SchemaElement.ParentZone
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: ParentZone
  nameWithType: SchemaElement.ParentZone
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.ParentZone
- uid: BindOpen.Data.Elements.Schema.SchemaElement.ImageFileName
  commentId: P:BindOpen.Data.Elements.Schema.SchemaElement.ImageFileName
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: ImageFileName
  nameWithType: SchemaElement.ImageFileName
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.ImageFileName
- uid: BindOpen.Data.Elements.Schema.SchemaElement.EntityUniqueName
  commentId: P:BindOpen.Data.Elements.Schema.SchemaElement.EntityUniqueName
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: EntityUniqueName
  nameWithType: SchemaElement.EntityUniqueName
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.EntityUniqueName
- uid: BindOpen.Data.Elements.Schema.SchemaElement.Entity
  commentId: P:BindOpen.Data.Elements.Schema.SchemaElement.Entity
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: Entity
  nameWithType: SchemaElement.Entity
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.Entity
- uid: BindOpen.Data.Elements.Schema.SchemaElement.Specification
  commentId: P:BindOpen.Data.Elements.Schema.SchemaElement.Specification
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: Specification
  nameWithType: SchemaElement.Specification
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.Specification
- uid: BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: IsDescendantOf(SchemaZoneElement)
  nameWithType: SchemaElement.IsDescendantOf(SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: IsDescendantOf
    nameWithType: SchemaElement.IsDescendantOf
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: IsDescendantOf
    nameWithType: SchemaElement.IsDescendantOf
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.IsDescendantOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: NewSpecification()
  nameWithType: SchemaElement.NewSpecification()
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification()
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification
    name: NewSpecification
    nameWithType: SchemaElement.NewSpecification
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification
    name: NewSpecification
    nameWithType: SchemaElement.NewSpecification
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.NewSpecification
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement(BindOpen.Data.Elements.Schema.SchemaElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement(BindOpen.Data.Elements.Schema.SchemaElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: DeleteElement(SchemaElement)
  nameWithType: SchemaElement.DeleteElement(SchemaElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement(BindOpen.Data.Elements.Schema.SchemaElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement(BindOpen.Data.Elements.Schema.SchemaElement)
    name: DeleteElement
    nameWithType: SchemaElement.DeleteElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement(BindOpen.Data.Elements.Schema.SchemaElement)
    name: DeleteElement
    nameWithType: SchemaElement.DeleteElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement})
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement})
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  isExternal: true
  name: DeleteElements(List<SchemaElement>)
  nameWithType: SchemaElement.DeleteElements(List<SchemaElement>)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List<BindOpen.Data.Elements.Schema.SchemaElement>)
  nameWithType.vb: SchemaElement.DeleteElements(List(Of SchemaElement))
  fullName.vb: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List(Of BindOpen.Data.Elements.Schema.SchemaElement))
  name.vb: DeleteElements(List(Of SchemaElement))
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement})
    name: DeleteElements
    nameWithType: SchemaElement.DeleteElements
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement})
    name: DeleteElements
    nameWithType: SchemaElement.DeleteElements
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.DeleteElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: MergeDbQueryElement(SchemaElement, SchemaZoneElement)
  nameWithType: SchemaElement.MergeDbQueryElement(SchemaElement, SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement, BindOpen.Data.Elements.Schema.SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MergeDbQueryElement
    nameWithType: SchemaElement.MergeDbQueryElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MergeDbQueryElement
    nameWithType: SchemaElement.MergeDbQueryElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaZoneElement})
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaZoneElement})
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  isExternal: true
  name: MergeDbQueryElement(SchemaElement, List<SchemaZoneElement>)
  nameWithType: SchemaElement.MergeDbQueryElement(SchemaElement, List<SchemaZoneElement>)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement, System.Collections.Generic.List<BindOpen.Data.Elements.Schema.SchemaZoneElement>)
  nameWithType.vb: SchemaElement.MergeDbQueryElement(SchemaElement, List(Of SchemaZoneElement))
  fullName.vb: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement, System.Collections.Generic.List(Of BindOpen.Data.Elements.Schema.SchemaZoneElement))
  name.vb: MergeDbQueryElement(SchemaElement, List(Of SchemaZoneElement))
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaZoneElement})
    name: MergeDbQueryElement
    nameWithType: SchemaElement.MergeDbQueryElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement(BindOpen.Data.Elements.Schema.SchemaElement,System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaZoneElement})
    name: MergeDbQueryElement
    nameWithType: SchemaElement.MergeDbQueryElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  isExternal: true
  name: MergeDbQueryElements(List<SchemaElement>, SchemaZoneElement)
  nameWithType: SchemaElement.MergeDbQueryElements(List<SchemaElement>, SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements(System.Collections.Generic.List<BindOpen.Data.Elements.Schema.SchemaElement>, BindOpen.Data.Elements.Schema.SchemaZoneElement)
  nameWithType.vb: SchemaElement.MergeDbQueryElements(List(Of SchemaElement), SchemaZoneElement)
  fullName.vb: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements(System.Collections.Generic.List(Of BindOpen.Data.Elements.Schema.SchemaElement), BindOpen.Data.Elements.Schema.SchemaZoneElement)
  name.vb: MergeDbQueryElements(List(Of SchemaElement), SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MergeDbQueryElements
    nameWithType: SchemaElement.MergeDbQueryElements
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MergeDbQueryElements
    nameWithType: SchemaElement.MergeDbQueryElements
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MergeDbQueryElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.MoveElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.MoveElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: MoveElement(SchemaElement, SchemaZoneElement)
  nameWithType: SchemaElement.MoveElement(SchemaElement, SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.MoveElement(BindOpen.Data.Elements.Schema.SchemaElement, BindOpen.Data.Elements.Schema.SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MoveElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MoveElement
    nameWithType: SchemaElement.MoveElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MoveElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MoveElement(BindOpen.Data.Elements.Schema.SchemaElement,BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MoveElement
    nameWithType: SchemaElement.MoveElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MoveElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  isExternal: true
  name: MoveElements(List<SchemaElement>, SchemaZoneElement)
  nameWithType: SchemaElement.MoveElements(List<SchemaElement>, SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List<BindOpen.Data.Elements.Schema.SchemaElement>, BindOpen.Data.Elements.Schema.SchemaZoneElement)
  nameWithType.vb: SchemaElement.MoveElements(List(Of SchemaElement), SchemaZoneElement)
  fullName.vb: BindOpen.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List(Of BindOpen.Data.Elements.Schema.SchemaElement), BindOpen.Data.Elements.Schema.SchemaZoneElement)
  name.vb: MoveElements(List(Of SchemaElement), SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MoveElements
    nameWithType: SchemaElement.MoveElements
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MoveElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.MoveElements(System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement},BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: MoveElements
    nameWithType: SchemaElement.MoveElements
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.MoveElements
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: CreateSchemaZoneElement(SchemaZoneElement)
  nameWithType: SchemaElement.CreateSchemaZoneElement(SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: CreateSchemaZoneElement
    nameWithType: SchemaElement.CreateSchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: CreateSchemaZoneElement
    nameWithType: SchemaElement.CreateSchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.CreateSchemaZoneElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.CreateElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.CreateElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: CreateElement(SchemaZoneElement)
  nameWithType: SchemaElement.CreateElement(SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.CreateElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.CreateElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: CreateElement
    nameWithType: SchemaElement.CreateElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.CreateElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.CreateElement(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: CreateElement
    nameWithType: SchemaElement.CreateElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.CreateElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.AddElement(BindOpen.Data.Elements.Schema.SchemaZoneElement,BindOpen.Data.Elements.Schema.SchemaElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.AddElement(BindOpen.Data.Elements.Schema.SchemaZoneElement,BindOpen.Data.Elements.Schema.SchemaElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: AddElement(SchemaZoneElement, SchemaElement)
  nameWithType: SchemaElement.AddElement(SchemaZoneElement, SchemaElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.AddElement(BindOpen.Data.Elements.Schema.SchemaZoneElement, BindOpen.Data.Elements.Schema.SchemaElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.AddElement(BindOpen.Data.Elements.Schema.SchemaZoneElement,BindOpen.Data.Elements.Schema.SchemaElement)
    name: AddElement
    nameWithType: SchemaElement.AddElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.AddElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.AddElement(BindOpen.Data.Elements.Schema.SchemaZoneElement,BindOpen.Data.Elements.Schema.SchemaElement)
    name: AddElement
    nameWithType: SchemaElement.AddElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.AddElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility(BindOpen.Data.Common.AccessibilityLevels,System.Boolean)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility(BindOpen.Data.Common.AccessibilityLevels,System.Boolean)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  isExternal: true
  name: ApplyVisibility(AccessibilityLevels, Boolean)
  nameWithType: SchemaElement.ApplyVisibility(AccessibilityLevels, Boolean)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility(BindOpen.Data.Common.AccessibilityLevels, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility(BindOpen.Data.Common.AccessibilityLevels,System.Boolean)
    name: ApplyVisibility
    nameWithType: SchemaElement.ApplyVisibility
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.AccessibilityLevels
    name: AccessibilityLevels
    nameWithType: AccessibilityLevels
    fullName: BindOpen.Data.Common.AccessibilityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility(BindOpen.Data.Common.AccessibilityLevels,System.Boolean)
    name: ApplyVisibility
    nameWithType: SchemaElement.ApplyVisibility
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.ApplyVisibility
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.AccessibilityLevels
    name: AccessibilityLevels
    nameWithType: AccessibilityLevels
    fullName: BindOpen.Data.Common.AccessibilityLevels
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.PropertyChanged
  commentId: E:BindOpen.Data.Elements.Schema.SchemaElement.PropertyChanged
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: PropertyChanged
  nameWithType: SchemaElement.PropertyChanged
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.PropertyChanged
- uid: BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged(System.String)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged(System.String)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  isExternal: true
  name: RaizePropertyChanged(String)
  nameWithType: SchemaElement.RaizePropertyChanged(String)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged(System.String)
    name: RaizePropertyChanged
    nameWithType: SchemaElement.RaizePropertyChanged
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged(System.String)
    name: RaizePropertyChanged
    nameWithType: SchemaElement.RaizePropertyChanged
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.RaizePropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaElement.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.Dispose(System.Boolean)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: SchemaElement.Dispose(Boolean)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SchemaElement.Dispose
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.Dispose(System.Boolean)
    name: Dispose
    nameWithType: SchemaElement.Dispose
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.ValueType
  commentId: P:BindOpen.Data.Elements.DataElement.ValueType
  parent: BindOpen.Data.Elements.DataElement
  name: ValueType
  nameWithType: DataElement.ValueType
  fullName: BindOpen.Data.Elements.DataElement.ValueType
- uid: BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  parent: BindOpen.Data.Elements.DataElement
  name: ValueTypeSpecified
  nameWithType: DataElement.ValueTypeSpecified
  fullName: BindOpen.Data.Elements.DataElement.ValueTypeSpecified
- uid: BindOpen.Data.Elements.DataElement.ItemizationMode
  commentId: P:BindOpen.Data.Elements.DataElement.ItemizationMode
  parent: BindOpen.Data.Elements.DataElement
  name: ItemizationMode
  nameWithType: DataElement.ItemizationMode
  fullName: BindOpen.Data.Elements.DataElement.ItemizationMode
- uid: BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  parent: BindOpen.Data.Elements.DataElement
  name: ItemizationModeSpecified
  nameWithType: DataElement.ItemizationModeSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
- uid: BindOpen.Data.Elements.DataElement.ItemReference
  commentId: P:BindOpen.Data.Elements.DataElement.ItemReference
  parent: BindOpen.Data.Elements.DataElement
  name: ItemReference
  nameWithType: DataElement.ItemReference
  fullName: BindOpen.Data.Elements.DataElement.ItemReference
- uid: BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  parent: BindOpen.Data.Elements.DataElement
  name: ItemReferenceSpecified
  nameWithType: DataElement.ItemReferenceSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
- uid: BindOpen.Data.Elements.DataElement.ItemScript
  commentId: P:BindOpen.Data.Elements.DataElement.ItemScript
  parent: BindOpen.Data.Elements.DataElement
  name: ItemScript
  nameWithType: DataElement.ItemScript
  fullName: BindOpen.Data.Elements.DataElement.ItemScript
- uid: BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  parent: BindOpen.Data.Elements.DataElement
  name: ItemScriptSpecified
  nameWithType: DataElement.ItemScriptSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemScriptSpecified
- uid: BindOpen.Data.Elements.DataElement.Items
  commentId: P:BindOpen.Data.Elements.DataElement.Items
  parent: BindOpen.Data.Elements.DataElement
  name: Items
  nameWithType: DataElement.Items
  fullName: BindOpen.Data.Elements.DataElement.Items
- uid: BindOpen.Data.Elements.DataElement.SpecificationSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.SpecificationSpecified
  parent: BindOpen.Data.Elements.DataElement
  name: SpecificationSpecified
  nameWithType: DataElement.SpecificationSpecified
  fullName: BindOpen.Data.Elements.DataElement.SpecificationSpecified
- uid: BindOpen.Data.Elements.DataElement.Item(System.Int32)
  commentId: P:BindOpen.Data.Elements.DataElement.Item(System.Int32)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: Item[Int32]
  nameWithType: DataElement.Item[Int32]
  fullName: BindOpen.Data.Elements.DataElement.Item[System.Int32]
  nameWithType.vb: DataElement.Item(Int32)
  fullName.vb: BindOpen.Data.Elements.DataElement.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Item(System.Int32)
    name: Item
    nameWithType: DataElement.Item
    fullName: BindOpen.Data.Elements.DataElement.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Item(System.Int32)
    name: Item
    nameWithType: DataElement.Item
    fullName: BindOpen.Data.Elements.DataElement.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Item(System.String)
  commentId: P:BindOpen.Data.Elements.DataElement.Item(System.String)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: Item[String]
  nameWithType: DataElement.Item[String]
  fullName: BindOpen.Data.Elements.DataElement.Item[System.String]
  nameWithType.vb: DataElement.Item(String)
  fullName.vb: BindOpen.Data.Elements.DataElement.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Item(System.String)
    name: Item
    nameWithType: DataElement.Item
    fullName: BindOpen.Data.Elements.DataElement.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Item(System.String)
    name: Item
    nameWithType: DataElement.Item
    fullName: BindOpen.Data.Elements.DataElement.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.First
  commentId: P:BindOpen.Data.Elements.DataElement.First
  parent: BindOpen.Data.Elements.DataElement
  name: First
  nameWithType: DataElement.First
  fullName: BindOpen.Data.Elements.DataElement.First
- uid: BindOpen.Data.Elements.DataElement.PropertyDetail
  commentId: P:BindOpen.Data.Elements.DataElement.PropertyDetail
  parent: BindOpen.Data.Elements.DataElement
  name: PropertyDetail
  nameWithType: DataElement.PropertyDetail
  fullName: BindOpen.Data.Elements.DataElement.PropertyDetail
- uid: BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  parent: BindOpen.Data.Elements.DataElement
  name: PropertyDetailSpecified
  nameWithType: DataElement.PropertyDetailSpecified
  fullName: BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
- uid: BindOpen.Data.Elements.DataElement.EventKind
  commentId: P:BindOpen.Data.Elements.DataElement.EventKind
  parent: BindOpen.Data.Elements.DataElement
  name: EventKind
  nameWithType: DataElement.EventKind
  fullName: BindOpen.Data.Elements.DataElement.EventKind
- uid: BindOpen.Data.Elements.DataElement.EventKindSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.EventKindSpecified
  parent: BindOpen.Data.Elements.DataElement
  name: EventKindSpecified
  nameWithType: DataElement.EventKindSpecified
  fullName: BindOpen.Data.Elements.DataElement.EventKindSpecified
- uid: BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  name: GetObject<T>(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElement.GetObject<T>(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.GetObject<T>(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataElement.GetObject(Of T)(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Elements.DataElement.GetObject(Of T)(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: GetObject(Of T)(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetObject<T>
    nameWithType: DataElement.GetObject<T>
    fullName: BindOpen.Data.Elements.DataElement.GetObject<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetObject(Of T)
    nameWithType: DataElement.GetObject(Of T)
    fullName: BindOpen.Data.Elements.DataElement.GetObject(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  name: GetObject(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElement.GetObject(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetObject
    nameWithType: DataElement.GetObject
    fullName: BindOpen.Data.Elements.DataElement.GetObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetObject
    nameWithType: DataElement.GetObject
    fullName: BindOpen.Data.Elements.DataElement.GetObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.ClearItems
  commentId: M:BindOpen.Data.Elements.DataElement.ClearItems
  parent: BindOpen.Data.Elements.DataElement
  name: ClearItems()
  nameWithType: DataElement.ClearItems()
  fullName: BindOpen.Data.Elements.DataElement.ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.ClearItems
    name: ClearItems
    nameWithType: DataElement.ClearItems
    fullName: BindOpen.Data.Elements.DataElement.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.ClearItems
    name: ClearItems
    nameWithType: DataElement.ClearItems
    fullName: BindOpen.Data.Elements.DataElement.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: SetItem(Object)
  nameWithType: DataElement.SetItem(Object)
  fullName: BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.SetItem(System.Object)
    name: SetItem
    nameWithType: DataElement.SetItem
    fullName: BindOpen.Data.Elements.DataElement.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.SetItem(System.Object)
    name: SetItem
    nameWithType: DataElement.SetItem
    fullName: BindOpen.Data.Elements.DataElement.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  commentId: M:BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: SetItems(Object[])
  nameWithType: DataElement.SetItems(Object[])
  fullName: BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  nameWithType.vb: DataElement.SetItems(Object())
  fullName.vb: BindOpen.Data.Elements.DataElement.SetItems(System.Object())
  name.vb: SetItems(Object())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
    name: SetItems
    nameWithType: DataElement.SetItems
    fullName: BindOpen.Data.Elements.DataElement.SetItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
    name: SetItems
    nameWithType: DataElement.SetItems
    fullName: BindOpen.Data.Elements.DataElement.SetItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: AddItem(Object, IBdoLog)
  nameWithType: DataElement.AddItem(Object, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.AddItem(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: AddItem
    nameWithType: DataElement.AddItem
    fullName: BindOpen.Data.Elements.DataElement.AddItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: AddItem
    nameWithType: DataElement.AddItem
    fullName: BindOpen.Data.Elements.DataElement.AddItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: AddItems(Object[], IBdoLog)
  nameWithType: DataElement.AddItems(Object[], IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.AddItems(System.Object[], BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataElement.AddItems(Object(), IBdoLog)
  fullName.vb: BindOpen.Data.Elements.DataElement.AddItems(System.Object(), BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddItems(Object(), IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
    name: AddItems
    nameWithType: DataElement.AddItems
    fullName: BindOpen.Data.Elements.DataElement.AddItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
    name: AddItems
    nameWithType: DataElement.AddItems
    fullName: BindOpen.Data.Elements.DataElement.AddItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: SwitchItems(Object, Object)
  nameWithType: DataElement.SwitchItems(Object, Object)
  fullName: BindOpen.Data.Elements.DataElement.SwitchItems(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
    name: SwitchItems
    nameWithType: DataElement.SwitchItems
    fullName: BindOpen.Data.Elements.DataElement.SwitchItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
    name: SwitchItems
    nameWithType: DataElement.SwitchItems
    fullName: BindOpen.Data.Elements.DataElement.SwitchItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: UpdateItem(Object, Object)
  nameWithType: DataElement.UpdateItem(Object, Object)
  fullName: BindOpen.Data.Elements.DataElement.UpdateItem(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
    name: UpdateItem
    nameWithType: DataElement.UpdateItem
    fullName: BindOpen.Data.Elements.DataElement.UpdateItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
    name: UpdateItem
    nameWithType: DataElement.UpdateItem
    fullName: BindOpen.Data.Elements.DataElement.UpdateItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: RemoveItem(Object)
  nameWithType: DataElement.RemoveItem(Object)
  fullName: BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
    name: RemoveItem
    nameWithType: DataElement.RemoveItem
    fullName: BindOpen.Data.Elements.DataElement.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
    name: RemoveItem
    nameWithType: DataElement.RemoveItem
    fullName: BindOpen.Data.Elements.DataElement.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.GetDefaultControlType
  commentId: M:BindOpen.Data.Elements.DataElement.GetDefaultControlType
  parent: BindOpen.Data.Elements.DataElement
  name: GetDefaultControlType()
  nameWithType: DataElement.GetDefaultControlType()
  fullName: BindOpen.Data.Elements.DataElement.GetDefaultControlType()
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.GetDefaultControlType
    name: GetDefaultControlType
    nameWithType: DataElement.GetDefaultControlType
    fullName: BindOpen.Data.Elements.DataElement.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.GetDefaultControlType
    name: GetDefaultControlType
    nameWithType: DataElement.GetDefaultControlType
    fullName: BindOpen.Data.Elements.DataElement.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
  commentId: M:BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: HasItem(Object, Boolean)
  nameWithType: DataElement.HasItem(Object, Boolean)
  fullName: BindOpen.Data.Elements.DataElement.HasItem(System.Object, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
    name: HasItem
    nameWithType: DataElement.HasItem
    fullName: BindOpen.Data.Elements.DataElement.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
    name: HasItem
    nameWithType: DataElement.HasItem
    fullName: BindOpen.Data.Elements.DataElement.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.ToString
  commentId: M:BindOpen.Data.Elements.DataElement.ToString
  parent: BindOpen.Data.Elements.DataElement
  name: ToString()
  nameWithType: DataElement.ToString()
  fullName: BindOpen.Data.Elements.DataElement.ToString()
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.ToString
    name: ToString
    nameWithType: DataElement.ToString
    fullName: BindOpen.Data.Elements.DataElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.ToString
    name: ToString
    nameWithType: DataElement.ToString
    fullName: BindOpen.Data.Elements.DataElement.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElement
  definition: BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataElement.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElement.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElement.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElement.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataElement.Update<T>
    fullName: BindOpen.Data.Elements.DataElement.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataElement.Update(Of T)
    fullName: BindOpen.Data.Elements.DataElement.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Elements.DataElement
  definition: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataElement.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Elements.DataElement.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataElement.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Elements.DataElement.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataElement.Check<T>
    fullName: BindOpen.Data.Elements.DataElement.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataElement.Check(Of T)
    fullName: BindOpen.Data.Elements.DataElement.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElement
  definition: BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataElement.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElement.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElement.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElement.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataElement.Repair<T>
    fullName: BindOpen.Data.Elements.DataElement.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataElement.Repair(Of T)
    fullName: BindOpen.Data.Elements.DataElement.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Clone(System.String[])
  commentId: M:BindOpen.Data.Elements.DataElement.Clone(System.String[])
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: Clone(String[])
  nameWithType: DataElement.Clone(String[])
  fullName: BindOpen.Data.Elements.DataElement.Clone(System.String[])
  nameWithType.vb: DataElement.Clone(String())
  fullName.vb: BindOpen.Data.Elements.DataElement.Clone(System.String())
  name.vb: Clone(String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Clone(System.String[])
    name: Clone
    nameWithType: DataElement.Clone
    fullName: BindOpen.Data.Elements.DataElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Clone(System.String[])
    name: Clone
    nameWithType: DataElement.Clone
    fullName: BindOpen.Data.Elements.DataElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataElement.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataElement.UpdateStorageInfo
    fullName: BindOpen.Data.Elements.DataElement.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataElement.UpdateStorageInfo
    fullName: BindOpen.Data.Elements.DataElement.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElement.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataElement.UpdateRuntimeInfo
    fullName: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataElement.UpdateRuntimeInfo
    fullName: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
  commentId: M:BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
  parent: BindOpen.Data.Elements.DataElement
  isExternal: true
  name: GetTextNode(String, String)
  nameWithType: DataElement.GetTextNode(String, String)
  fullName: BindOpen.Data.Elements.DataElement.GetTextNode(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
    name: GetTextNode
    nameWithType: DataElement.GetTextNode
    fullName: BindOpen.Data.Elements.DataElement.GetTextNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
    name: GetTextNode
    nameWithType: DataElement.GetTextNode
    fullName: BindOpen.Data.Elements.DataElement.GetTextNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IndexedDataItem.Index
  commentId: P:BindOpen.Data.Items.IndexedDataItem.Index
  parent: BindOpen.Data.Items.IndexedDataItem
  name: Index
  nameWithType: IndexedDataItem.Index
  fullName: BindOpen.Data.Items.IndexedDataItem.Index
- uid: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  commentId: P:BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  parent: BindOpen.Data.Items.IndexedDataItem
  name: IndexSpecified
  nameWithType: IndexedDataItem.IndexSpecified
  fullName: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Description
  commentId: P:BindOpen.Data.Items.DescribedDataItem.Description
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Description
  nameWithType: DescribedDataItem.Description
  fullName: BindOpen.Data.Items.DescribedDataItem.Description
- uid: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  commentId: P:BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  parent: BindOpen.Data.Items.DescribedDataItem
  name: DescriptionSpecified
  nameWithType: DescribedDataItem.DescriptionSpecified
  fullName: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Update(IDescribedDataItem)
  nameWithType: DescribedDataItem.Update(IDescribedDataItem)
  fullName: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String)
  nameWithType: DescribedDataItem.AddDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: DescribedDataItem.AddDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String)
  nameWithType: DescribedDataItem.SetDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: DescribedDataItem.SetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: DescribedDataItem.GetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.Title
  commentId: P:BindOpen.Data.Items.TitledDataItem.Title
  parent: BindOpen.Data.Items.TitledDataItem
  name: Title
  nameWithType: TitledDataItem.Title
  fullName: BindOpen.Data.Items.TitledDataItem.Title
- uid: BindOpen.Data.Items.TitledDataItem.TitleSpecified
  commentId: P:BindOpen.Data.Items.TitledDataItem.TitleSpecified
  parent: BindOpen.Data.Items.TitledDataItem
  name: TitleSpecified
  nameWithType: TitledDataItem.TitleSpecified
  fullName: BindOpen.Data.Items.TitledDataItem.TitleSpecified
- uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  commentId: M:BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  parent: BindOpen.Data.Items.TitledDataItem
  name: Update(ITitledDataItem)
  nameWithType: TitledDataItem.Update(ITitledDataItem)
  fullName: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String)
  nameWithType: TitledDataItem.AddTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String, String)
  nameWithType: TitledDataItem.AddTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String)
  nameWithType: TitledDataItem.SetTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String, String)
  nameWithType: TitledDataItem.SetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: GetTitle(String, String)
  nameWithType: TitledDataItem.GetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.Name
  commentId: P:BindOpen.Data.Items.NamedDataItem.Name
  parent: BindOpen.Data.Items.NamedDataItem
  name: Name
  nameWithType: NamedDataItem.Name
  fullName: BindOpen.Data.Items.NamedDataItem.Name
- uid: BindOpen.Data.Items.NamedDataItem.NameSpecified
  commentId: P:BindOpen.Data.Items.NamedDataItem.NameSpecified
  parent: BindOpen.Data.Items.NamedDataItem
  name: NameSpecified
  nameWithType: NamedDataItem.NameSpecified
  fullName: BindOpen.Data.Items.NamedDataItem.NameSpecified
- uid: BindOpen.Data.Items.NamedDataItem.Key
  commentId: M:BindOpen.Data.Items.NamedDataItem.Key
  parent: BindOpen.Data.Items.NamedDataItem
  name: Key()
  nameWithType: NamedDataItem.Key()
  fullName: BindOpen.Data.Items.NamedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  commentId: M:BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  parent: BindOpen.Data.Items.NamedDataItem
  isExternal: true
  name: GetClonedName(String, String)
  nameWithType: NamedDataItem.GetClonedName(String, String)
  fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.StoredDataItem.NamePreffix
  commentId: P:BindOpen.Data.Items.StoredDataItem.NamePreffix
  parent: BindOpen.Data.Items.StoredDataItem
  name: NamePreffix
  nameWithType: StoredDataItem.NamePreffix
  fullName: BindOpen.Data.Items.StoredDataItem.NamePreffix
- uid: BindOpen.Data.Items.StoredDataItem.CreationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDate
  nameWithType: StoredDataItem.CreationDate
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDate
- uid: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDateSpecified
  nameWithType: StoredDataItem.CreationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDate
  nameWithType: StoredDataItem.LastModificationDate
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDate
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDateSpecified
  nameWithType: StoredDataItem.LastModificationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  commentId: M:BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  parent: BindOpen.Data.Items.StoredDataItem
  name: DeclareUpdate()
  nameWithType: StoredDataItem.DeclareUpdate()
  fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate()
  spec.csharp:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.Schema.SchemaZoneElement})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<SchemaZoneElement>(Action<SchemaZoneElement>)
  nameWithType: ObjectHelper.Using<SchemaZoneElement>(Action<SchemaZoneElement>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.Schema.SchemaZoneElement>(System.Action<BindOpen.Data.Elements.Schema.SchemaZoneElement>)
  nameWithType.vb: ObjectHelper.Using(Of SchemaZoneElement)(Action(Of SchemaZoneElement))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.Schema.SchemaZoneElement)(System.Action(Of BindOpen.Data.Elements.Schema.SchemaZoneElement))
  name.vb: Using(Of SchemaZoneElement)(Action(Of SchemaZoneElement))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<SchemaZoneElement>
    nameWithType: ObjectHelper.Using<SchemaZoneElement>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.Schema.SchemaZoneElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of SchemaZoneElement)
    nameWithType: ObjectHelper.Using(Of SchemaZoneElement)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.Schema.SchemaZoneElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataElement.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElement.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElement.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElement.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataElement.Update<T>
    fullName: BindOpen.Data.Elements.DataElement.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataElement.Update(Of T)
    fullName: BindOpen.Data.Elements.DataElement.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataElement.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Elements.DataElement.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataElement.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Elements.DataElement.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataElement.Check<T>
    fullName: BindOpen.Data.Elements.DataElement.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataElement.Check(Of T)
    fullName: BindOpen.Data.Elements.DataElement.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataElement.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElement.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElement.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElement.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataElement.Repair<T>
    fullName: BindOpen.Data.Elements.DataElement.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataElement.Repair(Of T)
    fullName: BindOpen.Data.Elements.DataElement.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements*
  commentId: Overload:BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements
  name: _SubSchemaElements
  nameWithType: SchemaZoneElement._SubSchemaElements
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement._SubSchemaElements
- uid: System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Elements.Schema.SchemaElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SchemaElement>
  nameWithType: List<SchemaElement>
  fullName: System.Collections.Generic.List<BindOpen.Data.Elements.Schema.SchemaElement>
  nameWithType.vb: List(Of SchemaElement)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Elements.Schema.SchemaElement)
  name.vb: List(Of SchemaElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements*
  commentId: Overload:BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements
  name: SubElements
  nameWithType: SchemaZoneElement.SubElements
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.SubElements
- uid: System.Collections.ObjectModel.ObservableCollection{BindOpen.Data.Elements.Schema.SchemaElement}
  commentId: T:System.Collections.ObjectModel.ObservableCollection{BindOpen.Data.Elements.Schema.SchemaElement}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  name: ObservableCollection<SchemaElement>
  nameWithType: ObservableCollection<SchemaElement>
  fullName: System.Collections.ObjectModel.ObservableCollection<BindOpen.Data.Elements.Schema.SchemaElement>
  nameWithType.vb: ObservableCollection(Of SchemaElement)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of BindOpen.Data.Elements.Schema.SchemaElement)
  name.vb: ObservableCollection(Of SchemaElement)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.Schema.SchemaElement
    name: SchemaElement
    nameWithType: SchemaElement
    fullName: BindOpen.Data.Elements.Schema.SchemaElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  commentId: T:System.Collections.ObjectModel.ObservableCollection`1
  isExternal: true
  name: ObservableCollection<T>
  nameWithType: ObservableCollection<T>
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  nameWithType.vb: ObservableCollection(Of T)
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  name.vb: ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    nameWithType: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ObjectModel
  commentId: N:System.Collections.ObjectModel
  isExternal: true
  name: System.Collections.ObjectModel
  nameWithType: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor*
  commentId: Overload:BindOpen.Data.Elements.Schema.SchemaZoneElement.#ctor
  name: SchemaZoneElement
  nameWithType: SchemaZoneElement.SchemaZoneElement
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.SchemaZoneElement
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree*
  commentId: Overload:BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree
  name: BuildTree
  nameWithType: SchemaZoneElement.BuildTree
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.BuildTree
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement*
  commentId: Overload:BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement
  name: AddSubElement
  nameWithType: SchemaZoneElement.AddSubElement
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.AddSubElement
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId*
  commentId: Overload:BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId
  name: GetElementWithId
  nameWithType: SchemaZoneElement.GetElementWithId
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.GetElementWithId
- uid: BindOpen.Data.Elements.Schema.SchemaElement.Clone
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.Clone
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: Clone()
  nameWithType: SchemaElement.Clone()
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.Clone
    name: Clone
    nameWithType: SchemaElement.Clone
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.Clone
    name: Clone
    nameWithType: SchemaElement.Clone
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone*
  commentId: Overload:BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone
  name: Clone
  nameWithType: SchemaZoneElement.Clone
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement.Clone
- uid: BindOpen.Data.Elements.Schema.SchemaElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  commentId: M:BindOpen.Data.Elements.Schema.SchemaElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  parent: BindOpen.Data.Elements.Schema.SchemaElement
  name: Clone(SchemaZoneElement)
  nameWithType: SchemaElement.Clone(SchemaZoneElement)
  fullName: BindOpen.Data.Elements.Schema.SchemaElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: Clone
    nameWithType: SchemaElement.Clone
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.Schema.SchemaElement.Clone(BindOpen.Data.Elements.Schema.SchemaZoneElement)
    name: Clone
    nameWithType: SchemaElement.Clone
    fullName: BindOpen.Data.Elements.Schema.SchemaElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
    name: SchemaZoneElement
    nameWithType: SchemaZoneElement
    fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.Schema.SchemaZoneElement
  commentId: T:BindOpen.Data.Elements.Schema.SchemaZoneElement
  parent: BindOpen.Data.Elements.Schema
  name: SchemaZoneElement
  nameWithType: SchemaZoneElement
  fullName: BindOpen.Data.Elements.Schema.SchemaZoneElement
shouldSkipMarkup: true
