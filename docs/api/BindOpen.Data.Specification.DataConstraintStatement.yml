### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Specification.DataConstraintStatement
  commentId: T:BindOpen.Data.Specification.DataConstraintStatement
  id: DataConstraintStatement
  parent: BindOpen.Data.Specification
  children:
  - BindOpen.Data.Specification.DataConstraintStatement.#ctor
  - BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  - BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
  - BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
  - BindOpen.Data.Specification.DataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
  - BindOpen.Data.Specification.DataConstraintStatement.Clone
  - BindOpen.Data.Specification.DataConstraintStatement.GetConstraint(System.String)
  - BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter(System.String,System.String)
  - BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
  - BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
  langs:
  - csharp
  - vb
  name: DataConstraintStatement
  nameWithType: DataConstraintStatement
  fullName: BindOpen.Data.Specification.DataConstraintStatement
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DataConstraintStatement
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 15
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nThis class represents the data constraint statement.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class DataConstraintStatement : DataItemSet<BdoRoutineConfiguration>, IDataConstraintStatement, IDataItemSet<BdoRoutineConfiguration>, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced
    content.vb: >-
      <Serializable>

      Public Class DataConstraintStatement
          Inherits DataItemSet(Of BdoRoutineConfiguration)
          Implements IDataConstraintStatement, IDataItemSet(Of BdoRoutineConfiguration), IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  inheritedMembers:
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}._items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.ItemsSpecified
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Count
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Item(System.Int32)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Item(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.ClearItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Remove(System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.HasItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.HasItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.GetItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration,BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(System.Collections.Generic.List{BindOpen.Extensions.Runtime.BdoRoutineConfiguration},BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Check``1(System.Boolean,{T1},System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.PropertyChanged
  - BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.OnPropertyChanged(System.String)
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.Key
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Data.Specification.DataConstraintStatement.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Specification.DataConstraintStatement})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Specification.DataConstraintStatement.#ctor
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: DataConstraintStatement()
  nameWithType: DataConstraintStatement.DataConstraintStatement()
  fullName: BindOpen.Data.Specification.DataConstraintStatement.DataConstraintStatement()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 29
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nInstantiates a new instance of the DataConstraintStatement class.\n"
  example: []
  syntax:
    content: public DataConstraintStatement()
    content.vb: Public Sub New
  overload: BindOpen.Data.Specification.DataConstraintStatement.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  id: AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: AddConstraint(IBdoRoutineConfiguration)
  nameWithType: DataConstraintStatement.AddConstraint(IBdoRoutineConfiguration)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddConstraint
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 46
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nAdds the specified constraint.\n"
  example: []
  syntax:
    content: public void AddConstraint(IBdoRoutineConfiguration routine)
    parameters:
    - id: routine
      type: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
      description: The constraint to add.
    content.vb: Public Sub AddConstraint(routine As IBdoRoutineConfiguration)
  overload: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
  id: AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: AddConstraint(String, String, IDataElementSet, IDataItemSet<BdoConditionalEvent>)
  nameWithType: DataConstraintStatement.AddConstraint(String, String, IDataElementSet, IDataItemSet<BdoConditionalEvent>)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(System.String, System.String, BindOpen.Data.Elements.IDataElementSet, BindOpen.Data.Items.IDataItemSet<BindOpen.System.Diagnostics.Events.BdoConditionalEvent>)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddConstraint
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 59
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nAdds the specified constraint.\n"
  example: []
  syntax:
    content: public IBdoRoutineConfiguration AddConstraint(string name, string definitionUniqueId, IDataElementSet parameterDetail = null, IDataItemSet<BdoConditionalEvent> outputEventSet = null)
    parameters:
    - id: name
      type: System.String
      description: The name of constraint to create.
    - id: definitionUniqueId
      type: System.String
      description: The definition unique ID to create.
    - id: parameterDetail
      type: BindOpen.Data.Elements.IDataElementSet
      description: The parameter detail to consider.
    - id: outputEventSet
      type: BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent}
      description: The output event set to consider.
    return:
      type: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
      description: Returns the item with the specified name.
    content.vb: Public Function AddConstraint(name As String, definitionUniqueId As String, parameterDetail As IDataElementSet = Nothing, outputEventSet As IDataItemSet(Of BdoConditionalEvent) = Nothing) As IBdoRoutineConfiguration
  overload: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
  nameWithType.vb: DataConstraintStatement.AddConstraint(String, String, IDataElementSet, IDataItemSet(Of BdoConditionalEvent))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint(System.String, System.String, BindOpen.Data.Elements.IDataElementSet, BindOpen.Data.Items.IDataItemSet(Of BindOpen.System.Diagnostics.Events.BdoConditionalEvent))
  name.vb: AddConstraint(String, String, IDataElementSet, IDataItemSet(Of BdoConditionalEvent))
- uid: BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
  id: AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: AddConstraintParameter(String, String, String, DataValueType)
  nameWithType: DataConstraintStatement.AddConstraintParameter(String, String, String, DataValueType)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter(System.String, System.String, System.String, BindOpen.Data.Common.DataValueType)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddConstraintParameter
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 79
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nSets the constraint parameter value.\n"
  example: []
  syntax:
    content: public IDataElement AddConstraintParameter(string constraintName, string definitionUniqueId = null, string parameterName = null, DataValueType dataValueType = DataValueType.Any)
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the constraint to return.
    - id: definitionUniqueId
      type: System.String
      description: The name of the definition to return.
    - id: parameterName
      type: System.String
      description: The name of the parameter to return.
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The name of the parameter to return.
    return:
      type: BindOpen.Data.Elements.IDataElement
      description: Returns the specified constrainst parameter.
    content.vb: Public Function AddConstraintParameter(constraintName As String, definitionUniqueId As String = Nothing, parameterName As String = Nothing, dataValueType As DataValueType = DataValueType.Any) As IDataElement
  overload: BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
  id: SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: SetConstraintParameterValue(String, String, String, Object, DataValueType)
  nameWithType: DataConstraintStatement.SetConstraintParameterValue(String, String, String, Object, DataValueType)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue(System.String, System.String, System.String, System.Object, BindOpen.Data.Common.DataValueType)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetConstraintParameterValue
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 117
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nSets the constraint parameter value.\n"
  example: []
  syntax:
    content: public bool SetConstraintParameterValue(string constraintName, string definitionUniqueId = null, string parameterName = null, object value = null, DataValueType dataValueType = DataValueType.Any)
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the constraint to return.
    - id: definitionUniqueId
      type: System.String
      description: The name of the definition to return.
    - id: parameterName
      type: System.String
      description: The name of the parameter to return.
    - id: value
      type: System.Object
      description: The value to consider.
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The name of the parameter to return.
    return:
      type: System.Boolean
      description: Returns the specified constrainst parameter.
    content.vb: Public Function SetConstraintParameterValue(constraintName As String, definitionUniqueId As String = Nothing, parameterName As String = Nothing, value As Object = Nothing, dataValueType As DataValueType = DataValueType.Any) As Boolean
  overload: BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.GetConstraint(System.String)
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.GetConstraint(System.String)
  id: GetConstraint(System.String)
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: GetConstraint(String)
  nameWithType: DataConstraintStatement.GetConstraint(String)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.GetConstraint(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetConstraint
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 163
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nReturns the constraint with the specified name.\n"
  example: []
  syntax:
    content: public IBdoRoutineConfiguration GetConstraint(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the item to return.
    return:
      type: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
      description: Returns the item with the specified name.
    content.vb: Public Function GetConstraint(name As String) As IBdoRoutineConfiguration
  overload: BindOpen.Data.Specification.DataConstraintStatement.GetConstraint*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter(System.String,System.String)
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter(System.String,System.String)
  id: GetConstraintParameter(System.String,System.String)
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: GetConstraintParameter(String, String)
  nameWithType: DataConstraintStatement.GetConstraintParameter(String, String)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetConstraintParameter
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 174
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nReturns the constraint parameter.\n"
  example: []
  syntax:
    content: public IDataElement GetConstraintParameter(string constraintName, string parameterName = null)
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the constraint to return.
    - id: parameterName
      type: System.String
      description: The name of the parameter to return.
    return:
      type: BindOpen.Data.Elements.IDataElement
      description: Returns the specified constrainst parameter.
    content.vb: Public Function GetConstraintParameter(constraintName As String, parameterName As String = Nothing) As IDataElement
  overload: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
  id: GetConstraintParameterValue(System.String,System.String)
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: GetConstraintParameterValue(String, String)
  nameWithType: DataConstraintStatement.GetConstraintParameterValue(String, String)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetConstraintParameterValue
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 188
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nReturns the constraint parameter value.\n"
  example: []
  syntax:
    content: public object GetConstraintParameterValue(string constraintName, string parameterName = null)
    parameters:
    - id: constraintName
      type: System.String
      description: The name of the constraint to return.
    - id: parameterName
      type: System.String
      description: The name of the parameter to return.
    return:
      type: System.Object
      description: Returns the specified constrainst parameter.
    content.vb: Public Function GetConstraintParameterValue(constraintName As String, parameterName As String = Nothing) As Object
  overload: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
  id: CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: CheckItem(Object, IDataElement, Boolean)
  nameWithType: DataConstraintStatement.CheckItem(Object, IDataElement, Boolean)
  fullName: BindOpen.Data.Specification.DataConstraintStatement.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement, System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CheckItem
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 211
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nCheck value.\n"
  example: []
  syntax:
    content: public IBdoLog CheckItem(object item, IDataElement dataElement, bool isDeepCheck = false)
    parameters:
    - id: item
      type: System.Object
      description: The item to consider.
    - id: dataElement
      type: BindOpen.Data.Elements.IDataElement
      description: The element to consider.
    - id: isDeepCheck
      type: System.Boolean
      description: Indicates whether other rules than allowed and forbidden values are checked.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log of check log.
    content.vb: Public Function CheckItem(item As Object, dataElement As IDataElement, isDeepCheck As Boolean = False) As IBdoLog
  overload: BindOpen.Data.Specification.DataConstraintStatement.CheckItem*
  implements:
  - BindOpen.Data.Specification.IDataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Specification.DataConstraintStatement.Clone
  commentId: M:BindOpen.Data.Specification.DataConstraintStatement.Clone
  id: Clone
  parent: BindOpen.Data.Specification.DataConstraintStatement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: DataConstraintStatement.Clone()
  fullName: BindOpen.Data.Specification.DataConstraintStatement.Clone()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Specification/Constraints/DataConstraintStatement.cs
    startLine: 233
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Specification
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overrides Function Clone As Object
  overridden: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Clone
  overload: BindOpen.Data.Specification.DataConstraintStatement.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BindOpen.Data.Specification
  commentId: N:BindOpen.Data.Specification
  name: BindOpen.Data.Specification
  nameWithType: BindOpen.Data.Specification
  fullName: BindOpen.Data.Specification
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  commentId: T:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<BdoRoutineConfiguration>
  nameWithType: DataItemSet<BdoRoutineConfiguration>
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration)
  name.vb: DataItemSet(Of BdoRoutineConfiguration)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.IDataConstraintStatement
  commentId: T:BindOpen.Data.Specification.IDataConstraintStatement
  parent: BindOpen.Data.Specification
  name: IDataConstraintStatement
  nameWithType: IDataConstraintStatement
  fullName: BindOpen.Data.Specification.IDataConstraintStatement
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  commentId: T:BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<BdoRoutineConfiguration>
  nameWithType: IDataItemSet<BdoRoutineConfiguration>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>
  nameWithType.vb: IDataItemSet(Of BdoRoutineConfiguration)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration)
  name.vb: IDataItemSet(Of BdoRoutineConfiguration)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}._items
  commentId: F:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}._items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<BdoRoutineConfiguration>._items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>._items
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration)._items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Items
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Items
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.ItemsSpecified
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<BdoRoutineConfiguration>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Count
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Count
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Count
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Count
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Count
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Item(System.Int32)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Item(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  name: Item[String]
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Item[System.String]
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.ClearItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<BdoRoutineConfiguration>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.ClearItems()
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<BdoRoutineConfiguration>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(BdoRoutineConfiguration[])
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Add(BdoRoutineConfiguration[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration[])
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Add(BdoRoutineConfiguration())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration())
  name.vb: Add(BdoRoutineConfiguration())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Remove(System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  name: Remove(String[])
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.HasItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<BdoRoutineConfiguration>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.HasItems()
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<BdoRoutineConfiguration>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.HasItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  name: HasItem(String)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<BdoRoutineConfiguration>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.GetItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  name: GetItem(String)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<BdoRoutineConfiguration>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<BdoRoutineConfiguration>)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.GetCommonItemKeys(IDataItemSet<BdoRoutineConfiguration>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).GetCommonItemKeys(IDataItemSet(Of BdoRoutineConfiguration))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration))
  name.vb: GetCommonItemKeys(IDataItemSet(Of BdoRoutineConfiguration))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<BdoRoutineConfiguration>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration,BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration,BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(BdoRoutineConfiguration, IDataItemSet<BdoRoutineConfiguration>)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Add(BdoRoutineConfiguration, IDataItemSet<BdoRoutineConfiguration>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration, BindOpen.Data.Items.IDataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Add(BdoRoutineConfiguration, IDataItemSet(Of BdoRoutineConfiguration))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Add(BindOpen.Extensions.Runtime.BdoRoutineConfiguration, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration))
  name.vb: Add(BdoRoutineConfiguration, IDataItemSet(Of BdoRoutineConfiguration))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(System.Collections.Generic.List{BindOpen.Extensions.Runtime.BdoRoutineConfiguration},BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Add(System.Collections.Generic.List{BindOpen.Extensions.Runtime.BdoRoutineConfiguration},BindOpen.Data.Items.IDataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(List<BdoRoutineConfiguration>, IDataItemSet<BdoRoutineConfiguration>)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Add(List<BdoRoutineConfiguration>, IDataItemSet<BdoRoutineConfiguration>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Add(System.Collections.Generic.List<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>, BindOpen.Data.Items.IDataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Add(List(Of BdoRoutineConfiguration), IDataItemSet(Of BdoRoutineConfiguration))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Add(System.Collections.Generic.List(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration), BindOpen.Data.Items.IDataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration))
  name.vb: Add(List(Of BdoRoutineConfiguration), IDataItemSet(Of BdoRoutineConfiguration))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
    name: BdoRoutineConfiguration
    nameWithType: BdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Check``1(System.Boolean,{T1},System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<BdoRoutineConfiguration>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<BdoRoutineConfiguration>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.PropertyChanged
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<BdoRoutineConfiguration>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.PropertyChanged
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.OnPropertyChanged(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<BdoRoutineConfiguration>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<BdoRoutineConfiguration>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.Key
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Key
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Key()
  nameWithType: IdentifiedDataItem.Key()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataConstraintStatement.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Specification.DataConstraintStatement})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<DataConstraintStatement>(Action<DataConstraintStatement>)
  nameWithType: ObjectHelper.Using<DataConstraintStatement>(Action<DataConstraintStatement>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Specification.DataConstraintStatement>(System.Action<BindOpen.Data.Specification.DataConstraintStatement>)
  nameWithType.vb: ObjectHelper.Using(Of DataConstraintStatement)(Action(Of DataConstraintStatement))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Specification.DataConstraintStatement)(System.Action(Of BindOpen.Data.Specification.DataConstraintStatement))
  name.vb: Using(Of DataConstraintStatement)(Action(Of DataConstraintStatement))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<DataConstraintStatement>
    nameWithType: ObjectHelper.Using<DataConstraintStatement>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Specification.DataConstraintStatement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Specification.DataConstraintStatement
    name: DataConstraintStatement
    nameWithType: DataConstraintStatement
    fullName: BindOpen.Data.Specification.DataConstraintStatement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of DataConstraintStatement)
    nameWithType: ObjectHelper.Using(Of DataConstraintStatement)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Specification.DataConstraintStatement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Specification.DataConstraintStatement
    name: DataConstraintStatement
    nameWithType: DataConstraintStatement
    fullName: BindOpen.Data.Specification.DataConstraintStatement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Items.DataItemSet`1
  commentId: T:BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<T>
  nameWithType: DataItemSet<T>
  fullName: BindOpen.Data.Items.DataItemSet<T>
  nameWithType.vb: DataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)
  name.vb: DataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  commentId: T:BindOpen.Data.Items.IDataItemSet`1
  parent: BindOpen.Data.Items
  name: IDataItemSet<T>
  nameWithType: IDataItemSet<T>
  fullName: BindOpen.Data.Items.IDataItemSet<T>
  nameWithType.vb: IDataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T)
  name.vb: IDataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1._items
  commentId: F:BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<T>._items
  fullName: BindOpen.Data.Items.DataItemSet<T>._items
  nameWithType.vb: DataItemSet(Of T)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)._items
- uid: BindOpen.Data.Items.DataItemSet`1.Items
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<T>.Items
  fullName: BindOpen.Data.Items.DataItemSet<T>.Items
  nameWithType.vb: DataItemSet(Of T).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Items
- uid: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<T>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<T>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of T).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet`1.Count
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<T>.Count
  fullName: BindOpen.Data.Items.DataItemSet<T>.Count
  nameWithType.vb: DataItemSet(Of T).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Count
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: DataItemSet<T>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of T).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: DataItemSet<T>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.String]
  nameWithType.vb: DataItemSet(Of T).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<T>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems()
  nameWithType.vb: DataItemSet(Of T).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<T>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of T).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(T[])
  nameWithType: DataItemSet<T>.Add(T[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T[])
  nameWithType.vb: DataItemSet(Of T).Add(T())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T())
  name.vb: Add(T())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  isExternal: true
  name: Remove(String[])
  nameWithType: DataItemSet<T>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of T).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<T>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of T).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<T>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems()
  nameWithType.vb: DataItemSet(Of T).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<T>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of T).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  isExternal: true
  name: HasItem(String)
  nameWithType: DataItemSet<T>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of T).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<T>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of T).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  isExternal: true
  name: GetItem(String)
  nameWithType: DataItemSet<T>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of T).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<T>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of T).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<T>)
  nameWithType: DataItemSet<T>.GetCommonItemKeys(IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).GetCommonItemKeys(IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: GetCommonItemKeys(IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<T>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of T).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(T, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(T, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(T, IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T, BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(T, IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(List<T>, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(List<T>, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(System.Collections.Generic.List<T>, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(List(Of T), IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(System.Collections.Generic.List(Of T), BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(List(Of T), IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<T>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of T).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<T>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of T).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<T>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of T).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<T>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of T).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<T>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<T>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of T).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<T>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<T>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of T).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<T>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<T>.PropertyChanged
  nameWithType.vb: DataItemSet(Of T).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<T>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of T).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<T>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of T).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Specification.DataConstraintStatement.#ctor*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.#ctor
  name: DataConstraintStatement
  nameWithType: DataConstraintStatement.DataConstraintStatement
  fullName: BindOpen.Data.Specification.DataConstraintStatement.DataConstraintStatement
- uid: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.AddConstraint
  name: AddConstraint
  nameWithType: DataConstraintStatement.AddConstraint
  fullName: BindOpen.Data.Specification.DataConstraintStatement.AddConstraint
- uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  name: AddConstraint(IBdoRoutineConfiguration)
  nameWithType: IDataConstraintStatement.AddConstraint(IBdoRoutineConfiguration)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
    name: AddConstraint
    nameWithType: IDataConstraintStatement.AddConstraint
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
    name: IBdoRoutineConfiguration
    nameWithType: IBdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(BindOpen.Extensions.Runtime.IBdoRoutineConfiguration)
    name: AddConstraint
    nameWithType: IDataConstraintStatement.AddConstraint
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
    name: IBdoRoutineConfiguration
    nameWithType: IBdoRoutineConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
  commentId: T:BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
  parent: BindOpen.Extensions.Runtime
  name: IBdoRoutineConfiguration
  nameWithType: IBdoRoutineConfiguration
  fullName: BindOpen.Extensions.Runtime.IBdoRoutineConfiguration
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  isExternal: true
  name: AddConstraint(String, String, IDataElementSet, IDataItemSet<BdoConditionalEvent>)
  nameWithType: IDataConstraintStatement.AddConstraint(String, String, IDataElementSet, IDataItemSet<BdoConditionalEvent>)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(System.String, System.String, BindOpen.Data.Elements.IDataElementSet, BindOpen.Data.Items.IDataItemSet<BindOpen.System.Diagnostics.Events.BdoConditionalEvent>)
  nameWithType.vb: IDataConstraintStatement.AddConstraint(String, String, IDataElementSet, IDataItemSet(Of BdoConditionalEvent))
  fullName.vb: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(System.String, System.String, BindOpen.Data.Elements.IDataElementSet, BindOpen.Data.Items.IDataItemSet(Of BindOpen.System.Diagnostics.Events.BdoConditionalEvent))
  name.vb: AddConstraint(String, String, IDataElementSet, IDataItemSet(Of BdoConditionalEvent))
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
    name: AddConstraint
    nameWithType: IDataConstraintStatement.AddConstraint
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
    name: BdoConditionalEvent
    nameWithType: BdoConditionalEvent
    fullName: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint(System.String,System.String,BindOpen.Data.Elements.IDataElementSet,BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent})
    name: AddConstraint
    nameWithType: IDataConstraintStatement.AddConstraint
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
    name: BdoConditionalEvent
    nameWithType: BdoConditionalEvent
    fullName: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Elements.IDataElementSet
  commentId: T:BindOpen.Data.Elements.IDataElementSet
  parent: BindOpen.Data.Elements
  name: IDataElementSet
  nameWithType: IDataElementSet
  fullName: BindOpen.Data.Elements.IDataElementSet
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent}
  commentId: T:BindOpen.Data.Items.IDataItemSet{BindOpen.System.Diagnostics.Events.BdoConditionalEvent}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<BdoConditionalEvent>
  nameWithType: IDataItemSet<BdoConditionalEvent>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.System.Diagnostics.Events.BdoConditionalEvent>
  nameWithType.vb: IDataItemSet(Of BdoConditionalEvent)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.System.Diagnostics.Events.BdoConditionalEvent)
  name.vb: IDataItemSet(Of BdoConditionalEvent)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
    name: BdoConditionalEvent
    nameWithType: BdoConditionalEvent
    fullName: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
    name: BdoConditionalEvent
    nameWithType: BdoConditionalEvent
    fullName: BindOpen.System.Diagnostics.Events.BdoConditionalEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter
  name: AddConstraintParameter
  nameWithType: DataConstraintStatement.AddConstraintParameter
  fullName: BindOpen.Data.Specification.DataConstraintStatement.AddConstraintParameter
- uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  isExternal: true
  name: AddConstraintParameter(String, String, String, DataValueType)
  nameWithType: IDataConstraintStatement.AddConstraintParameter(String, String, String, DataValueType)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter(System.String, System.String, System.String, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
    name: AddConstraintParameter
    nameWithType: IDataConstraintStatement.AddConstraintParameter
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter(System.String,System.String,System.String,BindOpen.Data.Common.DataValueType)
    name: AddConstraintParameter
    nameWithType: IDataConstraintStatement.AddConstraintParameter
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.AddConstraintParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Data.Elements.IDataElement
  commentId: T:BindOpen.Data.Elements.IDataElement
  parent: BindOpen.Data.Elements
  name: IDataElement
  nameWithType: IDataElement
  fullName: BindOpen.Data.Elements.IDataElement
- uid: BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue
  name: SetConstraintParameterValue
  nameWithType: DataConstraintStatement.SetConstraintParameterValue
  fullName: BindOpen.Data.Specification.DataConstraintStatement.SetConstraintParameterValue
- uid: BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  isExternal: true
  name: SetConstraintParameterValue(String, String, String, Object, DataValueType)
  nameWithType: IDataConstraintStatement.SetConstraintParameterValue(String, String, String, Object, DataValueType)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue(System.String, System.String, System.String, System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
    name: SetConstraintParameterValue
    nameWithType: IDataConstraintStatement.SetConstraintParameterValue
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue(System.String,System.String,System.String,System.Object,BindOpen.Data.Common.DataValueType)
    name: SetConstraintParameterValue
    nameWithType: IDataConstraintStatement.SetConstraintParameterValue
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.SetConstraintParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Specification.DataConstraintStatement.GetConstraint*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.GetConstraint
  name: GetConstraint
  nameWithType: DataConstraintStatement.GetConstraint
  fullName: BindOpen.Data.Specification.DataConstraintStatement.GetConstraint
- uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint(System.String)
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint(System.String)
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  isExternal: true
  name: GetConstraint(String)
  nameWithType: IDataConstraintStatement.GetConstraint(String)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint(System.String)
    name: GetConstraint
    nameWithType: IDataConstraintStatement.GetConstraint
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint(System.String)
    name: GetConstraint
    nameWithType: IDataConstraintStatement.GetConstraint
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraint
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter
  name: GetConstraintParameter
  nameWithType: DataConstraintStatement.GetConstraintParameter
  fullName: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameter
- uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter(System.String,System.String)
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter(System.String,System.String)
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  isExternal: true
  name: GetConstraintParameter(String, String)
  nameWithType: IDataConstraintStatement.GetConstraintParameter(String, String)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter(System.String,System.String)
    name: GetConstraintParameter
    nameWithType: IDataConstraintStatement.GetConstraintParameter
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter(System.String,System.String)
    name: GetConstraintParameter
    nameWithType: IDataConstraintStatement.GetConstraintParameter
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameter
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue
  name: GetConstraintParameterValue
  nameWithType: DataConstraintStatement.GetConstraintParameterValue
  fullName: BindOpen.Data.Specification.DataConstraintStatement.GetConstraintParameterValue
- uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  isExternal: true
  name: GetConstraintParameterValue(String, String)
  nameWithType: IDataConstraintStatement.GetConstraintParameterValue(String, String)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
    name: GetConstraintParameterValue
    nameWithType: IDataConstraintStatement.GetConstraintParameterValue
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue(System.String,System.String)
    name: GetConstraintParameterValue
    nameWithType: IDataConstraintStatement.GetConstraintParameterValue
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.GetConstraintParameterValue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataConstraintStatement.CheckItem*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.CheckItem
  name: CheckItem
  nameWithType: DataConstraintStatement.CheckItem
  fullName: BindOpen.Data.Specification.DataConstraintStatement.CheckItem
- uid: BindOpen.Data.Specification.IDataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
  commentId: M:BindOpen.Data.Specification.IDataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
  parent: BindOpen.Data.Specification.IDataConstraintStatement
  isExternal: true
  name: CheckItem(Object, IDataElement, Boolean)
  nameWithType: IDataConstraintStatement.CheckItem(Object, IDataElement, Boolean)
  fullName: BindOpen.Data.Specification.IDataConstraintStatement.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
    name: CheckItem
    nameWithType: IDataConstraintStatement.CheckItem
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataConstraintStatement.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement,System.Boolean)
    name: CheckItem
    nameWithType: IDataConstraintStatement.CheckItem
    fullName: BindOpen.Data.Specification.IDataConstraintStatement.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}.Clone
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Extensions.Runtime.BdoRoutineConfiguration}
  definition: BindOpen.Data.Items.DataItemSet`1.Clone
  name: Clone()
  nameWithType: DataItemSet<BdoRoutineConfiguration>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Clone()
  nameWithType.vb: DataItemSet(Of BdoRoutineConfiguration).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<BdoRoutineConfiguration>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Extensions.Runtime.BdoRoutineConfiguration>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of BdoRoutineConfiguration).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Extensions.Runtime.BdoRoutineConfiguration).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataConstraintStatement.Clone*
  commentId: Overload:BindOpen.Data.Specification.DataConstraintStatement.Clone
  name: Clone
  nameWithType: DataConstraintStatement.Clone
  fullName: BindOpen.Data.Specification.DataConstraintStatement.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Clone
  name: Clone()
  nameWithType: DataItemSet<T>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<T>.Clone()
  nameWithType.vb: DataItemSet(Of T).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<T>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of T).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
