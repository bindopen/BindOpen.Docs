### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Helpers.Common.CommonHelper
  commentId: T:BindOpen.Data.Helpers.Common.CommonHelper
  id: CommonHelper
  parent: BindOpen.Data.Helpers.Common
  children:
  - BindOpen.Data.Helpers.Common.CommonHelper.If(System.Boolean,System.Action)
  - BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty(System.String,System.Action)
  langs:
  - csharp
  - vb
  name: CommonHelper
  nameWithType: CommonHelper
  fullName: BindOpen.Data.Helpers.Common.CommonHelper
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Helpers/Common/CommonHelper.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CommonHelper
    path: ../src/BindOpen.Core/Data/Helpers/Common/CommonHelper.cs
    startLine: 7
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Helpers.Common
  summary: "\nThis class represents a common helper.\n"
  example: []
  syntax:
    content: public static class CommonHelper
    content.vb: Public Module CommonHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty(System.String,System.Action)
  commentId: M:BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty(System.String,System.Action)
  id: IsNullOrEmpty(System.String,System.Action)
  parent: BindOpen.Data.Helpers.Common.CommonHelper
  langs:
  - csharp
  - vb
  name: IsNullOrEmpty(String, Action)
  nameWithType: CommonHelper.IsNullOrEmpty(String, Action)
  fullName: BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty(System.String, System.Action)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Helpers/Common/CommonHelper.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsNullOrEmpty
    path: ../src/BindOpen.Core/Data/Helpers/Common/CommonHelper.cs
    startLine: 14
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Helpers.Common
  summary: "\nExecutes the specified action if the specified value is null or empry.\n"
  example: []
  syntax:
    content: public static void IsNullOrEmpty(string value, Action action)
    parameters:
    - id: value
      type: System.String
      description: The value to consider.
    - id: action
      type: System.Action
      description: The action to consider.
    content.vb: Public Shared Sub IsNullOrEmpty(value As String, action As Action)
  overload: BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Helpers.Common.CommonHelper.If(System.Boolean,System.Action)
  commentId: M:BindOpen.Data.Helpers.Common.CommonHelper.If(System.Boolean,System.Action)
  id: If(System.Boolean,System.Action)
  parent: BindOpen.Data.Helpers.Common.CommonHelper
  langs:
  - csharp
  - vb
  name: If(Boolean, Action)
  nameWithType: CommonHelper.If(Boolean, Action)
  fullName: BindOpen.Data.Helpers.Common.CommonHelper.If(System.Boolean, System.Action)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Helpers/Common/CommonHelper.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: If
    path: ../src/BindOpen.Core/Data/Helpers/Common/CommonHelper.cs
    startLine: 27
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Helpers.Common
  summary: "\nExecutes the specified action if the specified value is true.\n"
  example: []
  syntax:
    content: public static void If(bool value, Action action)
    parameters:
    - id: value
      type: System.Boolean
      description: The value to consider.
    - id: action
      type: System.Action
      description: The action to consider.
    content.vb: Public Shared Sub If(value As Boolean, action As Action)
  overload: BindOpen.Data.Helpers.Common.CommonHelper.If*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BindOpen.Data.Helpers.Common
  commentId: N:BindOpen.Data.Helpers.Common
  name: BindOpen.Data.Helpers.Common
  nameWithType: BindOpen.Data.Helpers.Common
  fullName: BindOpen.Data.Helpers.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty*
  commentId: Overload:BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty
  name: IsNullOrEmpty
  nameWithType: CommonHelper.IsNullOrEmpty
  fullName: BindOpen.Data.Helpers.Common.CommonHelper.IsNullOrEmpty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Action
  commentId: T:System.Action
  parent: System
  isExternal: true
  name: Action
  nameWithType: Action
  fullName: System.Action
- uid: BindOpen.Data.Helpers.Common.CommonHelper.If*
  commentId: Overload:BindOpen.Data.Helpers.Common.CommonHelper.If
  name: If
  nameWithType: CommonHelper.If
  fullName: BindOpen.Data.Helpers.Common.CommonHelper.If
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
