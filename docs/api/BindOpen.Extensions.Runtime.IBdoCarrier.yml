### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Runtime.IBdoCarrier
  commentId: T:BindOpen.Extensions.Runtime.IBdoCarrier
  id: IBdoCarrier
  parent: BindOpen.Extensions.Runtime
  children:
  - BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  - BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  - BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  - BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  - BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  - BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  - BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
  langs:
  - csharp
  - vb
  name: IBdoCarrier
  nameWithType: IBdoCarrier
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier
  type: Interface
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IBdoCarrier
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 9
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: 'public interface IBdoCarrier : ITBdoExtensionItem<IBdoCarrierDefinition>, IBdoExtensionItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed'
    content.vb: >-
      Public Interface IBdoCarrier
          Inherits ITBdoExtensionItem(Of IBdoCarrierDefinition)
  inheritedMembers:
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Configuration
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  - BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.Clone``1
  - System.ICloneable.Clone
  - System.IDisposable.Dispose
  - BindOpen.Data.Items.IIdentified.Id
  - BindOpen.Data.Items.IReferenced.Key
  - BindOpen.Data.Items.INamed.Name
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  id: RelativePath
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: RelativePath
  nameWithType: IBdoCarrier.RelativePath
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: RelativePath
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 14
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: string RelativePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property RelativePath As String
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  id: CreationDate
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: IBdoCarrier.CreationDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CreationDate
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 19
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: string CreationDate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property CreationDate As String
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  id: Flag
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: Flag
  nameWithType: IBdoCarrier.Flag
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Flag
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 24
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: string Flag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Flag As String
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.Flag*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  id: IsReadonly
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: IsReadonly
  nameWithType: IBdoCarrier.IsReadonly
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsReadonly
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 29
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: bool IsReadonly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsReadonly As Boolean
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  id: LastAccessDate
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: LastAccessDate
  nameWithType: IBdoCarrier.LastAccessDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LastAccessDate
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 34
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: string LastAccessDate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property LastAccessDate As String
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  id: LastWriteDate
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: LastWriteDate
  nameWithType: IBdoCarrier.LastWriteDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LastWriteDate
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 39
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: string LastWriteDate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property LastWriteDate As String
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
  id: SetPath(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: SetPath(String, String)
  nameWithType: IBdoCarrier.SetPath(String, String)
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetPath
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 46
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: void SetPath(string path = null, string relativePath = null)
    parameters:
    - id: path
      type: System.String
      description: ''
    - id: relativePath
      type: System.String
      description: ''
    content.vb: Sub SetPath(path As String = Nothing, relativePath As String = Nothing)
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath*
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  id: AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  langs:
  - csharp
  - vb
  name: AsElement(String, IBdoLog)
  nameWithType: IBdoCarrier.AsElement(String, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AsElement
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/Interfaces/IBdoCarrier.cs
    startLine: 54
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\n\n"
  example: []
  syntax:
    content: ICarrierElement AsElement(string name = null, IBdoLog log = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: ''
    return:
      type: BindOpen.Data.Elements.ICarrierElement
      description: ''
    content.vb: Function AsElement(name As String = Nothing, log As IBdoLog = Nothing) As ICarrierElement
  overload: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement*
references:
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Configuration
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Configuration
  parent: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Configuration
  name: Configuration
  nameWithType: ITBdoExtensionItem<IBdoCarrierDefinition>.Configuration
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.Configuration
  nameWithType.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition).Configuration
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).Configuration
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  parent: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Definition
  name: Definition
  nameWithType: ITBdoExtensionItem<IBdoCarrierDefinition>.Definition
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.Definition
  nameWithType.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition).Definition
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).Definition
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  parent: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
  name: SetDefinition(IBdoCarrierDefinition)
  nameWithType: ITBdoExtensionItem<IBdoCarrierDefinition>.SetDefinition(IBdoCarrierDefinition)
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  nameWithType.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition).SetDefinition(IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem<IBdoCarrierDefinition>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem(Of IBdoCarrierDefinition).SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: IDataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: IDataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: IDataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: IDataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Clone``1
  commentId: M:BindOpen.Data.Items.IDataItem.Clone``1
  parent: BindOpen.Data.Items.IDataItem
  name: Clone<T>()
  nameWithType: IDataItem.Clone<T>()
  fullName: BindOpen.Data.Items.IDataItem.Clone<T>()
  nameWithType.vb: IDataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.IDataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone<T>
    nameWithType: IDataItem.Clone<T>
    fullName: BindOpen.Data.Items.IDataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone(Of T)
    nameWithType: IDataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIdentified.Id
  commentId: P:BindOpen.Data.Items.IIdentified.Id
  parent: BindOpen.Data.Items.IIdentified
  name: Id
  nameWithType: IIdentified.Id
  fullName: BindOpen.Data.Items.IIdentified.Id
- uid: BindOpen.Data.Items.IReferenced.Key
  commentId: M:BindOpen.Data.Items.IReferenced.Key
  parent: BindOpen.Data.Items.IReferenced
  name: Key()
  nameWithType: IReferenced.Key()
  fullName: BindOpen.Data.Items.IReferenced.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.INamed.Name
  commentId: P:BindOpen.Data.Items.INamed.Name
  parent: BindOpen.Data.Items.INamed
  name: Name
  nameWithType: INamed.Name
  fullName: BindOpen.Data.Items.INamed.Name
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Configuration
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Configuration
  name: Configuration
  nameWithType: ITBdoExtensionItem<T>.Configuration
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.Configuration
  nameWithType.vb: ITBdoExtensionItem(Of T).Configuration
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).Configuration
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  name: ITBdoExtensionItem<IBdoCarrierDefinition>
  nameWithType: ITBdoExtensionItem<IBdoCarrierDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>
  nameWithType.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  name.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Definition
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Definition
  name: Definition
  nameWithType: ITBdoExtensionItem<T>.Definition
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.Definition
  nameWithType.vb: ITBdoExtensionItem(Of T).Definition
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).Definition
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
  name: SetDefinition(T)
  nameWithType: ITBdoExtensionItem<T>.SetDefinition(T)
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.SetDefinition(T)
  nameWithType.vb: ITBdoExtensionItem(Of T).SetDefinition(T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).SetDefinition(T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem<T>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem(Of T).SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  name: ITBdoExtensionItem<T>
  nameWithType: ITBdoExtensionItem<T>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>
  nameWithType.vb: ITBdoExtensionItem(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T)
  name.vb: ITBdoExtensionItem(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  name: RelativePath
  nameWithType: IBdoCarrier.RelativePath
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  name: CreationDate
  nameWithType: IBdoCarrier.CreationDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.Flag*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  name: Flag
  nameWithType: IBdoCarrier.Flag
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.Flag
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  name: IsReadonly
  nameWithType: IBdoCarrier.IsReadonly
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  name: LastAccessDate
  nameWithType: IBdoCarrier.LastAccessDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  name: LastWriteDate
  nameWithType: IBdoCarrier.LastWriteDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.SetPath
  name: SetPath
  nameWithType: IBdoCarrier.SetPath
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement*
  commentId: Overload:BindOpen.Extensions.Runtime.IBdoCarrier.AsElement
  name: AsElement
  nameWithType: IBdoCarrier.AsElement
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Data.Elements.ICarrierElement
  commentId: T:BindOpen.Data.Elements.ICarrierElement
  parent: BindOpen.Data.Elements
  name: ICarrierElement
  nameWithType: ICarrierElement
  fullName: BindOpen.Data.Elements.ICarrierElement
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
shouldSkipMarkup: true
