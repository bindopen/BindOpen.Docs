### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Security.ApplicationCredential
  commentId: T:BindOpen.Application.Security.ApplicationCredential
  id: ApplicationCredential
  parent: BindOpen.Application.Security
  children:
  - BindOpen.Application.Security.ApplicationCredential.#ctor
  - BindOpen.Application.Security.ApplicationCredential.#ctor(System.String,System.String,System.String,System.String,System.String)
  - BindOpen.Application.Security.ApplicationCredential.DomainId
  - BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified
  - BindOpen.Application.Security.ApplicationCredential.Login
  - BindOpen.Application.Security.ApplicationCredential.LoginSpecified
  - BindOpen.Application.Security.ApplicationCredential.Password
  - BindOpen.Application.Security.ApplicationCredential.PasswordSpecified
  - BindOpen.Application.Security.ApplicationCredential.TokenValue
  - BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified
  langs:
  - csharp
  - vb
  name: ApplicationCredential
  nameWithType: ApplicationCredential
  fullName: BindOpen.Application.Security.ApplicationCredential
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nThis class represents an application credential.\n"
  syntax:
    content: 'public class ApplicationCredential : NamedDataItem, IApplicationCredential, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed'
    content.vb: >-
      Public Class ApplicationCredential
          Inherits NamedDataItem
          Implements IApplicationCredential, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed
  inheritance:
  - System.Object
  implements:
  - BindOpen.Application.Security.IApplicationCredential
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Security.ApplicationCredential.#ctor
  commentId: M:BindOpen.Application.Security.ApplicationCredential.#ctor
  id: '#ctor'
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: ApplicationCredential()
  nameWithType: ApplicationCredential.ApplicationCredential()
  fullName: BindOpen.Application.Security.ApplicationCredential.ApplicationCredential()
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nCreates a new instance of the ApplicationCredential class.\n"
  syntax:
    content: public ApplicationCredential()
    content.vb: Public Sub New
  overload: BindOpen.Application.Security.ApplicationCredential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Security.ApplicationCredential.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:BindOpen.Application.Security.ApplicationCredential.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: ApplicationCredential(String, String, String, String, String)
  nameWithType: ApplicationCredential.ApplicationCredential(String, String, String, String, String)
  fullName: BindOpen.Application.Security.ApplicationCredential.ApplicationCredential(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nCreates a new instance of the ApplicationCredential class.\n"
  syntax:
    content: public ApplicationCredential(string name, string login = null, string aPassword = null, string aDomainId = null, string aTokenValue = null)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    - id: login
      type: System.String
      description: The login to consider.
    - id: aPassword
      type: System.String
      description: The password to consider.
    - id: aDomainId
      type: System.String
      description: The domain ID to consider.
    - id: aTokenValue
      type: System.String
      description: The token value to consider.
    content.vb: Public Sub New(name As String, login As String = Nothing, aPassword As String = Nothing, aDomainId As String = Nothing, aTokenValue As String = Nothing)
  overload: BindOpen.Application.Security.ApplicationCredential.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Security.ApplicationCredential.DomainId
  commentId: P:BindOpen.Application.Security.ApplicationCredential.DomainId
  id: DomainId
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: DomainId
  nameWithType: ApplicationCredential.DomainId
  fullName: BindOpen.Application.Security.ApplicationCredential.DomainId
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nID of domain.\n"
  syntax:
    content: public string DomainId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DomainId As String
  overload: BindOpen.Application.Security.ApplicationCredential.DomainId*
  implements:
  - BindOpen.Application.Security.IApplicationCredential.DomainId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified
  commentId: P:BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified
  id: DomainIdSpecified
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: DomainIdSpecified
  nameWithType: ApplicationCredential.DomainIdSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nSpecification of the DomainId property of this instance.\n"
  syntax:
    content: public bool DomainIdSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DomainIdSpecified As Boolean
  overload: BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Security.ApplicationCredential.Login
  commentId: P:BindOpen.Application.Security.ApplicationCredential.Login
  id: Login
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: Login
  nameWithType: ApplicationCredential.Login
  fullName: BindOpen.Application.Security.ApplicationCredential.Login
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nLogin.\n"
  syntax:
    content: public string Login { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Login As String
  overload: BindOpen.Application.Security.ApplicationCredential.Login*
  implements:
  - BindOpen.Application.Security.IApplicationCredential.Login
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Security.ApplicationCredential.LoginSpecified
  commentId: P:BindOpen.Application.Security.ApplicationCredential.LoginSpecified
  id: LoginSpecified
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: LoginSpecified
  nameWithType: ApplicationCredential.LoginSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.LoginSpecified
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nSpecification of the Login property of this instance.\n"
  syntax:
    content: public bool LoginSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LoginSpecified As Boolean
  overload: BindOpen.Application.Security.ApplicationCredential.LoginSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Security.ApplicationCredential.Password
  commentId: P:BindOpen.Application.Security.ApplicationCredential.Password
  id: Password
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: ApplicationCredential.Password
  fullName: BindOpen.Application.Security.ApplicationCredential.Password
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nPassword.\n"
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: BindOpen.Application.Security.ApplicationCredential.Password*
  implements:
  - BindOpen.Application.Security.IApplicationCredential.Password
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Security.ApplicationCredential.PasswordSpecified
  commentId: P:BindOpen.Application.Security.ApplicationCredential.PasswordSpecified
  id: PasswordSpecified
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: PasswordSpecified
  nameWithType: ApplicationCredential.PasswordSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.PasswordSpecified
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nSpecification of the Password property of this instance.\n"
  syntax:
    content: public bool PasswordSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property PasswordSpecified As Boolean
  overload: BindOpen.Application.Security.ApplicationCredential.PasswordSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Security.ApplicationCredential.TokenValue
  commentId: P:BindOpen.Application.Security.ApplicationCredential.TokenValue
  id: TokenValue
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: TokenValue
  nameWithType: ApplicationCredential.TokenValue
  fullName: BindOpen.Application.Security.ApplicationCredential.TokenValue
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nToken value.\n"
  syntax:
    content: public string TokenValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TokenValue As String
  overload: BindOpen.Application.Security.ApplicationCredential.TokenValue*
  implements:
  - BindOpen.Application.Security.IApplicationCredential.TokenValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified
  commentId: P:BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified
  id: TokenValueSpecified
  parent: BindOpen.Application.Security.ApplicationCredential
  langs:
  - csharp
  - vb
  name: TokenValueSpecified
  nameWithType: ApplicationCredential.TokenValueSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Security
  summary: "\nSpecification of the TokenValue property of this instance.\n"
  syntax:
    content: public bool TokenValueSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TokenValueSpecified As Boolean
  overload: BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: BindOpen.Application.Security
  commentId: N:BindOpen.Application.Security
  isExternal: true
  name: BindOpen.Application.Security
  nameWithType: BindOpen.Application.Security
  fullName: BindOpen.Application.Security
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Application.Security.IApplicationCredential
  commentId: T:BindOpen.Application.Security.IApplicationCredential
  parent: BindOpen.Application.Security
  isExternal: true
  name: IApplicationCredential
  nameWithType: IApplicationCredential
  fullName: BindOpen.Application.Security.IApplicationCredential
- uid: BindOpen.Data.Items.INamedDataItem
  isExternal: true
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  isExternal: true
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  isExternal: true
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Security.ApplicationCredential.#ctor*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.#ctor
  isExternal: true
  name: ApplicationCredential
  nameWithType: ApplicationCredential.ApplicationCredential
  fullName: BindOpen.Application.Security.ApplicationCredential.ApplicationCredential
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Security.ApplicationCredential.DomainId*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.DomainId
  isExternal: true
  name: DomainId
  nameWithType: ApplicationCredential.DomainId
  fullName: BindOpen.Application.Security.ApplicationCredential.DomainId
- uid: BindOpen.Application.Security.IApplicationCredential.DomainId
  commentId: P:BindOpen.Application.Security.IApplicationCredential.DomainId
  parent: BindOpen.Application.Security.IApplicationCredential
  isExternal: true
  name: DomainId
  nameWithType: IApplicationCredential.DomainId
  fullName: BindOpen.Application.Security.IApplicationCredential.DomainId
- uid: BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified
  isExternal: true
  name: DomainIdSpecified
  nameWithType: ApplicationCredential.DomainIdSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.DomainIdSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Security.ApplicationCredential.Login*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.Login
  isExternal: true
  name: Login
  nameWithType: ApplicationCredential.Login
  fullName: BindOpen.Application.Security.ApplicationCredential.Login
- uid: BindOpen.Application.Security.IApplicationCredential.Login
  commentId: P:BindOpen.Application.Security.IApplicationCredential.Login
  parent: BindOpen.Application.Security.IApplicationCredential
  isExternal: true
  name: Login
  nameWithType: IApplicationCredential.Login
  fullName: BindOpen.Application.Security.IApplicationCredential.Login
- uid: BindOpen.Application.Security.ApplicationCredential.LoginSpecified*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.LoginSpecified
  isExternal: true
  name: LoginSpecified
  nameWithType: ApplicationCredential.LoginSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.LoginSpecified
- uid: BindOpen.Application.Security.ApplicationCredential.Password*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.Password
  isExternal: true
  name: Password
  nameWithType: ApplicationCredential.Password
  fullName: BindOpen.Application.Security.ApplicationCredential.Password
- uid: BindOpen.Application.Security.IApplicationCredential.Password
  commentId: P:BindOpen.Application.Security.IApplicationCredential.Password
  parent: BindOpen.Application.Security.IApplicationCredential
  isExternal: true
  name: Password
  nameWithType: IApplicationCredential.Password
  fullName: BindOpen.Application.Security.IApplicationCredential.Password
- uid: BindOpen.Application.Security.ApplicationCredential.PasswordSpecified*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.PasswordSpecified
  isExternal: true
  name: PasswordSpecified
  nameWithType: ApplicationCredential.PasswordSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.PasswordSpecified
- uid: BindOpen.Application.Security.ApplicationCredential.TokenValue*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.TokenValue
  isExternal: true
  name: TokenValue
  nameWithType: ApplicationCredential.TokenValue
  fullName: BindOpen.Application.Security.ApplicationCredential.TokenValue
- uid: BindOpen.Application.Security.IApplicationCredential.TokenValue
  commentId: P:BindOpen.Application.Security.IApplicationCredential.TokenValue
  parent: BindOpen.Application.Security.IApplicationCredential
  isExternal: true
  name: TokenValue
  nameWithType: IApplicationCredential.TokenValue
  fullName: BindOpen.Application.Security.IApplicationCredential.TokenValue
- uid: BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified*
  commentId: Overload:BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified
  isExternal: true
  name: TokenValueSpecified
  nameWithType: ApplicationCredential.TokenValueSpecified
  fullName: BindOpen.Application.Security.ApplicationCredential.TokenValueSpecified
shouldSkipMarkup: true
