### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.References.BdoExtensionReferenceCollection
  commentId: T:BindOpen.Extensions.References.BdoExtensionReferenceCollection
  id: BdoExtensionReferenceCollection
  parent: BindOpen.Extensions.References
  children:
  - BindOpen.Extensions.References.BdoExtensionReferenceCollection.#ctor(System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  langs:
  - csharp
  - vb
  name: BdoExtensionReferenceCollection
  nameWithType: BdoExtensionReferenceCollection
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceCollection
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Extensions/References/BdoExtensionReferenceCollection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoExtensionReferenceCollection
    path: ../src/BindOpen.Core/Extensions/References/BdoExtensionReferenceCollection.cs
    startLine: 7
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.References
  summary: "\nThis class represents a data reference.\n"
  example: []
  syntax:
    content: 'public class BdoExtensionReferenceCollection : List<IBdoExtensionReference>, IReadOnlyList<IBdoExtensionReference>, IReadOnlyCollection<IBdoExtensionReference>, IList, ICollection, IBdoExtensionReferenceCollection, IList<IBdoExtensionReference>, ICollection<IBdoExtensionReference>, IEnumerable<IBdoExtensionReference>, IEnumerable'
    content.vb: >-
      Public Class BdoExtensionReferenceCollection
          Inherits List(Of IBdoExtensionReference)
          Implements IReadOnlyList(Of IBdoExtensionReference), IReadOnlyCollection(Of IBdoExtensionReference), IList, ICollection, IBdoExtensionReferenceCollection, IList(Of IBdoExtensionReference), ICollection(Of IBdoExtensionReference), IEnumerable(Of IBdoExtensionReference), IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  implements:
  - System.Collections.Generic.IReadOnlyList{BindOpen.Extensions.References.IBdoExtensionReference}
  - System.Collections.Generic.IReadOnlyCollection{BindOpen.Extensions.References.IBdoExtensionReference}
  - System.Collections.IList
  - System.Collections.ICollection
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  - System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.AddRange(System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.AsReadOnly
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(System.Int32,System.Int32,BindOpen.Extensions.References.IBdoExtensionReference,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Clear
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ConvertAll``1(System.Converter{BindOpen.Extensions.References.IBdoExtensionReference,{TOutput}})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[])
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Exists(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Find(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Int32,System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLast(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Int32,System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ForEach(System.Action{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.GetEnumerator
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Insert(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAt(System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Reverse
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Comparison{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ToArray
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.TrimExcess
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.TrueForAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Capacity
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Count
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Item(System.Int32)
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Item(System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Extensions.References.BdoExtensionReferenceCollection.#ctor(System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceCollection.#ctor(System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  id: '#ctor(System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})'
  parent: BindOpen.Extensions.References.BdoExtensionReferenceCollection
  langs:
  - csharp
  - vb
  name: BdoExtensionReferenceCollection(IEnumerable<IBdoExtensionReference>)
  nameWithType: BdoExtensionReferenceCollection.BdoExtensionReferenceCollection(IEnumerable<IBdoExtensionReference>)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceCollection.BdoExtensionReferenceCollection(System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Extensions/References/BdoExtensionReferenceCollection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Extensions/References/BdoExtensionReferenceCollection.cs
    startLine: 19
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.References
  summary: "\nInstantiates a new instance of the BdoExtensionReferenceCollection class.\n"
  example: []
  syntax:
    content: public BdoExtensionReferenceCollection(IEnumerable<IBdoExtensionReference> references = null)
    parameters:
    - id: references
      type: System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}
      description: The references to consider.
    content.vb: Public Sub New(references As IEnumerable(Of IBdoExtensionReference) = Nothing)
  overload: BindOpen.Extensions.References.BdoExtensionReferenceCollection.#ctor*
  nameWithType.vb: BdoExtensionReferenceCollection.BdoExtensionReferenceCollection(IEnumerable(Of IBdoExtensionReference))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Extensions.References.BdoExtensionReferenceCollection.BdoExtensionReferenceCollection(System.Collections.Generic.IEnumerable(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: BdoExtensionReferenceCollection(IEnumerable(Of IBdoExtensionReference))
references:
- uid: BindOpen.Extensions.References
  commentId: N:BindOpen.Extensions.References
  name: BindOpen.Extensions.References
  nameWithType: BindOpen.Extensions.References
  fullName: BindOpen.Extensions.References
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IBdoExtensionReference>
  nameWithType: List<IBdoExtensionReference>
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: List(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: List(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyList{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.IReadOnlyList{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyList`1
  name: IReadOnlyList<IBdoExtensionReference>
  nameWithType: IReadOnlyList<IBdoExtensionReference>
  fullName: System.Collections.Generic.IReadOnlyList<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: IReadOnlyList(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: IReadOnlyList(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<IBdoExtensionReference>
  nameWithType: IReadOnlyCollection<IBdoExtensionReference>
  fullName: System.Collections.Generic.IReadOnlyCollection<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: IReadOnlyCollection(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: IReadOnlyCollection(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IList
  commentId: T:System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  commentId: T:BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  parent: BindOpen.Extensions.References
  name: IBdoExtensionReferenceCollection
  nameWithType: IBdoExtensionReferenceCollection
  fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
- uid: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IBdoExtensionReference>
  nameWithType: IList<IBdoExtensionReference>
  fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: IList(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: IList(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IBdoExtensionReference>
  nameWithType: ICollection<IBdoExtensionReference>
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: ICollection(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: ICollection(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IBdoExtensionReference>
  nameWithType: IEnumerable<IBdoExtensionReference>
  fullName: System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: IEnumerable(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: IEnumerable(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  nameWithType: List<IBdoExtensionReference>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<IBdoExtensionReference>.IList.get_Item
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  nameWithType: List<IBdoExtensionReference>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<IBdoExtensionReference>.IList.set_Item
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Add(`0)
  name: Add(IBdoExtensionReference)
  nameWithType: List<IBdoExtensionReference>.Add(IBdoExtensionReference)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: List(Of IBdoExtensionReference).Add(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Add(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<IBdoExtensionReference>.Add
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of IBdoExtensionReference).Add
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.AddRange(System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.AddRange(System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  name: AddRange(IEnumerable<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.AddRange(IEnumerable<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.AddRange(System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).AddRange(IEnumerable(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).AddRange(System.Collections.Generic.IEnumerable(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: AddRange(IEnumerable(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<IBdoExtensionReference>.AddRange
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of IBdoExtensionReference).AddRange
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.AsReadOnly
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.AsReadOnly
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.AsReadOnly
  name: AsReadOnly()
  nameWithType: List<IBdoExtensionReference>.AsReadOnly()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.AsReadOnly()
  nameWithType.vb: List(Of IBdoExtensionReference).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<IBdoExtensionReference>.AsReadOnly
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of IBdoExtensionReference).AsReadOnly
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.BinarySearch(`0)
  name: BinarySearch(IBdoExtensionReference)
  nameWithType: List<IBdoExtensionReference>.BinarySearch(IBdoExtensionReference)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: List(Of IBdoExtensionReference).BinarySearch(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<IBdoExtensionReference>.BinarySearch
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of IBdoExtensionReference).BinarySearch
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(IBdoExtensionReference, IComparer<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.BinarySearch(IBdoExtensionReference, IComparer<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference, System.Collections.Generic.IComparer<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).BinarySearch(IBdoExtensionReference, IComparer(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).BinarySearch(BindOpen.Extensions.References.IBdoExtensionReference, System.Collections.Generic.IComparer(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: BinarySearch(IBdoExtensionReference, IComparer(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<IBdoExtensionReference>.BinarySearch
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of IBdoExtensionReference).BinarySearch
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(System.Int32,System.Int32,BindOpen.Extensions.References.IBdoExtensionReference,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.BinarySearch(System.Int32,System.Int32,BindOpen.Extensions.References.IBdoExtensionReference,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  name: BinarySearch(Int32, Int32, IBdoExtensionReference, IComparer<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.BinarySearch(Int32, Int32, IBdoExtensionReference, IComparer<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.BinarySearch(System.Int32, System.Int32, BindOpen.Extensions.References.IBdoExtensionReference, System.Collections.Generic.IComparer<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).BinarySearch(Int32, Int32, IBdoExtensionReference, IComparer(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).BinarySearch(System.Int32, System.Int32, BindOpen.Extensions.References.IBdoExtensionReference, System.Collections.Generic.IComparer(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: BinarySearch(Int32, Int32, IBdoExtensionReference, IComparer(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<IBdoExtensionReference>.BinarySearch
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of IBdoExtensionReference).BinarySearch
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Clear
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Clear
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Clear
  name: Clear()
  nameWithType: List<IBdoExtensionReference>.Clear()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Clear()
  nameWithType.vb: List(Of IBdoExtensionReference).Clear()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<IBdoExtensionReference>.Clear
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of IBdoExtensionReference).Clear
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Contains(`0)
  name: Contains(IBdoExtensionReference)
  nameWithType: List<IBdoExtensionReference>.Contains(IBdoExtensionReference)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: List(Of IBdoExtensionReference).Contains(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<IBdoExtensionReference>.Contains
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of IBdoExtensionReference).Contains
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ConvertAll``1(System.Converter{BindOpen.Extensions.References.IBdoExtensionReference,{TOutput}})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ConvertAll``1(System.Converter{BindOpen.Extensions.References.IBdoExtensionReference,``0})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  name: ConvertAll<TOutput>(Converter<IBdoExtensionReference, TOutput>)
  nameWithType: List<IBdoExtensionReference>.ConvertAll<TOutput>(Converter<IBdoExtensionReference, TOutput>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.ConvertAll<TOutput>(System.Converter<BindOpen.Extensions.References.IBdoExtensionReference, TOutput>)
  nameWithType.vb: List(Of IBdoExtensionReference).ConvertAll(Of TOutput)(Converter(Of IBdoExtensionReference, TOutput))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).ConvertAll(Of TOutput)(System.Converter(Of BindOpen.Extensions.References.IBdoExtensionReference, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of IBdoExtensionReference, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<IBdoExtensionReference>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of IBdoExtensionReference).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[])
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.CopyTo(`0[])
  name: CopyTo(IBdoExtensionReference[])
  nameWithType: List<IBdoExtensionReference>.CopyTo(IBdoExtensionReference[])
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: List(Of IBdoExtensionReference).CopyTo(IBdoExtensionReference())
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo(BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: CopyTo(IBdoExtensionReference())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<IBdoExtensionReference>.CopyTo
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of IBdoExtensionReference).CopyTo
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IBdoExtensionReference[], Int32)
  nameWithType: List<IBdoExtensionReference>.CopyTo(IBdoExtensionReference[], Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[], System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).CopyTo(IBdoExtensionReference(), Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo(BindOpen.Extensions.References.IBdoExtensionReference(), System.Int32)
  name.vb: CopyTo(IBdoExtensionReference(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<IBdoExtensionReference>.CopyTo
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of IBdoExtensionReference).CopyTo
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  name: CopyTo(Int32, IBdoExtensionReference[], Int32, Int32)
  nameWithType: List<IBdoExtensionReference>.CopyTo(Int32, IBdoExtensionReference[], Int32, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo(System.Int32, BindOpen.Extensions.References.IBdoExtensionReference[], System.Int32, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).CopyTo(Int32, IBdoExtensionReference(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo(System.Int32, BindOpen.Extensions.References.IBdoExtensionReference(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, IBdoExtensionReference(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<IBdoExtensionReference>.CopyTo
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of IBdoExtensionReference).CopyTo
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Exists(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Exists(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  name: Exists(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.Exists(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Exists(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).Exists(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Exists(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: Exists(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<IBdoExtensionReference>.Exists
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of IBdoExtensionReference).Exists
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Find(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Find(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  name: Find(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.Find(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Find(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).Find(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Find(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: Find(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<IBdoExtensionReference>.Find
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of IBdoExtensionReference).Find
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  name: FindAll(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindAll(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindAll(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindAll(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindAll(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindAll(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<IBdoExtensionReference>.FindAll
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of IBdoExtensionReference).FindAll
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Int32,System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Int32,System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Int32, Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindIndex(Int32, Int32, Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindIndex(System.Int32, System.Int32, System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindIndex(Int32, Int32, Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindIndex(System.Int32, System.Int32, System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindIndex(Int32, Int32, Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<IBdoExtensionReference>.FindIndex
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of IBdoExtensionReference).FindIndex
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  name: FindIndex(Int32, Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindIndex(Int32, Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindIndex(System.Int32, System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindIndex(Int32, Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindIndex(System.Int32, System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindIndex(Int32, Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<IBdoExtensionReference>.FindIndex
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of IBdoExtensionReference).FindIndex
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindIndex(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  name: FindIndex(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindIndex(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindIndex(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindIndex(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindIndex(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindIndex(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<IBdoExtensionReference>.FindIndex
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of IBdoExtensionReference).FindIndex
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLast(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLast(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  name: FindLast(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindLast(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLast(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindLast(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLast(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindLast(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<IBdoExtensionReference>.FindLast
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of IBdoExtensionReference).FindLast
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Int32,System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Int32,System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Int32, Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindLastIndex(Int32, Int32, Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLastIndex(System.Int32, System.Int32, System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindLastIndex(Int32, Int32, Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<IBdoExtensionReference>.FindLastIndex
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of IBdoExtensionReference).FindLastIndex
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Int32,System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  name: FindLastIndex(Int32, Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindLastIndex(Int32, Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLastIndex(System.Int32, System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindLastIndex(Int32, Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLastIndex(System.Int32, System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindLastIndex(Int32, Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<IBdoExtensionReference>.FindLastIndex
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of IBdoExtensionReference).FindLastIndex
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.FindLastIndex(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  name: FindLastIndex(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.FindLastIndex(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLastIndex(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).FindLastIndex(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLastIndex(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: FindLastIndex(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<IBdoExtensionReference>.FindLastIndex
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of IBdoExtensionReference).FindLastIndex
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ForEach(System.Action{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ForEach(System.Action{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  name: ForEach(Action<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.ForEach(Action<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.ForEach(System.Action<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).ForEach(Action(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).ForEach(System.Action(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: ForEach(Action(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<IBdoExtensionReference>.ForEach
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of IBdoExtensionReference).ForEach
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.GetEnumerator
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.GetEnumerator
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: List<IBdoExtensionReference>.GetEnumerator()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.GetEnumerator()
  nameWithType.vb: List(Of IBdoExtensionReference).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<IBdoExtensionReference>.GetEnumerator
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of IBdoExtensionReference).GetEnumerator
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  name: GetRange(Int32, Int32)
  nameWithType: List<IBdoExtensionReference>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<IBdoExtensionReference>.GetRange
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of IBdoExtensionReference).GetRange
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.IndexOf(`0)
  name: IndexOf(IBdoExtensionReference)
  nameWithType: List<IBdoExtensionReference>.IndexOf(IBdoExtensionReference)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: List(Of IBdoExtensionReference).IndexOf(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<IBdoExtensionReference>.IndexOf
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of IBdoExtensionReference).IndexOf
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  name: IndexOf(IBdoExtensionReference, Int32)
  nameWithType: List<IBdoExtensionReference>.IndexOf(IBdoExtensionReference, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).IndexOf(IBdoExtensionReference, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<IBdoExtensionReference>.IndexOf
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of IBdoExtensionReference).IndexOf
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  name: IndexOf(IBdoExtensionReference, Int32, Int32)
  nameWithType: List<IBdoExtensionReference>.IndexOf(IBdoExtensionReference, Int32, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).IndexOf(IBdoExtensionReference, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<IBdoExtensionReference>.IndexOf
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of IBdoExtensionReference).IndexOf
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Insert(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Insert(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  name: Insert(Int32, IBdoExtensionReference)
  nameWithType: List<IBdoExtensionReference>.Insert(Int32, IBdoExtensionReference)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Insert(System.Int32, BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: List(Of IBdoExtensionReference).Insert(Int32, IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Insert(System.Int32, BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<IBdoExtensionReference>.Insert
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of IBdoExtensionReference).Insert
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  name: InsertRange(Int32, IEnumerable<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.InsertRange(Int32, IEnumerable<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).InsertRange(Int32, IEnumerable(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: InsertRange(Int32, IEnumerable(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<IBdoExtensionReference>.InsertRange
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of IBdoExtensionReference).InsertRange
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0)
  name: LastIndexOf(IBdoExtensionReference)
  nameWithType: List<IBdoExtensionReference>.LastIndexOf(IBdoExtensionReference)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: List(Of IBdoExtensionReference).LastIndexOf(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<IBdoExtensionReference>.LastIndexOf
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of IBdoExtensionReference).LastIndexOf
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  name: LastIndexOf(IBdoExtensionReference, Int32)
  nameWithType: List<IBdoExtensionReference>.LastIndexOf(IBdoExtensionReference, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).LastIndexOf(IBdoExtensionReference, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<IBdoExtensionReference>.LastIndexOf
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of IBdoExtensionReference).LastIndexOf
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference,System.Int32,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  name: LastIndexOf(IBdoExtensionReference, Int32, Int32)
  nameWithType: List<IBdoExtensionReference>.LastIndexOf(IBdoExtensionReference, Int32, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).LastIndexOf(IBdoExtensionReference, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).LastIndexOf(BindOpen.Extensions.References.IBdoExtensionReference, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<IBdoExtensionReference>.LastIndexOf
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of IBdoExtensionReference).LastIndexOf
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Remove(`0)
  name: Remove(IBdoExtensionReference)
  nameWithType: List<IBdoExtensionReference>.Remove(IBdoExtensionReference)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: List(Of IBdoExtensionReference).Remove(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<IBdoExtensionReference>.Remove
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of IBdoExtensionReference).Remove
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  name: RemoveAll(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.RemoveAll(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveAll(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).RemoveAll(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveAll(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: RemoveAll(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<IBdoExtensionReference>.RemoveAll
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of IBdoExtensionReference).RemoveAll
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: List<IBdoExtensionReference>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<IBdoExtensionReference>.RemoveAt
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of IBdoExtensionReference).RemoveAt
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  name: RemoveRange(Int32, Int32)
  nameWithType: List<IBdoExtensionReference>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<IBdoExtensionReference>.RemoveRange
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of IBdoExtensionReference).RemoveRange
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Reverse
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Reverse
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Reverse
  name: Reverse()
  nameWithType: List<IBdoExtensionReference>.Reverse()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Reverse()
  nameWithType.vb: List(Of IBdoExtensionReference).Reverse()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<IBdoExtensionReference>.Reverse
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of IBdoExtensionReference).Reverse
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  name: Reverse(Int32, Int32)
  nameWithType: List<IBdoExtensionReference>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<IBdoExtensionReference>.Reverse
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of IBdoExtensionReference).Reverse
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Sort
  name: Sort()
  nameWithType: List<IBdoExtensionReference>.Sort()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort()
  nameWithType.vb: List(Of IBdoExtensionReference).Sort()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<IBdoExtensionReference>.Sort
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of IBdoExtensionReference).Sort
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  name: Sort(IComparer<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.Sort(IComparer<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort(System.Collections.Generic.IComparer<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).Sort(IComparer(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort(System.Collections.Generic.IComparer(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: Sort(IComparer(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<IBdoExtensionReference>.Sort
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of IBdoExtensionReference).Sort
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Comparison{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Comparison{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  name: Sort(Comparison<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.Sort(Comparison<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort(System.Comparison<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).Sort(Comparison(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort(System.Comparison(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: Sort(Comparison(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<IBdoExtensionReference>.Sort
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of IBdoExtensionReference).Sort
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  name: Sort(Int32, Int32, IComparer<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.Sort(Int32, Int32, IComparer<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).Sort(Int32, Int32, IComparer(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: Sort(Int32, Int32, IComparer(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<IBdoExtensionReference>.Sort
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of IBdoExtensionReference).Sort
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<IBdoExtensionReference>.GetEnumerator()
  nameWithType: List<IBdoExtensionReference>.IEnumerable<IBdoExtensionReference>.GetEnumerator()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>.GetEnumerator()
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<IBdoExtensionReference>.GetEnumerator
    nameWithType: List<IBdoExtensionReference>.IEnumerable<IBdoExtensionReference>.GetEnumerator
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of IBdoExtensionReference).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<IBdoExtensionReference>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<IBdoExtensionReference>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of IBdoExtensionReference).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: List<IBdoExtensionReference>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<IBdoExtensionReference>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  nameWithType: List<IBdoExtensionReference>.IList.Add(Object)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<IBdoExtensionReference>.IList.Add
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  nameWithType: List<IBdoExtensionReference>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<IBdoExtensionReference>.IList.Contains
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  nameWithType: List<IBdoExtensionReference>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<IBdoExtensionReference>.IList.IndexOf
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  nameWithType: List<IBdoExtensionReference>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<IBdoExtensionReference>.IList.Insert
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  nameWithType: List<IBdoExtensionReference>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<IBdoExtensionReference>.IList.Remove
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ToArray
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.ToArray
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.ToArray
  name: ToArray()
  nameWithType: List<IBdoExtensionReference>.ToArray()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.ToArray()
  nameWithType.vb: List(Of IBdoExtensionReference).ToArray()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<IBdoExtensionReference>.ToArray
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of IBdoExtensionReference).ToArray
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.TrimExcess
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.TrimExcess
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.TrimExcess
  name: TrimExcess()
  nameWithType: List<IBdoExtensionReference>.TrimExcess()
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.TrimExcess()
  nameWithType.vb: List(Of IBdoExtensionReference).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<IBdoExtensionReference>.TrimExcess
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of IBdoExtensionReference).TrimExcess
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.TrueForAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  commentId: M:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.TrueForAll(System.Predicate{BindOpen.Extensions.References.IBdoExtensionReference})
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  name: TrueForAll(Predicate<IBdoExtensionReference>)
  nameWithType: List<IBdoExtensionReference>.TrueForAll(Predicate<IBdoExtensionReference>)
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.TrueForAll(System.Predicate<BindOpen.Extensions.References.IBdoExtensionReference>)
  nameWithType.vb: List(Of IBdoExtensionReference).TrueForAll(Predicate(Of IBdoExtensionReference))
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).TrueForAll(System.Predicate(Of BindOpen.Extensions.References.IBdoExtensionReference))
  name.vb: TrueForAll(Predicate(Of IBdoExtensionReference))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<IBdoExtensionReference>.TrueForAll
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of IBdoExtensionReference).TrueForAll
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Capacity
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Capacity
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Capacity
  name: Capacity
  nameWithType: List<IBdoExtensionReference>.Capacity
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Capacity
  nameWithType.vb: List(Of IBdoExtensionReference).Capacity
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Capacity
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Count
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Count
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Count
  name: Count
  nameWithType: List<IBdoExtensionReference>.Count
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Count
  nameWithType.vb: List(Of IBdoExtensionReference).Count
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Count
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Item(System.Int32)
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.Item(System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: List<IBdoExtensionReference>.Item[Int32]
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Item[System.Int32]
  nameWithType.vb: List(Of IBdoExtensionReference).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<IBdoExtensionReference>.Item
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of IBdoExtensionReference).Item
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<IBdoExtensionReference>.IsReadOnly
  nameWithType: List<IBdoExtensionReference>.ICollection<IBdoExtensionReference>.IsReadOnly
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.IsReadOnly
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: List<IBdoExtensionReference>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: List<IBdoExtensionReference>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IsFixedSize
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  nameWithType: List<IBdoExtensionReference>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#IsReadOnly
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  nameWithType: List<IBdoExtensionReference>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Generic.List{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  nameWithType: List<IBdoExtensionReference>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of IBdoExtensionReference).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<IBdoExtensionReference>.IList.Item
    fullName: System.Collections.Generic.List<BindOpen.Extensions.References.IBdoExtensionReference>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of IBdoExtensionReference).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of BindOpen.Extensions.References.IBdoExtensionReference).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddRuntime()
  nameWithType: BdoExtensionReferenceExtension.AddRuntime()
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime()
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  name: AddAssembly(String, String)
  nameWithType: BdoExtensionReferenceExtension.AddAssembly(String, String)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAssembly<T>()
  nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>()
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>()
  nameWithType.vb: BdoExtensionReferenceExtension.AddAssembly(Of T)()
  fullName.vb: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)()
  name.vb: AddAssembly(Of T)()
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
    name: AddAssembly<T>
    nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
    name: AddAssembly(Of T)
    nameWithType: BdoExtensionReferenceExtension.AddAssembly(Of T)
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAllAssemblies()
  nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies()
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies()
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyList`1
  commentId: T:System.Collections.Generic.IReadOnlyList`1
  isExternal: true
  name: IReadOnlyList<T>
  nameWithType: IReadOnlyList<T>
  fullName: System.Collections.Generic.IReadOnlyList<T>
  nameWithType.vb: IReadOnlyList(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyList(Of T)
  name.vb: IReadOnlyList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    nameWithType: IReadOnlyList
    fullName: System.Collections.Generic.IReadOnlyList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
  isExternal: true
  name: IList.get_Item(Int32)
  nameWithType: List<T>.IList.get_Item(Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item(System.Int32)
  nameWithType.vb: List(Of T).System.Collections.IList.get_Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item(System.Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    nameWithType: List<T>.IList.get_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    nameWithType: List(Of T).System.Collections.IList.get_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  isExternal: true
  name: IList.set_Item(Int32, Object)
  nameWithType: List<T>.IList.set_Item(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.set_Item(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    nameWithType: List<T>.IList.set_Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    nameWithType: List(Of T).System.Collections.IList.set_Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Add(`0)
  commentId: M:System.Collections.Generic.List`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: List<T>.Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  nameWithType.vb: List(Of T).Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List<T>.Add
    fullName: System.Collections.Generic.List<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Add(`0)
    name: Add
    nameWithType: List(Of T).Add
    fullName: System.Collections.Generic.List(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: List<T>.AddRange(IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List<T>.AddRange
    fullName: System.Collections.Generic.List<T>.AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
    name: AddRange
    nameWithType: List(Of T).AddRange
    fullName: System.Collections.Generic.List(Of T).AddRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.AsReadOnly
  commentId: M:System.Collections.Generic.List`1.AsReadOnly
  isExternal: true
  name: AsReadOnly()
  nameWithType: List<T>.AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  nameWithType.vb: List(Of T).AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List<T>.AsReadOnly
    fullName: System.Collections.Generic.List<T>.AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.AsReadOnly
    name: AsReadOnly
    nameWithType: List(Of T).AsReadOnly
    fullName: System.Collections.Generic.List(Of T).AsReadOnly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0)
  isExternal: true
  name: BinarySearch(T)
  nameWithType: List<T>.BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  nameWithType.vb: List(Of T).BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0)
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  nameWithType: List<T>.BinarySearch(Int32, Int32, T, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List<T>.BinarySearch
    fullName: System.Collections.Generic.List<T>.BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
    name: BinarySearch
    nameWithType: List(Of T).BinarySearch
    fullName: System.Collections.Generic.List(Of T).BinarySearch
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Clear
  commentId: M:System.Collections.Generic.List`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: List<T>.Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  nameWithType.vb: List(Of T).Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List<T>.Clear
    fullName: System.Collections.Generic.List<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Clear
    name: Clear
    nameWithType: List(Of T).Clear
    fullName: System.Collections.Generic.List(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Contains(`0)
  commentId: M:System.Collections.Generic.List`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: List<T>.Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  nameWithType.vb: List(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List<T>.Contains
    fullName: System.Collections.Generic.List<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Contains(`0)
    name: Contains
    nameWithType: List(Of T).Contains
    fullName: System.Collections.Generic.List(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  commentId: M:System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  isExternal: true
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  nameWithType: List<T>.ConvertAll<TOutput>(Converter<T, TOutput>)
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  nameWithType.vb: List(Of T).ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll<TOutput>
    nameWithType: List<T>.ConvertAll<TOutput>
    fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
    name: ConvertAll(Of TOutput)
    nameWithType: List(Of T).ConvertAll(Of TOutput)
    fullName: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: System.Converter
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[])
  isExternal: true
  name: CopyTo(T[])
  nameWithType: List<T>.CopyTo(T[])
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  nameWithType.vb: List(Of T).CopyTo(T())
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  name.vb: CopyTo(T())
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[])
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: List<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: List(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  isExternal: true
  name: CopyTo(Int32, T[], Int32, Int32)
  nameWithType: List<T>.CopyTo(Int32, T[], Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  nameWithType.vb: List(Of T).CopyTo(Int32, T(), Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List<T>.CopyTo
    fullName: System.Collections.Generic.List<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
    name: CopyTo
    nameWithType: List(Of T).CopyTo
    fullName: System.Collections.Generic.List(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  isExternal: true
  name: Exists(Predicate<T>)
  nameWithType: List<T>.Exists(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  nameWithType.vb: List(Of T).Exists(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  name.vb: Exists(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List<T>.Exists
    fullName: System.Collections.Generic.List<T>.Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
    name: Exists
    nameWithType: List(Of T).Exists
    fullName: System.Collections.Generic.List(Of T).Exists
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.Find(System.Predicate{`0})
  isExternal: true
  name: Find(Predicate<T>)
  nameWithType: List<T>.Find(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  nameWithType.vb: List(Of T).Find(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  name.vb: Find(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List<T>.Find
    fullName: System.Collections.Generic.List<T>.Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
    name: Find
    nameWithType: List(Of T).Find
    fullName: System.Collections.Generic.List(Of T).Find
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  isExternal: true
  name: FindAll(Predicate<T>)
  nameWithType: List<T>.FindAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  name.vb: FindAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List<T>.FindAll
    fullName: System.Collections.Generic.List<T>.FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
    name: FindAll
    nameWithType: List(Of T).FindAll
    fullName: System.Collections.Generic.List(Of T).FindAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  isExternal: true
  name: FindIndex(Predicate<T>)
  nameWithType: List<T>.FindIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  name.vb: FindIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List<T>.FindIndex
    fullName: System.Collections.Generic.List<T>.FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
    name: FindIndex
    nameWithType: List(Of T).FindIndex
    fullName: System.Collections.Generic.List(Of T).FindIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  isExternal: true
  name: FindLast(Predicate<T>)
  nameWithType: List<T>.FindLast(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLast(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  name.vb: FindLast(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List<T>.FindLast
    fullName: System.Collections.Generic.List<T>.FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
    name: FindLast
    nameWithType: List(Of T).FindLast
    fullName: System.Collections.Generic.List(Of T).FindLast
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Int32, Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Int32, Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Int32, Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  isExternal: true
  name: FindLastIndex(Predicate<T>)
  nameWithType: List<T>.FindLastIndex(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  nameWithType.vb: List(Of T).FindLastIndex(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  name.vb: FindLastIndex(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List<T>.FindLastIndex
    fullName: System.Collections.Generic.List<T>.FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
    name: FindLastIndex
    nameWithType: List(Of T).FindLastIndex
    fullName: System.Collections.Generic.List(Of T).FindLastIndex
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  commentId: M:System.Collections.Generic.List`1.ForEach(System.Action{`0})
  isExternal: true
  name: ForEach(Action<T>)
  nameWithType: List<T>.ForEach(Action<T>)
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  nameWithType.vb: List(Of T).ForEach(Action(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  name.vb: ForEach(Action(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List<T>.ForEach
    fullName: System.Collections.Generic.List<T>.ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
    name: ForEach
    nameWithType: List(Of T).ForEach
    fullName: System.Collections.Generic.List(Of T).ForEach
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetEnumerator
  commentId: M:System.Collections.Generic.List`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: List<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  nameWithType.vb: List(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetEnumerator
    name: GetEnumerator
    nameWithType: List(Of T).GetEnumerator
    fullName: System.Collections.Generic.List(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  isExternal: true
  name: GetRange(Int32, Int32)
  nameWithType: List<T>.GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).GetRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List<T>.GetRange
    fullName: System.Collections.Generic.List<T>.GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
    name: GetRange
    nameWithType: List(Of T).GetRange
    fullName: System.Collections.Generic.List(Of T).GetRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: List<T>.IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  nameWithType.vb: List(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32)
  nameWithType: List<T>.IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: IndexOf(T, Int32, Int32)
  nameWithType: List<T>.IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).IndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List<T>.IndexOf
    fullName: System.Collections.Generic.List<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
    name: IndexOf
    nameWithType: List(Of T).IndexOf
    fullName: System.Collections.Generic.List(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.List`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: List<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  nameWithType.vb: List(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List<T>.Insert
    fullName: System.Collections.Generic.List<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: List(Of T).Insert
    fullName: System.Collections.Generic.List(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  commentId: M:System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: InsertRange(Int32, IEnumerable<T>)
  nameWithType: List<T>.InsertRange(Int32, IEnumerable<T>)
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: List(Of T).InsertRange(Int32, IEnumerable(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List<T>.InsertRange
    fullName: System.Collections.Generic.List<T>.InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
    name: InsertRange
    nameWithType: List(Of T).InsertRange
    fullName: System.Collections.Generic.List(Of T).InsertRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0)
  isExternal: true
  name: LastIndexOf(T)
  nameWithType: List<T>.LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  nameWithType.vb: List(Of T).LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  isExternal: true
  name: LastIndexOf(T, Int32, Int32)
  nameWithType: List<T>.LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  nameWithType.vb: List(Of T).LastIndexOf(T, Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List<T>.LastIndexOf
    fullName: System.Collections.Generic.List<T>.LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
    name: LastIndexOf
    nameWithType: List(Of T).LastIndexOf
    fullName: System.Collections.Generic.List(Of T).LastIndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Remove(`0)
  commentId: M:System.Collections.Generic.List`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: List<T>.Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  nameWithType.vb: List(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List<T>.Remove
    fullName: System.Collections.Generic.List<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Remove(`0)
    name: Remove
    nameWithType: List(Of T).Remove
    fullName: System.Collections.Generic.List(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  isExternal: true
  name: RemoveAll(Predicate<T>)
  nameWithType: List<T>.RemoveAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).RemoveAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  name.vb: RemoveAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List<T>.RemoveAll
    fullName: System.Collections.Generic.List<T>.RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
    name: RemoveAll
    nameWithType: List(Of T).RemoveAll
    fullName: System.Collections.Generic.List(Of T).RemoveAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: List<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  nameWithType.vb: List(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List<T>.RemoveAt
    fullName: System.Collections.Generic.List<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: List(Of T).RemoveAt
    fullName: System.Collections.Generic.List(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  isExternal: true
  name: RemoveRange(Int32, Int32)
  nameWithType: List<T>.RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).RemoveRange(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List<T>.RemoveRange
    fullName: System.Collections.Generic.List<T>.RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
    name: RemoveRange
    nameWithType: List(Of T).RemoveRange
    fullName: System.Collections.Generic.List(Of T).RemoveRange
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse
  commentId: M:System.Collections.Generic.List`1.Reverse
  isExternal: true
  name: Reverse()
  nameWithType: List<T>.Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  nameWithType.vb: List(Of T).Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  commentId: M:System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  isExternal: true
  name: Reverse(Int32, Int32)
  nameWithType: List<T>.Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  nameWithType.vb: List(Of T).Reverse(Int32, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List<T>.Reverse
    fullName: System.Collections.Generic.List<T>.Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
    name: Reverse
    nameWithType: List(Of T).Reverse
    fullName: System.Collections.Generic.List(Of T).Reverse
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort
  commentId: M:System.Collections.Generic.List`1.Sort
  isExternal: true
  name: Sort()
  nameWithType: List<T>.Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  nameWithType.vb: List(Of T).Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(IComparer<T>)
  nameWithType: List<T>.Sort(IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  isExternal: true
  name: Sort(Comparison<T>)
  nameWithType: List<T>.Sort(Comparison<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  nameWithType.vb: List(Of T).Sort(Comparison(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  name.vb: Sort(Comparison(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Comparison`1
    name: Comparison
    nameWithType: Comparison
    fullName: System.Comparison
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  commentId: M:System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  isExternal: true
  name: Sort(Int32, Int32, IComparer<T>)
  nameWithType: List<T>.Sort(Int32, Int32, IComparer<T>)
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  nameWithType.vb: List(Of T).Sort(Int32, Int32, IComparer(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List<T>.Sort
    fullName: System.Collections.Generic.List<T>.Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
    name: Sort
    nameWithType: List(Of T).Sort
    fullName: System.Collections.Generic.List(Of T).Sort
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: List<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: List<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: List<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: List(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: List<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: List(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: List<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: List(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: List<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: List(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  isExternal: true
  name: IList.Add(Object)
  nameWithType: List<T>.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Add(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  name.vb: System.Collections.IList.Add(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    nameWithType: List<T>.IList.Add
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    nameWithType: List(Of T).System.Collections.IList.Add
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  isExternal: true
  name: IList.Contains(Object)
  nameWithType: List<T>.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Contains(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  name.vb: System.Collections.IList.Contains(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    nameWithType: List<T>.IList.Contains
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    nameWithType: List(Of T).System.Collections.IList.Contains
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  isExternal: true
  name: IList.IndexOf(Object)
  nameWithType: List<T>.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.IndexOf(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    nameWithType: List<T>.IList.IndexOf
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    nameWithType: List(Of T).System.Collections.IList.IndexOf
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  isExternal: true
  name: IList.Insert(Int32, Object)
  nameWithType: List<T>.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Insert(Int32, Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    nameWithType: List<T>.IList.Insert
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    nameWithType: List(Of T).System.Collections.IList.Insert
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  commentId: M:System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  isExternal: true
  name: IList.Remove(Object)
  nameWithType: List<T>.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  nameWithType.vb: List(Of T).System.Collections.IList.Remove(Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  name.vb: System.Collections.IList.Remove(Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    nameWithType: List<T>.IList.Remove
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    nameWithType: List(Of T).System.Collections.IList.Remove
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.ToArray
  commentId: M:System.Collections.Generic.List`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: List<T>.ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  nameWithType.vb: List(Of T).ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List<T>.ToArray
    fullName: System.Collections.Generic.List<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.ToArray
    name: ToArray
    nameWithType: List(Of T).ToArray
    fullName: System.Collections.Generic.List(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrimExcess
  commentId: M:System.Collections.Generic.List`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: List<T>.TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  nameWithType.vb: List(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List<T>.TrimExcess
    fullName: System.Collections.Generic.List<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrimExcess
    name: TrimExcess
    nameWithType: List(Of T).TrimExcess
    fullName: System.Collections.Generic.List(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  commentId: M:System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  isExternal: true
  name: TrueForAll(Predicate<T>)
  nameWithType: List<T>.TrueForAll(Predicate<T>)
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  nameWithType.vb: List(Of T).TrueForAll(Predicate(Of T))
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  name.vb: TrueForAll(Predicate(Of T))
  spec.csharp:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List<T>.TrueForAll
    fullName: System.Collections.Generic.List<T>.TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
    name: TrueForAll
    nameWithType: List(Of T).TrueForAll
    fullName: System.Collections.Generic.List(Of T).TrueForAll
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: System.Predicate
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.Capacity
  commentId: P:System.Collections.Generic.List`1.Capacity
  isExternal: true
  name: Capacity
  nameWithType: List<T>.Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  nameWithType.vb: List(Of T).Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
- uid: System.Collections.Generic.List`1.Count
  commentId: P:System.Collections.Generic.List`1.Count
  isExternal: true
  name: Count
  nameWithType: List<T>.Count
  fullName: System.Collections.Generic.List<T>.Count
  nameWithType.vb: List(Of T).Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: List<T>.Item[Int32]
  fullName: System.Collections.Generic.List<T>.Item[System.Int32]
  nameWithType.vb: List(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List<T>.Item
    fullName: System.Collections.Generic.List<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Item(System.Int32)
    name: Item
    nameWithType: List(Of T).Item
    fullName: System.Collections.Generic.List(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  isExternal: true
  name: ICollection<T>.IsReadOnly
  nameWithType: List<T>.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: List<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: List(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: List<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: List(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  isExternal: true
  name: IList.IsFixedSize
  nameWithType: List<T>.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  nameWithType.vb: List(Of T).System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  isExternal: true
  name: IList.IsReadOnly
  nameWithType: List<T>.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  nameWithType.vb: List(Of T).System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
- uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  commentId: P:System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  isExternal: true
  name: IList.Item[Int32]
  nameWithType: List<T>.IList.Item[Int32]
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item[System.Int32]
  nameWithType.vb: List(Of T).System.Collections.IList.Item(Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Item(System.Int32)
  name.vb: System.Collections.IList.Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    nameWithType: List<T>.IList.Item
    fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    nameWithType: List(Of T).System.Collections.IList.Item
    fullName: System.Collections.Generic.List(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddRuntime(IBdoExtensionReferenceCollection)
  nameWithType: BdoExtensionReferenceExtension.AddRuntime(IBdoExtensionReferenceCollection)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  commentId: T:BindOpen.Extensions.References.BdoExtensionReferenceExtension
  parent: BindOpen.Extensions.References
  name: BdoExtensionReferenceExtension
  nameWithType: BdoExtensionReferenceExtension
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  isExternal: true
  name: AddAssembly(IBdoExtensionReferenceCollection, String, String)
  nameWithType: BdoExtensionReferenceExtension.AddAssembly(IBdoExtensionReferenceCollection, String, String)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection, System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAssembly<T>(IBdoExtensionReferenceCollection)
  nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>(IBdoExtensionReferenceCollection)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  nameWithType.vb: BdoExtensionReferenceExtension.AddAssembly(Of T)(IBdoExtensionReferenceCollection)
  fullName.vb: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name.vb: AddAssembly(Of T)(IBdoExtensionReferenceCollection)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAssembly<T>
    nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAssembly(Of T)
    nameWithType: BdoExtensionReferenceExtension.AddAssembly(Of T)
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAllAssemblies(IBdoExtensionReferenceCollection)
  nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies(IBdoExtensionReferenceCollection)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Extensions.References.BdoExtensionReferenceCollection.#ctor*
  commentId: Overload:BindOpen.Extensions.References.BdoExtensionReferenceCollection.#ctor
  name: BdoExtensionReferenceCollection
  nameWithType: BdoExtensionReferenceCollection.BdoExtensionReferenceCollection
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceCollection.BdoExtensionReferenceCollection
shouldSkipMarkup: true
