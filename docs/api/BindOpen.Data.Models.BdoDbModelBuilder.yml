### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Models.BdoDbModelBuilder
  commentId: T:BindOpen.Data.Models.BdoDbModelBuilder
  id: BdoDbModelBuilder
  parent: BindOpen.Data.Models
  children:
  - BindOpen.Data.Models.BdoDbModelBuilder.#ctor(BindOpen.Data.Models.IBdoDbModel)
  - BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  - BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  - BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  - BindOpen.Data.Models.BdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  - BindOpen.Data.Models.BdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  - BindOpen.Data.Models.BdoDbModelBuilder.AddTable``1(System.String)
  - BindOpen.Data.Models.BdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  langs:
  - csharp
  - vb
  name: BdoDbModelBuilder
  nameWithType: BdoDbModelBuilder
  fullName: BindOpen.Data.Models.BdoDbModelBuilder
  type: Class
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: BdoDbModelBuilder
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 11
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\nThis class represents a database model.\n"
  example: []
  syntax:
    content: 'public class BdoDbModelBuilder : IBdoDbModelBuilder'
    content.vb: >-
      Public Class BdoDbModelBuilder
          Implements IBdoDbModelBuilder
  inheritance:
  - System.Object
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Models.BdoDbModelBuilder.#ctor(BindOpen.Data.Models.IBdoDbModel)
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.#ctor(BindOpen.Data.Models.IBdoDbModel)
  id: '#ctor(BindOpen.Data.Models.IBdoDbModel)'
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: BdoDbModelBuilder(IBdoDbModel)
  nameWithType: BdoDbModelBuilder.BdoDbModelBuilder(IBdoDbModel)
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.BdoDbModelBuilder(BindOpen.Data.Models.IBdoDbModel)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: .ctor
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 19
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\n\n"
  example: []
  syntax:
    content: public BdoDbModelBuilder(IBdoDbModel model)
    parameters:
    - id: model
      type: BindOpen.Data.Models.IBdoDbModel
      description: ''
    content.vb: Public Sub New(model As IBdoDbModel)
  overload: BindOpen.Data.Models.BdoDbModelBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  id: AddTable(BindOpen.Extensions.Carriers.DbTable)
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTable(DbTable)
  nameWithType: BdoDbModelBuilder.AddTable(DbTable)
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddTable
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 32
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\n\n"
  example: []
  syntax:
    content: public IBdoDbModelBuilder AddTable(DbTable table)
    parameters:
    - id: table
      type: BindOpen.Extensions.Carriers.DbTable
      description: ''
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
      description: ''
    content.vb: Public Function AddTable(table As DbTable) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.BdoDbModelBuilder.AddTable*
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  id: AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTable(String, DbTable)
  nameWithType: BdoDbModelBuilder.AddTable(String, DbTable)
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddTable(System.String, BindOpen.Extensions.Carriers.DbTable)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddTable
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 41
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\n\n"
  example: []
  syntax:
    content: public IBdoDbModelBuilder AddTable(string name, DbTable table)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: table
      type: BindOpen.Extensions.Carriers.DbTable
      description: ''
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
      description: ''
    content.vb: Public Function AddTable(name As String, table As DbTable) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.BdoDbModelBuilder.AddTable*
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddTable``1(System.String)
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.AddTable``1(System.String)
  id: AddTable``1(System.String)
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTable<T>(String)
  nameWithType: BdoDbModelBuilder.AddTable<T>(String)
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddTable<T>(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddTable
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 62
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      public virtual IBdoDbModelBuilder AddTable<T>(string name = null)
          where T : class
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
      description: ''
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
      description: ''
    content.vb: Public Overridable Function AddTable(Of T As Class)(name As String = Nothing) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.BdoDbModelBuilder.AddTable*
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
  nameWithType.vb: BdoDbModelBuilder.AddTable(Of T)(String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BindOpen.Data.Models.BdoDbModelBuilder.AddTable(Of T)(System.String)
  name.vb: AddTable(Of T)(String)
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  id: AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddJoinCondition(String, DataExpression)
  nameWithType: BdoDbModelBuilder.AddJoinCondition(String, DataExpression)
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition(System.String, BindOpen.Data.Expression.DataExpression)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddJoinCondition
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 99
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\n\n"
  example: []
  syntax:
    content: public IBdoDbModelBuilder AddJoinCondition(string name, DataExpression condition)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: condition
      type: BindOpen.Data.Expression.DataExpression
      description: ''
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
      description: ''
    content.vb: Public Function AddJoinCondition(name As String, condition As DataExpression) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition*
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  id: AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTuple(String, DbField[])
  nameWithType: BdoDbModelBuilder.AddTuple(String, DbField[])
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddTuple(System.String, BindOpen.Extensions.Carriers.DbField[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddTuple
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 118
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\n\n"
  example: []
  syntax:
    content: public IBdoDbModelBuilder AddTuple(string name, DbField[] fields)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: fields
      type: BindOpen.Extensions.Carriers.DbField[]
      description: ''
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
      description: ''
    content.vb: Public Function AddTuple(name As String, fields As DbField()) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.BdoDbModelBuilder.AddTuple*
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  nameWithType.vb: BdoDbModelBuilder.AddTuple(String, DbField())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Models.BdoDbModelBuilder.AddTuple(System.String, BindOpen.Extensions.Carriers.DbField())
  name.vb: AddTuple(String, DbField())
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  id: AddQuery(BindOpen.Data.Queries.IDbQuery)
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddQuery(IDbQuery)
  nameWithType: BdoDbModelBuilder.AddQuery(IDbQuery)
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddQuery
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 137
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\nAdds the specified query.\n"
  example: []
  syntax:
    content: public IBdoDbModelBuilder AddQuery(IDbQuery query)
    parameters:
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
      description: The query to consider.
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
      description: ''
    content.vb: Public Function AddQuery(query As IDbQuery) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery*
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  commentId: M:BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  id: AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  parent: BindOpen.Data.Models.BdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddQuery(String, IDbQuery)
  nameWithType: BdoDbModelBuilder.AddQuery(String, IDbQuery)
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery(System.String, BindOpen.Data.Queries.IDbQuery)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddQuery
    path: ../src/BindOpen.Databases/Data/Models/BdoDbModelBuilder.cs
    startLine: 146
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  summary: "\nAdds the specified query.\n"
  example: []
  syntax:
    content: public IBdoDbModelBuilder AddQuery(string name, IDbQuery query)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
      description: The query to consider.
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
      description: ''
    content.vb: Public Function AddQuery(name As String, query As IDbQuery) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery*
  implements:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Data.Models
  commentId: N:BindOpen.Data.Models
  name: BindOpen.Data.Models
  nameWithType: BindOpen.Data.Models
  fullName: BindOpen.Data.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Data.Models.IBdoDbModelBuilder
  commentId: T:BindOpen.Data.Models.IBdoDbModelBuilder
  parent: BindOpen.Data.Models
  name: IBdoDbModelBuilder
  nameWithType: IBdoDbModelBuilder
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Models.BdoDbModelBuilder.#ctor*
  commentId: Overload:BindOpen.Data.Models.BdoDbModelBuilder.#ctor
  name: BdoDbModelBuilder
  nameWithType: BdoDbModelBuilder.BdoDbModelBuilder
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.BdoDbModelBuilder
- uid: BindOpen.Data.Models.IBdoDbModel
  commentId: T:BindOpen.Data.Models.IBdoDbModel
  parent: BindOpen.Data.Models
  name: IBdoDbModel
  nameWithType: IBdoDbModel
  fullName: BindOpen.Data.Models.IBdoDbModel
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddTable*
  commentId: Overload:BindOpen.Data.Models.BdoDbModelBuilder.AddTable
  name: AddTable
  nameWithType: BdoDbModelBuilder.AddTable
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddTable
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  name: AddTable(DbTable)
  nameWithType: IBdoDbModelBuilder.AddTable(DbTable)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  spec.csharp:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
    name: AddTable
    nameWithType: IBdoDbModelBuilder.AddTable
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Carriers.DbTable
    name: DbTable
    nameWithType: DbTable
    fullName: BindOpen.Extensions.Carriers.DbTable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
    name: AddTable
    nameWithType: IBdoDbModelBuilder.AddTable
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Carriers.DbTable
    name: DbTable
    nameWithType: DbTable
    fullName: BindOpen.Extensions.Carriers.DbTable
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers.DbTable
  commentId: T:BindOpen.Extensions.Carriers.DbTable
  parent: BindOpen.Extensions.Carriers
  name: DbTable
  nameWithType: DbTable
  fullName: BindOpen.Extensions.Carriers.DbTable
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  isExternal: true
  name: AddTable(String, DbTable)
  nameWithType: IBdoDbModelBuilder.AddTable(String, DbTable)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String, BindOpen.Extensions.Carriers.DbTable)
  spec.csharp:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
    name: AddTable
    nameWithType: IBdoDbModelBuilder.AddTable
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.DbTable
    name: DbTable
    nameWithType: DbTable
    fullName: BindOpen.Extensions.Carriers.DbTable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
    name: AddTable
    nameWithType: IBdoDbModelBuilder.AddTable
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.DbTable
    name: DbTable
    nameWithType: DbTable
    fullName: BindOpen.Extensions.Carriers.DbTable
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  isExternal: true
  name: AddTable<T>(String)
  nameWithType: IBdoDbModelBuilder.AddTable<T>(String)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable<T>(System.String)
  nameWithType.vb: IBdoDbModelBuilder.AddTable(Of T)(String)
  fullName.vb: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(Of T)(System.String)
  name.vb: AddTable(Of T)(String)
  spec.csharp:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
    name: AddTable<T>
    nameWithType: IBdoDbModelBuilder.AddTable<T>
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
    name: AddTable(Of T)
    nameWithType: IBdoDbModelBuilder.AddTable(Of T)
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition*
  commentId: Overload:BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition
  name: AddJoinCondition
  nameWithType: BdoDbModelBuilder.AddJoinCondition
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddJoinCondition
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  isExternal: true
  name: AddJoinCondition(String, DataExpression)
  nameWithType: IBdoDbModelBuilder.AddJoinCondition(String, DataExpression)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String, BindOpen.Data.Expression.DataExpression)
  spec.csharp:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
    name: AddJoinCondition
    nameWithType: IBdoDbModelBuilder.AddJoinCondition
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Expression.DataExpression
    name: DataExpression
    nameWithType: DataExpression
    fullName: BindOpen.Data.Expression.DataExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
    name: AddJoinCondition
    nameWithType: IBdoDbModelBuilder.AddJoinCondition
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Expression.DataExpression
    name: DataExpression
    nameWithType: DataExpression
    fullName: BindOpen.Data.Expression.DataExpression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Expression.DataExpression
  commentId: T:BindOpen.Data.Expression.DataExpression
  parent: BindOpen.Data.Expression
  isExternal: true
  name: DataExpression
  nameWithType: DataExpression
  fullName: BindOpen.Data.Expression.DataExpression
- uid: BindOpen.Data.Expression
  commentId: N:BindOpen.Data.Expression
  isExternal: true
  name: BindOpen.Data.Expression
  nameWithType: BindOpen.Data.Expression
  fullName: BindOpen.Data.Expression
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddTuple*
  commentId: Overload:BindOpen.Data.Models.BdoDbModelBuilder.AddTuple
  name: AddTuple
  nameWithType: BdoDbModelBuilder.AddTuple
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddTuple
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  isExternal: true
  name: AddTuple(String, DbField[])
  nameWithType: IBdoDbModelBuilder.AddTuple(String, DbField[])
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String, BindOpen.Extensions.Carriers.DbField[])
  nameWithType.vb: IBdoDbModelBuilder.AddTuple(String, DbField())
  fullName.vb: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String, BindOpen.Extensions.Carriers.DbField())
  name.vb: AddTuple(String, DbField())
  spec.csharp:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
    name: AddTuple
    nameWithType: IBdoDbModelBuilder.AddTuple
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.DbField
    name: DbField
    nameWithType: DbField
    fullName: BindOpen.Extensions.Carriers.DbField
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
    name: AddTuple
    nameWithType: IBdoDbModelBuilder.AddTuple
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.DbField
    name: DbField
    nameWithType: DbField
    fullName: BindOpen.Extensions.Carriers.DbField
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers.DbField[]
  isExternal: true
  name: DbField[]
  nameWithType: DbField[]
  fullName: BindOpen.Extensions.Carriers.DbField[]
  nameWithType.vb: DbField()
  fullName.vb: BindOpen.Extensions.Carriers.DbField()
  name.vb: DbField()
  spec.csharp:
  - uid: BindOpen.Extensions.Carriers.DbField
    name: DbField
    nameWithType: DbField
    fullName: BindOpen.Extensions.Carriers.DbField
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Extensions.Carriers.DbField
    name: DbField
    nameWithType: DbField
    fullName: BindOpen.Extensions.Carriers.DbField
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery*
  commentId: Overload:BindOpen.Data.Models.BdoDbModelBuilder.AddQuery
  name: AddQuery
  nameWithType: BdoDbModelBuilder.AddQuery
  fullName: BindOpen.Data.Models.BdoDbModelBuilder.AddQuery
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  name: AddQuery(IDbQuery)
  nameWithType: IBdoDbModelBuilder.AddQuery(IDbQuery)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  spec.csharp:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
    name: AddQuery
    nameWithType: IBdoDbModelBuilder.AddQuery
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
    name: AddQuery
    nameWithType: IBdoDbModelBuilder.AddQuery
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Queries.IDbQuery
  commentId: T:BindOpen.Data.Queries.IDbQuery
  parent: BindOpen.Data.Queries
  name: IDbQuery
  nameWithType: IDbQuery
  fullName: BindOpen.Data.Queries.IDbQuery
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  isExternal: true
  name: AddQuery(String, IDbQuery)
  nameWithType: IBdoDbModelBuilder.AddQuery(String, IDbQuery)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String, BindOpen.Data.Queries.IDbQuery)
  spec.csharp:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
    name: AddQuery
    nameWithType: IBdoDbModelBuilder.AddQuery
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
    name: AddQuery
    nameWithType: IBdoDbModelBuilder.AddQuery
    fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
