### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind
  commentId: T:BindOpen.Application.Modules.ApplicationModuleSubKind
  id: ApplicationModuleSubKind
  parent: BindOpen.Application.Modules
  children:
  - BindOpen.Application.Modules.ApplicationModuleSubKind.None
  - BindOpen.Application.Modules.ApplicationModuleSubKind.Parent
  - BindOpen.Application.Modules.ApplicationModuleSubKind.SubModule
  - BindOpen.Application.Modules.ApplicationModuleSubKind.Universe
  - BindOpen.Application.Modules.ApplicationModuleSubKind.value__
  langs:
  - csharp
  - vb
  name: ApplicationModuleSubKind
  nameWithType: ApplicationModuleSubKind
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThis enumeration lists the possible sub kinds of an application module.\n"
  syntax:
    content: 'public sealed class ApplicationModuleSubKind : Enum'
    content.vb: >-
      Public NotInheritable Class ApplicationModuleSubKind
          Inherits

           Enum
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind.value__
  commentId: F:BindOpen.Application.Modules.ApplicationModuleSubKind.value__
  id: value__
  parent: BindOpen.Application.Modules.ApplicationModuleSubKind
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: ApplicationModuleSubKind.value__
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind.value__
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  syntax:
    content: public int value__
    return:
      type: System.Int32
    content.vb: Public value__ As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind.None
  commentId: F:BindOpen.Application.Modules.ApplicationModuleSubKind.None
  id: None
  parent: BindOpen.Application.Modules.ApplicationModuleSubKind
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ApplicationModuleSubKind.None
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind.None
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nNone.\n"
  syntax:
    content: public const ApplicationModuleSubKind None
    return:
      type: BindOpen.Application.Modules.ApplicationModuleSubKind
    content.vb: Public Const None As ApplicationModuleSubKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind.Parent
  commentId: F:BindOpen.Application.Modules.ApplicationModuleSubKind.Parent
  id: Parent
  parent: BindOpen.Application.Modules.ApplicationModuleSubKind
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: ApplicationModuleSubKind.Parent
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind.Parent
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nParent module.\n"
  syntax:
    content: public const ApplicationModuleSubKind Parent
    return:
      type: BindOpen.Application.Modules.ApplicationModuleSubKind
    content.vb: Public Const Parent As ApplicationModuleSubKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind.SubModule
  commentId: F:BindOpen.Application.Modules.ApplicationModuleSubKind.SubModule
  id: SubModule
  parent: BindOpen.Application.Modules.ApplicationModuleSubKind
  langs:
  - csharp
  - vb
  name: SubModule
  nameWithType: ApplicationModuleSubKind.SubModule
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind.SubModule
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe sub module. A parent module can be composed by technical sub modules of different tiers.\n"
  syntax:
    content: public const ApplicationModuleSubKind SubModule
    return:
      type: BindOpen.Application.Modules.ApplicationModuleSubKind
    content.vb: Public Const SubModule As ApplicationModuleSubKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind.Universe
  commentId: F:BindOpen.Application.Modules.ApplicationModuleSubKind.Universe
  id: Universe
  parent: BindOpen.Application.Modules.ApplicationModuleSubKind
  langs:
  - csharp
  - vb
  name: Universe
  nameWithType: ApplicationModuleSubKind.Universe
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind.Universe
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe universe. A universe is a functional subdivision of a parent module.\n"
  syntax:
    content: public const ApplicationModuleSubKind Universe
    return:
      type: BindOpen.Application.Modules.ApplicationModuleSubKind
    content.vb: Public Const Universe As ApplicationModuleSubKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.Application.Modules
  commentId: N:BindOpen.Application.Modules
  isExternal: true
  name: BindOpen.Application.Modules
  nameWithType: BindOpen.Application.Modules
  fullName: BindOpen.Application.Modules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind
  commentId: T:BindOpen.Application.Modules.ApplicationModuleSubKind
  parent: BindOpen.Application.Modules
  isExternal: true
  name: ApplicationModuleSubKind
  nameWithType: ApplicationModuleSubKind
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind
shouldSkipMarkup: true
