### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  commentId: T:BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  id: IBdoExtensionReferenceCollection
  parent: BindOpen.Extensions.References
  children: []
  langs:
  - csharp
  - vb
  name: IBdoExtensionReferenceCollection
  nameWithType: IBdoExtensionReferenceCollection
  fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  type: Interface
  source:
    remote:
      path: src/BindOpen.Core/Extensions/References/Interfaces/IBdoExtensionReferenceCollection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IBdoExtensionReferenceCollection
    path: ../src/BindOpen.Core/Extensions/References/Interfaces/IBdoExtensionReferenceCollection.cs
    startLine: 7
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.References
  summary: "\nThis class represents a data reference.\n"
  example: []
  syntax:
    content: 'public interface IBdoExtensionReferenceCollection : IList<IBdoExtensionReference>, ICollection<IBdoExtensionReference>, IEnumerable<IBdoExtensionReference>, IEnumerable'
    content.vb: >-
      Public Interface IBdoExtensionReferenceCollection
          Inherits IList(Of IBdoExtensionReference)
  inheritedMembers:
  - System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.Insert(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAt(System.Int32)
  - System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.Item(System.Int32)
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Clear
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32)
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Count
  - System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.IsReadOnly
  - System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}.GetEnumerator
  extensionMethods:
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
  - BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
references:
- uid: BindOpen.Extensions.References
  commentId: N:BindOpen.Extensions.References
  name: BindOpen.Extensions.References
  nameWithType: BindOpen.Extensions.References
  fullName: BindOpen.Extensions.References
- uid: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.IList`1.IndexOf(`0)
  name: IndexOf(IBdoExtensionReference)
  nameWithType: IList<IBdoExtensionReference>.IndexOf(IBdoExtensionReference)
  fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: IList(Of IBdoExtensionReference).IndexOf(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<IBdoExtensionReference>.IndexOf
    fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of IBdoExtensionReference).IndexOf
    fullName: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.Insert(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.Insert(System.Int32,BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  name: Insert(Int32, IBdoExtensionReference)
  nameWithType: IList<IBdoExtensionReference>.Insert(Int32, IBdoExtensionReference)
  fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.Insert(System.Int32, BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: IList(Of IBdoExtensionReference).Insert(Int32, IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).Insert(System.Int32, BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<IBdoExtensionReference>.Insert
    fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of IBdoExtensionReference).Insert
    fullName: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  nameWithType: IList<IBdoExtensionReference>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of IBdoExtensionReference).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<IBdoExtensionReference>.RemoveAt
    fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of IBdoExtensionReference).RemoveAt
    fullName: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}.Item(System.Int32)
  parent: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.IList`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IList<IBdoExtensionReference>.Item[Int32]
  fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.Item[System.Int32]
  nameWithType.vb: IList(Of IBdoExtensionReference).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<IBdoExtensionReference>.Item
    fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of IBdoExtensionReference).Item
    fullName: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(IBdoExtensionReference)
  nameWithType: ICollection<IBdoExtensionReference>.Add(IBdoExtensionReference)
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Add(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: ICollection(Of IBdoExtensionReference).Add(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Add(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<IBdoExtensionReference>.Add
    fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of IBdoExtensionReference).Add
    fullName: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Clear
  commentId: M:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Clear
  parent: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.ICollection`1.Clear
  name: Clear()
  nameWithType: ICollection<IBdoExtensionReference>.Clear()
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Clear()
  nameWithType.vb: ICollection(Of IBdoExtensionReference).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<IBdoExtensionReference>.Clear
    fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of IBdoExtensionReference).Clear
    fullName: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(IBdoExtensionReference)
  nameWithType: ICollection<IBdoExtensionReference>.Contains(IBdoExtensionReference)
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: ICollection(Of IBdoExtensionReference).Contains(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Contains(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<IBdoExtensionReference>.Contains
    fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of IBdoExtensionReference).Contains
    fullName: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[],System.Int32)
  parent: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(IBdoExtensionReference[], Int32)
  nameWithType: ICollection<IBdoExtensionReference>.CopyTo(IBdoExtensionReference[], Int32)
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo(BindOpen.Extensions.References.IBdoExtensionReference[], System.Int32)
  nameWithType.vb: ICollection(Of IBdoExtensionReference).CopyTo(IBdoExtensionReference(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo(BindOpen.Extensions.References.IBdoExtensionReference(), System.Int32)
  name.vb: CopyTo(IBdoExtensionReference(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<IBdoExtensionReference>.CopyTo
    fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of IBdoExtensionReference).CopyTo
    fullName: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  commentId: M:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  parent: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(IBdoExtensionReference)
  nameWithType: ICollection<IBdoExtensionReference>.Remove(IBdoExtensionReference)
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  nameWithType.vb: ICollection(Of IBdoExtensionReference).Remove(IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Remove(BindOpen.Extensions.References.IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<IBdoExtensionReference>.Remove
    fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of IBdoExtensionReference).Remove
    fullName: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Count
  commentId: P:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.Count
  parent: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<IBdoExtensionReference>.Count
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.Count
  nameWithType.vb: ICollection(Of IBdoExtensionReference).Count
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).Count
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}.IsReadOnly
  parent: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<IBdoExtensionReference>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>.IsReadOnly
  nameWithType.vb: ICollection(Of IBdoExtensionReference).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference).IsReadOnly
- uid: System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<IBdoExtensionReference>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of IBdoExtensionReference).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of BindOpen.Extensions.References.IBdoExtensionReference).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<IBdoExtensionReference>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of IBdoExtensionReference).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of BindOpen.Extensions.References.IBdoExtensionReference).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddRuntime()
  nameWithType: BdoExtensionReferenceExtension.AddRuntime()
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime()
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  name: AddAssembly(String, String)
  nameWithType: BdoExtensionReferenceExtension.AddAssembly(String, String)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAssembly<T>()
  nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>()
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>()
  nameWithType.vb: BdoExtensionReferenceExtension.AddAssembly(Of T)()
  fullName.vb: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)()
  name.vb: AddAssembly(Of T)()
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
    name: AddAssembly<T>
    nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1
    name: AddAssembly(Of T)
    nameWithType: BdoExtensionReferenceExtension.AddAssembly(Of T)
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection.BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  parent: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  definition: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAllAssemblies()
  nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies()
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies()
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  commentId: M:System.Collections.Generic.IList`1.IndexOf(`0)
  isExternal: true
  name: IndexOf(T)
  nameWithType: IList<T>.IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  nameWithType.vb: IList(Of T).IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList<T>.IndexOf
    fullName: System.Collections.Generic.IList<T>.IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.IndexOf(`0)
    name: IndexOf
    nameWithType: IList(Of T).IndexOf
    fullName: System.Collections.Generic.IList(Of T).IndexOf
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.IList{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<IBdoExtensionReference>
  nameWithType: IList<IBdoExtensionReference>
  fullName: System.Collections.Generic.IList<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: IList(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IList(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: IList(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  commentId: M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  isExternal: true
  name: Insert(Int32, T)
  nameWithType: IList<T>.Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  nameWithType.vb: IList(Of T).Insert(Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList<T>.Insert
    fullName: System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
    name: Insert
    nameWithType: IList(Of T).Insert
    fullName: System.Collections.Generic.IList(Of T).Insert
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  commentId: M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  isExternal: true
  name: RemoveAt(Int32)
  nameWithType: IList<T>.RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  nameWithType.vb: IList(Of T).RemoveAt(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList<T>.RemoveAt
    fullName: System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
    name: RemoveAt
    nameWithType: IList(Of T).RemoveAt
    fullName: System.Collections.Generic.IList(Of T).RemoveAt
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  commentId: P:System.Collections.Generic.IList`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IList<T>.Item[Int32]
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  nameWithType.vb: IList(Of T).Item(Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList<T>.Item
    fullName: System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IList`1.Item(System.Int32)
    name: Item
    nameWithType: IList(Of T).Item
    fullName: System.Collections.Generic.IList(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.ICollection{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<IBdoExtensionReference>
  nameWithType: ICollection<IBdoExtensionReference>
  fullName: System.Collections.Generic.ICollection<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: ICollection(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.ICollection(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: ICollection(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  commentId: M:System.Collections.Generic.ICollection`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: ICollection<T>.Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  nameWithType.vb: ICollection(Of T).Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection<T>.Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    nameWithType: ICollection(Of T).Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}
  commentId: T:System.Collections.Generic.IEnumerable{BindOpen.Extensions.References.IBdoExtensionReference}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IBdoExtensionReference>
  nameWithType: IEnumerable<IBdoExtensionReference>
  fullName: System.Collections.Generic.IEnumerable<BindOpen.Extensions.References.IBdoExtensionReference>
  nameWithType.vb: IEnumerable(Of IBdoExtensionReference)
  fullName.vb: System.Collections.Generic.IEnumerable(Of BindOpen.Extensions.References.IBdoExtensionReference)
  name.vb: IEnumerable(Of IBdoExtensionReference)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddRuntime(IBdoExtensionReferenceCollection)
  nameWithType: BdoExtensionReferenceExtension.AddRuntime(IBdoExtensionReferenceCollection)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddRuntime
    nameWithType: BdoExtensionReferenceExtension.AddRuntime
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddRuntime
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension
  commentId: T:BindOpen.Extensions.References.BdoExtensionReferenceExtension
  parent: BindOpen.Extensions.References
  name: BdoExtensionReferenceExtension
  nameWithType: BdoExtensionReferenceExtension
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
  isExternal: true
  name: AddAssembly(IBdoExtensionReferenceCollection, String, String)
  nameWithType: BdoExtensionReferenceExtension.AddAssembly(IBdoExtensionReferenceCollection, String, String)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection, System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(BindOpen.Extensions.References.IBdoExtensionReferenceCollection,System.String,System.String)
    name: AddAssembly
    nameWithType: BdoExtensionReferenceExtension.AddAssembly
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAssembly<T>(IBdoExtensionReferenceCollection)
  nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>(IBdoExtensionReferenceCollection)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  nameWithType.vb: BdoExtensionReferenceExtension.AddAssembly(Of T)(IBdoExtensionReferenceCollection)
  fullName.vb: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name.vb: AddAssembly(Of T)(IBdoExtensionReferenceCollection)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAssembly<T>
    nameWithType: BdoExtensionReferenceExtension.AddAssembly<T>
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly``1(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAssembly(Of T)
    nameWithType: BdoExtensionReferenceExtension.AddAssembly(Of T)
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAssembly(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  commentId: M:BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  name: AddAllAssemblies(IBdoExtensionReferenceCollection)
  nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies(IBdoExtensionReferenceCollection)
  fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
  spec.csharp:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)
    name: AddAllAssemblies
    nameWithType: BdoExtensionReferenceExtension.AddAllAssemblies
    fullName: BindOpen.Extensions.References.BdoExtensionReferenceExtension.AddAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
    name: IBdoExtensionReferenceCollection
    nameWithType: IBdoExtensionReferenceCollection
    fullName: BindOpen.Extensions.References.IBdoExtensionReferenceCollection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
shouldSkipMarkup: true
