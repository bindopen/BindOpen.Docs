### YamlMime:ManagedReference
items:
- uid: BindOpen.System.Diagnostics.Events.EventKinds
  commentId: T:BindOpen.System.Diagnostics.Events.EventKinds
  id: EventKinds
  parent: BindOpen.System.Diagnostics.Events
  children:
  - BindOpen.System.Diagnostics.Events.EventKinds.Any
  - BindOpen.System.Diagnostics.Events.EventKinds.Checkpoint
  - BindOpen.System.Diagnostics.Events.EventKinds.Error
  - BindOpen.System.Diagnostics.Events.EventKinds.Exception
  - BindOpen.System.Diagnostics.Events.EventKinds.Message
  - BindOpen.System.Diagnostics.Events.EventKinds.None
  - BindOpen.System.Diagnostics.Events.EventKinds.Other
  - BindOpen.System.Diagnostics.Events.EventKinds.Warning
  langs:
  - csharp
  - vb
  name: EventKinds
  nameWithType: EventKinds
  fullName: BindOpen.System.Diagnostics.Events.EventKinds
  type: Enum
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: EventKinds
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 10
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nThis enumeration lists the possible event kinds.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      [Flags]

      public enum EventKinds
    content.vb: >-
      <Serializable>

      <Flags>

      Public Enum EventKinds
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.System.Diagnostics.Events.EventKinds.BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds)
  - BindOpen.System.Diagnostics.Events.EventKinds.BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  - type: System.FlagsAttribute
    ctor: System.FlagsAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: BindOpen.System.Diagnostics.Events.EventKinds.None
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.None
  id: None
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: None
  nameWithType: EventKinds.None
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.None
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: None
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 18
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nNone.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.Diagnostics.Events.EventKinds.Message
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.Message
  id: Message
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: EventKinds.Message
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.Message
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Message
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 23
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nMessage.\n"
  example: []
  syntax:
    content: Message = 1
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.Diagnostics.Events.EventKinds.Checkpoint
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.Checkpoint
  id: Checkpoint
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: Checkpoint
  nameWithType: EventKinds.Checkpoint
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.Checkpoint
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Checkpoint
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 28
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nCheckpoint.\n"
  example: []
  syntax:
    content: Checkpoint = 2
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.Diagnostics.Events.EventKinds.Warning
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.Warning
  id: Warning
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: Warning
  nameWithType: EventKinds.Warning
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.Warning
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Warning
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 33
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nWarning.\n"
  example: []
  syntax:
    content: Warning = 4
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.Diagnostics.Events.EventKinds.Error
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.Error
  id: Error
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: EventKinds.Error
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.Error
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Error
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 38
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nError.\n"
  example: []
  syntax:
    content: Error = 8
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.Diagnostics.Events.EventKinds.Exception
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.Exception
  id: Exception
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: EventKinds.Exception
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.Exception
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Exception
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 43
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nException.\n"
  example: []
  syntax:
    content: Exception = 16
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.Diagnostics.Events.EventKinds.Other
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.Other
  id: Other
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: Other
  nameWithType: EventKinds.Other
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.Other
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Other
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 48
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nOther.\n"
  example: []
  syntax:
    content: Other = 32
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.Diagnostics.Events.EventKinds.Any
  commentId: F:BindOpen.System.Diagnostics.Events.EventKinds.Any
  id: Any
  parent: BindOpen.System.Diagnostics.Events.EventKinds
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: EventKinds.Any
  fullName: BindOpen.System.Diagnostics.Events.EventKinds.Any
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Any
    path: ../src/BindOpen.Core/System/Diagnostics/Events/BdoEventKind.cs
    startLine: 53
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Events
  summary: "\nNone.\n"
  example: []
  syntax:
    content: Any = 63
    return:
      type: BindOpen.System.Diagnostics.Events.EventKinds
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.System.Diagnostics.Events
  commentId: N:BindOpen.System.Diagnostics.Events
  name: BindOpen.System.Diagnostics.Events
  nameWithType: BindOpen.System.Diagnostics.Events
  fullName: BindOpen.System.Diagnostics.Events
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.Events.EventKinds.BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds)
  commentId: M:BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  parent: BindOpen.System.Diagnostics.Events.EventKindExtension
  definition: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  name: Max(EventKinds)
  nameWithType: EventKindExtension.Max(EventKinds)
  fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds)
  spec.csharp:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds)
    name: Max
    nameWithType: EventKindExtension.Max
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds)
    name: Max
    nameWithType: EventKindExtension.Max
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.Events.EventKinds.BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds)
  commentId: M:BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  parent: BindOpen.System.Diagnostics.Events.EventKindExtension
  definition: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  name: IsGreaterThan(EventKinds)
  nameWithType: EventKindExtension.IsGreaterThan(EventKinds)
  fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds)
  spec.csharp:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds)
    name: IsGreaterThan
    nameWithType: EventKindExtension.IsGreaterThan
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds)
    name: IsGreaterThan
    nameWithType: EventKindExtension.IsGreaterThan
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  commentId: M:BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  name: Max(EventKinds, EventKinds)
  nameWithType: EventKindExtension.Max(EventKinds, EventKinds)
  fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds, BindOpen.System.Diagnostics.Events.EventKinds)
  spec.csharp:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
    name: Max
    nameWithType: EventKindExtension.Max
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.Max(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
    name: Max
    nameWithType: EventKindExtension.Max
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.Max
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.Events.EventKindExtension
  commentId: T:BindOpen.System.Diagnostics.Events.EventKindExtension
  parent: BindOpen.System.Diagnostics.Events
  name: EventKindExtension
  nameWithType: EventKindExtension
  fullName: BindOpen.System.Diagnostics.Events.EventKindExtension
- uid: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  commentId: M:BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
  name: IsGreaterThan(EventKinds, EventKinds)
  nameWithType: EventKindExtension.IsGreaterThan(EventKinds, EventKinds)
  fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds, BindOpen.System.Diagnostics.Events.EventKinds)
  spec.csharp:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
    name: IsGreaterThan
    nameWithType: EventKindExtension.IsGreaterThan
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan(BindOpen.System.Diagnostics.Events.EventKinds,BindOpen.System.Diagnostics.Events.EventKinds)
    name: IsGreaterThan
    nameWithType: EventKindExtension.IsGreaterThan
    fullName: BindOpen.System.Diagnostics.Events.EventKindExtension.IsGreaterThan
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.System.Diagnostics.Events.EventKinds
  commentId: T:BindOpen.System.Diagnostics.Events.EventKinds
  parent: BindOpen.System.Diagnostics.Events
  name: EventKinds
  nameWithType: EventKinds
  fullName: BindOpen.System.Diagnostics.Events.EventKinds
shouldSkipMarkup: true
