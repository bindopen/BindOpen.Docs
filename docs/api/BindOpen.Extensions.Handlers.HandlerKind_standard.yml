### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard
  commentId: T:BindOpen.Extensions.Handlers.HandlerKind_standard
  id: HandlerKind_standard
  parent: BindOpen.Extensions.Handlers
  children:
  - BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  - BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  - BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  - BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  - BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  - BindOpen.Extensions.Handlers.HandlerKind_standard.None
  - BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  - BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  - BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  - BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  - BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  langs:
  - csharp
  - vb
  name: HandlerKind_standard
  nameWithType: HandlerKind_standard
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
  type: Enum
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: HandlerKind_standard
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 9
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nThis enumeration lists all the possible kinds of the &apos;Standard&apos; handlers.\n"
  example: []
  syntax:
    content: public enum HandlerKind_standard
    content.vb: Public Enum HandlerKind_standard
  extensionMethods:
  - BindOpen.Extensions.Handlers.HandlerKind_standard.BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.None
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.None
  id: None
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: None
  nameWithType: HandlerKind_standard.None
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.None
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: None
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 14
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nNone.\n"
  example: []
  syntax:
    content: None = 0
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  id: Any
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: HandlerKind_standard.Any
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Any
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 19
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nAny.\n"
  example: []
  syntax:
    content: Any = 1
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  id: BdOS
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: BdOS
  nameWithType: HandlerKind_standard.BdOS
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdOS
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 24
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nBdO Script.\n"
  example: []
  syntax:
    content: BdOS = 2
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  id: DynamicDataContext
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: DynamicDataContext
  nameWithType: HandlerKind_standard.DynamicDataContext
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DynamicDataContext
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 29
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nDynamic data context.\n"
  example: []
  syntax:
    content: DynamicDataContext = 3
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  id: XmlFile
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: XmlFile
  nameWithType: HandlerKind_standard.XmlFile
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: XmlFile
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 34
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nXml file.\n"
  example: []
  syntax:
    content: XmlFile = 4
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  id: XmlFileReferenceInDatabase
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: XmlFileReferenceInDatabase
  nameWithType: HandlerKind_standard.XmlFileReferenceInDatabase
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: XmlFileReferenceInDatabase
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 39
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nXml file reference in database.\n"
  example: []
  syntax:
    content: XmlFileReferenceInDatabase = 5
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  id: TextFromFile
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextFromFile
  nameWithType: HandlerKind_standard.TextFromFile
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: TextFromFile
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 44
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nText from file.\n"
  example: []
  syntax:
    content: TextFromFile = 6
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  id: TextFileReferenceInDatabase
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextFileReferenceInDatabase
  nameWithType: HandlerKind_standard.TextFileReferenceInDatabase
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: TextFileReferenceInDatabase
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 49
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nText file reference in database.\n"
  example: []
  syntax:
    content: TextFileReferenceInDatabase = 7
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  id: Database
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: HandlerKind_standard.Database
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Database
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 54
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nDatabase.\n"
  example: []
  syntax:
    content: Database = 8
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  id: TextFromXmlString
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextFromXmlString
  nameWithType: HandlerKind_standard.TextFromXmlString
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: TextFromXmlString
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 59
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nXml String.\n"
  example: []
  syntax:
    content: TextFromXmlString = 9
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  id: TextString
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextString
  nameWithType: HandlerKind_standard.TextString
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: TextString
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 64
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nText String.\n"
  example: []
  syntax:
    content: TextString = 10
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  id: EmbedResource
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: EmbedResource
  nameWithType: HandlerKind_standard.EmbedResource
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: EmbedResource
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 69
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nEmbed resource\n"
  example: []
  syntax:
    content: EmbedResource = 11
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  id: WebService
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: WebService
  nameWithType: HandlerKind_standard.WebService
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WebService
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 74
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nWeb service\n"
  example: []
  syntax:
    content: WebService = 12
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  id: ReferenceSourceId
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: ReferenceSourceId
  nameWithType: HandlerKind_standard.ReferenceSourceId
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ReferenceSourceId
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 79
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nReference source ID\n"
  example: []
  syntax:
    content: ReferenceSourceId = 13
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  id: SourceId
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: SourceId
  nameWithType: HandlerKind_standard.SourceId
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SourceId
    path: ../src/BindOpen.Runtime/Extensions/Handlers/HandlerKind_standard.cs
    startLine: 84
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nSource ID\n"
  example: []
  syntax:
    content: SourceId = 14
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.Extensions.Handlers
  commentId: N:BindOpen.Extensions.Handlers
  name: BindOpen.Extensions.Handlers
  nameWithType: BindOpen.Extensions.Handlers
  fullName: BindOpen.Extensions.Handlers
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  commentId: M:BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  parent: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
  definition: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  name: GetUniqueName()
  nameWithType: HandlerUniqueName_standardExtension.GetUniqueName()
  fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName()
  spec.csharp:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  commentId: M:BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  name: GetUniqueName(HandlerKind_standard)
  nameWithType: HandlerUniqueName_standardExtension.GetUniqueName(HandlerKind_standard)
  fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  spec.csharp:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Handlers.HandlerKind_standard
    name: HandlerKind_standard
    nameWithType: HandlerKind_standard
    fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Handlers.HandlerKind_standard
    name: HandlerKind_standard
    nameWithType: HandlerKind_standard
    fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
  commentId: T:BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
  parent: BindOpen.Extensions.Handlers
  name: HandlerUniqueName_standardExtension
  nameWithType: HandlerUniqueName_standardExtension
  fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard
  commentId: T:BindOpen.Extensions.Handlers.HandlerKind_standard
  parent: BindOpen.Extensions.Handlers
  name: HandlerKind_standard
  nameWithType: HandlerKind_standard
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
shouldSkipMarkup: true
