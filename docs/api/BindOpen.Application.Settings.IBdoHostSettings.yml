### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Settings.IBdoHostSettings
  commentId: T:BindOpen.Application.Settings.IBdoHostSettings
  id: IBdoHostSettings
  parent: BindOpen.Application.Settings
  children:
  - BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath
  - BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId
  - BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName
  - BindOpen.Application.Settings.IBdoHostSettings.Configuration
  - BindOpen.Application.Settings.IBdoHostSettings.Environment
  - BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel
  - BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired
  - BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath
  - BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber
  - BindOpen.Application.Settings.IBdoHostSettings.LogsFileName
  - BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath
  - BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath
  - BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath
  - BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath
  - BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile(System.String,System.Nullable{System.Boolean})
  - BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired(System.Nullable{System.Boolean})
  - BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder(System.String)
  - BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber(System.Int32)
  - BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName(System.String)
  - BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder(System.String)
  - BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder(System.String)
  - BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder(System.String)
  - BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder(System.String)
  langs:
  - csharp
  - vb
  name: IBdoHostSettings
  nameWithType: IBdoHostSettings
  fullName: BindOpen.Application.Settings.IBdoHostSettings
  type: Interface
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IBdoHostSettings
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 8
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: 'public interface IBdoHostSettings : ITBdoSettings<BdoHostConfiguration>, IBdoSettings, IDataItem, ICloneable, IDisposable, IReferenced'
    content.vb: >-
      Public Interface IBdoHostSettings
          Inherits ITBdoSettings(Of BdoHostConfiguration)
  inheritedMembers:
  - BindOpen.Application.Settings.IBdoSettings.BdoScope
  - BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
  - BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  - BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
  - BindOpen.Application.Settings.IBdoSettings.GetProperty``1({T},System.String)
  - BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
  - BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
  - BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  - BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.Clone``1
  - System.ICloneable.Clone
  - System.IDisposable.Dispose
  - BindOpen.Data.Items.IReferenced.Key
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Application.Settings.IBdoHostSettings.Configuration
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.Configuration
  id: Configuration
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: IBdoHostSettings.Configuration
  fullName: BindOpen.Application.Settings.IBdoHostSettings.Configuration
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Configuration
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 13
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: BdoHostConfiguration Configuration { get; }
    parameters: []
    return:
      type: BindOpen.Application.Configuration.BdoHostConfiguration
    content.vb: ReadOnly Property Configuration As BdoHostConfiguration
  overload: BindOpen.Application.Settings.IBdoHostSettings.Configuration*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId
  id: ApplicationInstanceId
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: ApplicationInstanceId
  nameWithType: IBdoHostSettings.ApplicationInstanceId
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ApplicationInstanceId
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 18
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string ApplicationInstanceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ApplicationInstanceId As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName
  id: ApplicationInstanceName
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: ApplicationInstanceName
  nameWithType: IBdoHostSettings.ApplicationInstanceName
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ApplicationInstanceName
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 23
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string ApplicationInstanceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ApplicationInstanceName As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Settings.IBdoHostSettings.Environment
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.Environment
  id: Environment
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: Environment
  nameWithType: IBdoHostSettings.Environment
  fullName: BindOpen.Application.Settings.IBdoHostSettings.Environment
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Environment
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 28
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string Environment { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Environment As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.Environment*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel
  id: ExecutionLevel
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: ExecutionLevel
  nameWithType: IBdoHostSettings.ExecutionLevel
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ExecutionLevel
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 33
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: ApplicationExecutionLevel ExecutionLevel { get; set; }
    parameters: []
    return:
      type: BindOpen.System.ApplicationExecutionLevel
    content.vb: Property ExecutionLevel As ApplicationExecutionLevel
  overload: BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath
  id: RuntimeFolderPath
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: RuntimeFolderPath
  nameWithType: IBdoHostSettings.RuntimeFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: RuntimeFolderPath
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 40
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string RuntimeFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property RuntimeFolderPath As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath
  id: AppConfigurationFolderPath
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: AppConfigurationFolderPath
  nameWithType: IBdoHostSettings.AppConfigurationFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AppConfigurationFolderPath
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 45
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string AppConfigurationFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property AppConfigurationFolderPath As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired
  id: IsAppConfigFileRequired
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: IsAppConfigFileRequired
  nameWithType: IBdoHostSettings.IsAppConfigFileRequired
  fullName: BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsAppConfigFileRequired
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 51
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nIndicates whether the application configuration file must exist.\n"
  remarks: If it does not exist then an exception is thrown.
  example: []
  syntax:
    content: bool? IsAppConfigFileRequired { get; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: ReadOnly Property IsAppConfigFileRequired As Boolean?
  overload: BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath
  id: LibraryFolderPath
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: LibraryFolderPath
  nameWithType: IBdoHostSettings.LibraryFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LibraryFolderPath
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 56
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string LibraryFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property LibraryFolderPath As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath
  id: LogsFolderPath
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: LogsFolderPath
  nameWithType: IBdoHostSettings.LogsFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LogsFolderPath
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 61
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string LogsFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property LogsFolderPath As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.LogsFileName
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.LogsFileName
  id: LogsFileName
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: LogsFileName
  nameWithType: IBdoHostSettings.LogsFileName
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LogsFileName
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LogsFileName
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 66
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string LogsFileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property LogsFileName As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.LogsFileName*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath
  id: PackagesFolderPath
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: PackagesFolderPath
  nameWithType: IBdoHostSettings.PackagesFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: PackagesFolderPath
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 71
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string PackagesFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property PackagesFolderPath As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath
  id: ProjectsFolderPath
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: ProjectsFolderPath
  nameWithType: IBdoHostSettings.ProjectsFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ProjectsFolderPath
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 76
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: string ProjectsFolderPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property ProjectsFolderPath As String
  overload: BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber
  commentId: P:BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber
  id: LogsExpirationDayNumber
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: LogsExpirationDayNumber
  nameWithType: IBdoHostSettings.LogsExpirationDayNumber
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LogsExpirationDayNumber
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 81
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\n\n"
  example: []
  syntax:
    content: int LogsExpirationDayNumber { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property LogsExpirationDayNumber As Integer
  overload: BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder(System.String)
  id: WithRuntimeFolder(System.String)
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithRuntimeFolder(String)
  nameWithType: IBdoHostSettings.WithRuntimeFolder(String)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithRuntimeFolder
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 88
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSet the runtime folder.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithRuntimeFolder(string runtimeFolderPath)
    parameters:
    - id: runtimeFolderPath
      type: System.String
      description: The runtime folder path.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
      description: Returns the host option.
    content.vb: Function WithRuntimeFolder(runtimeFolderPath As String) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder*
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile(System.String,System.Nullable{System.Boolean})
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile(System.String,System.Nullable{System.Boolean})
  id: WithAppConfigFile(System.String,System.Nullable{System.Boolean})
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithAppConfigFile(String, Nullable<Boolean>)
  nameWithType: IBdoHostSettings.WithAppConfigFile(String, Nullable<Boolean>)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile(System.String, System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithAppConfigFile
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 96
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSet the application configuration file.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithAppConfigFile(string configFolderPath, bool? isRequired)
    parameters:
    - id: configFolderPath
      type: System.String
      description: The application configuration folder path.
    - id: isRequired
      type: System.Nullable{System.Boolean}
      description: Indicates whether the application configuration file is required.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
      description: Returns the host option.
    content.vb: Function WithAppConfigFile(configFolderPath As String, isRequired As Boolean?) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile*
  nameWithType.vb: IBdoHostSettings.WithAppConfigFile(String, Nullable(Of Boolean))
  fullName.vb: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile(System.String, System.Nullable(Of System.Boolean))
  name.vb: WithAppConfigFile(String, Nullable(Of Boolean))
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired(System.Nullable{System.Boolean})
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired(System.Nullable{System.Boolean})
  id: WithAppConfigFileRequired(System.Nullable{System.Boolean})
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithAppConfigFileRequired(Nullable<Boolean>)
  nameWithType: IBdoHostSettings.WithAppConfigFileRequired(Nullable<Boolean>)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired(System.Nullable<System.Boolean>)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithAppConfigFileRequired
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 103
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSet the application configuration file.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithAppConfigFileRequired(bool? isRequired)
    parameters:
    - id: isRequired
      type: System.Nullable{System.Boolean}
      description: Indicates whether the application configuration file is required.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
      description: Returns the host option.
    content.vb: Function WithAppConfigFileRequired(isRequired As Boolean?) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired*
  nameWithType.vb: IBdoHostSettings.WithAppConfigFileRequired(Nullable(Of Boolean))
  fullName.vb: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired(System.Nullable(Of System.Boolean))
  name.vb: WithAppConfigFileRequired(Nullable(Of Boolean))
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder(System.String)
  id: WithLogsFolder(System.String)
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithLogsFolder(String)
  nameWithType: IBdoHostSettings.WithLogsFolder(String)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithLogsFolder
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 110
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSet the library folder.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithLogsFolder(string logsFolderPath)
    parameters:
    - id: logsFolderPath
      type: System.String
      description: The logs folder path.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
      description: Returns the host option.
    content.vb: Function WithLogsFolder(logsFolderPath As String) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder*
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder(System.String)
  id: WithLibraryFolder(System.String)
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithLibraryFolder(String)
  nameWithType: IBdoHostSettings.WithLibraryFolder(String)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithLibraryFolder
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 117
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSet the library folder.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithLibraryFolder(string libraryFolderPath)
    parameters:
    - id: libraryFolderPath
      type: System.String
      description: The library folder path.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
      description: Returns the host option.
    content.vb: Function WithLibraryFolder(libraryFolderPath As String) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder*
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder(System.String)
  id: WithPackagesFolder(System.String)
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithPackagesFolder(String)
  nameWithType: IBdoHostSettings.WithPackagesFolder(String)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithPackagesFolder
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 124
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSet the packages folder.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithPackagesFolder(string packagesFolderPath)
    parameters:
    - id: packagesFolderPath
      type: System.String
      description: The packages folder path.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
      description: Returns the host option.
    content.vb: Function WithPackagesFolder(packagesFolderPath As String) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder*
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder(System.String)
  id: WithProjectsFolder(System.String)
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithProjectsFolder(String)
  nameWithType: IBdoHostSettings.WithProjectsFolder(String)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithProjectsFolder
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 131
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSet the projects folder.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithProjectsFolder(string projectsFolderPath = null)
    parameters:
    - id: projectsFolderPath
      type: System.String
      description: The projects folder path.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
      description: Returns the host option.
    content.vb: Function WithProjectsFolder(projectsFolderPath As String = Nothing) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder*
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName(System.String)
  id: WithLogsFileName(System.String)
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithLogsFileName(String)
  nameWithType: IBdoHostSettings.WithLogsFileName(String)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithLogsFileName
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 137
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSets the log file name.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithLogsFileName(string logFileName)
    parameters:
    - id: logFileName
      type: System.String
      description: The log file name to consider.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
    content.vb: Function WithLogsFileName(logFileName As String) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName*
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber(System.Int32)
  commentId: M:BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber(System.Int32)
  id: WithLogsExpirationDayNumber(System.Int32)
  parent: BindOpen.Application.Settings.IBdoHostSettings
  langs:
  - csharp
  - vb
  name: WithLogsExpirationDayNumber(Int32)
  nameWithType: IBdoHostSettings.WithLogsExpirationDayNumber(Int32)
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber(System.Int32)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WithLogsExpirationDayNumber
    path: ../src/BindOpen.Runtime/Application/Settings/Hosts/Interfaces/IBdoHostSettings.cs
    startLine: 143
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSets the expiration day number for logs.\n"
  example: []
  syntax:
    content: IBdoHostSettings WithLogsExpirationDayNumber(int dayNumber)
    parameters:
    - id: dayNumber
      type: System.Int32
      description: The expiration day number to consider.
    return:
      type: BindOpen.Application.Settings.IBdoHostSettings
    content.vb: Function WithLogsExpirationDayNumber(dayNumber As Integer) As IBdoHostSettings
  overload: BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber*
references:
- uid: BindOpen.Application.Settings
  commentId: N:BindOpen.Application.Settings
  name: BindOpen.Application.Settings
  nameWithType: BindOpen.Application.Settings
  fullName: BindOpen.Application.Settings
- uid: BindOpen.Application.Settings.IBdoSettings.BdoScope
  commentId: P:BindOpen.Application.Settings.IBdoSettings.BdoScope
  parent: BindOpen.Application.Settings.IBdoSettings
  name: BdoScope
  nameWithType: IBdoSettings.BdoScope
  fullName: BindOpen.Application.Settings.IBdoSettings.BdoScope
- uid: BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: Get<T>(String)
  nameWithType: IBdoSettings.Get<T>(String)
  fullName: BindOpen.Application.Settings.IBdoSettings.Get<T>(System.String)
  nameWithType.vb: IBdoSettings.Get(Of T)(String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
    name: Get<T>
    nameWithType: IBdoSettings.Get<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.Get<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
    name: Get(Of T)
    nameWithType: IBdoSettings.Get(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.Get(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: Get(String)
  nameWithType: IBdoSettings.Get(String)
  fullName: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
    name: Get
    nameWithType: IBdoSettings.Get
    fullName: BindOpen.Application.Settings.IBdoSettings.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
    name: Get
    nameWithType: IBdoSettings.Get
    fullName: BindOpen.Application.Settings.IBdoSettings.Get
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IBdoSettings.GetProperty<T>(String)
  fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>(System.String)
  nameWithType.vb: IBdoSettings.GetProperty(Of T)(String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IBdoSettings.GetProperty<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IBdoSettings.GetProperty(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1({T},System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  definition: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  name: GetProperty<T>(T, String)
  nameWithType: IBdoSettings.GetProperty<T>(T, String)
  fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>(T, System.String)
  nameWithType.vb: IBdoSettings.GetProperty(Of T)(T, String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)(T, System.String)
  name.vb: GetProperty(Of T)(T, String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty<T>
    nameWithType: IBdoSettings.GetProperty<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty(Of T)
    nameWithType: IBdoSettings.GetProperty(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: Set(String, Object)
  nameWithType: IBdoSettings.Set(String, Object)
  fullName: BindOpen.Application.Settings.IBdoSettings.Set(System.String, System.Object)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
    name: Set
    nameWithType: IBdoSettings.Set
    fullName: BindOpen.Application.Settings.IBdoSettings.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
    name: Set
    nameWithType: IBdoSettings.Set
    fullName: BindOpen.Application.Settings.IBdoSettings.Set
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: SetProperty(Object, String)
  nameWithType: IBdoSettings.SetProperty(Object, String)
  fullName: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
    name: SetProperty
    nameWithType: IBdoSettings.SetProperty
    fullName: BindOpen.Application.Settings.IBdoSettings.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
    name: SetProperty
    nameWithType: IBdoSettings.SetProperty
    fullName: BindOpen.Application.Settings.IBdoSettings.SetProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: UpdateFromFile(String, SpecificationLevels[], IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  nameWithType: IBdoSettings.UpdateFromFile(String, SpecificationLevels[], IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  fullName: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String, BindOpen.Data.Common.SpecificationLevels[], BindOpen.Data.Elements.IDataElementSpecSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, System.Xml.Schema.XmlSchemaSet)
  nameWithType.vb: IBdoSettings.UpdateFromFile(String, SpecificationLevels(), IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String, BindOpen.Data.Common.SpecificationLevels(), BindOpen.Data.Elements.IDataElementSpecSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, System.Xml.Schema.XmlSchemaSet)
  name.vb: UpdateFromFile(String, SpecificationLevels(), IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
    name: UpdateFromFile
    nameWithType: IBdoSettings.UpdateFromFile
    fullName: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSpecSet
    name: IDataElementSpecSet
    nameWithType: IDataElementSpecSet
    fullName: BindOpen.Data.Elements.IDataElementSpecSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.Schema.XmlSchemaSet
    name: XmlSchemaSet
    nameWithType: XmlSchemaSet
    fullName: System.Xml.Schema.XmlSchemaSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
    name: UpdateFromFile
    nameWithType: IBdoSettings.UpdateFromFile
    fullName: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSpecSet
    name: IDataElementSpecSet
    nameWithType: IDataElementSpecSet
    fullName: BindOpen.Data.Elements.IDataElementSpecSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.Schema.XmlSchemaSet
    name: XmlSchemaSet
    nameWithType: XmlSchemaSet
    fullName: System.Xml.Schema.XmlSchemaSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: IDataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: IDataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: IDataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: IDataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Clone``1
  commentId: M:BindOpen.Data.Items.IDataItem.Clone``1
  parent: BindOpen.Data.Items.IDataItem
  name: Clone<T>()
  nameWithType: IDataItem.Clone<T>()
  fullName: BindOpen.Data.Items.IDataItem.Clone<T>()
  nameWithType.vb: IDataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.IDataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone<T>
    nameWithType: IDataItem.Clone<T>
    fullName: BindOpen.Data.Items.IDataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone(Of T)
    nameWithType: IDataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IReferenced.Key
  commentId: M:BindOpen.Data.Items.IReferenced.Key
  parent: BindOpen.Data.Items.IReferenced
  name: Key()
  nameWithType: IReferenced.Key()
  fullName: BindOpen.Data.Items.IReferenced.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings
  commentId: T:BindOpen.Application.Settings.IBdoSettings
  parent: BindOpen.Application.Settings
  name: IBdoSettings
  nameWithType: IBdoSettings
  fullName: BindOpen.Application.Settings.IBdoSettings
- uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  isExternal: true
  name: GetProperty<T>(T, String)
  nameWithType: IBdoSettings.GetProperty<T>(T, String)
  fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>(T, System.String)
  nameWithType.vb: IBdoSettings.GetProperty(Of T)(T, String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)(T, System.String)
  name.vb: GetProperty(Of T)(T, String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty<T>
    nameWithType: IBdoSettings.GetProperty<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty(Of T)
    nameWithType: IBdoSettings.GetProperty(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Application.Settings.IBdoHostSettings.Configuration*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.Configuration
  name: Configuration
  nameWithType: IBdoHostSettings.Configuration
  fullName: BindOpen.Application.Settings.IBdoHostSettings.Configuration
- uid: BindOpen.Application.Configuration.BdoHostConfiguration
  commentId: T:BindOpen.Application.Configuration.BdoHostConfiguration
  parent: BindOpen.Application.Configuration
  name: BdoHostConfiguration
  nameWithType: BdoHostConfiguration
  fullName: BindOpen.Application.Configuration.BdoHostConfiguration
- uid: BindOpen.Application.Configuration
  commentId: N:BindOpen.Application.Configuration
  name: BindOpen.Application.Configuration
  nameWithType: BindOpen.Application.Configuration
  fullName: BindOpen.Application.Configuration
- uid: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId
  name: ApplicationInstanceId
  nameWithType: IBdoHostSettings.ApplicationInstanceId
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName
  name: ApplicationInstanceName
  nameWithType: IBdoHostSettings.ApplicationInstanceName
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ApplicationInstanceName
- uid: BindOpen.Application.Settings.IBdoHostSettings.Environment*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.Environment
  name: Environment
  nameWithType: IBdoHostSettings.Environment
  fullName: BindOpen.Application.Settings.IBdoHostSettings.Environment
- uid: BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel
  name: ExecutionLevel
  nameWithType: IBdoHostSettings.ExecutionLevel
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ExecutionLevel
- uid: BindOpen.System.ApplicationExecutionLevel
  commentId: T:BindOpen.System.ApplicationExecutionLevel
  parent: BindOpen.System
  name: ApplicationExecutionLevel
  nameWithType: ApplicationExecutionLevel
  fullName: BindOpen.System.ApplicationExecutionLevel
- uid: BindOpen.System
  commentId: N:BindOpen.System
  name: BindOpen.System
  nameWithType: BindOpen.System
  fullName: BindOpen.System
- uid: BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath
  name: RuntimeFolderPath
  nameWithType: IBdoHostSettings.RuntimeFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.RuntimeFolderPath
- uid: BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath
  name: AppConfigurationFolderPath
  nameWithType: IBdoHostSettings.AppConfigurationFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.AppConfigurationFolderPath
- uid: BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired
  name: IsAppConfigFileRequired
  nameWithType: IBdoHostSettings.IsAppConfigFileRequired
  fullName: BindOpen.Application.Settings.IBdoHostSettings.IsAppConfigFileRequired
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath
  name: LibraryFolderPath
  nameWithType: IBdoHostSettings.LibraryFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LibraryFolderPath
- uid: BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath
  name: LogsFolderPath
  nameWithType: IBdoHostSettings.LogsFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LogsFolderPath
- uid: BindOpen.Application.Settings.IBdoHostSettings.LogsFileName*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.LogsFileName
  name: LogsFileName
  nameWithType: IBdoHostSettings.LogsFileName
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LogsFileName
- uid: BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath
  name: PackagesFolderPath
  nameWithType: IBdoHostSettings.PackagesFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.PackagesFolderPath
- uid: BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath
  name: ProjectsFolderPath
  nameWithType: IBdoHostSettings.ProjectsFolderPath
  fullName: BindOpen.Application.Settings.IBdoHostSettings.ProjectsFolderPath
- uid: BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber
  name: LogsExpirationDayNumber
  nameWithType: IBdoHostSettings.LogsExpirationDayNumber
  fullName: BindOpen.Application.Settings.IBdoHostSettings.LogsExpirationDayNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder
  name: WithRuntimeFolder
  nameWithType: IBdoHostSettings.WithRuntimeFolder
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithRuntimeFolder
- uid: BindOpen.Application.Settings.IBdoHostSettings
  commentId: T:BindOpen.Application.Settings.IBdoHostSettings
  parent: BindOpen.Application.Settings
  name: IBdoHostSettings
  nameWithType: IBdoHostSettings
  fullName: BindOpen.Application.Settings.IBdoHostSettings
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile
  name: WithAppConfigFile
  nameWithType: IBdoHostSettings.WithAppConfigFile
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFile
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired
  name: WithAppConfigFileRequired
  nameWithType: IBdoHostSettings.WithAppConfigFileRequired
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithAppConfigFileRequired
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder
  name: WithLogsFolder
  nameWithType: IBdoHostSettings.WithLogsFolder
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFolder
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder
  name: WithLibraryFolder
  nameWithType: IBdoHostSettings.WithLibraryFolder
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLibraryFolder
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder
  name: WithPackagesFolder
  nameWithType: IBdoHostSettings.WithPackagesFolder
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithPackagesFolder
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder
  name: WithProjectsFolder
  nameWithType: IBdoHostSettings.WithProjectsFolder
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithProjectsFolder
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName
  name: WithLogsFileName
  nameWithType: IBdoHostSettings.WithLogsFileName
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLogsFileName
- uid: BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber*
  commentId: Overload:BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber
  name: WithLogsExpirationDayNumber
  nameWithType: IBdoHostSettings.WithLogsExpirationDayNumber
  fullName: BindOpen.Application.Settings.IBdoHostSettings.WithLogsExpirationDayNumber
shouldSkipMarkup: true
