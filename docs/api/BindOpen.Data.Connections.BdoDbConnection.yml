### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Connections.BdoDbConnection
  commentId: T:BindOpen.Data.Connections.BdoDbConnection
  id: BdoDbConnection
  parent: BindOpen.Data.Connections
  children:
  - BindOpen.Data.Connections.BdoDbConnection.#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)
  - BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  - BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  - BindOpen.Data.Connections.BdoDbConnection.Connect
  - BindOpen.Data.Connections.BdoDbConnection.Connector
  - BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  - BindOpen.Data.Connections.BdoDbConnection.Database
  - BindOpen.Data.Connections.BdoDbConnection.Disconnect
  - BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  - BindOpen.Data.Connections.BdoDbConnection.Native
  - BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ChangeDatabase(System.String)
  - BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Close
  - BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ConnectionString
  - BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Open
  langs:
  - csharp
  - vb
  name: BdoDbConnection
  nameWithType: BdoDbConnection
  fullName: BindOpen.Data.Connections.BdoDbConnection
  type: Class
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: BdoDbConnection
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 11
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nThis class represents a database connection.\n"
  example: []
  syntax:
    content: 'public class BdoDbConnection : BdoConnection, IDataItem, ICloneable, IBdoDbConnection, IBdoConnection, IDbConnection, IDisposable'
    content.vb: >-
      Public Class BdoDbConnection
          Inherits BdoConnection
          Implements IDataItem, ICloneable, IBdoDbConnection, IBdoConnection, IDbConnection, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Connections.BdoConnection
  implements:
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - BindOpen.Data.Connections.IBdoDbConnection
  - BindOpen.Data.Connections.IBdoConnection
  - System.Data.IDbConnection
  - System.IDisposable
  inheritedMembers:
  - BindOpen.Data.Connections.BdoConnection._connector
  - BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  - BindOpen.Data.Connections.BdoConnection.ConnectionString
  - BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
  - BindOpen.Data.Connections.BdoConnection.State
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - System.Data.IDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Connections.BdoDbConnection.Connector
  commentId: P:BindOpen.Data.Connections.BdoDbConnection.Connector
  id: Connector
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Connector
  nameWithType: BdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connector
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Connector
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 35
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nThe connector of this instance.\n"
  example: []
  syntax:
    content: public IBdoDbConnector Connector { get; }
    parameters: []
    return:
      type: BindOpen.Extensions.Connectors.IBdoDbConnector
    content.vb: Public ReadOnly Property Connector As IBdoDbConnector
  overload: BindOpen.Data.Connections.BdoDbConnection.Connector*
  implements:
  - BindOpen.Data.Connections.IBdoDbConnection.Connector
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Connections.BdoDbConnection.Native
  commentId: P:BindOpen.Data.Connections.BdoDbConnection.Native
  id: Native
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Native
  nameWithType: BdoDbConnection.Native
  fullName: BindOpen.Data.Connections.BdoDbConnection.Native
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Native
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 42
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nGets the .NET database connection of this instance.\n"
  example: []
  syntax:
    content: public IDbConnection Native { get; }
    parameters: []
    return:
      type: System.Data.IDbConnection
      description: Returns the connection of this instance.
    content.vb: Public ReadOnly Property Native As IDbConnection
  overload: BindOpen.Data.Connections.BdoDbConnection.Native*
  implements:
  - BindOpen.Data.Connections.IBdoDbConnection.Native
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Connections.BdoDbConnection.Database
  commentId: P:BindOpen.Data.Connections.BdoDbConnection.Database
  id: Database
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: BdoDbConnection.Database
  fullName: BindOpen.Data.Connections.BdoDbConnection.Database
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Database
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 48
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nThe name of the database of this instance.\n"
  example: []
  syntax:
    content: public string Database { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Database As String
  overload: BindOpen.Data.Connections.BdoDbConnection.Database*
  implements:
  - System.Data.IDbConnection.Database
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ConnectionString
  commentId: P:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ConnectionString
  id: System#Data#IDbConnection#ConnectionString
  isEii: true
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: IDbConnection.ConnectionString
  nameWithType: BdoDbConnection.IDbConnection.ConnectionString
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.ConnectionString
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: System.Data.IDbConnection.ConnectionString
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 50
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  syntax:
    content: string IDbConnection.ConnectionString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly WriteOnly Property System.Data.IDbConnection.ConnectionString As String Implements IDbConnection.ConnectionString
  overload: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ConnectionString*
  implements:
  - System.Data.IDbConnection.ConnectionString
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.ConnectionString
  modifiers.csharp:
  - get
  - set
  name.vb: System.Data.IDbConnection.ConnectionString
- uid: BindOpen.Data.Connections.BdoDbConnection.#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)
  id: '#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)'
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: BdoDbConnection(BdoDbConnector, IDbConnection)
  nameWithType: BdoDbConnection.BdoDbConnection(BdoDbConnector, IDbConnection)
  fullName: BindOpen.Data.Connections.BdoDbConnection.BdoDbConnection(BindOpen.Extensions.Connectors.BdoDbConnector, System.Data.IDbConnection)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: .ctor
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 65
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nInstantiates a new instance of the BdoDbConnection class.\n"
  example: []
  syntax:
    content: public BdoDbConnection(BdoDbConnector connector, IDbConnection nativeConnection)
    parameters:
    - id: connector
      type: BindOpen.Extensions.Connectors.BdoDbConnector
      description: The connector to consider.
    - id: nativeConnection
      type: System.Data.IDbConnection
      description: The native connection to consider.
    content.vb: Public Sub New(connector As BdoDbConnector, nativeConnection As IDbConnection)
  overload: BindOpen.Data.Connections.BdoDbConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: ChangeDatabase(String)
  nameWithType: BdoDbConnection.ChangeDatabase(String)
  fullName: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: ChangeDatabase
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 84
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nChanges the current database .\n"
  example: []
  syntax:
    content: public IBdoLog ChangeDatabase(string databaseName)
    parameters:
    - id: databaseName
      type: System.String
      description: The name of the database to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Function ChangeDatabase(databaseName As String) As IBdoLog
  overload: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BdoDbConnection.Dispose(Boolean)
  fullName: BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Dispose
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 110
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nDisposes this instance. \n"
  example: []
  syntax:
    content: protected override void Dispose(bool isDisposing)
    parameters:
    - id: isDisposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(isDisposing As Boolean)
  overridden: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  overload: BindOpen.Data.Connections.BdoDbConnection.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: BindOpen.Data.Connections.BdoDbConnection.Connect
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.Connect
  id: Connect
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: BdoDbConnection.Connect()
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connect()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Connect
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 132
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nConnects this instance.\n"
  example: []
  syntax:
    content: public override IBdoLog Connect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Connect As IBdoLog
  overridden: BindOpen.Data.Connections.BdoConnection.Connect
  overload: BindOpen.Data.Connections.BdoDbConnection.Connect*
  implements:
  - BindOpen.Data.Connections.IBdoConnection.Connect
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoDbConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.Disconnect
  id: Disconnect
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: BdoDbConnection.Disconnect()
  fullName: BindOpen.Data.Connections.BdoDbConnection.Disconnect()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Disconnect
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 151
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nDisconnects this instance.\n"
  example: []
  syntax:
    content: public override IBdoLog Disconnect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Disconnect As IBdoLog
  overridden: BindOpen.Data.Connections.BdoConnection.Disconnect
  overload: BindOpen.Data.Connections.BdoDbConnection.Disconnect*
  implements:
  - BindOpen.Data.Connections.IBdoConnection.Disconnect
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  id: BeginTransaction
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  nameWithType: BdoDbConnection.BeginTransaction()
  fullName: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: BeginTransaction
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 170
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nBegins transaction.\n"
  example: []
  syntax:
    content: public IDbTransaction BeginTransaction()
    return:
      type: System.Data.IDbTransaction
      description: Returns the created transaction.
    content.vb: Public Function BeginTransaction As IDbTransaction
  overload: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction*
  implements:
  - System.Data.IDbConnection.BeginTransaction
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction(IsolationLevel)
  nameWithType: BdoDbConnection.BeginTransaction(IsolationLevel)
  fullName: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: BeginTransaction
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 180
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nBegins transaction.\n"
  example: []
  syntax:
    content: public IDbTransaction BeginTransaction(IsolationLevel il)
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: The isolation level to cosnider.
    return:
      type: System.Data.IDbTransaction
      description: Returns the created transaction.
    content.vb: Public Function BeginTransaction(il As IsolationLevel) As IDbTransaction
  overload: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction*
  implements:
  - System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ChangeDatabase(System.String)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ChangeDatabase(System.String)
  id: System#Data#IDbConnection#ChangeDatabase(System.String)
  isEii: true
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: IDbConnection.ChangeDatabase(String)
  nameWithType: BdoDbConnection.IDbConnection.ChangeDatabase(String)
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.ChangeDatabase(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: System.Data.IDbConnection.ChangeDatabase
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 189
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nChanges database.\n"
  example: []
  syntax:
    content: void IDbConnection.ChangeDatabase(string databaseName)
    parameters:
    - id: databaseName
      type: System.String
      description: The name of the database to consider.
    content.vb: Sub System.Data.IDbConnection.ChangeDatabase(databaseName As String) Implements IDbConnection.ChangeDatabase
  overload: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ChangeDatabase*
  implements:
  - System.Data.IDbConnection.ChangeDatabase(System.String)
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.ChangeDatabase(String)
  name.vb: System.Data.IDbConnection.ChangeDatabase(String)
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Close
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Close
  id: System#Data#IDbConnection#Close
  isEii: true
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: IDbConnection.Close()
  nameWithType: BdoDbConnection.IDbConnection.Close()
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.Close()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: System.Data.IDbConnection.Close
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 194
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  syntax:
    content: void IDbConnection.Close()
    content.vb: Sub System.Data.IDbConnection.Close Implements IDbConnection.Close
  overload: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Close*
  implements:
  - System.Data.IDbConnection.Close
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.Close()
  name.vb: System.Data.IDbConnection.Close()
- uid: BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  id: CreateCommand
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: CreateCommand()
  nameWithType: BdoDbConnection.CreateCommand()
  fullName: BindOpen.Data.Connections.BdoDbConnection.CreateCommand()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: CreateCommand
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 199
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  syntax:
    content: public IDbCommand CreateCommand()
    return:
      type: System.Data.IDbCommand
    content.vb: Public Function CreateCommand As IDbCommand
  overload: BindOpen.Data.Connections.BdoDbConnection.CreateCommand*
  implements:
  - System.Data.IDbConnection.CreateCommand
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Open
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Open
  id: System#Data#IDbConnection#Open
  isEii: true
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: IDbConnection.Open()
  nameWithType: BdoDbConnection.IDbConnection.Open()
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.Open()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: System.Data.IDbConnection.Open
    path: ../src/BindOpen.Databases/Data/Connections/BdoDbConnection.cs
    startLine: 204
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  syntax:
    content: void IDbConnection.Open()
    content.vb: Sub System.Data.IDbConnection.Open Implements IDbConnection.Open
  overload: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Open*
  implements:
  - System.Data.IDbConnection.Open
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.Open()
  name.vb: System.Data.IDbConnection.Open()
references:
- uid: BindOpen.Data.Connections
  commentId: N:BindOpen.Data.Connections
  name: BindOpen.Data.Connections
  nameWithType: BindOpen.Data.Connections
  fullName: BindOpen.Data.Connections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Connections.BdoConnection
  commentId: T:BindOpen.Data.Connections.BdoConnection
  parent: BindOpen.Data.Connections
  isExternal: true
  name: BdoConnection
  nameWithType: BdoConnection
  fullName: BindOpen.Data.Connections.BdoConnection
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: BindOpen.Data.Connections.IBdoDbConnection
  commentId: T:BindOpen.Data.Connections.IBdoDbConnection
  parent: BindOpen.Data.Connections
  name: IBdoDbConnection
  nameWithType: IBdoDbConnection
  fullName: BindOpen.Data.Connections.IBdoDbConnection
- uid: BindOpen.Data.Connections.IBdoConnection
  commentId: T:BindOpen.Data.Connections.IBdoConnection
  parent: BindOpen.Data.Connections
  isExternal: true
  name: IBdoConnection
  nameWithType: IBdoConnection
  fullName: BindOpen.Data.Connections.IBdoConnection
- uid: System.Data.IDbConnection
  commentId: T:System.Data.IDbConnection
  parent: System.Data
  isExternal: true
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Connections.BdoConnection._connector
  commentId: F:BindOpen.Data.Connections.BdoConnection._connector
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: _connector
  nameWithType: BdoConnection._connector
  fullName: BindOpen.Data.Connections.BdoConnection._connector
- uid: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  commentId: M:BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: WithConnector(IBdoConnector)
  nameWithType: BdoConnection.WithConnector(IBdoConnector)
  fullName: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
    name: WithConnector
    nameWithType: BdoConnection.WithConnector
    fullName: BindOpen.Data.Connections.BdoConnection.WithConnector
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
    name: WithConnector
    nameWithType: BdoConnection.WithConnector
    fullName: BindOpen.Data.Connections.BdoConnection.WithConnector
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoConnection.ConnectionString
  commentId: P:BindOpen.Data.Connections.BdoConnection.ConnectionString
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: ConnectionString
  nameWithType: BdoConnection.ConnectionString
  fullName: BindOpen.Data.Connections.BdoConnection.ConnectionString
- uid: BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
  commentId: P:BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: ConnectionTimeout
  nameWithType: BdoConnection.ConnectionTimeout
  fullName: BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
- uid: BindOpen.Data.Connections.BdoConnection.State
  commentId: P:BindOpen.Data.Connections.BdoConnection.State
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: State
  nameWithType: BdoConnection.State
  fullName: BindOpen.Data.Connections.BdoConnection.State
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone
  commentId: M:BindOpen.Data.Items.DataItem.Clone
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Clone()
  nameWithType: DataItem.Clone()
  fullName: BindOpen.Data.Items.DataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone
    name: Clone
    nameWithType: DataItem.Clone
    fullName: BindOpen.Data.Items.DataItem.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone
    name: Clone
    nameWithType: DataItem.Clone
    fullName: BindOpen.Data.Items.DataItem.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  name: CreateCommand(String)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(String)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: CreateCommand(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: CreateCommand<T>(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand<T>(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoDbConnectionExtensions.CreateCommand(Of T)(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: CreateCommand(Of T)(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand<T>
    nameWithType: BdoDbConnectionExtensions.CreateCommand<T>
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand(Of T)
    nameWithType: BdoDbConnectionExtensions.CreateCommand(Of T)
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  name: BeginTransaction()
  nameWithType: BdoDbConnectionExtensions.BeginTransaction()
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction()
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  name: BeginTransaction(IsolationLevel)
  nameWithType: BdoDbConnectionExtensions.BeginTransaction(IsolationLevel)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  name: GetIdentity(Int64, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.GetIdentity(Int64, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  isExternal: true
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  isExternal: true
  name: CreateCommand(IBdoDbConnection, String)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(IBdoDbConnection, String)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions
  commentId: T:BindOpen.Data.Connections.BdoDbConnectionExtensions
  parent: BindOpen.Data.Connections
  name: BdoDbConnectionExtensions
  nameWithType: BdoDbConnectionExtensions
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: CreateCommand(IBdoDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(IBdoDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection, BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: CreateCommand<T>(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand<T>(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>(System.Data.IDbConnection, BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoDbConnectionExtensions.CreateCommand(Of T)(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)(System.Data.IDbConnection, BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: CreateCommand(Of T)(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand<T>
    nameWithType: BdoDbConnectionExtensions.CreateCommand<T>
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDbConnection
    name: IDbConnection
    nameWithType: IDbConnection
    fullName: System.Data.IDbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand(Of T)
    nameWithType: BdoDbConnectionExtensions.CreateCommand(Of T)
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDbConnection
    name: IDbConnection
    nameWithType: IDbConnection
    fullName: System.Data.IDbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  name: BeginTransaction(IBdoDbConnection)
  nameWithType: BdoDbConnectionExtensions.BeginTransaction(IBdoDbConnection)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  isExternal: true
  name: BeginTransaction(IBdoDbConnection, IsolationLevel)
  nameWithType: BdoDbConnectionExtensions.BeginTransaction(IBdoDbConnection, IsolationLevel)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection, System.Data.IsolationLevel)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: GetIdentity(IBdoDbConnection, Int64, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.GetIdentity(IBdoDbConnection, Int64, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection, System.Int64, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnection.Connector*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Connector
  name: Connector
  nameWithType: BdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connector
- uid: BindOpen.Data.Connections.IBdoDbConnection.Connector
  commentId: P:BindOpen.Data.Connections.IBdoDbConnection.Connector
  parent: BindOpen.Data.Connections.IBdoDbConnection
  name: Connector
  nameWithType: IBdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Connector
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.IBdoDbConnector
  parent: BindOpen.Extensions.Connectors
  name: IBdoDbConnector
  nameWithType: IBdoDbConnector
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: BindOpen.Data.Connections.BdoDbConnection.Native*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Native
  name: Native
  nameWithType: BdoDbConnection.Native
  fullName: BindOpen.Data.Connections.BdoDbConnection.Native
- uid: BindOpen.Data.Connections.IBdoDbConnection.Native
  commentId: P:BindOpen.Data.Connections.IBdoDbConnection.Native
  parent: BindOpen.Data.Connections.IBdoDbConnection
  name: Native
  nameWithType: IBdoDbConnection.Native
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Native
- uid: BindOpen.Data.Connections.BdoDbConnection.Database*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Database
  name: Database
  nameWithType: BdoDbConnection.Database
  fullName: BindOpen.Data.Connections.BdoDbConnection.Database
- uid: System.Data.IDbConnection.Database
  commentId: P:System.Data.IDbConnection.Database
  parent: System.Data.IDbConnection
  isExternal: true
  name: Database
  nameWithType: IDbConnection.Database
  fullName: System.Data.IDbConnection.Database
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ConnectionString*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ConnectionString
  name: IDbConnection.ConnectionString
  nameWithType: BdoDbConnection.IDbConnection.ConnectionString
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.ConnectionString
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.ConnectionString
  name.vb: System.Data.IDbConnection.ConnectionString
- uid: System.Data.IDbConnection.ConnectionString
  commentId: P:System.Data.IDbConnection.ConnectionString
  parent: System.Data.IDbConnection
  isExternal: true
  name: ConnectionString
  nameWithType: IDbConnection.ConnectionString
  fullName: System.Data.IDbConnection.ConnectionString
- uid: BindOpen.Data.Connections.BdoDbConnection.#ctor*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.#ctor
  name: BdoDbConnection
  nameWithType: BdoDbConnection.BdoDbConnection
  fullName: BindOpen.Data.Connections.BdoDbConnection.BdoDbConnection
- uid: BindOpen.Extensions.Connectors.BdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnector
  parent: BindOpen.Extensions.Connectors
  name: BdoDbConnector
  nameWithType: BdoDbConnector
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector
- uid: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase
  name: ChangeDatabase
  nameWithType: BdoDbConnection.ChangeDatabase
  fullName: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  isExternal: true
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: BdoConnection.Dispose(Boolean)
  fullName: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BdoConnection.Dispose
    fullName: BindOpen.Data.Connections.BdoConnection.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BdoConnection.Dispose
    fullName: BindOpen.Data.Connections.BdoConnection.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnection.Dispose*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Dispose
  name: Dispose
  nameWithType: BdoDbConnection.Dispose
  fullName: BindOpen.Data.Connections.BdoDbConnection.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Connections.BdoConnection.Connect
  commentId: M:BindOpen.Data.Connections.BdoConnection.Connect
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: Connect()
  nameWithType: BdoConnection.Connect()
  fullName: BindOpen.Data.Connections.BdoConnection.Connect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.Connect
    name: Connect
    nameWithType: BdoConnection.Connect
    fullName: BindOpen.Data.Connections.BdoConnection.Connect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.Connect
    name: Connect
    nameWithType: BdoConnection.Connect
    fullName: BindOpen.Data.Connections.BdoConnection.Connect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnection.Connect*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Connect
  name: Connect
  nameWithType: BdoDbConnection.Connect
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connect
- uid: BindOpen.Data.Connections.IBdoConnection.Connect
  commentId: M:BindOpen.Data.Connections.IBdoConnection.Connect
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: Connect()
  nameWithType: IBdoConnection.Connect()
  fullName: BindOpen.Data.Connections.IBdoConnection.Connect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.IBdoConnection.Connect
    name: Connect
    nameWithType: IBdoConnection.Connect
    fullName: BindOpen.Data.Connections.IBdoConnection.Connect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.IBdoConnection.Connect
    name: Connect
    nameWithType: IBdoConnection.Connect
    fullName: BindOpen.Data.Connections.IBdoConnection.Connect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.BdoConnection.Disconnect
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: Disconnect()
  nameWithType: BdoConnection.Disconnect()
  fullName: BindOpen.Data.Connections.BdoConnection.Disconnect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.Disconnect
    name: Disconnect
    nameWithType: BdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.BdoConnection.Disconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.Disconnect
    name: Disconnect
    nameWithType: BdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.BdoConnection.Disconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnection.Disconnect*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Disconnect
  name: Disconnect
  nameWithType: BdoDbConnection.Disconnect
  fullName: BindOpen.Data.Connections.BdoDbConnection.Disconnect
- uid: BindOpen.Data.Connections.IBdoConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.IBdoConnection.Disconnect
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: Disconnect()
  nameWithType: IBdoConnection.Disconnect()
  fullName: BindOpen.Data.Connections.IBdoConnection.Disconnect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.IBdoConnection.Disconnect
    name: Disconnect
    nameWithType: IBdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.IBdoConnection.Disconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.IBdoConnection.Disconnect
    name: Disconnect
    nameWithType: IBdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.IBdoConnection.Disconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  name: BeginTransaction
  nameWithType: BdoDbConnection.BeginTransaction
  fullName: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
- uid: System.Data.IDbConnection.BeginTransaction
  commentId: M:System.Data.IDbConnection.BeginTransaction
  parent: System.Data.IDbConnection
  isExternal: true
  name: BeginTransaction()
  nameWithType: IDbConnection.BeginTransaction()
  fullName: System.Data.IDbConnection.BeginTransaction()
  spec.csharp:
  - uid: System.Data.IDbConnection.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbTransaction
  commentId: T:System.Data.IDbTransaction
  parent: System.Data
  isExternal: true
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.IDbConnection
  isExternal: true
  name: BeginTransaction(IsolationLevel)
  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IsolationLevel
  commentId: T:System.Data.IsolationLevel
  parent: System.Data
  isExternal: true
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ChangeDatabase*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#ChangeDatabase
  name: IDbConnection.ChangeDatabase
  nameWithType: BdoDbConnection.IDbConnection.ChangeDatabase
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.ChangeDatabase
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.ChangeDatabase
  name.vb: System.Data.IDbConnection.ChangeDatabase
- uid: System.Data.IDbConnection.ChangeDatabase(System.String)
  commentId: M:System.Data.IDbConnection.ChangeDatabase(System.String)
  parent: System.Data.IDbConnection
  isExternal: true
  name: ChangeDatabase(String)
  nameWithType: IDbConnection.ChangeDatabase(String)
  fullName: System.Data.IDbConnection.ChangeDatabase(System.String)
  spec.csharp:
  - uid: System.Data.IDbConnection.ChangeDatabase(System.String)
    name: ChangeDatabase
    nameWithType: IDbConnection.ChangeDatabase
    fullName: System.Data.IDbConnection.ChangeDatabase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.ChangeDatabase(System.String)
    name: ChangeDatabase
    nameWithType: IDbConnection.ChangeDatabase
    fullName: System.Data.IDbConnection.ChangeDatabase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Close*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Close
  name: IDbConnection.Close
  nameWithType: BdoDbConnection.IDbConnection.Close
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.Close
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.Close
  name.vb: System.Data.IDbConnection.Close
- uid: System.Data.IDbConnection.Close
  commentId: M:System.Data.IDbConnection.Close
  parent: System.Data.IDbConnection
  isExternal: true
  name: Close()
  nameWithType: IDbConnection.Close()
  fullName: System.Data.IDbConnection.Close()
  spec.csharp:
  - uid: System.Data.IDbConnection.Close
    name: Close
    nameWithType: IDbConnection.Close
    fullName: System.Data.IDbConnection.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.Close
    name: Close
    nameWithType: IDbConnection.Close
    fullName: System.Data.IDbConnection.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnection.CreateCommand*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  name: CreateCommand
  nameWithType: BdoDbConnection.CreateCommand
  fullName: BindOpen.Data.Connections.BdoDbConnection.CreateCommand
- uid: System.Data.IDbConnection.CreateCommand
  commentId: M:System.Data.IDbConnection.CreateCommand
  parent: System.Data.IDbConnection
  isExternal: true
  name: CreateCommand()
  nameWithType: IDbConnection.CreateCommand()
  fullName: System.Data.IDbConnection.CreateCommand()
  spec.csharp:
  - uid: System.Data.IDbConnection.CreateCommand
    name: CreateCommand
    nameWithType: IDbConnection.CreateCommand
    fullName: System.Data.IDbConnection.CreateCommand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.CreateCommand
    name: CreateCommand
    nameWithType: IDbConnection.CreateCommand
    fullName: System.Data.IDbConnection.CreateCommand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbCommand
  commentId: T:System.Data.IDbCommand
  parent: System.Data
  isExternal: true
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Open*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.System#Data#IDbConnection#Open
  name: IDbConnection.Open
  nameWithType: BdoDbConnection.IDbConnection.Open
  fullName: BindOpen.Data.Connections.BdoDbConnection.System.Data.IDbConnection.Open
  nameWithType.vb: BdoDbConnection.System.Data.IDbConnection.Open
  name.vb: System.Data.IDbConnection.Open
- uid: System.Data.IDbConnection.Open
  commentId: M:System.Data.IDbConnection.Open
  parent: System.Data.IDbConnection
  isExternal: true
  name: Open()
  nameWithType: IDbConnection.Open()
  fullName: System.Data.IDbConnection.Open()
  spec.csharp:
  - uid: System.Data.IDbConnection.Open
    name: Open
    nameWithType: IDbConnection.Open
    fullName: System.Data.IDbConnection.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.Open
    name: Open
    nameWithType: IDbConnection.Open
    fullName: System.Data.IDbConnection.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
