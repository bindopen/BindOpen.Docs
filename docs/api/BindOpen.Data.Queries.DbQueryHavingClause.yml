### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Queries.DbQueryHavingClause
  commentId: T:BindOpen.Data.Queries.DbQueryHavingClause
  id: DbQueryHavingClause
  parent: BindOpen.Data.Queries
  children:
  - BindOpen.Data.Queries.DbQueryHavingClause.#ctor
  - BindOpen.Data.Queries.DbQueryHavingClause.Expression
  langs:
  - csharp
  - vb
  name: DbQueryHavingClause
  nameWithType: DbQueryHavingClause
  fullName: BindOpen.Data.Queries.DbQueryHavingClause
  type: Class
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Clauses/DbQueryHavingClause.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: DbQueryHavingClause
    path: ../src/BindOpen.Databases/Data/Queries/Clauses/DbQueryHavingClause.cs
    startLine: 7
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThis class represents the Having clause of a database data query.\n"
  example: []
  syntax:
    content: 'public class DbQueryHavingClause : IDbQueryHavingClause, IDbQueryItem'
    content.vb: >-
      Public Class DbQueryHavingClause
          Implements IDbQueryHavingClause, IDbQueryItem
  inheritance:
  - System.Object
  implements:
  - BindOpen.Data.Queries.IDbQueryHavingClause
  - BindOpen.Data.Queries.IDbQueryItem
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Queries.DbQueryHavingClause.Expression
  commentId: P:BindOpen.Data.Queries.DbQueryHavingClause.Expression
  id: Expression
  parent: BindOpen.Data.Queries.DbQueryHavingClause
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: DbQueryHavingClause.Expression
  fullName: BindOpen.Data.Queries.DbQueryHavingClause.Expression
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Clauses/DbQueryHavingClause.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Expression
    path: ../src/BindOpen.Databases/Data/Queries/Clauses/DbQueryHavingClause.cs
    startLine: 18
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nValue of this instance.\n"
  example: []
  syntax:
    content: public DataExpression Expression { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Expression.DataExpression
    content.vb: Public Property Expression As DataExpression
  overload: BindOpen.Data.Queries.DbQueryHavingClause.Expression*
  implements:
  - BindOpen.Data.Queries.IDbQueryItem.Expression
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.DbQueryHavingClause.#ctor
  commentId: M:BindOpen.Data.Queries.DbQueryHavingClause.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Queries.DbQueryHavingClause
  langs:
  - csharp
  - vb
  name: DbQueryHavingClause()
  nameWithType: DbQueryHavingClause.DbQueryHavingClause()
  fullName: BindOpen.Data.Queries.DbQueryHavingClause.DbQueryHavingClause()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Clauses/DbQueryHavingClause.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: .ctor
    path: ../src/BindOpen.Databases/Data/Queries/Clauses/DbQueryHavingClause.cs
    startLine: 31
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nInstantiates a new instance of the DbQueryHavingClause class.\n"
  example: []
  syntax:
    content: public DbQueryHavingClause()
    content.vb: Public Sub New
  overload: BindOpen.Data.Queries.DbQueryHavingClause.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Data.Queries.IDbQueryHavingClause
  commentId: T:BindOpen.Data.Queries.IDbQueryHavingClause
  parent: BindOpen.Data.Queries
  name: IDbQueryHavingClause
  nameWithType: IDbQueryHavingClause
  fullName: BindOpen.Data.Queries.IDbQueryHavingClause
- uid: BindOpen.Data.Queries.IDbQueryItem
  commentId: T:BindOpen.Data.Queries.IDbQueryItem
  parent: BindOpen.Data.Queries
  name: IDbQueryItem
  nameWithType: IDbQueryItem
  fullName: BindOpen.Data.Queries.IDbQueryItem
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Queries.DbQueryHavingClause.Expression*
  commentId: Overload:BindOpen.Data.Queries.DbQueryHavingClause.Expression
  name: Expression
  nameWithType: DbQueryHavingClause.Expression
  fullName: BindOpen.Data.Queries.DbQueryHavingClause.Expression
- uid: BindOpen.Data.Queries.IDbQueryItem.Expression
  commentId: P:BindOpen.Data.Queries.IDbQueryItem.Expression
  parent: BindOpen.Data.Queries.IDbQueryItem
  name: Expression
  nameWithType: IDbQueryItem.Expression
  fullName: BindOpen.Data.Queries.IDbQueryItem.Expression
- uid: BindOpen.Data.Expression.DataExpression
  commentId: T:BindOpen.Data.Expression.DataExpression
  parent: BindOpen.Data.Expression
  isExternal: true
  name: DataExpression
  nameWithType: DataExpression
  fullName: BindOpen.Data.Expression.DataExpression
- uid: BindOpen.Data.Expression
  commentId: N:BindOpen.Data.Expression
  isExternal: true
  name: BindOpen.Data.Expression
  nameWithType: BindOpen.Data.Expression
  fullName: BindOpen.Data.Expression
- uid: BindOpen.Data.Queries.DbQueryHavingClause.#ctor*
  commentId: Overload:BindOpen.Data.Queries.DbQueryHavingClause.#ctor
  name: DbQueryHavingClause
  nameWithType: DbQueryHavingClause.DbQueryHavingClause
  fullName: BindOpen.Data.Queries.DbQueryHavingClause.DbQueryHavingClause
shouldSkipMarkup: true
