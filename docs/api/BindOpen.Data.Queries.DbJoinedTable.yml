### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Queries.DbJoinedTable
  commentId: T:BindOpen.Data.Queries.DbJoinedTable
  id: DbJoinedTable
  parent: BindOpen.Data.Queries
  children:
  - BindOpen.Data.Queries.DbJoinedTable.#ctor
  - BindOpen.Data.Queries.DbJoinedTable.#ctor(BindOpen.Data.Queries.DbQueryJoinKind,BindOpen.Extensions.Carriers.DbTable)
  - BindOpen.Data.Queries.DbJoinedTable.Condition
  - BindOpen.Data.Queries.DbJoinedTable.Kind
  - BindOpen.Data.Queries.DbJoinedTable.Table
  - BindOpen.Data.Queries.DbJoinedTable.WithCondition(BindOpen.Data.Expression.DataExpression)
  - BindOpen.Data.Queries.DbJoinedTable.WithCondition(System.String)
  langs:
  - csharp
  - vb
  name: DbJoinedTable
  nameWithType: DbJoinedTable
  fullName: BindOpen.Data.Queries.DbJoinedTable
  type: Class
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: DbJoinedTable
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 8
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThis class represents the Join table of a database data query.\n"
  example: []
  syntax:
    content: 'public class DbJoinedTable : DbTable, IBdoCarrier, ITBdoExtensionItem<IBdoCarrierDefinition>, IBdoExtensionItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, IDbQueryItem'
    content.vb: >-
      Public Class DbJoinedTable
          Inherits DbTable
          Implements IBdoCarrier, ITBdoExtensionItem(Of IBdoCarrierDefinition), IBdoExtensionItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, IDbQueryItem
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  - BindOpen.Extensions.Runtime.BdoCarrier
  - BindOpen.Extensions.Carriers.DbTable
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  - BindOpen.Extensions.Runtime.IBdoExtensionItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Queries.IDbQueryItem
  inheritedMembers:
  - BindOpen.Extensions.Carriers.DbTable.DataModule
  - BindOpen.Extensions.Carriers.DbTable.Schema
  - BindOpen.Extensions.Carriers.DbTable.Alias
  - BindOpen.Extensions.Carriers.DbTable.Expression
  - BindOpen.Extensions.Carriers.DbTable.ToString
  - BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  - BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  - BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  - BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
  - BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  - BindOpen.Extensions.Runtime.BdoCarrier.Path
  - BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  - BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  - BindOpen.Extensions.Runtime.BdoCarrier.Flag
  - BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  - BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  - BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  - BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}._configuration
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.AsElement(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Name
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  - BindOpen.Data.Items.IdentifiedDataItem.Key
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.IdentifiedDataItem.Clone
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Queries.DbJoinedTable.Kind
  commentId: P:BindOpen.Data.Queries.DbJoinedTable.Kind
  id: Kind
  parent: BindOpen.Data.Queries.DbJoinedTable
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: DbJoinedTable.Kind
  fullName: BindOpen.Data.Queries.DbJoinedTable.Kind
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Kind
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 19
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThe kind of join of this instance.\n"
  example: []
  syntax:
    content: public DbQueryJoinKind Kind { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Queries.DbQueryJoinKind
    content.vb: Public Property Kind As DbQueryJoinKind
  overload: BindOpen.Data.Queries.DbJoinedTable.Kind*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.DbJoinedTable.Table
  commentId: P:BindOpen.Data.Queries.DbJoinedTable.Table
  id: Table
  parent: BindOpen.Data.Queries.DbJoinedTable
  langs:
  - csharp
  - vb
  name: Table
  nameWithType: DbJoinedTable.Table
  fullName: BindOpen.Data.Queries.DbJoinedTable.Table
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Table
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 24
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThe table of this instance.\n"
  example: []
  syntax:
    content: public DbTable Table { get; set; }
    parameters: []
    return:
      type: BindOpen.Extensions.Carriers.DbTable
    content.vb: Public Property Table As DbTable
  overload: BindOpen.Data.Queries.DbJoinedTable.Table*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.DbJoinedTable.Condition
  commentId: P:BindOpen.Data.Queries.DbJoinedTable.Condition
  id: Condition
  parent: BindOpen.Data.Queries.DbJoinedTable
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: DbJoinedTable.Condition
  fullName: BindOpen.Data.Queries.DbJoinedTable.Condition
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Condition
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 29
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThe condition of this instance.\n"
  example: []
  syntax:
    content: public DataExpression Condition { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Expression.DataExpression
    content.vb: Public Property Condition As DataExpression
  overload: BindOpen.Data.Queries.DbJoinedTable.Condition*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.DbJoinedTable.#ctor
  commentId: M:BindOpen.Data.Queries.DbJoinedTable.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Queries.DbJoinedTable
  langs:
  - csharp
  - vb
  name: DbJoinedTable()
  nameWithType: DbJoinedTable.DbJoinedTable()
  fullName: BindOpen.Data.Queries.DbJoinedTable.DbJoinedTable()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: .ctor
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 42
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nInstantiates a new instance of the DbQueryJoinedTable class.\n"
  example: []
  syntax:
    content: public DbJoinedTable()
    content.vb: Public Sub New
  overload: BindOpen.Data.Queries.DbJoinedTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.DbJoinedTable.#ctor(BindOpen.Data.Queries.DbQueryJoinKind,BindOpen.Extensions.Carriers.DbTable)
  commentId: M:BindOpen.Data.Queries.DbJoinedTable.#ctor(BindOpen.Data.Queries.DbQueryJoinKind,BindOpen.Extensions.Carriers.DbTable)
  id: '#ctor(BindOpen.Data.Queries.DbQueryJoinKind,BindOpen.Extensions.Carriers.DbTable)'
  parent: BindOpen.Data.Queries.DbJoinedTable
  langs:
  - csharp
  - vb
  name: DbJoinedTable(DbQueryJoinKind, DbTable)
  nameWithType: DbJoinedTable.DbJoinedTable(DbQueryJoinKind, DbTable)
  fullName: BindOpen.Data.Queries.DbJoinedTable.DbJoinedTable(BindOpen.Data.Queries.DbQueryJoinKind, BindOpen.Extensions.Carriers.DbTable)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: .ctor
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 52
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nInstantiates a new instance of the DbQueryJoinedTable class.\n"
  example: []
  syntax:
    content: public DbJoinedTable(DbQueryJoinKind kind, DbTable table)
    parameters:
    - id: kind
      type: BindOpen.Data.Queries.DbQueryJoinKind
      description: The kind to consider.
    - id: table
      type: BindOpen.Extensions.Carriers.DbTable
      description: The table to consider.
    content.vb: Public Sub New(kind As DbQueryJoinKind, table As DbTable)
  overload: BindOpen.Data.Queries.DbJoinedTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.DbJoinedTable.WithCondition(BindOpen.Data.Expression.DataExpression)
  commentId: M:BindOpen.Data.Queries.DbJoinedTable.WithCondition(BindOpen.Data.Expression.DataExpression)
  id: WithCondition(BindOpen.Data.Expression.DataExpression)
  parent: BindOpen.Data.Queries.DbJoinedTable
  langs:
  - csharp
  - vb
  name: WithCondition(DataExpression)
  nameWithType: DbJoinedTable.WithCondition(DataExpression)
  fullName: BindOpen.Data.Queries.DbJoinedTable.WithCondition(BindOpen.Data.Expression.DataExpression)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: WithCondition
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 71
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nSets the specified condition.\n"
  example: []
  syntax:
    content: public DbJoinedTable WithCondition(DataExpression condition)
    parameters:
    - id: condition
      type: BindOpen.Data.Expression.DataExpression
      description: The condition to consider.
    return:
      type: BindOpen.Data.Queries.DbJoinedTable
      description: Returns this instance.
    content.vb: Public Function WithCondition(condition As DataExpression) As DbJoinedTable
  overload: BindOpen.Data.Queries.DbJoinedTable.WithCondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.DbJoinedTable.WithCondition(System.String)
  commentId: M:BindOpen.Data.Queries.DbJoinedTable.WithCondition(System.String)
  id: WithCondition(System.String)
  parent: BindOpen.Data.Queries.DbJoinedTable
  langs:
  - csharp
  - vb
  name: WithCondition(String)
  nameWithType: DbJoinedTable.WithCondition(String)
  fullName: BindOpen.Data.Queries.DbJoinedTable.WithCondition(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: WithCondition
    path: ../src/BindOpen.Databases/Data/Queries/Tables/DbJoinedTable.cs
    startLine: 83
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nSets the specified condition.\n"
  example: []
  syntax:
    content: public DbJoinedTable WithCondition(string condition)
    parameters:
    - id: condition
      type: System.String
      description: The condition to consider.
    return:
      type: BindOpen.Data.Queries.DbJoinedTable
      description: Returns this instance.
    content.vb: Public Function WithCondition(condition As String) As DbJoinedTable
  overload: BindOpen.Data.Queries.DbJoinedTable.WithCondition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
  name: TBdoExtensionItem<IBdoCarrierDefinition>
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  name.vb: TBdoExtensionItem(Of IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier
  commentId: T:BindOpen.Extensions.Runtime.BdoCarrier
  parent: BindOpen.Extensions.Runtime
  isExternal: true
  name: BdoCarrier
  nameWithType: BdoCarrier
  fullName: BindOpen.Extensions.Runtime.BdoCarrier
- uid: BindOpen.Extensions.Carriers.DbTable
  commentId: T:BindOpen.Extensions.Carriers.DbTable
  parent: BindOpen.Extensions.Carriers
  name: DbTable
  nameWithType: DbTable
  fullName: BindOpen.Extensions.Carriers.DbTable
- uid: BindOpen.Extensions.Runtime.IBdoCarrier
  commentId: T:BindOpen.Extensions.Runtime.IBdoCarrier
  parent: BindOpen.Extensions.Runtime
  isExternal: true
  name: IBdoCarrier
  nameWithType: IBdoCarrier
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  name: ITBdoExtensionItem<IBdoCarrierDefinition>
  nameWithType: ITBdoExtensionItem<IBdoCarrierDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>
  nameWithType.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  name.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoExtensionItem
  commentId: T:BindOpen.Extensions.Runtime.IBdoExtensionItem
  parent: BindOpen.Extensions.Runtime
  isExternal: true
  name: IBdoExtensionItem
  nameWithType: IBdoExtensionItem
  fullName: BindOpen.Extensions.Runtime.IBdoExtensionItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Queries.IDbQueryItem
  commentId: T:BindOpen.Data.Queries.IDbQueryItem
  parent: BindOpen.Data.Queries
  name: IDbQueryItem
  nameWithType: IDbQueryItem
  fullName: BindOpen.Data.Queries.IDbQueryItem
- uid: BindOpen.Extensions.Carriers.DbTable.DataModule
  commentId: P:BindOpen.Extensions.Carriers.DbTable.DataModule
  parent: BindOpen.Extensions.Carriers.DbTable
  name: DataModule
  nameWithType: DbTable.DataModule
  fullName: BindOpen.Extensions.Carriers.DbTable.DataModule
- uid: BindOpen.Extensions.Carriers.DbTable.Schema
  commentId: P:BindOpen.Extensions.Carriers.DbTable.Schema
  parent: BindOpen.Extensions.Carriers.DbTable
  name: Schema
  nameWithType: DbTable.Schema
  fullName: BindOpen.Extensions.Carriers.DbTable.Schema
- uid: BindOpen.Extensions.Carriers.DbTable.Alias
  commentId: P:BindOpen.Extensions.Carriers.DbTable.Alias
  parent: BindOpen.Extensions.Carriers.DbTable
  name: Alias
  nameWithType: DbTable.Alias
  fullName: BindOpen.Extensions.Carriers.DbTable.Alias
- uid: BindOpen.Extensions.Carriers.DbTable.Expression
  commentId: P:BindOpen.Extensions.Carriers.DbTable.Expression
  parent: BindOpen.Extensions.Carriers.DbTable
  name: Expression
  nameWithType: DbTable.Expression
  fullName: BindOpen.Extensions.Carriers.DbTable.Expression
- uid: BindOpen.Extensions.Carriers.DbTable.ToString
  commentId: M:BindOpen.Extensions.Carriers.DbTable.ToString
  parent: BindOpen.Extensions.Carriers.DbTable
  name: ToString()
  nameWithType: DbTable.ToString()
  fullName: BindOpen.Extensions.Carriers.DbTable.ToString()
  spec.csharp:
  - uid: BindOpen.Extensions.Carriers.DbTable.ToString
    name: ToString
    nameWithType: DbTable.ToString
    fullName: BindOpen.Extensions.Carriers.DbTable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Carriers.DbTable.ToString
    name: ToString
    nameWithType: DbTable.ToString
    fullName: BindOpen.Extensions.Carriers.DbTable.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  commentId: M:BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  parent: BindOpen.Extensions.Carriers.DbTable
  isExternal: true
  name: WithDataModule(String)
  nameWithType: DbTable.WithDataModule(String)
  fullName: BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
    name: WithDataModule
    nameWithType: DbTable.WithDataModule
    fullName: BindOpen.Extensions.Carriers.DbTable.WithDataModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
    name: WithDataModule
    nameWithType: DbTable.WithDataModule
    fullName: BindOpen.Extensions.Carriers.DbTable.WithDataModule
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  commentId: M:BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  parent: BindOpen.Extensions.Carriers.DbTable
  isExternal: true
  name: WithSchema(String)
  nameWithType: DbTable.WithSchema(String)
  fullName: BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
    name: WithSchema
    nameWithType: DbTable.WithSchema
    fullName: BindOpen.Extensions.Carriers.DbTable.WithSchema
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
    name: WithSchema
    nameWithType: DbTable.WithSchema
    fullName: BindOpen.Extensions.Carriers.DbTable.WithSchema
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  commentId: M:BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  parent: BindOpen.Extensions.Carriers.DbTable
  isExternal: true
  name: WithAlias(String)
  nameWithType: DbTable.WithAlias(String)
  fullName: BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
    name: WithAlias
    nameWithType: DbTable.WithAlias
    fullName: BindOpen.Extensions.Carriers.DbTable.WithAlias
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
    name: WithAlias
    nameWithType: DbTable.WithAlias
    fullName: BindOpen.Extensions.Carriers.DbTable.WithAlias
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: AsElement(String, IBdoLog)
  nameWithType: BdoCarrier.AsElement(String, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AsElement
    nameWithType: BdoCarrier.AsElement
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AsElement
    nameWithType: BdoCarrier.AsElement
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: SetPath(String, String)
  nameWithType: BdoCarrier.SetPath(String, String)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
    name: SetPath
    nameWithType: BdoCarrier.SetPath
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.SetPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
    name: SetPath
    nameWithType: BdoCarrier.SetPath
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.SetPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: BdoCarrier.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: BdoCarrier.UpdateStorageInfo
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: BdoCarrier.UpdateStorageInfo
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoCarrier.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: BdoCarrier.UpdateRuntimeInfo
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: BdoCarrier.UpdateRuntimeInfo
    fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: Configuration
  nameWithType: BdoCarrier.Configuration
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Configuration
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Path
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.Path
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: Path
  nameWithType: BdoCarrier.Path
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Path
- uid: BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: ParentPath
  nameWithType: BdoCarrier.ParentPath
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
- uid: BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: CreationDate
  nameWithType: BdoCarrier.CreationDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Flag
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.Flag
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: Flag
  nameWithType: BdoCarrier.Flag
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Flag
- uid: BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: IsReadonly
  nameWithType: BdoCarrier.IsReadonly
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
- uid: BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: LastAccessDate
  nameWithType: BdoCarrier.LastAccessDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
- uid: BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: LastWriteDate
  nameWithType: BdoCarrier.LastWriteDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
- uid: BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  isExternal: true
  name: RelativePath
  nameWithType: BdoCarrier.RelativePath
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}._configuration
  commentId: F:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}._configuration
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1._configuration
  name: _configuration
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>._configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>._configuration
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition)._configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition)._configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.AsElement(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.AsElement(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
  name: AsElement(String)
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.AsElement(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.AsElement(System.String)
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).AsElement(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).AsElement(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem(Of IBdoCarrierDefinition).AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
  name: SetDefinition(IBdoCarrierDefinition)
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.SetDefinition(IBdoCarrierDefinition)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).SetDefinition(IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem(Of IBdoCarrierDefinition).SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Name
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Name
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Name
  name: Name
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.Name
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.Name
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).Name
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).Name
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  name: IBdoExtensionItem.Configuration
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.IBdoExtensionItem.Configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  name.vb: BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Definition
  name: Definition
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.Definition
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.Definition
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).Definition
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).Definition
- uid: BindOpen.Data.Items.IdentifiedDataItem.Key
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Key
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: Key()
  nameWithType: IdentifiedDataItem.Key()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Clone
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: Clone()
  nameWithType: IdentifiedDataItem.Clone()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
    name: Clone
    nameWithType: IdentifiedDataItem.Clone
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
    name: Clone
    nameWithType: IdentifiedDataItem.Clone
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  isExternal: true
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionItem`1
  isExternal: true
  name: TBdoExtensionItem<T>
  nameWithType: TBdoExtensionItem<T>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>
  nameWithType.vb: TBdoExtensionItem(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T)
  name.vb: TBdoExtensionItem(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  isExternal: true
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  isExternal: true
  name: ITBdoExtensionItem<T>
  nameWithType: ITBdoExtensionItem<T>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>
  nameWithType.vb: ITBdoExtensionItem(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T)
  name.vb: ITBdoExtensionItem(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1._configuration
  commentId: F:BindOpen.Extensions.Runtime.TBdoExtensionItem`1._configuration
  isExternal: true
  name: _configuration
  nameWithType: TBdoExtensionItem<T>._configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>._configuration
  nameWithType.vb: TBdoExtensionItem(Of T)._configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T)._configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
  isExternal: true
  name: AsElement(String)
  nameWithType: TBdoExtensionItem<T>.AsElement(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.AsElement(System.String)
  nameWithType.vb: TBdoExtensionItem(Of T).AsElement(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).AsElement(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem<T>.AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem(Of T).AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
  isExternal: true
  name: SetDefinition(T)
  nameWithType: TBdoExtensionItem<T>.SetDefinition(T)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.SetDefinition(T)
  nameWithType.vb: TBdoExtensionItem(Of T).SetDefinition(T)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).SetDefinition(T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem<T>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem(Of T).SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Name
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Name
  isExternal: true
  name: Name
  nameWithType: TBdoExtensionItem<T>.Name
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.Name
  nameWithType.vb: TBdoExtensionItem(Of T).Name
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).Name
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  isExternal: true
  name: IBdoExtensionItem.Configuration
  nameWithType: TBdoExtensionItem<T>.IBdoExtensionItem.Configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  nameWithType.vb: TBdoExtensionItem(Of T).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  name.vb: BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Definition
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Definition
  isExternal: true
  name: Definition
  nameWithType: TBdoExtensionItem<T>.Definition
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.Definition
  nameWithType.vb: TBdoExtensionItem(Of T).Definition
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).Definition
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Queries.DbJoinedTable.Kind*
  commentId: Overload:BindOpen.Data.Queries.DbJoinedTable.Kind
  name: Kind
  nameWithType: DbJoinedTable.Kind
  fullName: BindOpen.Data.Queries.DbJoinedTable.Kind
- uid: BindOpen.Data.Queries.DbQueryJoinKind
  commentId: T:BindOpen.Data.Queries.DbQueryJoinKind
  parent: BindOpen.Data.Queries
  name: DbQueryJoinKind
  nameWithType: DbQueryJoinKind
  fullName: BindOpen.Data.Queries.DbQueryJoinKind
- uid: BindOpen.Data.Queries.DbJoinedTable.Table*
  commentId: Overload:BindOpen.Data.Queries.DbJoinedTable.Table
  name: Table
  nameWithType: DbJoinedTable.Table
  fullName: BindOpen.Data.Queries.DbJoinedTable.Table
- uid: BindOpen.Data.Queries.DbJoinedTable.Condition*
  commentId: Overload:BindOpen.Data.Queries.DbJoinedTable.Condition
  name: Condition
  nameWithType: DbJoinedTable.Condition
  fullName: BindOpen.Data.Queries.DbJoinedTable.Condition
- uid: BindOpen.Data.Expression.DataExpression
  commentId: T:BindOpen.Data.Expression.DataExpression
  parent: BindOpen.Data.Expression
  isExternal: true
  name: DataExpression
  nameWithType: DataExpression
  fullName: BindOpen.Data.Expression.DataExpression
- uid: BindOpen.Data.Expression
  commentId: N:BindOpen.Data.Expression
  isExternal: true
  name: BindOpen.Data.Expression
  nameWithType: BindOpen.Data.Expression
  fullName: BindOpen.Data.Expression
- uid: BindOpen.Data.Queries.DbJoinedTable.#ctor*
  commentId: Overload:BindOpen.Data.Queries.DbJoinedTable.#ctor
  name: DbJoinedTable
  nameWithType: DbJoinedTable.DbJoinedTable
  fullName: BindOpen.Data.Queries.DbJoinedTable.DbJoinedTable
- uid: BindOpen.Data.Queries.DbJoinedTable.WithCondition*
  commentId: Overload:BindOpen.Data.Queries.DbJoinedTable.WithCondition
  name: WithCondition
  nameWithType: DbJoinedTable.WithCondition
  fullName: BindOpen.Data.Queries.DbJoinedTable.WithCondition
- uid: BindOpen.Data.Queries.DbJoinedTable
  commentId: T:BindOpen.Data.Queries.DbJoinedTable
  parent: BindOpen.Data.Queries
  name: DbJoinedTable
  nameWithType: DbJoinedTable
  fullName: BindOpen.Data.Queries.DbJoinedTable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
