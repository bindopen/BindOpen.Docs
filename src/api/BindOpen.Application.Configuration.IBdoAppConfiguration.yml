### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Configuration.IBdoAppConfiguration
  commentId: T:BindOpen.Application.Configuration.IBdoAppConfiguration
  id: IBdoAppConfiguration
  parent: BindOpen.Application.Configuration
  children:
  - BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials
  - BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources
  langs:
  - csharp
  - vb
  name: IBdoAppConfiguration
  nameWithType: IBdoAppConfiguration
  fullName: BindOpen.Application.Configuration.IBdoAppConfiguration
  type: Interface
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Configuration
  summary: "\nThis interface defines application configuration.\n"
  syntax:
    content: 'public interface IBdoAppConfiguration : IBdoBaseConfiguration, IDataElementSet, IDataItemSet<DataElement>, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, ISavable, IGloballyDescribed'
    content.vb: >-
      Public Interface IBdoAppConfiguration
          Inherits IBdoBaseConfiguration, IDataElementSet, IDataItemSet(Of DataElement), IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, ISavable, IGloballyDescribed
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials
  commentId: P:BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials
  id: Credentials
  parent: BindOpen.Application.Configuration.IBdoAppConfiguration
  langs:
  - csharp
  - vb
  name: Credentials
  nameWithType: IBdoAppConfiguration.Credentials
  fullName: BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Configuration
  summary: "\nCredentials.\n"
  syntax:
    content: List<ApplicationCredential> Credentials { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Application.Security.ApplicationCredential}
    content.vb: Property Credentials As List(Of ApplicationCredential)
  overload: BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources
  commentId: P:BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources
  id: Datasources
  parent: BindOpen.Application.Configuration.IBdoAppConfiguration
  langs:
  - csharp
  - vb
  name: Datasources
  nameWithType: IBdoAppConfiguration.Datasources
  fullName: BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Configuration
  summary: "\nData sources.\n"
  syntax:
    content: List<Datasource> Datasources { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Items.Datasource}
    content.vb: Property Datasources As List(Of Datasource)
  overload: BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources*
  modifiers.csharp:
  - get
  - set
references:
- uid: BindOpen.Application.Configuration
  commentId: N:BindOpen.Application.Configuration
  isExternal: true
  name: BindOpen.Application.Configuration
  nameWithType: BindOpen.Application.Configuration
  fullName: BindOpen.Application.Configuration
- uid: BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials*
  commentId: Overload:BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials
  isExternal: true
  name: Credentials
  nameWithType: IBdoAppConfiguration.Credentials
  fullName: BindOpen.Application.Configuration.IBdoAppConfiguration.Credentials
- uid: System.Collections.Generic.List{BindOpen.Application.Security.ApplicationCredential}
  commentId: '!:System.Collections.Generic.List{BindOpen.Application.Security.ApplicationCredential}'
  definition: System.Collections.Generic.List`1
  name: List<ApplicationCredential>
  nameWithType: List<ApplicationCredential>
  fullName: System.Collections.Generic.List<BindOpen.Application.Security.ApplicationCredential>
  nameWithType.vb: List(Of ApplicationCredential)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Application.Security.ApplicationCredential)
  name.vb: List(Of ApplicationCredential)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Security.ApplicationCredential
    name: ApplicationCredential
    nameWithType: ApplicationCredential
    fullName: BindOpen.Application.Security.ApplicationCredential
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Security.ApplicationCredential
    name: ApplicationCredential
    nameWithType: ApplicationCredential
    fullName: BindOpen.Application.Security.ApplicationCredential
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources*
  commentId: Overload:BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources
  isExternal: true
  name: Datasources
  nameWithType: IBdoAppConfiguration.Datasources
  fullName: BindOpen.Application.Configuration.IBdoAppConfiguration.Datasources
- uid: System.Collections.Generic.List{BindOpen.Data.Items.Datasource}
  commentId: '!:System.Collections.Generic.List{BindOpen.Data.Items.Datasource}'
  definition: System.Collections.Generic.List`1
  name: List<Datasource>
  nameWithType: List<Datasource>
  fullName: System.Collections.Generic.List<BindOpen.Data.Items.Datasource>
  nameWithType.vb: List(Of Datasource)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Items.Datasource)
  name.vb: List(Of Datasource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
