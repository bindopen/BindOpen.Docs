### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Options.OptionSpecSet
  commentId: T:BindOpen.Application.Options.OptionSpecSet
  id: OptionSpecSet
  parent: BindOpen.Application.Options
  children:
  - BindOpen.Application.Options.OptionSpecSet.#ctor
  - BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  - BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String,System.String)
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  - BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.ClearOptions
  - BindOpen.Application.Options.OptionSpecSet.Condition
  - BindOpen.Application.Options.OptionSpecSet.Description
  - BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  - BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String,System.String)
  - BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  - BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  - BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  - BindOpen.Application.Options.OptionSpecSet.Index
  - BindOpen.Application.Options.OptionSpecSet.Name
  - BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  - BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  - BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String,System.String)
  - BindOpen.Application.Options.OptionSpecSet.SubSets
  langs:
  - csharp
  - vb
  name: OptionSpecSet
  nameWithType: OptionSpecSet
  fullName: BindOpen.Application.Options.OptionSpecSet
  type: Class
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: OptionSpecSet
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 15
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThis class represents a option specification set.\n"
  example: []
  syntax:
    content: 'public class OptionSpecSet : DataItemSet<OptionSpec>, IOptionSpecSet, IDataItemSet<OptionSpec>, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, IIndexed, IGloballyDescribed'
    content.vb: >-
      Public Class OptionSpecSet
          Inherits DataItemSet(Of OptionSpec)
          Implements IOptionSpecSet, IDataItemSet(Of OptionSpec), IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, IIndexed, IGloballyDescribed
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  implements:
  - BindOpen.Application.Options.IOptionSpecSet
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IIndexed
  - BindOpen.Data.Items.IGloballyDescribed
  inheritedMembers:
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}._items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.ItemsSpecified
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Count
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.Int32)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.ClearItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Remove(System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.HasItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.HasItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec,BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(System.Collections.Generic.List{BindOpen.Application.Options.OptionSpec},BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Check``1(System.Boolean,{T1},System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Clone
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.PropertyChanged
  - BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.OnPropertyChanged(System.String)
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.Key
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Options.OptionSpecSet.Description
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Description
  id: Description
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: OptionSpecSet.Description
  fullName: BindOpen.Application.Options.OptionSpecSet.Description
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Description
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 27
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nDescription of this instance.\n"
  example: []
  syntax:
    content: public DictionaryDataItem Description { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DictionaryDataItem
    content.vb: Public Property Description As DictionaryDataItem
  overload: BindOpen.Application.Options.OptionSpecSet.Description*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.Description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  commentId: P:BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  id: DescriptionSpecified
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: DescriptionSpecified
  nameWithType: OptionSpecSet.DescriptionSpecified
  fullName: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DescriptionSpecified
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 33
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nSpecification of the Description property of this instance.\n"
  example: []
  syntax:
    content: public bool DescriptionSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DescriptionSpecified As Boolean
  overload: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Options.OptionSpecSet.Name
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Name
  id: Name
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OptionSpecSet.Name
  fullName: BindOpen.Application.Options.OptionSpecSet.Name
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Name
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 40
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe name of this instance.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: BindOpen.Application.Options.OptionSpecSet.Name*
  implements:
  - BindOpen.Data.Items.INamed.Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.Index
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Index
  id: Index
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: OptionSpecSet.Index
  fullName: BindOpen.Application.Options.OptionSpecSet.Index
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Index
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 45
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe index of this instance.\n"
  example: []
  syntax:
    content: public int Index { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Index As Integer
  overload: BindOpen.Application.Options.OptionSpecSet.Index*
  implements:
  - BindOpen.Data.Items.IIndexed.Index
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.Condition
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Condition
  id: Condition
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: OptionSpecSet.Condition
  fullName: BindOpen.Application.Options.OptionSpecSet.Condition
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Condition
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 50
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe condition of this instance.\n"
  example: []
  syntax:
    content: public Condition Condition { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Conditions.Condition
    content.vb: Public Property Condition As Condition
  overload: BindOpen.Application.Options.OptionSpecSet.Condition*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.Condition
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.SubSets
  commentId: P:BindOpen.Application.Options.OptionSpecSet.SubSets
  id: SubSets
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: SubSets
  nameWithType: OptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.OptionSpecSet.SubSets
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SubSets
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 55
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe sub sets of this instance.\n"
  example: []
  syntax:
    content: public List<OptionSpecSet> SubSets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
    content.vb: Public Property SubSets As List(Of OptionSpecSet)
  overload: BindOpen.Application.Options.OptionSpecSet.SubSets*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.SubSets
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor
  commentId: M:BindOpen.Application.Options.OptionSpecSet.#ctor
  id: '#ctor'
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: OptionSpecSet()
  nameWithType: OptionSpecSet.OptionSpecSet()
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 68
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  example: []
  syntax:
    content: public OptionSpecSet()
    content.vb: Public Sub New
  overload: BindOpen.Application.Options.OptionSpecSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Application.Options.IOptionSpec[])
  id: '#ctor(BindOpen.Application.Options.IOptionSpec[])'
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: OptionSpecSet(IOptionSpec[])
  nameWithType: OptionSpecSet.OptionSpecSet(IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Application.Options.IOptionSpec[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 76
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  example: []
  syntax:
    content: public OptionSpecSet(params IOptionSpec[] optionSpecifications)
    parameters:
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    content.vb: Public Sub New(ParamArray optionSpecifications As IOptionSpec())
  overload: BindOpen.Application.Options.OptionSpecSet.#ctor*
  nameWithType.vb: OptionSpecSet.OptionSpecSet(IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Application.Options.IOptionSpec())
  name.vb: OptionSpecSet(IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  id: '#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])'
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: OptionSpecSet(ICondition, IOptionSpec[])
  nameWithType: OptionSpecSet.OptionSpecSet(ICondition, IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 86
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  example: []
  syntax:
    content: public OptionSpecSet(ICondition condition, params IOptionSpec[] optionSpecifications)
    parameters:
    - id: condition
      type: BindOpen.Data.Conditions.ICondition
      description: The condition to consider.
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    content.vb: Public Sub New(condition As ICondition, ParamArray optionSpecifications As IOptionSpec())
  overload: BindOpen.Application.Options.OptionSpecSet.#ctor*
  nameWithType.vb: OptionSpecSet.OptionSpecSet(ICondition, IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec())
  name.vb: OptionSpecSet(ICondition, IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  id: GetHelpText(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: GetHelpText(String)
  nameWithType: OptionSpecSet.GetHelpText(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetHelpText
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 104
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nGets the help text.\n"
  example: []
  syntax:
    content: public string GetHelpText(string uiCulture = "*")
    parameters:
    - id: uiCulture
      type: System.String
      description: The UI culture to consider.
    return:
      type: System.String
      description: Returns the help text.
    content.vb: Public Function GetHelpText(uiCulture As String = "*") As String
  overload: BindOpen.Application.Options.OptionSpecSet.GetHelpText*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.ClearOptions
  commentId: M:BindOpen.Application.Options.OptionSpecSet.ClearOptions
  id: ClearOptions
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: ClearOptions()
  nameWithType: OptionSpecSet.ClearOptions()
  fullName: BindOpen.Application.Options.OptionSpecSet.ClearOptions()
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ClearOptions
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 131
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nClears the options.\n"
  example: []
  syntax:
    content: public void ClearOptions()
    content.vb: Public Sub ClearOptions
  overload: BindOpen.Application.Options.OptionSpecSet.ClearOptions*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  id: AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(IOptionSpecSet)
  nameWithType: OptionSpecSet.AddSubSet(IOptionSpecSet)
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSubSet
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 142
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds the specified set of option specifications.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddSubSet(IOptionSpecSet subSet)
    parameters:
    - id: subSet
      type: BindOpen.Application.Options.IOptionSpecSet
      description: The sub set to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddSubSet(subSet As IOptionSpecSet) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  id: AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(IOptionSpec[])
  nameWithType: OptionSpecSet.AddSubSet(IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSubSet
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 153
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new set of option specifications.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddSubSet(params IOptionSpec[] optionSpecifications)
    parameters:
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddSubSet(ParamArray optionSpecifications As IOptionSpec()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: OptionSpecSet.AddSubSet(IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  id: AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(ICondition, IOptionSpec[])
  nameWithType: OptionSpecSet.AddSubSet(ICondition, IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSubSet
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 165
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddSubSet(ICondition condition, params IOptionSpec[] optionSpecifications)
    parameters:
    - id: condition
      type: BindOpen.Data.Conditions.ICondition
      description: The condition to consider.
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddSubSet(condition As ICondition, ParamArray optionSpecifications As IOptionSpec()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: OptionSpecSet.AddSubSet(ICondition, IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(ICondition, IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  id: AddOption(System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(String[])
  nameWithType: OptionSpecSet.AddOption(String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 178
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddOption(params string[] aliases)
    parameters:
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(System.String())
  name.vb: AddOption(String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 188
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddOption(OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  id: AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(RequirementLevel, String[])
  nameWithType: OptionSpecSet.AddOption(RequirementLevel, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 200
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddOption(RequirementLevel requirementLevel, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to add.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(requirementLevel As RequirementLevel, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(RequirementLevel, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String())
  name.vb: AddOption(RequirementLevel, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(DataValueType, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(DataValueType, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 214
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddOption(DataValueType dataValueType, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The value type to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(dataValueType As DataValueType, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(DataValueType, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 228
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddOption(RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to add.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 243
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddOption(DataValueType dataValueType, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The value type to consider.
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(dataValueType As DataValueType, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(Type, RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 260
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  example: []
  syntax:
    content: public IOptionSpecSet AddOption(Type type, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: type
      type: System.Type
      description: The type to consider.
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the option to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(type As Type, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(Type, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  id: RemoveOption(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: RemoveOption(String)
  nameWithType: OptionSpecSet.RemoveOption(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: RemoveOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 275
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nDeletes the specified option.\n"
  example: []
  syntax:
    content: public IOptionSpecSet RemoveOption(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the statement entry to remove.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function RemoveOption(name As String) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.RemoveOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  id: HasOption(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: HasOption(String)
  nameWithType: OptionSpecSet.HasOption(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: HasOption
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 294
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nIndicates whether this instance has the specified option.\n"
  example: []
  syntax:
    content: public bool HasOption(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the option to consider.
    return:
      type: System.Boolean
    content.vb: Public Function HasOption(name As String) As Boolean
  overload: BindOpen.Application.Options.OptionSpecSet.HasOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  id: GetItem(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: GetItem(String)
  nameWithType: OptionSpecSet.GetItem(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetItem
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 304
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nReturns the item with the specified name.\n"
  example: []
  syntax:
    content: public override OptionSpec GetItem(string key)
    parameters:
    - id: key
      type: System.String
      description: The name of the alias of the item to return.
    return:
      type: BindOpen.Application.Options.OptionSpec
      description: Returns the item with the specified name.
    content.vb: Public Overrides Function GetItem(key As String) As OptionSpec
  overridden: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  overload: BindOpen.Application.Options.OptionSpecSet.GetItem*
  implements:
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  id: AddDescription(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddDescription(String)
  nameWithType: OptionSpecSet.AddDescription(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddDescription
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 324
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds the title text.\n"
  example: []
  syntax:
    content: public void AddDescription(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub AddDescription(text As String)
  overload: BindOpen.Application.Options.OptionSpecSet.AddDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String,System.String)
  id: AddDescription(System.String,System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddDescription(String, String)
  nameWithType: OptionSpecSet.AddDescription(String, String)
  fullName: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddDescription
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 334
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds the title text.\n"
  example: []
  syntax:
    content: public void AddDescription(string key, string text)
    parameters:
    - id: key
      type: System.String
      description: The key to consider.
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub AddDescription(key As String, text As String)
  overload: BindOpen.Application.Options.OptionSpecSet.AddDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  id: SetDescription(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: SetDescription(String)
  nameWithType: OptionSpecSet.SetDescription(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDescription
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 343
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nSets the title text.\n"
  example: []
  syntax:
    content: public void SetDescription(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub SetDescription(text As String)
  overload: BindOpen.Application.Options.OptionSpecSet.SetDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String,System.String)
  id: SetDescription(System.String,System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: SetDescription(String, String)
  nameWithType: OptionSpecSet.SetDescription(String, String)
  fullName: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDescription
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 353
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nSets the title text.\n"
  example: []
  syntax:
    content: public void SetDescription(string key = "*", string text = "*")
    parameters:
    - id: key
      type: System.String
      description: The key to consider.
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub SetDescription(key As String = "*", text As String = "*")
  overload: BindOpen.Application.Options.OptionSpecSet.SetDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String,System.String)
  id: GetDescription(System.String,System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: GetDescription(String, String)
  nameWithType: OptionSpecSet.GetDescription(String, String)
  fullName: BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetDescription
    path: ../src/BindOpen.Runtime/Application/Options/OptionSpecSet.cs
    startLine: 363
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nReturns the description label.\n"
  example: []
  syntax:
    content: public virtual string GetDescription(string variantName = "*", string defaultVariantName = "*")
    parameters:
    - id: variantName
      type: System.String
      description: The variant variant name to consider.
    - id: defaultVariantName
      type: System.String
      description: The default variant name to consider.
    return:
      type: System.String
    content.vb: Public Overridable Function GetDescription(variantName As String = "*", defaultVariantName As String = "*") As String
  overload: BindOpen.Application.Options.OptionSpecSet.GetDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: BindOpen.Application.Options
  commentId: N:BindOpen.Application.Options
  name: BindOpen.Application.Options
  nameWithType: BindOpen.Application.Options
  fullName: BindOpen.Application.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  commentId: T:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<OptionSpec>
  nameWithType: DataItemSet<OptionSpec>
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>
  nameWithType.vb: DataItemSet(Of OptionSpec)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec)
  name.vb: DataItemSet(Of OptionSpec)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet
  commentId: T:BindOpen.Application.Options.IOptionSpecSet
  parent: BindOpen.Application.Options
  name: IOptionSpecSet
  nameWithType: IOptionSpecSet
  fullName: BindOpen.Application.Options.IOptionSpecSet
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  commentId: T:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<OptionSpec>
  nameWithType: IDataItemSet<OptionSpec>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>
  nameWithType.vb: IDataItemSet(Of OptionSpec)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec)
  name.vb: IDataItemSet(Of OptionSpec)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IIndexed
  commentId: T:BindOpen.Data.Items.IIndexed
  parent: BindOpen.Data.Items
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}._items
  commentId: F:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}._items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<OptionSpec>._items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>._items
  nameWithType.vb: DataItemSet(Of OptionSpec)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec)._items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Items
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<OptionSpec>.Items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Items
  nameWithType.vb: DataItemSet(Of OptionSpec).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.ItemsSpecified
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<OptionSpec>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of OptionSpec).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Count
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Count
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<OptionSpec>.Count
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Count
  nameWithType.vb: DataItemSet(Of OptionSpec).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Count
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.Int32)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: DataItemSet<OptionSpec>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of OptionSpec).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<OptionSpec>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of OptionSpec).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  name: Item[String]
  nameWithType: DataItemSet<OptionSpec>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Item[System.String]
  nameWithType.vb: DataItemSet(Of OptionSpec).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<OptionSpec>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of OptionSpec).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.ClearItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<OptionSpec>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.ClearItems()
  nameWithType.vb: DataItemSet(Of OptionSpec).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<OptionSpec>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of OptionSpec).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(OptionSpec[])
  nameWithType: DataItemSet<OptionSpec>.Add(OptionSpec[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Add(BindOpen.Application.Options.OptionSpec[])
  nameWithType.vb: DataItemSet(Of OptionSpec).Add(OptionSpec())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Add(BindOpen.Application.Options.OptionSpec())
  name.vb: Add(OptionSpec())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<OptionSpec>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of OptionSpec).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Remove(System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  name: Remove(String[])
  nameWithType: DataItemSet<OptionSpec>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of OptionSpec).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<OptionSpec>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of OptionSpec).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.HasItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<OptionSpec>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.HasItems()
  nameWithType.vb: DataItemSet(Of OptionSpec).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<OptionSpec>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of OptionSpec).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.HasItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  name: HasItem(String)
  nameWithType: DataItemSet<OptionSpec>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of OptionSpec).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<OptionSpec>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of OptionSpec).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<OptionSpec>)
  nameWithType: DataItemSet<OptionSpec>.GetCommonItemKeys(IDataItemSet<OptionSpec>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>)
  nameWithType.vb: DataItemSet(Of OptionSpec).GetCommonItemKeys(IDataItemSet(Of OptionSpec))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec))
  name.vb: GetCommonItemKeys(IDataItemSet(Of OptionSpec))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<OptionSpec>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of OptionSpec).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec,BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec,BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(OptionSpec, IDataItemSet<OptionSpec>)
  nameWithType: DataItemSet<OptionSpec>.Add(OptionSpec, IDataItemSet<OptionSpec>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Add(BindOpen.Application.Options.OptionSpec, BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>)
  nameWithType.vb: DataItemSet(Of OptionSpec).Add(OptionSpec, IDataItemSet(Of OptionSpec))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Add(BindOpen.Application.Options.OptionSpec, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec))
  name.vb: Add(OptionSpec, IDataItemSet(Of OptionSpec))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<OptionSpec>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of OptionSpec).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(System.Collections.Generic.List{BindOpen.Application.Options.OptionSpec},BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Add(System.Collections.Generic.List{BindOpen.Application.Options.OptionSpec},BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(List<OptionSpec>, IDataItemSet<OptionSpec>)
  nameWithType: DataItemSet<OptionSpec>.Add(List<OptionSpec>, IDataItemSet<OptionSpec>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Add(System.Collections.Generic.List<BindOpen.Application.Options.OptionSpec>, BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>)
  nameWithType.vb: DataItemSet(Of OptionSpec).Add(List(Of OptionSpec), IDataItemSet(Of OptionSpec))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Add(System.Collections.Generic.List(Of BindOpen.Application.Options.OptionSpec), BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec))
  name.vb: Add(List(Of OptionSpec), IDataItemSet(Of OptionSpec))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<OptionSpec>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of OptionSpec).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<OptionSpec>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of OptionSpec).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<OptionSpec>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of OptionSpec).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Check``1(System.Boolean,{T1},System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<OptionSpec>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of OptionSpec).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<OptionSpec>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of OptionSpec).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<OptionSpec>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of OptionSpec).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<OptionSpec>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of OptionSpec).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<OptionSpec>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of OptionSpec).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<OptionSpec>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of OptionSpec).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<OptionSpec>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of OptionSpec).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<OptionSpec>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of OptionSpec).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.Clone
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.Clone
  name: Clone()
  nameWithType: DataItemSet<OptionSpec>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Clone()
  nameWithType.vb: DataItemSet(Of OptionSpec).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<OptionSpec>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of OptionSpec).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.PropertyChanged
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<OptionSpec>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.PropertyChanged
  nameWithType.vb: DataItemSet(Of OptionSpec).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.OnPropertyChanged(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<OptionSpec>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of OptionSpec).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<OptionSpec>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of OptionSpec).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.Key
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Key
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Key()
  nameWithType: IdentifiedDataItem.Key()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Items.DataItemSet`1
  commentId: T:BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<T>
  nameWithType: DataItemSet<T>
  fullName: BindOpen.Data.Items.DataItemSet<T>
  nameWithType.vb: DataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)
  name.vb: DataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  commentId: T:BindOpen.Data.Items.IDataItemSet`1
  parent: BindOpen.Data.Items
  name: IDataItemSet<T>
  nameWithType: IDataItemSet<T>
  fullName: BindOpen.Data.Items.IDataItemSet<T>
  nameWithType.vb: IDataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T)
  name.vb: IDataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1._items
  commentId: F:BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<T>._items
  fullName: BindOpen.Data.Items.DataItemSet<T>._items
  nameWithType.vb: DataItemSet(Of T)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)._items
- uid: BindOpen.Data.Items.DataItemSet`1.Items
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<T>.Items
  fullName: BindOpen.Data.Items.DataItemSet<T>.Items
  nameWithType.vb: DataItemSet(Of T).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Items
- uid: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<T>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<T>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of T).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet`1.Count
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<T>.Count
  fullName: BindOpen.Data.Items.DataItemSet<T>.Count
  nameWithType.vb: DataItemSet(Of T).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Count
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: DataItemSet<T>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of T).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: DataItemSet<T>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.String]
  nameWithType.vb: DataItemSet(Of T).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<T>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems()
  nameWithType.vb: DataItemSet(Of T).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<T>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of T).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(T[])
  nameWithType: DataItemSet<T>.Add(T[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T[])
  nameWithType.vb: DataItemSet(Of T).Add(T())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T())
  name.vb: Add(T())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  isExternal: true
  name: Remove(String[])
  nameWithType: DataItemSet<T>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of T).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<T>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of T).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<T>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems()
  nameWithType.vb: DataItemSet(Of T).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<T>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of T).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  isExternal: true
  name: HasItem(String)
  nameWithType: DataItemSet<T>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of T).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<T>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of T).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<T>)
  nameWithType: DataItemSet<T>.GetCommonItemKeys(IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).GetCommonItemKeys(IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: GetCommonItemKeys(IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<T>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of T).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(T, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(T, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(T, IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T, BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(T, IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(List<T>, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(List<T>, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(System.Collections.Generic.List<T>, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(List(Of T), IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(System.Collections.Generic.List(Of T), BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(List(Of T), IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<T>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of T).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<T>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of T).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<T>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of T).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<T>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of T).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<T>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<T>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of T).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<T>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<T>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of T).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Clone
  name: Clone()
  nameWithType: DataItemSet<T>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<T>.Clone()
  nameWithType.vb: DataItemSet(Of T).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<T>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of T).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<T>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<T>.PropertyChanged
  nameWithType.vb: DataItemSet(Of T).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<T>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of T).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<T>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of T).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Application.Options.OptionSpecSet.Description*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Description
  name: Description
  nameWithType: OptionSpecSet.Description
  fullName: BindOpen.Application.Options.OptionSpecSet.Description
- uid: BindOpen.Data.Items.IGloballyDescribed.Description
  commentId: P:BindOpen.Data.Items.IGloballyDescribed.Description
  parent: BindOpen.Data.Items.IGloballyDescribed
  name: Description
  nameWithType: IGloballyDescribed.Description
  fullName: BindOpen.Data.Items.IGloballyDescribed.Description
- uid: BindOpen.Data.Items.DictionaryDataItem
  commentId: T:BindOpen.Data.Items.DictionaryDataItem
  parent: BindOpen.Data.Items
  name: DictionaryDataItem
  nameWithType: DictionaryDataItem
  fullName: BindOpen.Data.Items.DictionaryDataItem
- uid: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  name: DescriptionSpecified
  nameWithType: OptionSpecSet.DescriptionSpecified
  fullName: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Options.OptionSpecSet.Name*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Name
  name: Name
  nameWithType: OptionSpecSet.Name
  fullName: BindOpen.Application.Options.OptionSpecSet.Name
- uid: BindOpen.Data.Items.INamed.Name
  commentId: P:BindOpen.Data.Items.INamed.Name
  parent: BindOpen.Data.Items.INamed
  name: Name
  nameWithType: INamed.Name
  fullName: BindOpen.Data.Items.INamed.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Options.OptionSpecSet.Index*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Index
  name: Index
  nameWithType: OptionSpecSet.Index
  fullName: BindOpen.Application.Options.OptionSpecSet.Index
- uid: BindOpen.Data.Items.IIndexed.Index
  commentId: P:BindOpen.Data.Items.IIndexed.Index
  parent: BindOpen.Data.Items.IIndexed
  name: Index
  nameWithType: IIndexed.Index
  fullName: BindOpen.Data.Items.IIndexed.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Application.Options.OptionSpecSet.Condition*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Condition
  name: Condition
  nameWithType: OptionSpecSet.Condition
  fullName: BindOpen.Application.Options.OptionSpecSet.Condition
- uid: BindOpen.Application.Options.IOptionSpecSet.Condition
  commentId: P:BindOpen.Application.Options.IOptionSpecSet.Condition
  parent: BindOpen.Application.Options.IOptionSpecSet
  name: Condition
  nameWithType: IOptionSpecSet.Condition
  fullName: BindOpen.Application.Options.IOptionSpecSet.Condition
- uid: BindOpen.Data.Conditions.Condition
  commentId: T:BindOpen.Data.Conditions.Condition
  parent: BindOpen.Data.Conditions
  name: Condition
  nameWithType: Condition
  fullName: BindOpen.Data.Conditions.Condition
- uid: BindOpen.Data.Conditions
  commentId: N:BindOpen.Data.Conditions
  name: BindOpen.Data.Conditions
  nameWithType: BindOpen.Data.Conditions
  fullName: BindOpen.Data.Conditions
- uid: BindOpen.Application.Options.OptionSpecSet.SubSets*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.SubSets
  name: SubSets
  nameWithType: OptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.OptionSpecSet.SubSets
- uid: BindOpen.Application.Options.IOptionSpecSet.SubSets
  commentId: P:BindOpen.Application.Options.IOptionSpecSet.SubSets
  parent: BindOpen.Application.Options.IOptionSpecSet
  name: SubSets
  nameWithType: IOptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.IOptionSpecSet.SubSets
- uid: System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
  commentId: T:System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<OptionSpecSet>
  nameWithType: List<OptionSpecSet>
  fullName: System.Collections.Generic.List<BindOpen.Application.Options.OptionSpecSet>
  nameWithType.vb: List(Of OptionSpecSet)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Application.Options.OptionSpecSet)
  name.vb: List(Of OptionSpecSet)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpecSet
    name: OptionSpecSet
    nameWithType: OptionSpecSet
    fullName: BindOpen.Application.Options.OptionSpecSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpecSet
    name: OptionSpecSet
    nameWithType: OptionSpecSet
    fullName: BindOpen.Application.Options.OptionSpecSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.#ctor
  name: OptionSpecSet
  nameWithType: OptionSpecSet.OptionSpecSet
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet
- uid: BindOpen.Application.Options.IOptionSpec[]
  isExternal: true
  name: IOptionSpec[]
  nameWithType: IOptionSpec[]
  fullName: BindOpen.Application.Options.IOptionSpec[]
  nameWithType.vb: IOptionSpec()
  fullName.vb: BindOpen.Application.Options.IOptionSpec()
  name.vb: IOptionSpec()
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Conditions.ICondition
  commentId: T:BindOpen.Data.Conditions.ICondition
  parent: BindOpen.Data.Conditions
  name: ICondition
  nameWithType: ICondition
  fullName: BindOpen.Data.Conditions.ICondition
- uid: BindOpen.Application.Options.OptionSpecSet.GetHelpText*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.GetHelpText
  name: GetHelpText
  nameWithType: OptionSpecSet.GetHelpText
  fullName: BindOpen.Application.Options.OptionSpecSet.GetHelpText
- uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: GetHelpText(String)
  nameWithType: IOptionSpecSet.GetHelpText(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
    name: GetHelpText
    nameWithType: IOptionSpecSet.GetHelpText
    fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
    name: GetHelpText
    nameWithType: IOptionSpecSet.GetHelpText
    fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.ClearOptions*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.ClearOptions
  name: ClearOptions
  nameWithType: OptionSpecSet.ClearOptions
  fullName: BindOpen.Application.Options.OptionSpecSet.ClearOptions
- uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  parent: BindOpen.Application.Options.IOptionSpecSet
  name: ClearOptions()
  nameWithType: IOptionSpecSet.ClearOptions()
  fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions()
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
    name: ClearOptions
    nameWithType: IOptionSpecSet.ClearOptions
    fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
    name: ClearOptions
    nameWithType: IOptionSpecSet.ClearOptions
    fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.AddSubSet
  name: AddSubSet
  nameWithType: OptionSpecSet.AddSubSet
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  parent: BindOpen.Application.Options.IOptionSpecSet
  name: AddSubSet(IOptionSpecSet)
  nameWithType: IOptionSpecSet.AddSubSet(IOptionSpecSet)
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  name: AddSubSet(IOptionSpec[])
  nameWithType: IOptionSpecSet.AddSubSet(IOptionSpec[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: IOptionSpecSet.AddSubSet(IOptionSpec())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(IOptionSpec())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  name: AddSubSet(ICondition, IOptionSpec[])
  nameWithType: IOptionSpecSet.AddSubSet(ICondition, IOptionSpec[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: IOptionSpecSet.AddSubSet(ICondition, IOptionSpec())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(ICondition, IOptionSpec())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: BindOpen.Data.Conditions.ICondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: BindOpen.Data.Conditions.ICondition
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.AddOption
  name: AddOption
  nameWithType: OptionSpecSet.AddOption
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(String[])
  nameWithType: IOptionSpecSet.AddOption(String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String())
  name.vb: AddOption(String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionNameKind
  commentId: T:BindOpen.Application.Options.OptionNameKind
  parent: BindOpen.Application.Options
  name: OptionNameKind
  nameWithType: OptionNameKind
  fullName: BindOpen.Application.Options.OptionNameKind
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(RequirementLevel, String[])
  nameWithType: IOptionSpecSet.AddOption(RequirementLevel, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(RequirementLevel, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String())
  name.vb: AddOption(RequirementLevel, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.RequirementLevel
  commentId: T:BindOpen.Data.Common.RequirementLevel
  parent: BindOpen.Data.Common
  name: RequirementLevel
  nameWithType: RequirementLevel
  fullName: BindOpen.Data.Common.RequirementLevel
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(DataValueType, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(DataValueType, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(DataValueType, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(RequirementLevel, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(Type, RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(Type, RequirementLevel, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: BindOpen.Application.Options.OptionSpecSet.RemoveOption*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.RemoveOption
  name: RemoveOption
  nameWithType: OptionSpecSet.RemoveOption
  fullName: BindOpen.Application.Options.OptionSpecSet.RemoveOption
- uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: RemoveOption(String)
  nameWithType: IOptionSpecSet.RemoveOption(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
    name: RemoveOption
    nameWithType: IOptionSpecSet.RemoveOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
    name: RemoveOption
    nameWithType: IOptionSpecSet.RemoveOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.HasOption*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.HasOption
  name: HasOption
  nameWithType: OptionSpecSet.HasOption
  fullName: BindOpen.Application.Options.OptionSpecSet.HasOption
- uid: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: HasOption(String)
  nameWithType: IOptionSpecSet.HasOption(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
    name: HasOption
    nameWithType: IOptionSpecSet.HasOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
    name: HasOption
    nameWithType: IOptionSpecSet.HasOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  name: GetItem(String)
  nameWithType: DataItemSet<OptionSpec>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of OptionSpec).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<OptionSpec>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Options.OptionSpec>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of OptionSpec).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Options.OptionSpec).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.GetItem*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.GetItem
  name: GetItem
  nameWithType: OptionSpecSet.GetItem
  fullName: BindOpen.Application.Options.OptionSpecSet.GetItem
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
  name: GetItem(String)
  nameWithType: IDataItemSet<OptionSpec>.GetItem(String)
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.GetItem(System.String)
  nameWithType.vb: IDataItemSet(Of OptionSpec).GetItem(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet<OptionSpec>.GetItem
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet(Of OptionSpec).GetItem
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpec
  commentId: T:BindOpen.Application.Options.OptionSpec
  parent: BindOpen.Application.Options
  name: OptionSpec
  nameWithType: OptionSpec
  fullName: BindOpen.Application.Options.OptionSpec
- uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  isExternal: true
  name: GetItem(String)
  nameWithType: DataItemSet<T>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of T).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<T>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of T).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
  isExternal: true
  name: GetItem(String)
  nameWithType: IDataItemSet<T>.GetItem(String)
  fullName: BindOpen.Data.Items.IDataItemSet<T>.GetItem(System.String)
  nameWithType.vb: IDataItemSet(Of T).GetItem(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet<T>.GetItem
    fullName: BindOpen.Data.Items.IDataItemSet<T>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet(Of T).GetItem
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.AddDescription*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.AddDescription
  name: AddDescription
  nameWithType: OptionSpecSet.AddDescription
  fullName: BindOpen.Application.Options.OptionSpecSet.AddDescription
- uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: AddDescription(String)
  nameWithType: IGloballyDescribed.AddDescription(String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: IGloballyDescribed.AddDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.SetDescription*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.SetDescription
  name: SetDescription
  nameWithType: OptionSpecSet.SetDescription
  fullName: BindOpen.Application.Options.OptionSpecSet.SetDescription
- uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: SetDescription(String)
  nameWithType: IGloballyDescribed.SetDescription(String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: IGloballyDescribed.SetDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.GetDescription*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.GetDescription
  name: GetDescription
  nameWithType: OptionSpecSet.GetDescription
  fullName: BindOpen.Application.Options.OptionSpecSet.GetDescription
- uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: IGloballyDescribed.GetDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: IGloballyDescribed.GetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: IGloballyDescribed.GetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
