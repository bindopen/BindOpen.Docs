### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Elements.DataElementSpec
  commentId: T:BindOpen.Data.Elements.DataElementSpec
  id: DataElementSpec
  parent: BindOpen.Data.Elements
  children:
  - BindOpen.Data.Elements.DataElementSpec.#ctor
  - BindOpen.Data.Elements.DataElementSpec.#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])
  - BindOpen.Data.Elements.DataElementSpec.__Arenames
  - BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  - BindOpen.Data.Elements.DataElementSpec.Aliases
  - BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  - BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  - BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  - BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  - BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  - BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  - BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  - BindOpen.Data.Elements.DataElementSpec.Clone
  - BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  - BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  - BindOpen.Data.Elements.DataElementSpec.DefaultItems
  - BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  - BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  - BindOpen.Data.Elements.DataElementSpec.DesignStatement
  - BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  - BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  - BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  - BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElementSpec.GroupId
  - BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  - BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  - BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  - BindOpen.Data.Elements.DataElementSpec.IsValueList
  - BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  - BindOpen.Data.Elements.DataElementSpec.ItemScript
  - BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  - BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  - BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  - BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  - BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  - BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  - BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  - BindOpen.Data.Elements.DataElementSpec.ValueType
  langs:
  - csharp
  - vb
  name: DataElementSpec
  nameWithType: DataElementSpec
  fullName: BindOpen.Data.Elements.DataElementSpec
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DataElementSpec
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 16
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThis class represents a data element specification.\n"
  example: []
  syntax:
    content: 'public abstract class DataElementSpec : DataSpecification, IDataElementSpec, IDataSpecification, IIndexedDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed'
    content.vb: >-
      Public MustInherit Class DataElementSpec
          Inherits DataSpecification
          Implements IDataElementSpec, IDataSpecification, IIndexedDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.StoredDataItem
  - BindOpen.Data.Items.NamedDataItem
  - BindOpen.Data.Items.TitledDataItem
  - BindOpen.Data.Items.DescribedDataItem
  - BindOpen.Data.Items.IndexedDataItem
  - BindOpen.Data.Specification.DataSpecification
  derivedClasses:
  - BindOpen.Data.Elements.CarrierElementSpec
  - BindOpen.Data.Elements.CollectionElementSpec
  - BindOpen.Data.Elements.DocumentElementSpec
  - BindOpen.Data.Elements.ObjectElementSpec
  - BindOpen.Data.Elements.ScalarElementSpec
  - BindOpen.Data.Elements.Schema.SchemaElementSpec
  - BindOpen.Data.Elements.SourceElementSpec
  implements:
  - BindOpen.Data.Elements.IDataElementSpec
  - BindOpen.Data.Specification.IDataSpecification
  - BindOpen.Data.Items.IIndexedDataItem
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  - BindOpen.Data.Items.IIndexed
  inheritedMembers:
  - BindOpen.Data.Specification.DataSpecification.RequirementLevel
  - BindOpen.Data.Specification.DataSpecification.RequirementScript
  - BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
  - BindOpen.Data.Specification.DataSpecification.InheritanceLevel
  - BindOpen.Data.Specification.DataSpecification.SpecificationLevels
  - BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
  - BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
  - BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  - BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  - BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  - BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  - BindOpen.Data.Items.IndexedDataItem.Index
  - BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  - BindOpen.Data.Items.DescribedDataItem.Description
  - BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  - BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.TitledDataItem.Title
  - BindOpen.Data.Items.TitledDataItem.TitleSpecified
  - BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  - BindOpen.Data.Items.NamedDataItem.Name
  - BindOpen.Data.Items.NamedDataItem.NameSpecified
  - BindOpen.Data.Items.NamedDataItem.Key
  - BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  - BindOpen.Data.Items.StoredDataItem.NamePreffix
  - BindOpen.Data.Items.StoredDataItem.CreationDate
  - BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.LastModificationDate
  - BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Data.Elements.DataElementSpec.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.DataElementSpec})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: BindOpen.Data.Elements.DataElementSpec.__Arenames
  commentId: F:BindOpen.Data.Elements.DataElementSpec.__Arenames
  id: __Arenames
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: __Arenames
  nameWithType: DataElementSpec.__Arenames
  fullName: BindOpen.Data.Elements.DataElementSpec.__Arenames
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __Arenames
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 35
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nNames of the attribute areas of the DataElementSpec class.\n"
  example: []
  syntax:
    content: public static string[] __Arenames
    return:
      type: System.String[]
    content.vb: Public Shared __Arenames As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Elements.DataElementSpec.GroupId
  commentId: P:BindOpen.Data.Elements.DataElementSpec.GroupId
  id: GroupId
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: GroupId
  nameWithType: DataElementSpec.GroupId
  fullName: BindOpen.Data.Elements.DataElementSpec.GroupId
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GroupId
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 87
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nID of the group of this instance.\n"
  example: []
  syntax:
    content: public string GroupId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupId As String
  overload: BindOpen.Data.Elements.DataElementSpec.GroupId*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.GroupId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  id: GroupIdSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: GroupIdSpecified
  nameWithType: DataElementSpec.GroupIdSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GroupIdSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 97
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the GroupId property of this instance.\n"
  example: []
  syntax:
    content: public bool GroupIdSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property GroupIdSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.ValueType
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ValueType
  id: ValueType
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: DataElementSpec.ValueType
  fullName: BindOpen.Data.Elements.DataElementSpec.ValueType
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ValueType
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 103
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe value type of this instance.\n"
  example: []
  syntax:
    content: public DataValueType ValueType { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Common.DataValueType
    content.vb: Public Property ValueType As DataValueType
  overload: BindOpen.Data.Elements.DataElementSpec.ValueType*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.ValueType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.Aliases
  commentId: P:BindOpen.Data.Elements.DataElementSpec.Aliases
  id: Aliases
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: Aliases
  nameWithType: DataElementSpec.Aliases
  fullName: BindOpen.Data.Elements.DataElementSpec.Aliases
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Aliases
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 109
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe aliases of the entry.\n"
  example: []
  syntax:
    content: public List<string> Aliases { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property Aliases As List(Of String)
  overload: BindOpen.Data.Elements.DataElementSpec.Aliases*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.Aliases
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  id: AliasesSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: AliasesSpecified
  nameWithType: DataElementSpec.AliasesSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AliasesSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 123
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the Aliases property of this instance.\n"
  example: []
  syntax:
    content: public bool AliasesSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AliasesSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.AliasesSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  id: AreaSpecifications
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: AreaSpecifications
  nameWithType: DataElementSpec.AreaSpecifications
  fullName: BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AreaSpecifications
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 129
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe area specifications of this instance.\n"
  example: []
  syntax:
    content: public List<DataAreaSpecification> AreaSpecifications { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Specification.DataAreaSpecification}
    content.vb: Public Property AreaSpecifications As List(Of DataAreaSpecification)
  overload: BindOpen.Data.Elements.DataElementSpec.AreaSpecifications*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  id: AreaSpecificationsSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: AreaSpecificationsSpecified
  nameWithType: DataElementSpec.AreaSpecificationsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AreaSpecificationsSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 142
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the AreaSpecifications property of this instance.\n"
  example: []
  syntax:
    content: public bool AreaSpecificationsSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AreaSpecificationsSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  commentId: P:BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  id: IsAllocatable
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: IsAllocatable
  nameWithType: DataElementSpec.IsAllocatable
  fullName: BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsAllocatable
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 148
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nIndicates whether the instance can be allocated.\n"
  example: []
  syntax:
    content: public bool IsAllocatable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAllocatable As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.IsAllocatable*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  id: IsAllocatableSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: IsAllocatableSpecified
  nameWithType: DataElementSpec.IsAllocatableSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsAllocatableSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 155
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the IsAllocatable property of this instance.\n"
  example: []
  syntax:
    content: public bool IsAllocatableSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAllocatableSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.ItemScript
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemScript
  id: ItemScript
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ItemScript
  nameWithType: DataElementSpec.ItemScript
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemScript
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemScript
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 163
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe script of this instance.\n"
  example: []
  syntax:
    content: public string ItemScript { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ItemScript As String
  overload: BindOpen.Data.Elements.DataElementSpec.ItemScript*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.ItemScript
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  id: ItemScriptSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ItemScriptSpecified
  nameWithType: DataElementSpec.ItemScriptSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemScriptSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 169
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ItemScript property of this instance.\n"
  example: []
  syntax:
    content: public bool ItemScriptSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ItemScriptSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  id: AvailableItemizationModes
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: AvailableItemizationModes
  nameWithType: DataElementSpec.AvailableItemizationModes
  fullName: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AvailableItemizationModes
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 175
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe available itemization modes of this instance.\n"
  example: []
  syntax:
    content: public List<DataItemizationMode> AvailableItemizationModes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Items.DataItemizationMode}
    content.vb: Public Property AvailableItemizationModes As List(Of DataItemizationMode)
  overload: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  id: AvailableItemizationModesSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: AvailableItemizationModesSpecified
  nameWithType: DataElementSpec.AvailableItemizationModesSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AvailableItemizationModesSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 192
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the AvailableItemizationModes property of this instance.\n"
  example: []
  syntax:
    content: public bool AvailableItemizationModesSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AvailableItemizationModesSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  id: DefaultStringItems
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: DefaultStringItems
  nameWithType: DataElementSpec.DefaultStringItems
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DefaultStringItems
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 198
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nDefault string items of this instance.\n"
  example: []
  syntax:
    content: public List<string> DefaultStringItems { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property DefaultStringItems As List(Of String)
  overload: BindOpen.Data.Elements.DataElementSpec.DefaultStringItems*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  id: DefaultStringItemsSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: DefaultStringItemsSpecified
  nameWithType: DataElementSpec.DefaultStringItemsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DefaultStringItemsSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 209
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the DefaultStringItems property of this instance.\n"
  example: []
  syntax:
    content: public bool DefaultStringItemsSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DefaultStringItemsSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultItems
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DefaultItems
  id: DefaultItems
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: DefaultItems
  nameWithType: DataElementSpec.DefaultItems
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultItems
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DefaultItems
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 215
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nDefault items of this instance.\n"
  example: []
  syntax:
    content: public List<object> DefaultItems { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Public Property DefaultItems As List(Of Object)
  overload: BindOpen.Data.Elements.DataElementSpec.DefaultItems*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  commentId: P:BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  id: MinimumItemNumber
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: MinimumItemNumber
  nameWithType: DataElementSpec.MinimumItemNumber
  fullName: BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: MinimumItemNumber
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 225
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nMinimum item number of this instance.\n"
  example: []
  syntax:
    content: public int MinimumItemNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinimumItemNumber As Integer
  overload: BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  commentId: P:BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  id: MaximumItemNumber
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: MaximumItemNumber
  nameWithType: DataElementSpec.MaximumItemNumber
  fullName: BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: MaximumItemNumber
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 232
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nMaximum item number of this instance.\n"
  example: []
  syntax:
    content: public int MaximumItemNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaximumItemNumber As Integer
  overload: BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.IsValueList
  commentId: P:BindOpen.Data.Elements.DataElementSpec.IsValueList
  id: IsValueList
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: IsValueList
  nameWithType: DataElementSpec.IsValueList
  fullName: BindOpen.Data.Elements.DataElementSpec.IsValueList
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsValueList
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 239
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nIndicates whether the value of this instance is a list.\n"
  example: []
  syntax:
    content: public bool IsValueList { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValueList As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.IsValueList*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.IsValueList
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  id: ItemRequirementLevel
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ItemRequirementLevel
  nameWithType: DataElementSpec.ItemRequirementLevel
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemRequirementLevel
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 245
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe item requirement level of this instance.\n"
  example: []
  syntax:
    content: public RequirementLevel ItemRequirementLevel { get; }
    parameters: []
    return:
      type: BindOpen.Data.Common.RequirementLevel
    content.vb: Public ReadOnly Property ItemRequirementLevel As RequirementLevel
  overload: BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  id: ItemSpecificationLevels
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ItemSpecificationLevels
  nameWithType: DataElementSpec.ItemSpecificationLevels
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemSpecificationLevels
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 272
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nLevels of specification of this instance.\n"
  example: []
  syntax:
    content: public List<SpecificationLevels> ItemSpecificationLevels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Common.SpecificationLevels}
    content.vb: Public Property ItemSpecificationLevels As List(Of SpecificationLevels)
  overload: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  id: ItemSpecificationLevelsSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ItemSpecificationLevelsSpecified
  nameWithType: DataElementSpec.ItemSpecificationLevelsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemSpecificationLevelsSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 283
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the SpecificationLevels property of this instance.\n"
  example: []
  syntax:
    content: public bool ItemSpecificationLevelsSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ItemSpecificationLevelsSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  id: ConstraintStatement
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ConstraintStatement
  nameWithType: DataElementSpec.ConstraintStatement
  fullName: BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ConstraintStatement
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 291
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nConstraint statement of this instance.\n"
  example: []
  syntax:
    content: public DataConstraintStatement ConstraintStatement { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Specification.DataConstraintStatement
    content.vb: Public Property ConstraintStatement As DataConstraintStatement
  overload: BindOpen.Data.Elements.DataElementSpec.ConstraintStatement*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  id: ConstraintStatementSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: ConstraintStatementSpecified
  nameWithType: DataElementSpec.ConstraintStatementSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ConstraintStatementSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 301
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ConstraintStatement property of this instance.\n"
  example: []
  syntax:
    content: public bool ConstraintStatementSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ConstraintStatementSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.DesignStatement
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DesignStatement
  id: DesignStatement
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: DesignStatement
  nameWithType: DataElementSpec.DesignStatement
  fullName: BindOpen.Data.Elements.DataElementSpec.DesignStatement
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DesignStatement
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 309
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nDesign statement of this instance.\n"
  example: []
  syntax:
    content: public DataDesignStatement DesignStatement { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Specification.DataDesignStatement
    content.vb: Public Property DesignStatement As DataDesignStatement
  overload: BindOpen.Data.Elements.DataElementSpec.DesignStatement*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  id: DesignStatementSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: DesignStatementSpecified
  nameWithType: DataElementSpec.DesignStatementSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DesignStatementSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 319
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the DesignStatement property of this instance.\n"
  example: []
  syntax:
    content: public bool DesignStatementSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DesignStatementSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElementSpec.#ctor
  commentId: M:BindOpen.Data.Elements.DataElementSpec.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: DataElementSpec()
  nameWithType: DataElementSpec.DataElementSpec()
  fullName: BindOpen.Data.Elements.DataElementSpec.DataElementSpec()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 333
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nInitializes a new instance of the DataElementSpec class.\n"
  example: []
  syntax:
    content: protected DataElementSpec()
    content.vb: Protected Sub New
  overload: BindOpen.Data.Elements.DataElementSpec.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Data.Elements.DataElementSpec.#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])
  commentId: M:BindOpen.Data.Elements.DataElementSpec.#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])
  id: '#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])'
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: DataElementSpec(AccessibilityLevels, SpecificationLevels[])
  nameWithType: DataElementSpec.DataElementSpec(AccessibilityLevels, SpecificationLevels[])
  fullName: BindOpen.Data.Elements.DataElementSpec.DataElementSpec(BindOpen.Data.Common.AccessibilityLevels, BindOpen.Data.Common.SpecificationLevels[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 342
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nInitializes a new instance of the DataElementSpec class.\n"
  example: []
  syntax:
    content: protected DataElementSpec(AccessibilityLevels accessibilityLevel = AccessibilityLevels.Public, SpecificationLevels[] specificationLevels = null)
    parameters:
    - id: accessibilityLevel
      type: BindOpen.Data.Common.AccessibilityLevels
      description: The accessibilty level of this instance.
    - id: specificationLevels
      type: BindOpen.Data.Common.SpecificationLevels[]
      description: The specification levels of this instance.
    content.vb: Protected Sub New(accessibilityLevel As AccessibilityLevels = AccessibilityLevels.Public, specificationLevels As SpecificationLevels() = Nothing)
  overload: BindOpen.Data.Elements.DataElementSpec.#ctor*
  nameWithType.vb: DataElementSpec.DataElementSpec(AccessibilityLevels, SpecificationLevels())
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.DataElementSpec(BindOpen.Data.Common.AccessibilityLevels, BindOpen.Data.Common.SpecificationLevels())
  name.vb: DataElementSpec(AccessibilityLevels, SpecificationLevels())
- uid: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  id: AddDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: AddDefaultItem(Object)
  nameWithType: DataElementSpec.AddDefaultItem(Object)
  fullName: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddDefaultItem
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 364
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nAdds the specified default item of this instance.\n"
  remarks: Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..
  example: []
  syntax:
    content: public bool AddDefaultItem(object item)
    parameters:
    - id: item
      type: System.Object
      description: The default item of this instance.
    return:
      type: System.Boolean
      description: Returns True if the default item has well been Added.
    content.vb: Public Function AddDefaultItem(item As Object) As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  id: SetDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: SetDefaultItem(Object)
  nameWithType: DataElementSpec.SetDefaultItem(Object)
  fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDefaultItem
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 376
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSets the specified default item of this instance.\n"
  remarks: Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..
  example: []
  syntax:
    content: public bool SetDefaultItem(object item)
    parameters:
    - id: item
      type: System.Object
      description: The default item of this instance.
    return:
      type: System.Boolean
      description: Returns True if the default item has well been set.
    content.vb: Public Function SetDefaultItem(item As Object) As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  commentId: M:BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  id: SetDefaultItem(System.Collections.Generic.List{System.Object})
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: SetDefaultItem(List<Object>)
  nameWithType: DataElementSpec.SetDefaultItem(List<Object>)
  fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List<System.Object>)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDefaultItem
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 388
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSets the specified default items of this instance.\n"
  remarks: Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..
  example: []
  syntax:
    content: public bool SetDefaultItem(List<object> defaultItems)
    parameters:
    - id: defaultItems
      type: System.Collections.Generic.List{System.Object}
      description: The default items of this instance.
    return:
      type: System.Boolean
      description: Returns True if the default items has well been set.
    content.vb: Public Function SetDefaultItem(defaultItems As List(Of Object)) As Boolean
  overload: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  nameWithType.vb: DataElementSpec.SetDefaultItem(List(Of Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List(Of System.Object))
  name.vb: SetDefaultItem(List(Of Object))
- uid: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  id: GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: GetDefaultItemObject(IBdoLog)
  nameWithType: DataElementSpec.GetDefaultItemObject(IBdoLog)
  fullName: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetDefaultItemObject
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 417
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nGets the item object of this instance.\n"
  example: []
  syntax:
    content: public object GetDefaultItemObject(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to populate.
    return:
      type: System.Object
      description: Returns the item object.
    content.vb: Public Function GetDefaultItemObject(log As IBdoLog = Nothing) As Object
  overload: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  id: GetAreaSpecification(System.String)
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: GetAreaSpecification(String)
  nameWithType: DataElementSpec.GetAreaSpecification(String)
  fullName: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetAreaSpecification
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 430
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nGets the area specification with the specified area name.\n"
  example: []
  syntax:
    content: public IDataAreaSpecification GetAreaSpecification(string areaName)
    parameters:
    - id: areaName
      type: System.String
      description: The data specification to consider.
    return:
      type: BindOpen.Data.Specification.IDataAreaSpecification
      description: Returns the area specification.
    content.vb: Public Function GetAreaSpecification(areaName As String) As IDataAreaSpecification
  overload: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataElementSpec.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSpec.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Repair
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 452
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nRepairs this instance with the specified definition.\n"
  example: []
  syntax:
    content: >-
      public override IBdoLog Repair<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Log of the operation.
    content.vb: Public Overrides Function Repair(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  overload: BindOpen.Data.Elements.DataElementSpec.Repair*
  implements:
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSpec.Repair(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
- uid: BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  id: CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: CheckItem(Object, IDataElement)
  nameWithType: DataElementSpec.CheckItem(Object, IDataElement)
  fullName: BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CheckItem
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 490
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nCheck the specified item.\n"
  example: []
  syntax:
    content: public virtual IBdoLog CheckItem(object item, IDataElement dataElement = null)
    parameters:
    - id: item
      type: System.Object
      description: The item to consider.
    - id: dataElement
      type: BindOpen.Data.Elements.IDataElement
      description: The element to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log of check log.
    content.vb: Public Overridable Function CheckItem(item As Object, dataElement As IDataElement = Nothing) As IBdoLog
  overload: BindOpen.Data.Elements.DataElementSpec.CheckItem*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  commentId: M:BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  id: CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: CheckElement(IDataElement, String[])
  nameWithType: DataElementSpec.CheckElement(IDataElement, String[])
  fullName: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CheckElement
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 512
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nCheck the specified item.\n"
  example: []
  syntax:
    content: public virtual IBdoLog CheckElement(IDataElement dataElement, string[] specificationAreas = null)
    parameters:
    - id: dataElement
      type: BindOpen.Data.Elements.IDataElement
      description: The element to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log of check log.
    content.vb: Public Overridable Function CheckElement(dataElement As IDataElement, specificationAreas As String() = Nothing) As IBdoLog
  overload: BindOpen.Data.Elements.DataElementSpec.CheckElement*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  nameWithType.vb: DataElementSpec.CheckElement(IDataElement, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String())
  name.vb: CheckElement(IDataElement, String())
- uid: BindOpen.Data.Elements.DataElementSpec.Clone
  commentId: M:BindOpen.Data.Elements.DataElementSpec.Clone
  id: Clone
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: DataElementSpec.Clone()
  fullName: BindOpen.Data.Elements.DataElementSpec.Clone()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 660
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overrides Function Clone As Object
  overridden: BindOpen.Data.Specification.DataSpecification.Clone
  overload: BindOpen.Data.Elements.DataElementSpec.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BindOpen.Data.Elements.DataElementSpec
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DataElementSpec.Dispose(Boolean)
  fullName: BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Dispose
    path: ../src/BindOpen.Core/Data/Elements/DataElementSpec.cs
    startLine: 684
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nDisposes this instance. \n"
  example: []
  syntax:
    content: protected override void Dispose(bool isDisposing)
    parameters:
    - id: isDisposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(isDisposing As Boolean)
  overridden: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  overload: BindOpen.Data.Elements.DataElementSpec.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.StoredDataItem
  commentId: T:BindOpen.Data.Items.StoredDataItem
  parent: BindOpen.Data.Items
  name: StoredDataItem
  nameWithType: StoredDataItem
  fullName: BindOpen.Data.Items.StoredDataItem
- uid: BindOpen.Data.Items.NamedDataItem
  commentId: T:BindOpen.Data.Items.NamedDataItem
  parent: BindOpen.Data.Items
  name: NamedDataItem
  nameWithType: NamedDataItem
  fullName: BindOpen.Data.Items.NamedDataItem
- uid: BindOpen.Data.Items.TitledDataItem
  commentId: T:BindOpen.Data.Items.TitledDataItem
  parent: BindOpen.Data.Items
  name: TitledDataItem
  nameWithType: TitledDataItem
  fullName: BindOpen.Data.Items.TitledDataItem
- uid: BindOpen.Data.Items.DescribedDataItem
  commentId: T:BindOpen.Data.Items.DescribedDataItem
  parent: BindOpen.Data.Items
  name: DescribedDataItem
  nameWithType: DescribedDataItem
  fullName: BindOpen.Data.Items.DescribedDataItem
- uid: BindOpen.Data.Items.IndexedDataItem
  commentId: T:BindOpen.Data.Items.IndexedDataItem
  parent: BindOpen.Data.Items
  name: IndexedDataItem
  nameWithType: IndexedDataItem
  fullName: BindOpen.Data.Items.IndexedDataItem
- uid: BindOpen.Data.Specification.DataSpecification
  commentId: T:BindOpen.Data.Specification.DataSpecification
  parent: BindOpen.Data.Specification
  name: DataSpecification
  nameWithType: DataSpecification
  fullName: BindOpen.Data.Specification.DataSpecification
- uid: BindOpen.Data.Elements.IDataElementSpec
  commentId: T:BindOpen.Data.Elements.IDataElementSpec
  parent: BindOpen.Data.Elements
  name: IDataElementSpec
  nameWithType: IDataElementSpec
  fullName: BindOpen.Data.Elements.IDataElementSpec
- uid: BindOpen.Data.Specification.IDataSpecification
  commentId: T:BindOpen.Data.Specification.IDataSpecification
  parent: BindOpen.Data.Specification
  name: IDataSpecification
  nameWithType: IDataSpecification
  fullName: BindOpen.Data.Specification.IDataSpecification
- uid: BindOpen.Data.Items.IIndexedDataItem
  commentId: T:BindOpen.Data.Items.IIndexedDataItem
  parent: BindOpen.Data.Items
  name: IIndexedDataItem
  nameWithType: IIndexedDataItem
  fullName: BindOpen.Data.Items.IIndexedDataItem
- uid: BindOpen.Data.Items.IDescribedDataItem
  commentId: T:BindOpen.Data.Items.IDescribedDataItem
  parent: BindOpen.Data.Items
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  commentId: T:BindOpen.Data.Items.ITitledDataItem
  parent: BindOpen.Data.Items
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  commentId: T:BindOpen.Data.Items.INamedDataItem
  parent: BindOpen.Data.Items
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  commentId: T:BindOpen.Data.Items.IStoredDataItem
  parent: BindOpen.Data.Items
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  commentId: T:BindOpen.Data.Items.IStorable
  parent: BindOpen.Data.Items
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  commentId: T:BindOpen.Data.Items.IGloballyTitled
  parent: BindOpen.Data.Items
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.IIndexed
  commentId: T:BindOpen.Data.Items.IIndexed
  parent: BindOpen.Data.Items
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: BindOpen.Data.Specification.DataSpecification.RequirementLevel
  commentId: P:BindOpen.Data.Specification.DataSpecification.RequirementLevel
  parent: BindOpen.Data.Specification.DataSpecification
  name: RequirementLevel
  nameWithType: DataSpecification.RequirementLevel
  fullName: BindOpen.Data.Specification.DataSpecification.RequirementLevel
- uid: BindOpen.Data.Specification.DataSpecification.RequirementScript
  commentId: P:BindOpen.Data.Specification.DataSpecification.RequirementScript
  parent: BindOpen.Data.Specification.DataSpecification
  name: RequirementScript
  nameWithType: DataSpecification.RequirementScript
  fullName: BindOpen.Data.Specification.DataSpecification.RequirementScript
- uid: BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
  commentId: P:BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
  parent: BindOpen.Data.Specification.DataSpecification
  name: RequirementScriptSpecified
  nameWithType: DataSpecification.RequirementScriptSpecified
  fullName: BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
- uid: BindOpen.Data.Specification.DataSpecification.InheritanceLevel
  commentId: P:BindOpen.Data.Specification.DataSpecification.InheritanceLevel
  parent: BindOpen.Data.Specification.DataSpecification
  name: InheritanceLevel
  nameWithType: DataSpecification.InheritanceLevel
  fullName: BindOpen.Data.Specification.DataSpecification.InheritanceLevel
- uid: BindOpen.Data.Specification.DataSpecification.SpecificationLevels
  commentId: P:BindOpen.Data.Specification.DataSpecification.SpecificationLevels
  parent: BindOpen.Data.Specification.DataSpecification
  name: SpecificationLevels
  nameWithType: DataSpecification.SpecificationLevels
  fullName: BindOpen.Data.Specification.DataSpecification.SpecificationLevels
- uid: BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
  commentId: P:BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
  parent: BindOpen.Data.Specification.DataSpecification
  name: SpecificationLevelsSpecified
  nameWithType: DataSpecification.SpecificationLevelsSpecified
  fullName: BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
- uid: BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
  commentId: P:BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
  parent: BindOpen.Data.Specification.DataSpecification
  name: AccessibilityLevel
  nameWithType: DataSpecification.AccessibilityLevel
  fullName: BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
- uid: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  commentId: M:BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  parent: BindOpen.Data.Specification.DataSpecification
  name: IsCompatibleWith(IDataItem)
  nameWithType: DataSpecification.IsCompatibleWith(IDataItem)
  fullName: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
    name: IsCompatibleWith
    nameWithType: DataSpecification.IsCompatibleWith
    fullName: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItem
    name: IDataItem
    nameWithType: IDataItem
    fullName: BindOpen.Data.Items.IDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
    name: IsCompatibleWith
    nameWithType: DataSpecification.IsCompatibleWith
    fullName: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItem
    name: IDataItem
    nameWithType: IDataItem
    fullName: BindOpen.Data.Items.IDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  commentId: M:BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  parent: BindOpen.Data.Specification.DataSpecification
  isExternal: true
  name: Update(IDataElementSpec, String[])
  nameWithType: DataSpecification.Update(IDataElementSpec, String[])
  fullName: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec, System.String[])
  nameWithType.vb: DataSpecification.Update(IDataElementSpec, String())
  fullName.vb: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec, System.String())
  name.vb: Update(IDataElementSpec, String())
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
    name: Update
    nameWithType: DataSpecification.Update
    fullName: BindOpen.Data.Specification.DataSpecification.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSpec
    name: IDataElementSpec
    nameWithType: IDataElementSpec
    fullName: BindOpen.Data.Elements.IDataElementSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
    name: Update
    nameWithType: DataSpecification.Update
    fullName: BindOpen.Data.Specification.DataSpecification.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSpec
    name: IDataElementSpec
    nameWithType: IDataElementSpec
    fullName: BindOpen.Data.Elements.IDataElementSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  commentId: M:BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  parent: BindOpen.Data.Specification.DataSpecification
  name: Check(IDataSpecification)
  nameWithType: DataSpecification.Check(IDataSpecification)
  fullName: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
    name: Check
    nameWithType: DataSpecification.Check
    fullName: BindOpen.Data.Specification.DataSpecification.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
    name: Check
    nameWithType: DataSpecification.Check
    fullName: BindOpen.Data.Specification.DataSpecification.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  commentId: M:BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  parent: BindOpen.Data.Specification.DataSpecification
  name: Repair(IDataSpecification)
  nameWithType: DataSpecification.Repair(IDataSpecification)
  fullName: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
    name: Repair
    nameWithType: DataSpecification.Repair
    fullName: BindOpen.Data.Specification.DataSpecification.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
    name: Repair
    nameWithType: DataSpecification.Repair
    fullName: BindOpen.Data.Specification.DataSpecification.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IndexedDataItem.Index
  commentId: P:BindOpen.Data.Items.IndexedDataItem.Index
  parent: BindOpen.Data.Items.IndexedDataItem
  name: Index
  nameWithType: IndexedDataItem.Index
  fullName: BindOpen.Data.Items.IndexedDataItem.Index
- uid: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  commentId: P:BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  parent: BindOpen.Data.Items.IndexedDataItem
  name: IndexSpecified
  nameWithType: IndexedDataItem.IndexSpecified
  fullName: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Description
  commentId: P:BindOpen.Data.Items.DescribedDataItem.Description
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Description
  nameWithType: DescribedDataItem.Description
  fullName: BindOpen.Data.Items.DescribedDataItem.Description
- uid: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  commentId: P:BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  parent: BindOpen.Data.Items.DescribedDataItem
  name: DescriptionSpecified
  nameWithType: DescribedDataItem.DescriptionSpecified
  fullName: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Update(IDescribedDataItem)
  nameWithType: DescribedDataItem.Update(IDescribedDataItem)
  fullName: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String)
  nameWithType: DescribedDataItem.AddDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: DescribedDataItem.AddDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String)
  nameWithType: DescribedDataItem.SetDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: DescribedDataItem.SetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: DescribedDataItem.GetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DescribedDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DescribedDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DescribedDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DescribedDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DescribedDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DescribedDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.Title
  commentId: P:BindOpen.Data.Items.TitledDataItem.Title
  parent: BindOpen.Data.Items.TitledDataItem
  name: Title
  nameWithType: TitledDataItem.Title
  fullName: BindOpen.Data.Items.TitledDataItem.Title
- uid: BindOpen.Data.Items.TitledDataItem.TitleSpecified
  commentId: P:BindOpen.Data.Items.TitledDataItem.TitleSpecified
  parent: BindOpen.Data.Items.TitledDataItem
  name: TitleSpecified
  nameWithType: TitledDataItem.TitleSpecified
  fullName: BindOpen.Data.Items.TitledDataItem.TitleSpecified
- uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  commentId: M:BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  parent: BindOpen.Data.Items.TitledDataItem
  name: Update(ITitledDataItem)
  nameWithType: TitledDataItem.Update(ITitledDataItem)
  fullName: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String)
  nameWithType: TitledDataItem.AddTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String, String)
  nameWithType: TitledDataItem.AddTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String)
  nameWithType: TitledDataItem.SetTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String, String)
  nameWithType: TitledDataItem.SetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: GetTitle(String, String)
  nameWithType: TitledDataItem.GetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.Name
  commentId: P:BindOpen.Data.Items.NamedDataItem.Name
  parent: BindOpen.Data.Items.NamedDataItem
  name: Name
  nameWithType: NamedDataItem.Name
  fullName: BindOpen.Data.Items.NamedDataItem.Name
- uid: BindOpen.Data.Items.NamedDataItem.NameSpecified
  commentId: P:BindOpen.Data.Items.NamedDataItem.NameSpecified
  parent: BindOpen.Data.Items.NamedDataItem
  name: NameSpecified
  nameWithType: NamedDataItem.NameSpecified
  fullName: BindOpen.Data.Items.NamedDataItem.NameSpecified
- uid: BindOpen.Data.Items.NamedDataItem.Key
  commentId: M:BindOpen.Data.Items.NamedDataItem.Key
  parent: BindOpen.Data.Items.NamedDataItem
  name: Key()
  nameWithType: NamedDataItem.Key()
  fullName: BindOpen.Data.Items.NamedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  commentId: M:BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  parent: BindOpen.Data.Items.NamedDataItem
  isExternal: true
  name: GetClonedName(String, String)
  nameWithType: NamedDataItem.GetClonedName(String, String)
  fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.StoredDataItem.NamePreffix
  commentId: P:BindOpen.Data.Items.StoredDataItem.NamePreffix
  parent: BindOpen.Data.Items.StoredDataItem
  name: NamePreffix
  nameWithType: StoredDataItem.NamePreffix
  fullName: BindOpen.Data.Items.StoredDataItem.NamePreffix
- uid: BindOpen.Data.Items.StoredDataItem.CreationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDate
  nameWithType: StoredDataItem.CreationDate
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDate
- uid: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDateSpecified
  nameWithType: StoredDataItem.CreationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDate
  nameWithType: StoredDataItem.LastModificationDate
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDate
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDateSpecified
  nameWithType: StoredDataItem.LastModificationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  commentId: M:BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  parent: BindOpen.Data.Items.StoredDataItem
  name: DeclareUpdate()
  nameWithType: StoredDataItem.DeclareUpdate()
  fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate()
  spec.csharp:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.DataElementSpec})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<DataElementSpec>(Action<DataElementSpec>)
  nameWithType: ObjectHelper.Using<DataElementSpec>(Action<DataElementSpec>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.DataElementSpec>(System.Action<BindOpen.Data.Elements.DataElementSpec>)
  nameWithType.vb: ObjectHelper.Using(Of DataElementSpec)(Action(Of DataElementSpec))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.DataElementSpec)(System.Action(Of BindOpen.Data.Elements.DataElementSpec))
  name.vb: Using(Of DataElementSpec)(Action(Of DataElementSpec))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<DataElementSpec>
    nameWithType: ObjectHelper.Using<DataElementSpec>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.DataElementSpec>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElementSpec
    name: DataElementSpec
    nameWithType: DataElementSpec
    fullName: BindOpen.Data.Elements.DataElementSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of DataElementSpec)
    nameWithType: ObjectHelper.Using(Of DataElementSpec)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.DataElementSpec)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElementSpec
    name: DataElementSpec
    nameWithType: DataElementSpec
    fullName: BindOpen.Data.Elements.DataElementSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Specification
  commentId: N:BindOpen.Data.Specification
  name: BindOpen.Data.Specification
  nameWithType: BindOpen.Data.Specification
  fullName: BindOpen.Data.Specification
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Elements.DataElementSpec.GroupId*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.GroupId
  name: GroupId
  nameWithType: DataElementSpec.GroupId
  fullName: BindOpen.Data.Elements.DataElementSpec.GroupId
- uid: BindOpen.Data.Elements.IDataElementSpec.GroupId
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.GroupId
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: GroupId
  nameWithType: IDataElementSpec.GroupId
  fullName: BindOpen.Data.Elements.IDataElementSpec.GroupId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  name: GroupIdSpecified
  nameWithType: DataElementSpec.GroupIdSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Elements.DataElementSpec.ValueType*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ValueType
  name: ValueType
  nameWithType: DataElementSpec.ValueType
  fullName: BindOpen.Data.Elements.DataElementSpec.ValueType
- uid: BindOpen.Data.Elements.IDataElementSpec.ValueType
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ValueType
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: ValueType
  nameWithType: IDataElementSpec.ValueType
  fullName: BindOpen.Data.Elements.IDataElementSpec.ValueType
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Data.Elements.DataElementSpec.Aliases*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.Aliases
  name: Aliases
  nameWithType: DataElementSpec.Aliases
  fullName: BindOpen.Data.Elements.DataElementSpec.Aliases
- uid: BindOpen.Data.Elements.IDataElementSpec.Aliases
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.Aliases
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: Aliases
  nameWithType: IDataElementSpec.Aliases
  fullName: BindOpen.Data.Elements.IDataElementSpec.Aliases
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Elements.DataElementSpec.AliasesSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  name: AliasesSpecified
  nameWithType: DataElementSpec.AliasesSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.AreaSpecifications*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  name: AreaSpecifications
  nameWithType: DataElementSpec.AreaSpecifications
  fullName: BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
- uid: BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: AreaSpecifications
  nameWithType: IDataElementSpec.AreaSpecifications
  fullName: BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
- uid: System.Collections.Generic.List{BindOpen.Data.Specification.DataAreaSpecification}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Specification.DataAreaSpecification}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DataAreaSpecification>
  nameWithType: List<DataAreaSpecification>
  fullName: System.Collections.Generic.List<BindOpen.Data.Specification.DataAreaSpecification>
  nameWithType.vb: List(Of DataAreaSpecification)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Specification.DataAreaSpecification)
  name.vb: List(Of DataAreaSpecification)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Specification.DataAreaSpecification
    name: DataAreaSpecification
    nameWithType: DataAreaSpecification
    fullName: BindOpen.Data.Specification.DataAreaSpecification
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Specification.DataAreaSpecification
    name: DataAreaSpecification
    nameWithType: DataAreaSpecification
    fullName: BindOpen.Data.Specification.DataAreaSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  name: AreaSpecificationsSpecified
  nameWithType: DataElementSpec.AreaSpecificationsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.IsAllocatable*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  name: IsAllocatable
  nameWithType: DataElementSpec.IsAllocatable
  fullName: BindOpen.Data.Elements.DataElementSpec.IsAllocatable
- uid: BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: IsAllocatable
  nameWithType: IDataElementSpec.IsAllocatable
  fullName: BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
- uid: BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  name: IsAllocatableSpecified
  nameWithType: DataElementSpec.IsAllocatableSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.ItemScript*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ItemScript
  name: ItemScript
  nameWithType: DataElementSpec.ItemScript
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemScript
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemScript
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ItemScript
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: ItemScript
  nameWithType: IDataElementSpec.ItemScript
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemScript
- uid: BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  name: ItemScriptSpecified
  nameWithType: DataElementSpec.ItemScriptSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  name: AvailableItemizationModes
  nameWithType: DataElementSpec.AvailableItemizationModes
  fullName: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
- uid: BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: AvailableItemizationModes
  nameWithType: IDataElementSpec.AvailableItemizationModes
  fullName: BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
- uid: System.Collections.Generic.List{BindOpen.Data.Items.DataItemizationMode}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Items.DataItemizationMode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DataItemizationMode>
  nameWithType: List<DataItemizationMode>
  fullName: System.Collections.Generic.List<BindOpen.Data.Items.DataItemizationMode>
  nameWithType.vb: List(Of DataItemizationMode)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Items.DataItemizationMode)
  name.vb: List(Of DataItemizationMode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.DataItemizationMode
    name: DataItemizationMode
    nameWithType: DataItemizationMode
    fullName: BindOpen.Data.Items.DataItemizationMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.DataItemizationMode
    name: DataItemizationMode
    nameWithType: DataItemizationMode
    fullName: BindOpen.Data.Items.DataItemizationMode
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  name: AvailableItemizationModesSpecified
  nameWithType: DataElementSpec.AvailableItemizationModesSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultStringItems*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  name: DefaultStringItems
  nameWithType: DataElementSpec.DefaultStringItems
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
- uid: BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: DefaultStringItems
  nameWithType: IDataElementSpec.DefaultStringItems
  fullName: BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  name: DefaultStringItemsSpecified
  nameWithType: DataElementSpec.DefaultStringItemsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultItems*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.DefaultItems
  name: DefaultItems
  nameWithType: DataElementSpec.DefaultItems
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultItems
- uid: BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: DefaultItems
  nameWithType: IDataElementSpec.DefaultItems
  fullName: BindOpen.Data.Elements.IDataElementSpec.DefaultItems
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  name: MinimumItemNumber
  nameWithType: DataElementSpec.MinimumItemNumber
  fullName: BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
- uid: BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: MinimumItemNumber
  nameWithType: IDataElementSpec.MinimumItemNumber
  fullName: BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  name: MaximumItemNumber
  nameWithType: DataElementSpec.MaximumItemNumber
  fullName: BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
- uid: BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: MaximumItemNumber
  nameWithType: IDataElementSpec.MaximumItemNumber
  fullName: BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
- uid: BindOpen.Data.Elements.DataElementSpec.IsValueList*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.IsValueList
  name: IsValueList
  nameWithType: DataElementSpec.IsValueList
  fullName: BindOpen.Data.Elements.DataElementSpec.IsValueList
- uid: BindOpen.Data.Elements.IDataElementSpec.IsValueList
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.IsValueList
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: IsValueList
  nameWithType: IDataElementSpec.IsValueList
  fullName: BindOpen.Data.Elements.IDataElementSpec.IsValueList
- uid: BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  name: ItemRequirementLevel
  nameWithType: DataElementSpec.ItemRequirementLevel
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: ItemRequirementLevel
  nameWithType: IDataElementSpec.ItemRequirementLevel
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
- uid: BindOpen.Data.Common.RequirementLevel
  commentId: T:BindOpen.Data.Common.RequirementLevel
  parent: BindOpen.Data.Common
  name: RequirementLevel
  nameWithType: RequirementLevel
  fullName: BindOpen.Data.Common.RequirementLevel
- uid: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  name: ItemSpecificationLevels
  nameWithType: DataElementSpec.ItemSpecificationLevels
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: ItemSpecificationLevels
  nameWithType: IDataElementSpec.ItemSpecificationLevels
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
- uid: System.Collections.Generic.List{BindOpen.Data.Common.SpecificationLevels}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Common.SpecificationLevels}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SpecificationLevels>
  nameWithType: List<SpecificationLevels>
  fullName: System.Collections.Generic.List<BindOpen.Data.Common.SpecificationLevels>
  nameWithType.vb: List(Of SpecificationLevels)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Common.SpecificationLevels)
  name.vb: List(Of SpecificationLevels)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  name: ItemSpecificationLevelsSpecified
  nameWithType: DataElementSpec.ItemSpecificationLevelsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.ConstraintStatement*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  name: ConstraintStatement
  nameWithType: DataElementSpec.ConstraintStatement
  fullName: BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
- uid: BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: ConstraintStatement
  nameWithType: IDataElementSpec.ConstraintStatement
  fullName: BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
- uid: BindOpen.Data.Specification.DataConstraintStatement
  commentId: T:BindOpen.Data.Specification.DataConstraintStatement
  parent: BindOpen.Data.Specification
  name: DataConstraintStatement
  nameWithType: DataConstraintStatement
  fullName: BindOpen.Data.Specification.DataConstraintStatement
- uid: BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  name: ConstraintStatementSpecified
  nameWithType: DataElementSpec.ConstraintStatementSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.DesignStatement*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.DesignStatement
  name: DesignStatement
  nameWithType: DataElementSpec.DesignStatement
  fullName: BindOpen.Data.Elements.DataElementSpec.DesignStatement
- uid: BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: DesignStatement
  nameWithType: IDataElementSpec.DesignStatement
  fullName: BindOpen.Data.Elements.IDataElementSpec.DesignStatement
- uid: BindOpen.Data.Specification.DataDesignStatement
  commentId: T:BindOpen.Data.Specification.DataDesignStatement
  parent: BindOpen.Data.Specification
  name: DataDesignStatement
  nameWithType: DataDesignStatement
  fullName: BindOpen.Data.Specification.DataDesignStatement
- uid: BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  name: DesignStatementSpecified
  nameWithType: DataElementSpec.DesignStatementSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.#ctor*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.#ctor
  name: DataElementSpec
  nameWithType: DataElementSpec.DataElementSpec
  fullName: BindOpen.Data.Elements.DataElementSpec.DataElementSpec
- uid: BindOpen.Data.Common.AccessibilityLevels
  commentId: T:BindOpen.Data.Common.AccessibilityLevels
  parent: BindOpen.Data.Common
  name: AccessibilityLevels
  nameWithType: AccessibilityLevels
  fullName: BindOpen.Data.Common.AccessibilityLevels
- uid: BindOpen.Data.Common.SpecificationLevels[]
  isExternal: true
  name: SpecificationLevels[]
  nameWithType: SpecificationLevels[]
  fullName: BindOpen.Data.Common.SpecificationLevels[]
  nameWithType.vb: SpecificationLevels()
  fullName.vb: BindOpen.Data.Common.SpecificationLevels()
  name.vb: SpecificationLevels()
  spec.csharp:
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.AddDefaultItem
  name: AddDefaultItem
  nameWithType: DataElementSpec.AddDefaultItem
  fullName: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem
- uid: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: AddDefaultItem(Object)
  nameWithType: IDataElementSpec.AddDefaultItem(Object)
  fullName: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
    name: AddDefaultItem
    nameWithType: IDataElementSpec.AddDefaultItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
    name: AddDefaultItem
    nameWithType: IDataElementSpec.AddDefaultItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.SetDefaultItem
  name: SetDefaultItem
  nameWithType: DataElementSpec.SetDefaultItem
  fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem
- uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: SetDefaultItem(Object)
  nameWithType: IDataElementSpec.SetDefaultItem(Object)
  fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
    name: SetDefaultItem
    nameWithType: IDataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
    name: SetDefaultItem
    nameWithType: IDataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: SetDefaultItem(List<Object>)
  nameWithType: IDataElementSpec.SetDefaultItem(List<Object>)
  fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List<System.Object>)
  nameWithType.vb: IDataElementSpec.SetDefaultItem(List(Of Object))
  fullName.vb: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List(Of System.Object))
  name.vb: SetDefaultItem(List(Of Object))
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
    name: SetDefaultItem
    nameWithType: IDataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
    name: SetDefaultItem
    nameWithType: IDataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject
  name: GetDefaultItemObject
  nameWithType: DataElementSpec.GetDefaultItemObject
  fullName: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject
- uid: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.IDataElementSpec
  name: GetDefaultItemObject(IBdoLog)
  nameWithType: IDataElementSpec.GetDefaultItemObject(IBdoLog)
  fullName: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
    name: GetDefaultItemObject
    nameWithType: IDataElementSpec.GetDefaultItemObject
    fullName: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
    name: GetDefaultItemObject
    nameWithType: IDataElementSpec.GetDefaultItemObject
    fullName: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification
  name: GetAreaSpecification
  nameWithType: DataElementSpec.GetAreaSpecification
  fullName: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification
- uid: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: GetAreaSpecification(String)
  nameWithType: IDataElementSpec.GetAreaSpecification(String)
  fullName: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
    name: GetAreaSpecification
    nameWithType: IDataElementSpec.GetAreaSpecification
    fullName: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
    name: GetAreaSpecification
    nameWithType: IDataElementSpec.GetAreaSpecification
    fullName: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.IDataAreaSpecification
  commentId: T:BindOpen.Data.Specification.IDataAreaSpecification
  parent: BindOpen.Data.Specification
  name: IDataAreaSpecification
  nameWithType: IDataAreaSpecification
  fullName: BindOpen.Data.Specification.IDataAreaSpecification
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.Repair*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.Repair
  name: Repair
  nameWithType: DataElementSpec.Repair
  fullName: BindOpen.Data.Elements.DataElementSpec.Repair
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Data.Common.UpdateModes[]
  isExternal: true
  name: UpdateModes[]
  nameWithType: UpdateModes[]
  fullName: BindOpen.Data.Common.UpdateModes[]
  nameWithType.vb: UpdateModes()
  fullName.vb: BindOpen.Data.Common.UpdateModes()
  name.vb: UpdateModes()
  spec.csharp:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Data.Elements.DataElementSpec.CheckItem*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.CheckItem
  name: CheckItem
  nameWithType: DataElementSpec.CheckItem
  fullName: BindOpen.Data.Elements.DataElementSpec.CheckItem
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: CheckItem(Object, IDataElement)
  nameWithType: IDataElementSpec.CheckItem(Object, IDataElement)
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
    name: CheckItem
    nameWithType: IDataElementSpec.CheckItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
    name: CheckItem
    nameWithType: IDataElementSpec.CheckItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElement
  commentId: T:BindOpen.Data.Elements.IDataElement
  parent: BindOpen.Data.Elements
  name: IDataElement
  nameWithType: IDataElement
  fullName: BindOpen.Data.Elements.IDataElement
- uid: BindOpen.Data.Elements.DataElementSpec.CheckElement*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.CheckElement
  name: CheckElement
  nameWithType: DataElementSpec.CheckElement
  fullName: BindOpen.Data.Elements.DataElementSpec.CheckElement
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: CheckElement(IDataElement, String[])
  nameWithType: IDataElementSpec.CheckElement(IDataElement, String[])
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String[])
  nameWithType.vb: IDataElementSpec.CheckElement(IDataElement, String())
  fullName.vb: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String())
  name.vb: CheckElement(IDataElement, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
    name: CheckElement
    nameWithType: IDataElementSpec.CheckElement
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
    name: CheckElement
    nameWithType: IDataElementSpec.CheckElement
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.Clone
  commentId: M:BindOpen.Data.Specification.DataSpecification.Clone
  parent: BindOpen.Data.Specification.DataSpecification
  name: Clone()
  nameWithType: DataSpecification.Clone()
  fullName: BindOpen.Data.Specification.DataSpecification.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.Clone
    name: Clone
    nameWithType: DataSpecification.Clone
    fullName: BindOpen.Data.Specification.DataSpecification.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.Clone
    name: Clone
    nameWithType: DataSpecification.Clone
    fullName: BindOpen.Data.Specification.DataSpecification.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.Clone*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.Clone
  name: Clone
  nameWithType: DataElementSpec.Clone
  fullName: BindOpen.Data.Elements.DataElementSpec.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.Dispose*
  commentId: Overload:BindOpen.Data.Elements.DataElementSpec.Dispose
  name: Dispose
  nameWithType: DataElementSpec.Dispose
  fullName: BindOpen.Data.Elements.DataElementSpec.Dispose
shouldSkipMarkup: true
