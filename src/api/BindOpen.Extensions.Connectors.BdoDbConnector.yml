### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Connectors.BdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnector
  id: BdoDbConnector
  parent: BindOpen.Extensions.Connectors
  children:
  - BindOpen.Extensions.Connectors.BdoDbConnector.#ctor
  - BindOpen.Extensions.Connectors.BdoDbConnector.#ctor(System.String,System.String)
  - BindOpen.Extensions.Connectors.BdoDbConnector._queryBuilder
  - BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind
  - BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind
  - BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind(System.String)
  - BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog
  - BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity
  - BindOpen.Extensions.Connectors.BdoDbConnector.Password
  - BindOpen.Extensions.Connectors.BdoDbConnector.Provider
  - BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder
  - BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress
  - BindOpen.Extensions.Connectors.BdoDbConnector.UserName
  - BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString(System.String)
  - BindOpen.Extensions.Connectors.BdoDbConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  langs:
  - csharp
  - vb
  name: BdoDbConnector
  nameWithType: BdoDbConnector
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector
  type: Class
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThis class defines a database connector.\n"
  syntax:
    content: 'public abstract class BdoDbConnector : TBdoConnector<IBdoDbConnection>, IBdoDbConnector, ITBdoConnector<IBdoDbConnection>, IBdoConnector, ITBdoExtensionItem<IBdoConnectorDefinition>, IBdoExtensionItem, IDataItem, ICloneable, IDisposable, IIdentifiedDataItem, IIdentified, IReferenced, INamed'
    content.vb: >-
      Public MustInherit Class BdoDbConnector
          Inherits TBdoConnector(Of IBdoDbConnection)
          Implements IBdoDbConnector, ITBdoConnector(Of IBdoDbConnection), IBdoConnector, ITBdoExtensionItem(Of IBdoConnectorDefinition), IBdoExtensionItem, IDataItem, ICloneable, IDisposable, IIdentifiedDataItem, IIdentified, IReferenced, INamed
  inheritance:
  - System.Object
  derivedClasses:
  - BindOpen.Extensions.Connectors.BdoDbConnector_MSSqlServer
  - BindOpen.Extensions.Connectors.BdoDbConnector_PostgreSql
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector
  - BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}
  - BindOpen.Extensions.Runtime.IBdoConnector
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}
  - BindOpen.Extensions.Runtime.IBdoExtensionItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.INamed
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: BindOpen.Extensions.Connectors.BdoDbConnector._queryBuilder
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnector._queryBuilder
  id: _queryBuilder
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: _queryBuilder
  nameWithType: BdoDbConnector._queryBuilder
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector._queryBuilder
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe query builder of this instance.\n"
  syntax:
    content: protected DbQueryBuilder _queryBuilder
    return:
      type: BindOpen.Data.Queries.DbQueryBuilder
    content.vb: Protected _queryBuilder As DbQueryBuilder
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.#ctor
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.#ctor
  id: '#ctor'
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: BdoDbConnector()
  nameWithType: BdoDbConnector.BdoDbConnector()
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.BdoDbConnector()
  type: Constructor
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nInstantiates a new instance of the DatabaseConnector class.\n"
  syntax:
    content: protected BdoDbConnector()
    content.vb: Protected Sub New
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.#ctor(System.String,System.String)
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: BdoDbConnector(String, String)
  nameWithType: BdoDbConnector.BdoDbConnector(String, String)
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.BdoDbConnector(System.String, System.String)
  type: Constructor
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nInstantiates a new instance of the DatabaseConnector class.\n"
  syntax:
    content: protected BdoDbConnector(string name, string connectionString = null)
    parameters:
    - id: name
      type: System.String
      description: The name of this instance.
    - id: connectionString
      type: System.String
      description: The connection string to consider.
    content.vb: Protected Sub New(name As String, connectionString As String = Nothing)
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString(System.String)
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString(System.String)
  id: WithConnectionString(System.String)
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: WithConnectionString(String)
  nameWithType: BdoDbConnector.WithConnectionString(String)
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString(System.String)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nUpdates the connection string with the specified string.\n"
  syntax:
    content: public override IBdoConnector WithConnectionString(string connectionString = null)
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string to consider.
    return:
      type: BindOpen.Extensions.Runtime.IBdoConnector
    content.vb: Public Overrides Function WithConnectionString(connectionString As String = Nothing) As IBdoConnector
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  id: WithScope(BindOpen.Application.Scopes.IBdoScope)
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: WithScope(IBdoScope)
  nameWithType: BdoDbConnector.WithScope(IBdoScope)
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nUpdates the instance considering the specified scope.\n"
  syntax:
    content: public override IBdoConnector WithScope(IBdoScope scope)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    return:
      type: BindOpen.Extensions.Runtime.IBdoConnector
    content.vb: Public Overrides Function WithScope(scope As IBdoScope) As IBdoConnector
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.WithScope*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnector.CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nGets the SQL text of the specified query.\n"
  syntax:
    content: public string CreateCommandText(IDbQuery query, DbQueryParameterMode parameterMode, IDataElementSet parameterSet = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
      description: The query to consider.
    - id: parameterMode
      type: BindOpen.Data.Queries.DbQueryParameterMode
      description: Indicates whether parameters are replaced.
    - id: parameterSet
      type: BindOpen.Data.Elements.IDataElementSet
      description: The parameter set to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The script variable set to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: System.String
      description: Returns the SQL text of the specified query.
    content.vb: Public Function CreateCommandText(query As IDbQuery, parameterMode As DbQueryParameterMode, parameterSet As IDataElementSet = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing) As String
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: CreateCommand(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnector.CreateCommand(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nCreates a command from the specified query.\n"
  syntax:
    content: public abstract IDbCommand CreateCommand(IDbQuery query, DbQueryParameterMode parameterMode, IDataElementSet parameterSet = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
      description: The query to consider.
    - id: parameterMode
      type: BindOpen.Data.Queries.DbQueryParameterMode
      description: Indicates whether parameters are replaced.
    - id: parameterSet
      type: BindOpen.Data.Elements.IDataElementSet
      description: The parameter elements to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The script variable set to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: System.Data.IDbCommand
      description: Returns the database command.
    content.vb: Public MustOverride Function CreateCommand(query As IDbQuery, parameterMode As DbQueryParameterMode, parameterSet As IDataElementSet = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing) As IDbCommand
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind(System.String)
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind(System.String)
  id: EstimateDbConnectorKind(System.String)
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: EstimateDbConnectorKind(String)
  nameWithType: BdoDbConnector.EstimateDbConnectorKind(String)
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind(System.String)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nEstimates the database connector kind from the specified connection string.\n"
  syntax:
    content: public static BdoDbConnectorKind EstimateDbConnectorKind(string connectionString)
    parameters:
    - id: connectionString
      type: System.String
      description: The connection string.
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
      description: The database provider  of the specified connection string.
    content.vb: Public Shared Function EstimateDbConnectorKind(connectionString As String) As BdoDbConnectorKind
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind
  commentId: M:BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind
  id: EstimateDbConnectorKind
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: EstimateDbConnectorKind()
  nameWithType: BdoDbConnector.EstimateDbConnectorKind()
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind()
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nEstimates the database connector kind of this instance.\n"
  syntax:
    content: public BdoDbConnectorKind EstimateDbConnectorKind()
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
      description: The database connector kind of this instance.
    content.vb: Public Function EstimateDbConnectorKind As BdoDbConnectorKind
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder
  id: QueryBuilder
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: QueryBuilder
  nameWithType: BdoDbConnector.QueryBuilder
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe provider of this instance.\n"
  syntax:
    content: protected DbQueryBuilder QueryBuilder { get; }
    parameters: []
    return:
      type: BindOpen.Data.Queries.DbQueryBuilder
    content.vb: Protected ReadOnly Property QueryBuilder As DbQueryBuilder
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.Provider
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.Provider
  id: Provider
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: BdoDbConnector.Provider
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.Provider
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe provider of this instance.\n"
  syntax:
    content: public string Provider { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Provider As String
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.Provider*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress
  id: ServerAddress
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: ServerAddress
  nameWithType: BdoDbConnector.ServerAddress
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe server address of this instance.\n"
  syntax:
    content: public string ServerAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServerAddress As String
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog
  id: InitialCatalog
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: InitialCatalog
  nameWithType: BdoDbConnector.InitialCatalog
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe initial catalog of this instance.\n"
  syntax:
    content: public string InitialCatalog { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InitialCatalog As String
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity
  id: IntegratedSecurity
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: IntegratedSecurity
  nameWithType: BdoDbConnector.IntegratedSecurity
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe integrated security of this instance.\n"
  syntax:
    content: public string IntegratedSecurity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IntegratedSecurity As String
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.UserName
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.UserName
  id: UserName
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: BdoDbConnector.UserName
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.UserName
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe user name of this instance.\n"
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.UserName*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.Password
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.Password
  id: Password
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: BdoDbConnector.Password
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.Password
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe password of this instance.\n"
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.Password*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind
  commentId: P:BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind
  id: DatabaseConnectorKind
  parent: BindOpen.Extensions.Connectors.BdoDbConnector
  langs:
  - csharp
  - vb
  name: DatabaseConnectorKind
  nameWithType: BdoDbConnector.DatabaseConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe database kind of this instance.\n"
  syntax:
    content: public BdoDbConnectorKind DatabaseConnectorKind { get; set; }
    parameters: []
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Public Property DatabaseConnectorKind As BdoDbConnectorKind
  overload: BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind*
  implements:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  isExternal: true
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.IBdoDbConnector
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: IBdoDbConnector
  nameWithType: IBdoDbConnector
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector
- uid: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}
  commentId: '!:BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}'
  definition: BindOpen.Extensions.Runtime.ITBdoConnector`1
  name: ITBdoConnector<IBdoDbConnection>
  nameWithType: ITBdoConnector<IBdoDbConnection>
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>
  nameWithType.vb: ITBdoConnector(Of IBdoDbConnection)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection)
  name.vb: ITBdoConnector(Of IBdoDbConnection)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoConnector
  isExternal: true
  name: IBdoConnector
  nameWithType: IBdoConnector
  fullName: BindOpen.Extensions.Runtime.IBdoConnector
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}
  commentId: '!:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}'
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  name: ITBdoExtensionItem<IBdoConnectorDefinition>
  nameWithType: ITBdoExtensionItem<IBdoConnectorDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoConnectorDefinition>
  nameWithType.vb: ITBdoExtensionItem(Of IBdoConnectorDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoConnectorDefinition)
  name.vb: ITBdoExtensionItem(Of IBdoConnectorDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    name: IBdoConnectorDefinition
    nameWithType: IBdoConnectorDefinition
    fullName: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    name: IBdoConnectorDefinition
    nameWithType: IBdoConnectorDefinition
    fullName: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoExtensionItem
  isExternal: true
  name: IBdoExtensionItem
  nameWithType: IBdoExtensionItem
  fullName: BindOpen.Extensions.Runtime.IBdoExtensionItem
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
  isExternal: true
  name: ITBdoConnector<>
  nameWithType: ITBdoConnector<>
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<>
  nameWithType.vb: ITBdoConnector(Of )
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of )
  name.vb: ITBdoConnector(Of )
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  isExternal: true
  name: ITBdoExtensionItem<>
  nameWithType: ITBdoExtensionItem<>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<>
  nameWithType.vb: ITBdoExtensionItem(Of )
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of )
  name.vb: ITBdoExtensionItem(Of )
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Queries.DbQueryBuilder
  commentId: T:BindOpen.Data.Queries.DbQueryBuilder
  parent: BindOpen.Data.Queries
  isExternal: true
  name: DbQueryBuilder
  nameWithType: DbQueryBuilder
  fullName: BindOpen.Data.Queries.DbQueryBuilder
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  isExternal: true
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.#ctor*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.#ctor
  isExternal: true
  name: BdoDbConnector
  nameWithType: BdoDbConnector.BdoDbConnector
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.BdoDbConnector
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString
  isExternal: true
  name: WithConnectionString
  nameWithType: BdoDbConnector.WithConnectionString
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.WithConnectionString
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.WithScope*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.WithScope
  isExternal: true
  name: WithScope
  nameWithType: BdoDbConnector.WithScope
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.WithScope
- uid: BindOpen.Application.Scopes.IBdoScope
  isExternal: true
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText
  isExternal: true
  name: CreateCommandText
  nameWithType: BdoDbConnector.CreateCommandText
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommandText
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IBdoDbConnector.CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommandText
    nameWithType: IBdoDbConnector.CreateCommandText
    fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommandText
    nameWithType: IBdoDbConnector.CreateCommandText
    fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Queries.IDbQuery
  commentId: T:BindOpen.Data.Queries.IDbQuery
  parent: BindOpen.Data.Queries
  isExternal: true
  name: IDbQuery
  nameWithType: IDbQuery
  fullName: BindOpen.Data.Queries.IDbQuery
- uid: BindOpen.Data.Queries.DbQueryParameterMode
  commentId: T:BindOpen.Data.Queries.DbQueryParameterMode
  parent: BindOpen.Data.Queries
  isExternal: true
  name: DbQueryParameterMode
  nameWithType: DbQueryParameterMode
  fullName: BindOpen.Data.Queries.DbQueryParameterMode
- uid: BindOpen.Data.Elements.IDataElementSet
  isExternal: true
  name: IDataElementSet
  nameWithType: IDataElementSet
  fullName: BindOpen.Data.Elements.IDataElementSet
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  isExternal: true
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand
  isExternal: true
  name: CreateCommand
  nameWithType: BdoDbConnector.CreateCommand
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.CreateCommand
- uid: System.Data.IDbCommand
  isExternal: true
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind
  isExternal: true
  name: EstimateDbConnectorKind
  nameWithType: BdoDbConnector.EstimateDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.EstimateDbConnectorKind
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnectorKind
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: BdoDbConnectorKind
  nameWithType: BdoDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  commentId: M:BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: EstimateDbConnectorKind()
  nameWithType: IBdoDbConnector.EstimateDbConnectorKind()
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind()
  spec.csharp:
  - uid: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
    name: EstimateDbConnectorKind
    nameWithType: IBdoDbConnector.EstimateDbConnectorKind
    fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
    name: EstimateDbConnectorKind
    nameWithType: IBdoDbConnector.EstimateDbConnectorKind
    fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder
  isExternal: true
  name: QueryBuilder
  nameWithType: BdoDbConnector.QueryBuilder
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.QueryBuilder
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.Provider*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.Provider
  isExternal: true
  name: Provider
  nameWithType: BdoDbConnector.Provider
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.Provider
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: Provider
  nameWithType: IBdoDbConnector.Provider
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress
  isExternal: true
  name: ServerAddress
  nameWithType: BdoDbConnector.ServerAddress
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.ServerAddress
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: ServerAddress
  nameWithType: IBdoDbConnector.ServerAddress
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog
  isExternal: true
  name: InitialCatalog
  nameWithType: BdoDbConnector.InitialCatalog
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.InitialCatalog
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: InitialCatalog
  nameWithType: IBdoDbConnector.InitialCatalog
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity
  isExternal: true
  name: IntegratedSecurity
  nameWithType: BdoDbConnector.IntegratedSecurity
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.IntegratedSecurity
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: IntegratedSecurity
  nameWithType: IBdoDbConnector.IntegratedSecurity
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.UserName*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.UserName
  isExternal: true
  name: UserName
  nameWithType: BdoDbConnector.UserName
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.UserName
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: UserName
  nameWithType: IBdoDbConnector.UserName
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.Password*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.Password
  isExternal: true
  name: Password
  nameWithType: BdoDbConnector.Password
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.Password
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: Password
  nameWithType: IBdoDbConnector.Password
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
- uid: BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind
  isExternal: true
  name: DatabaseConnectorKind
  nameWithType: BdoDbConnector.DatabaseConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector.DatabaseConnectorKind
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  isExternal: true
  name: DatabaseConnectorKind
  nameWithType: IBdoDbConnector.DatabaseConnectorKind
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
shouldSkipMarkup: true
