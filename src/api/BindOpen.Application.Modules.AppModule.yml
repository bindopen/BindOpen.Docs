### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Modules.AppModule
  commentId: T:BindOpen.Application.Modules.AppModule
  id: AppModule
  parent: BindOpen.Application.Modules
  children:
  - BindOpen.Application.Modules.AppModule.#ctor(System.String)
  - BindOpen.Application.Modules.AppModule.#ctor(System.String,BindOpen.Application.Modules.AppSection[])
  - BindOpen.Application.Modules.AppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  - BindOpen.Application.Modules.AppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  - BindOpen.Application.Modules.AppModule.DefaultUICulture
  - BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture(System.String)
  - BindOpen.Application.Modules.AppModule.GetSubSectionWithName(System.String)
  - BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName(System.String)
  - BindOpen.Application.Modules.AppModule.IconFileName
  - BindOpen.Application.Modules.AppModule.IsVisible
  - BindOpen.Application.Modules.AppModule.Languages
  - BindOpen.Application.Modules.AppModule.Rank
  - BindOpen.Application.Modules.AppModule.Sections
  - BindOpen.Application.Modules.AppModule.ThumbIconFileName
  - BindOpen.Application.Modules.AppModule.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  langs:
  - csharp
  - vb
  name: AppModule
  nameWithType: AppModule
  fullName: BindOpen.Application.Modules.AppModule
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThis class represents a Sphere application module.\n"
  syntax:
    content: 'public class AppModule : DescribedDataItem, IAppModule, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed'
    content.vb: >-
      Public Class AppModule
          Inherits DescribedDataItem
          Implements IAppModule, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed
  inheritance:
  - System.Object
  implements:
  - BindOpen.Application.Modules.IAppModule
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Modules.AppModule.#ctor(System.String)
  commentId: M:BindOpen.Application.Modules.AppModule.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: AppModule(String)
  nameWithType: AppModule.AppModule(String)
  fullName: BindOpen.Application.Modules.AppModule.AppModule(System.String)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nInitializes a new instance of the ApplicationModule class.\n"
  syntax:
    content: public AppModule(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the instance.
    content.vb: Public Sub New(name As String)
  overload: BindOpen.Application.Modules.AppModule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.#ctor(System.String,BindOpen.Application.Modules.AppSection[])
  commentId: M:BindOpen.Application.Modules.AppModule.#ctor(System.String,BindOpen.Application.Modules.AppSection[])
  id: '#ctor(System.String,BindOpen.Application.Modules.AppSection[])'
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: AppModule(String, AppSection[])
  nameWithType: AppModule.AppModule(String, AppSection[])
  fullName: BindOpen.Application.Modules.AppModule.AppModule(System.String, BindOpen.Application.Modules.AppSection[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nInitializes a new instance of the ApplicationModule class.\n"
  syntax:
    content: public AppModule(string name, params AppSection[] sections)
    parameters:
    - id: name
      type: System.String
      description: The name of the instance.
    - id: sections
      type: BindOpen.Application.Modules.AppSection[]
      description: The sections of the instance.
    content.vb: Public Sub New(name As String, ParamArray sections As AppSection())
  overload: BindOpen.Application.Modules.AppModule.#ctor*
  nameWithType.vb: AppModule.AppModule(String, AppSection())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Modules.AppModule.AppModule(System.String, BindOpen.Application.Modules.AppSection())
  name.vb: AppModule(String, AppSection())
- uid: BindOpen.Application.Modules.AppModule.GetSubSectionWithName(System.String)
  commentId: M:BindOpen.Application.Modules.AppModule.GetSubSectionWithName(System.String)
  id: GetSubSectionWithName(System.String)
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: GetSubSectionWithName(String)
  nameWithType: AppModule.GetSubSectionWithName(String)
  fullName: BindOpen.Application.Modules.AppModule.GetSubSectionWithName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nReturns the sub section with the specified name.\n"
  syntax:
    content: public IAppSection GetSubSectionWithName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the sub application sections to return.
    return:
      type: BindOpen.Application.Modules.IAppSection
      description: The sub application section with the specified name.
    content.vb: Public Function GetSubSectionWithName(name As String) As IAppSection
  overload: BindOpen.Application.Modules.AppModule.GetSubSectionWithName*
  implements:
  - BindOpen.Application.Modules.IAppModule.GetSubSectionWithName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName(System.String)
  commentId: M:BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName(System.String)
  id: GetSubSectionWithUniqueName(System.String)
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: GetSubSectionWithUniqueName(String)
  nameWithType: AppModule.GetSubSectionWithUniqueName(String)
  fullName: BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nReturns the sub section with the specified unique name.\n"
  syntax:
    content: public IAppSection GetSubSectionWithUniqueName(string completeName)
    parameters:
    - id: completeName
      type: System.String
      description: The complete name of the sub application sections to return.
    return:
      type: BindOpen.Application.Modules.IAppSection
      description: The sub application sections with the specified unique name.
    content.vb: Public Function GetSubSectionWithUniqueName(completeName As String) As IAppSection
  overload: BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName*
  implements:
  - BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture(System.String)
  commentId: M:BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture(System.String)
  id: GetLanguageWithUICulture(System.String)
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: GetLanguageWithUICulture(String)
  nameWithType: AppModule.GetLanguageWithUICulture(String)
  fullName: BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nGets the specified language.\n"
  syntax:
    content: public IApplicationLanguage GetLanguageWithUICulture(string uiCulureName)
    parameters:
    - id: uiCulureName
      type: System.String
      description: The UI culture name.
    return:
      type: BindOpen.Application.Languages.IApplicationLanguage
      description: The language to return.
    content.vb: Public Function GetLanguageWithUICulture(uiCulureName As String) As IApplicationLanguage
  overload: BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture*
  implements:
  - BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  commentId: M:BindOpen.Application.Modules.AppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  id: AddSection(BindOpen.Application.Modules.IAppSection)
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: AddSection(IAppSection)
  nameWithType: AppModule.AddSection(IAppSection)
  fullName: BindOpen.Application.Modules.AppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nAdds the specified section.\n"
  syntax:
    content: public IAppModule AddSection(IAppSection section)
    parameters:
    - id: section
      type: BindOpen.Application.Modules.IAppSection
      description: The section to add.
    return:
      type: BindOpen.Application.Modules.IAppModule
      description: Returns the specified section.
    content.vb: Public Function AddSection(section As IAppSection) As IAppModule
  overload: BindOpen.Application.Modules.AppModule.AddSection*
  implements:
  - BindOpen.Application.Modules.IAppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  commentId: M:BindOpen.Application.Modules.AppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  id: AddSections(BindOpen.Application.Modules.IAppSection[])
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: AddSections(IAppSection[])
  nameWithType: AppModule.AddSections(IAppSection[])
  fullName: BindOpen.Application.Modules.AppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nAdds the specified sections.\n"
  syntax:
    content: public IAppModule AddSections(params IAppSection[] sections)
    parameters:
    - id: sections
      type: BindOpen.Application.Modules.IAppSection[]
      description: The sections to add.
    return:
      type: BindOpen.Application.Modules.IAppModule
      description: Returns the specified sections.
    content.vb: Public Function AddSections(ParamArray sections As IAppSection()) As IAppModule
  overload: BindOpen.Application.Modules.AppModule.AddSections*
  implements:
  - BindOpen.Application.Modules.IAppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  nameWithType.vb: AppModule.AddSections(IAppSection())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Modules.AppModule.AddSections(BindOpen.Application.Modules.IAppSection())
  name.vb: AddSections(IAppSection())
- uid: BindOpen.Application.Modules.AppModule.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Application.Modules.AppModule.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: AppModule.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Application.Modules.AppModule.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nUpdates this instance.\n"
  remarks: Put reference collections as null if you do not want to repair this instance.
  syntax:
    content: >-
      public override IBdoLog Update<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Log of the operation.
    content.vb: Public Overrides Function Update(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overload: BindOpen.Application.Modules.AppModule.Update*
  nameWithType.vb: AppModule.Update(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Application.Modules.AppModule.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
- uid: BindOpen.Application.Modules.AppModule.IconFileName
  commentId: P:BindOpen.Application.Modules.AppModule.IconFileName
  id: IconFileName
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: IconFileName
  nameWithType: AppModule.IconFileName
  fullName: BindOpen.Application.Modules.AppModule.IconFileName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nFile name of the icon of this instance.\n"
  syntax:
    content: public string IconFileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IconFileName As String
  overload: BindOpen.Application.Modules.AppModule.IconFileName*
  implements:
  - BindOpen.Application.Modules.IAppModule.IconFileName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.Rank
  commentId: P:BindOpen.Application.Modules.AppModule.Rank
  id: Rank
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: AppModule.Rank
  fullName: BindOpen.Application.Modules.AppModule.Rank
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nRank of this instance.\n"
  syntax:
    content: public int Rank { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Rank As Integer
  overload: BindOpen.Application.Modules.AppModule.Rank*
  implements:
  - BindOpen.Application.Modules.IAppModule.Rank
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.ThumbIconFileName
  commentId: P:BindOpen.Application.Modules.AppModule.ThumbIconFileName
  id: ThumbIconFileName
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: ThumbIconFileName
  nameWithType: AppModule.ThumbIconFileName
  fullName: BindOpen.Application.Modules.AppModule.ThumbIconFileName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nFile name of the thumb icon of this instance.\n"
  syntax:
    content: public string ThumbIconFileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThumbIconFileName As String
  overload: BindOpen.Application.Modules.AppModule.ThumbIconFileName*
  implements:
  - BindOpen.Application.Modules.IAppModule.ThumbIconFileName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.IsVisible
  commentId: P:BindOpen.Application.Modules.AppModule.IsVisible
  id: IsVisible
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: AppModule.IsVisible
  fullName: BindOpen.Application.Modules.AppModule.IsVisible
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nIndicates whether this instance is visible.\n"
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVisible As Boolean
  overload: BindOpen.Application.Modules.AppModule.IsVisible*
  implements:
  - BindOpen.Application.Modules.IAppModule.IsVisible
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.Sections
  commentId: P:BindOpen.Application.Modules.AppModule.Sections
  id: Sections
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: Sections
  nameWithType: AppModule.Sections
  fullName: BindOpen.Application.Modules.AppModule.Sections
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe sub sections of this instance.\n"
  syntax:
    content: public IDataItemSet<AppSection> Sections { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Modules.AppSection}
    content.vb: Public Property Sections As IDataItemSet(Of AppSection)
  overload: BindOpen.Application.Modules.AppModule.Sections*
  implements:
  - BindOpen.Application.Modules.IAppModule.Sections
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.Languages
  commentId: P:BindOpen.Application.Modules.AppModule.Languages
  id: Languages
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: Languages
  nameWithType: AppModule.Languages
  fullName: BindOpen.Application.Modules.AppModule.Languages
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe languages of this instance.\n"
  syntax:
    content: public IDataItemSet<ApplicationLanguage> Languages { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Languages.ApplicationLanguage}
    content.vb: Public Property Languages As IDataItemSet(Of ApplicationLanguage)
  overload: BindOpen.Application.Modules.AppModule.Languages*
  implements:
  - BindOpen.Application.Modules.IAppModule.Languages
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppModule.DefaultUICulture
  commentId: P:BindOpen.Application.Modules.AppModule.DefaultUICulture
  id: DefaultUICulture
  parent: BindOpen.Application.Modules.AppModule
  langs:
  - csharp
  - vb
  name: DefaultUICulture
  nameWithType: AppModule.DefaultUICulture
  fullName: BindOpen.Application.Modules.AppModule.DefaultUICulture
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe default UI culture name of this instance.\n"
  syntax:
    content: public string DefaultUICulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultUICulture As String
  overload: BindOpen.Application.Modules.AppModule.DefaultUICulture*
  implements:
  - BindOpen.Application.Modules.IAppModule.DefaultUICulture
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Application.Modules
  commentId: N:BindOpen.Application.Modules
  isExternal: true
  name: BindOpen.Application.Modules
  nameWithType: BindOpen.Application.Modules
  fullName: BindOpen.Application.Modules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Application.Modules.IAppModule
  commentId: T:BindOpen.Application.Modules.IAppModule
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppModule
  nameWithType: IAppModule
  fullName: BindOpen.Application.Modules.IAppModule
- uid: BindOpen.Data.Items.IDescribedDataItem
  isExternal: true
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  isExternal: true
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  isExternal: true
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  isExternal: true
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  isExternal: true
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Modules.AppModule.#ctor*
  commentId: Overload:BindOpen.Application.Modules.AppModule.#ctor
  isExternal: true
  name: AppModule
  nameWithType: AppModule.AppModule
  fullName: BindOpen.Application.Modules.AppModule.AppModule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Modules.AppSection[]
  isExternal: true
  name: AppSection[]
  nameWithType: AppSection[]
  fullName: BindOpen.Application.Modules.AppSection[]
  nameWithType.vb: AppSection()
  fullName.vb: BindOpen.Application.Modules.AppSection()
  name.vb: AppSection()
  spec.csharp:
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Modules.AppModule.GetSubSectionWithName*
  commentId: Overload:BindOpen.Application.Modules.AppModule.GetSubSectionWithName
  isExternal: true
  name: GetSubSectionWithName
  nameWithType: AppModule.GetSubSectionWithName
  fullName: BindOpen.Application.Modules.AppModule.GetSubSectionWithName
- uid: BindOpen.Application.Modules.IAppModule.GetSubSectionWithName(System.String)
  commentId: M:BindOpen.Application.Modules.IAppModule.GetSubSectionWithName(System.String)
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: GetSubSectionWithName(String)
  nameWithType: IAppModule.GetSubSectionWithName(String)
  fullName: BindOpen.Application.Modules.IAppModule.GetSubSectionWithName(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppModule.GetSubSectionWithName(System.String)
    name: GetSubSectionWithName
    nameWithType: IAppModule.GetSubSectionWithName
    fullName: BindOpen.Application.Modules.IAppModule.GetSubSectionWithName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppModule.GetSubSectionWithName(System.String)
    name: GetSubSectionWithName
    nameWithType: IAppModule.GetSubSectionWithName
    fullName: BindOpen.Application.Modules.IAppModule.GetSubSectionWithName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.IAppSection
  commentId: T:BindOpen.Application.Modules.IAppSection
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppSection
  nameWithType: IAppSection
  fullName: BindOpen.Application.Modules.IAppSection
- uid: BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName*
  commentId: Overload:BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName
  isExternal: true
  name: GetSubSectionWithUniqueName
  nameWithType: AppModule.GetSubSectionWithUniqueName
  fullName: BindOpen.Application.Modules.AppModule.GetSubSectionWithUniqueName
- uid: BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName(System.String)
  commentId: M:BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName(System.String)
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: GetSubSectionWithUniqueName(String)
  nameWithType: IAppModule.GetSubSectionWithUniqueName(String)
  fullName: BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName(System.String)
    name: GetSubSectionWithUniqueName
    nameWithType: IAppModule.GetSubSectionWithUniqueName
    fullName: BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName(System.String)
    name: GetSubSectionWithUniqueName
    nameWithType: IAppModule.GetSubSectionWithUniqueName
    fullName: BindOpen.Application.Modules.IAppModule.GetSubSectionWithUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture*
  commentId: Overload:BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture
  isExternal: true
  name: GetLanguageWithUICulture
  nameWithType: AppModule.GetLanguageWithUICulture
  fullName: BindOpen.Application.Modules.AppModule.GetLanguageWithUICulture
- uid: BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture(System.String)
  commentId: M:BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture(System.String)
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: GetLanguageWithUICulture(String)
  nameWithType: IAppModule.GetLanguageWithUICulture(String)
  fullName: BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture(System.String)
    name: GetLanguageWithUICulture
    nameWithType: IAppModule.GetLanguageWithUICulture
    fullName: BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture(System.String)
    name: GetLanguageWithUICulture
    nameWithType: IAppModule.GetLanguageWithUICulture
    fullName: BindOpen.Application.Modules.IAppModule.GetLanguageWithUICulture
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Languages.IApplicationLanguage
  commentId: T:BindOpen.Application.Languages.IApplicationLanguage
  parent: BindOpen.Application.Languages
  isExternal: true
  name: IApplicationLanguage
  nameWithType: IApplicationLanguage
  fullName: BindOpen.Application.Languages.IApplicationLanguage
- uid: BindOpen.Application.Languages
  commentId: N:BindOpen.Application.Languages
  isExternal: true
  name: BindOpen.Application.Languages
  nameWithType: BindOpen.Application.Languages
  fullName: BindOpen.Application.Languages
- uid: BindOpen.Application.Modules.AppModule.AddSection*
  commentId: Overload:BindOpen.Application.Modules.AppModule.AddSection
  isExternal: true
  name: AddSection
  nameWithType: AppModule.AddSection
  fullName: BindOpen.Application.Modules.AppModule.AddSection
- uid: BindOpen.Application.Modules.IAppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  commentId: M:BindOpen.Application.Modules.IAppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: AddSection(IAppSection)
  nameWithType: IAppModule.AddSection(IAppSection)
  fullName: BindOpen.Application.Modules.IAppModule.AddSection(BindOpen.Application.Modules.IAppSection)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppModule.AddSection(BindOpen.Application.Modules.IAppSection)
    name: AddSection
    nameWithType: IAppModule.AddSection
    fullName: BindOpen.Application.Modules.IAppModule.AddSection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppModule.AddSection(BindOpen.Application.Modules.IAppSection)
    name: AddSection
    nameWithType: IAppModule.AddSection
    fullName: BindOpen.Application.Modules.IAppModule.AddSection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppModule.AddSections*
  commentId: Overload:BindOpen.Application.Modules.AppModule.AddSections
  isExternal: true
  name: AddSections
  nameWithType: AppModule.AddSections
  fullName: BindOpen.Application.Modules.AppModule.AddSections
- uid: BindOpen.Application.Modules.IAppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  commentId: M:BindOpen.Application.Modules.IAppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: AddSections(IAppSection[])
  nameWithType: IAppModule.AddSections(IAppSection[])
  fullName: BindOpen.Application.Modules.IAppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
  nameWithType.vb: IAppModule.AddSections(IAppSection())
  fullName.vb: BindOpen.Application.Modules.IAppModule.AddSections(BindOpen.Application.Modules.IAppSection())
  name.vb: AddSections(IAppSection())
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
    name: AddSections
    nameWithType: IAppModule.AddSections
    fullName: BindOpen.Application.Modules.IAppModule.AddSections
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppModule.AddSections(BindOpen.Application.Modules.IAppSection[])
    name: AddSections
    nameWithType: IAppModule.AddSections
    fullName: BindOpen.Application.Modules.IAppModule.AddSections
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.IAppSection[]
  isExternal: true
  name: IAppSection[]
  nameWithType: IAppSection[]
  fullName: BindOpen.Application.Modules.IAppSection[]
  nameWithType.vb: IAppSection()
  fullName.vb: BindOpen.Application.Modules.IAppSection()
  name.vb: IAppSection()
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Modules.AppModule.Update*
  commentId: Overload:BindOpen.Application.Modules.AppModule.Update
  isExternal: true
  name: Update
  nameWithType: AppModule.Update
  fullName: BindOpen.Application.Modules.AppModule.Update
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Common.UpdateModes[]
  isExternal: true
  name: UpdateModes[]
  nameWithType: UpdateModes[]
  fullName: BindOpen.Data.Common.UpdateModes[]
  nameWithType.vb: UpdateModes()
  fullName.vb: BindOpen.Data.Common.UpdateModes()
  name.vb: UpdateModes()
  spec.csharp:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Application.Modules.AppModule.IconFileName*
  commentId: Overload:BindOpen.Application.Modules.AppModule.IconFileName
  isExternal: true
  name: IconFileName
  nameWithType: AppModule.IconFileName
  fullName: BindOpen.Application.Modules.AppModule.IconFileName
- uid: BindOpen.Application.Modules.IAppModule.IconFileName
  commentId: P:BindOpen.Application.Modules.IAppModule.IconFileName
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: IconFileName
  nameWithType: IAppModule.IconFileName
  fullName: BindOpen.Application.Modules.IAppModule.IconFileName
- uid: BindOpen.Application.Modules.AppModule.Rank*
  commentId: Overload:BindOpen.Application.Modules.AppModule.Rank
  isExternal: true
  name: Rank
  nameWithType: AppModule.Rank
  fullName: BindOpen.Application.Modules.AppModule.Rank
- uid: BindOpen.Application.Modules.IAppModule.Rank
  commentId: P:BindOpen.Application.Modules.IAppModule.Rank
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: Rank
  nameWithType: IAppModule.Rank
  fullName: BindOpen.Application.Modules.IAppModule.Rank
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Application.Modules.AppModule.ThumbIconFileName*
  commentId: Overload:BindOpen.Application.Modules.AppModule.ThumbIconFileName
  isExternal: true
  name: ThumbIconFileName
  nameWithType: AppModule.ThumbIconFileName
  fullName: BindOpen.Application.Modules.AppModule.ThumbIconFileName
- uid: BindOpen.Application.Modules.IAppModule.ThumbIconFileName
  commentId: P:BindOpen.Application.Modules.IAppModule.ThumbIconFileName
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: ThumbIconFileName
  nameWithType: IAppModule.ThumbIconFileName
  fullName: BindOpen.Application.Modules.IAppModule.ThumbIconFileName
- uid: BindOpen.Application.Modules.AppModule.IsVisible*
  commentId: Overload:BindOpen.Application.Modules.AppModule.IsVisible
  isExternal: true
  name: IsVisible
  nameWithType: AppModule.IsVisible
  fullName: BindOpen.Application.Modules.AppModule.IsVisible
- uid: BindOpen.Application.Modules.IAppModule.IsVisible
  commentId: P:BindOpen.Application.Modules.IAppModule.IsVisible
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: IsVisible
  nameWithType: IAppModule.IsVisible
  fullName: BindOpen.Application.Modules.IAppModule.IsVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Modules.AppModule.Sections*
  commentId: Overload:BindOpen.Application.Modules.AppModule.Sections
  isExternal: true
  name: Sections
  nameWithType: AppModule.Sections
  fullName: BindOpen.Application.Modules.AppModule.Sections
- uid: BindOpen.Application.Modules.IAppModule.Sections
  commentId: P:BindOpen.Application.Modules.IAppModule.Sections
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: Sections
  nameWithType: IAppModule.Sections
  fullName: BindOpen.Application.Modules.IAppModule.Sections
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Modules.AppSection}
  commentId: '!:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Modules.AppSection}'
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<AppSection>
  nameWithType: IDataItemSet<AppSection>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Modules.AppSection>
  nameWithType.vb: IDataItemSet(Of AppSection)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Modules.AppSection)
  name.vb: IDataItemSet(Of AppSection)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  isExternal: true
  name: IDataItemSet<>
  nameWithType: IDataItemSet<>
  fullName: BindOpen.Data.Items.IDataItemSet<>
  nameWithType.vb: IDataItemSet(Of )
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of )
  name.vb: IDataItemSet(Of )
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppModule.Languages*
  commentId: Overload:BindOpen.Application.Modules.AppModule.Languages
  isExternal: true
  name: Languages
  nameWithType: AppModule.Languages
  fullName: BindOpen.Application.Modules.AppModule.Languages
- uid: BindOpen.Application.Modules.IAppModule.Languages
  commentId: P:BindOpen.Application.Modules.IAppModule.Languages
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: Languages
  nameWithType: IAppModule.Languages
  fullName: BindOpen.Application.Modules.IAppModule.Languages
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Languages.ApplicationLanguage}
  commentId: '!:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Languages.ApplicationLanguage}'
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<ApplicationLanguage>
  nameWithType: IDataItemSet<ApplicationLanguage>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Languages.ApplicationLanguage>
  nameWithType.vb: IDataItemSet(Of ApplicationLanguage)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Languages.ApplicationLanguage)
  name.vb: IDataItemSet(Of ApplicationLanguage)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Languages.ApplicationLanguage
    name: ApplicationLanguage
    nameWithType: ApplicationLanguage
    fullName: BindOpen.Application.Languages.ApplicationLanguage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Languages.ApplicationLanguage
    name: ApplicationLanguage
    nameWithType: ApplicationLanguage
    fullName: BindOpen.Application.Languages.ApplicationLanguage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppModule.DefaultUICulture*
  commentId: Overload:BindOpen.Application.Modules.AppModule.DefaultUICulture
  isExternal: true
  name: DefaultUICulture
  nameWithType: AppModule.DefaultUICulture
  fullName: BindOpen.Application.Modules.AppModule.DefaultUICulture
- uid: BindOpen.Application.Modules.IAppModule.DefaultUICulture
  commentId: P:BindOpen.Application.Modules.IAppModule.DefaultUICulture
  parent: BindOpen.Application.Modules.IAppModule
  isExternal: true
  name: DefaultUICulture
  nameWithType: IAppModule.DefaultUICulture
  fullName: BindOpen.Application.Modules.IAppModule.DefaultUICulture
shouldSkipMarkup: true
