### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Models.IBdoDbModelBuilder
  commentId: T:BindOpen.Data.Models.IBdoDbModelBuilder
  id: IBdoDbModelBuilder
  parent: BindOpen.Data.Models
  children:
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
  - BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  langs:
  - csharp
  - vb
  name: IBdoDbModelBuilder
  nameWithType: IBdoDbModelBuilder
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder
  type: Interface
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: public interface IBdoDbModelBuilder
    content.vb: Public Interface IBdoDbModelBuilder
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  id: AddJoinCondition(System.String,BindOpen.Data.Expression.DataExpression)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddJoinCondition(String, DataExpression)
  nameWithType: IBdoDbModelBuilder.AddJoinCondition(String, DataExpression)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition(System.String, BindOpen.Data.Expression.DataExpression)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: IBdoDbModelBuilder AddJoinCondition(string name, DataExpression condition)
    parameters:
    - id: name
      type: System.String
    - id: condition
      type: BindOpen.Data.Expression.DataExpression
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
    content.vb: Function AddJoinCondition(name As String, condition As DataExpression) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition*
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  id: AddTable(System.String,BindOpen.Extensions.Carriers.DbTable)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTable(String, DbTable)
  nameWithType: IBdoDbModelBuilder.AddTable(String, DbTable)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(System.String, BindOpen.Extensions.Carriers.DbTable)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: IBdoDbModelBuilder AddTable(string name, DbTable table)
    parameters:
    - id: name
      type: System.String
    - id: table
      type: BindOpen.Extensions.Carriers.DbTable
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
    content.vb: Function AddTable(name As String, table As DbTable) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable*
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  id: AddTable(BindOpen.Extensions.Carriers.DbTable)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTable(DbTable)
  nameWithType: IBdoDbModelBuilder.AddTable(DbTable)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(BindOpen.Extensions.Carriers.DbTable)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: IBdoDbModelBuilder AddTable(DbTable table)
    parameters:
    - id: table
      type: BindOpen.Extensions.Carriers.DbTable
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
    content.vb: Function AddTable(table As DbTable) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable*
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTable``1(System.String)
  id: AddTable``1(System.String)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTable<T>(String)
  nameWithType: IBdoDbModelBuilder.AddTable<T>(String)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable<T>(System.String)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: >-
      IBdoDbModelBuilder AddTable<T>(string name = null)
          where T : class
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
    content.vb: Function AddTable(Of T As Class)(name As String = Nothing) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable*
  nameWithType.vb: IBdoDbModelBuilder.AddTable(Of T)(String)
  fullName.vb: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable(Of T)(System.String)
  name.vb: AddTable(Of T)(String)
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  id: AddTuple(System.String,BindOpen.Extensions.Carriers.DbField[])
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddTuple(String, DbField[])
  nameWithType: IBdoDbModelBuilder.AddTuple(String, DbField[])
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String, BindOpen.Extensions.Carriers.DbField[])
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: IBdoDbModelBuilder AddTuple(string name, DbField[] fields)
    parameters:
    - id: name
      type: System.String
    - id: fields
      type: BindOpen.Extensions.Carriers.DbField[]
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
    content.vb: Function AddTuple(name As String, fields As DbField()) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple*
  nameWithType.vb: IBdoDbModelBuilder.AddTuple(String, DbField())
  fullName.vb: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple(System.String, BindOpen.Extensions.Carriers.DbField())
  name.vb: AddTuple(String, DbField())
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  id: AddQuery(System.String,BindOpen.Data.Queries.IDbQuery)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddQuery(String, IDbQuery)
  nameWithType: IBdoDbModelBuilder.AddQuery(String, IDbQuery)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(System.String, BindOpen.Data.Queries.IDbQuery)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: IBdoDbModelBuilder AddQuery(string name, IDbQuery query)
    parameters:
    - id: name
      type: System.String
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
    content.vb: Function AddQuery(name As String, query As IDbQuery) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery*
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  commentId: M:BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  id: AddQuery(BindOpen.Data.Queries.IDbQuery)
  parent: BindOpen.Data.Models.IBdoDbModelBuilder
  langs:
  - csharp
  - vb
  name: AddQuery(IDbQuery)
  nameWithType: IBdoDbModelBuilder.AddQuery(IDbQuery)
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery(BindOpen.Data.Queries.IDbQuery)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Models
  syntax:
    content: IBdoDbModelBuilder AddQuery(IDbQuery query)
    parameters:
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
    return:
      type: BindOpen.Data.Models.IBdoDbModelBuilder
    content.vb: Function AddQuery(query As IDbQuery) As IBdoDbModelBuilder
  overload: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery*
references:
- uid: BindOpen.Data.Models
  commentId: N:BindOpen.Data.Models
  isExternal: true
  name: BindOpen.Data.Models
  nameWithType: BindOpen.Data.Models
  fullName: BindOpen.Data.Models
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition*
  commentId: Overload:BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition
  isExternal: true
  name: AddJoinCondition
  nameWithType: IBdoDbModelBuilder.AddJoinCondition
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddJoinCondition
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Expression.DataExpression
  isExternal: true
  name: DataExpression
  nameWithType: DataExpression
  fullName: BindOpen.Data.Expression.DataExpression
- uid: BindOpen.Data.Models.IBdoDbModelBuilder
  commentId: T:BindOpen.Data.Models.IBdoDbModelBuilder
  parent: BindOpen.Data.Models
  isExternal: true
  name: IBdoDbModelBuilder
  nameWithType: IBdoDbModelBuilder
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable*
  commentId: Overload:BindOpen.Data.Models.IBdoDbModelBuilder.AddTable
  isExternal: true
  name: AddTable
  nameWithType: IBdoDbModelBuilder.AddTable
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTable
- uid: BindOpen.Extensions.Carriers.DbTable
  commentId: T:BindOpen.Extensions.Carriers.DbTable
  parent: BindOpen.Extensions.Carriers
  isExternal: true
  name: DbTable
  nameWithType: DbTable
  fullName: BindOpen.Extensions.Carriers.DbTable
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  isExternal: true
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple*
  commentId: Overload:BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple
  isExternal: true
  name: AddTuple
  nameWithType: IBdoDbModelBuilder.AddTuple
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddTuple
- uid: BindOpen.Extensions.Carriers.DbField[]
  isExternal: true
  name: DbField[]
  nameWithType: DbField[]
  fullName: BindOpen.Extensions.Carriers.DbField[]
  nameWithType.vb: DbField()
  fullName.vb: BindOpen.Extensions.Carriers.DbField()
  name.vb: DbField()
  spec.csharp:
  - uid: BindOpen.Extensions.Carriers.DbField
    name: DbField
    nameWithType: DbField
    fullName: BindOpen.Extensions.Carriers.DbField
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Extensions.Carriers.DbField
    name: DbField
    nameWithType: DbField
    fullName: BindOpen.Extensions.Carriers.DbField
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery*
  commentId: Overload:BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery
  isExternal: true
  name: AddQuery
  nameWithType: IBdoDbModelBuilder.AddQuery
  fullName: BindOpen.Data.Models.IBdoDbModelBuilder.AddQuery
- uid: BindOpen.Data.Queries.IDbQuery
  commentId: T:BindOpen.Data.Queries.IDbQuery
  parent: BindOpen.Data.Queries
  isExternal: true
  name: IDbQuery
  nameWithType: IDbQuery
  fullName: BindOpen.Data.Queries.IDbQuery
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  isExternal: true
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
shouldSkipMarkup: true
