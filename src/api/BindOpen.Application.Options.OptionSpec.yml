### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Options.OptionSpec
  commentId: T:BindOpen.Application.Options.OptionSpec
  id: OptionSpec
  parent: BindOpen.Application.Options
  children:
  - BindOpen.Application.Options.OptionSpec.#ctor
  - BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.RequirementLevel,System.String[])
  - BindOpen.Application.Options.OptionSpec.#ctor(System.String[])
  - BindOpen.Application.Options.OptionSpec.#ctor(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String)
  - BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String,System.Int32@)
  langs:
  - csharp
  - vb
  name: OptionSpec
  nameWithType: OptionSpec
  fullName: BindOpen.Application.Options.OptionSpec
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThis class represents an option specification.\n"
  syntax:
    content: 'public class OptionSpec : ScalarElementSpec, IOptionSpec, IScalarElementSpec, IDataElementSpec, IDataSpecification, IIndexedDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed'
    content.vb: >-
      Public Class OptionSpec
          Inherits ScalarElementSpec
          Implements IOptionSpec, IScalarElementSpec, IDataElementSpec, IDataSpecification, IIndexedDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed
  inheritance:
  - System.Object
  implements:
  - BindOpen.Application.Options.IOptionSpec
  - BindOpen.Data.Elements.IScalarElementSpec
  - BindOpen.Data.Elements.IDataElementSpec
  - BindOpen.Data.Specification.IDataSpecification
  - BindOpen.Data.Items.IIndexedDataItem
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  - BindOpen.Data.Items.IIndexed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Options.OptionSpec.#ctor
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor
  id: '#ctor'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec()
  nameWithType: OptionSpec.OptionSpec()
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec()
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec()
    content.vb: Public Sub New
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpec.#ctor(System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec(String[])
  nameWithType: OptionSpec.OptionSpec(String[])
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec(System.String[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec(params string[] aliases)
    parameters:
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    content.vb: Public Sub New(ParamArray aliases As String())
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  nameWithType.vb: OptionSpec.OptionSpec(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.OptionSpec(System.String())
  name.vb: OptionSpec(String())
- uid: BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Application.Options.OptionNameKind,System.String[])
  id: '#ctor(BindOpen.Application.Options.OptionNameKind,System.String[])'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec(OptionNameKind, String[])
  nameWithType: OptionSpec.OptionSpec(OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec(OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    content.vb: Public Sub New(nameKind As OptionNameKind, ParamArray aliases As String())
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  nameWithType.vb: OptionSpec.OptionSpec(OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: OptionSpec(OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: '#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec(DataValueType, OptionNameKind, String[])
  nameWithType: OptionSpec.OptionSpec(DataValueType, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec(DataValueType dataValueType, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The value type to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    content.vb: Public Sub New(dataValueType As DataValueType, nameKind As OptionNameKind, ParamArray aliases As String())
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  nameWithType.vb: OptionSpec.OptionSpec(DataValueType, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: OptionSpec(DataValueType, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.RequirementLevel,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.RequirementLevel,System.String[])
  id: '#ctor(BindOpen.Data.Common.RequirementLevel,System.String[])'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec(RequirementLevel, String[])
  nameWithType: OptionSpec.OptionSpec(RequirementLevel, String[])
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.RequirementLevel, System.String[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec(RequirementLevel requirementLevel, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to add.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    content.vb: Public Sub New(requirementLevel As RequirementLevel, ParamArray aliases As String())
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  nameWithType.vb: OptionSpec.OptionSpec(RequirementLevel, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.RequirementLevel, System.String())
  name.vb: OptionSpec(RequirementLevel, String())
- uid: BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: '#ctor(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec(RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpec.OptionSpec(RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec(RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to add.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    content.vb: Public Sub New(requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String())
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  nameWithType.vb: OptionSpec.OptionSpec(RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: OptionSpec(RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: '#ctor(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec(DataValueType, RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpec.OptionSpec(DataValueType, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec(DataValueType dataValueType, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The value type to consider.
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    content.vb: Public Sub New(dataValueType As DataValueType, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String())
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  nameWithType.vb: OptionSpec.OptionSpec(DataValueType, RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.OptionSpec(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: OptionSpec(DataValueType, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpec.#ctor(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpec.#ctor(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: '#ctor(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])'
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: OptionSpec(Type, RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpec.OptionSpec(Type, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpec class.\n"
  syntax:
    content: public OptionSpec(Type type, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: type
      type: System.Type
      description: The type to consider.
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the option to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    content.vb: Public Sub New(type As Type, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String())
  overload: BindOpen.Application.Options.OptionSpec.#ctor*
  nameWithType.vb: OptionSpec.OptionSpec(Type, RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.OptionSpec(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: OptionSpec(Type, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String,System.Int32@)
  commentId: M:BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String,System.Int32@)
  id: IsArgumentMarching(System.String,System.Int32@)
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: IsArgumentMarching(String, out Int32)
  nameWithType: OptionSpec.IsArgumentMarching(String, out Int32)
  fullName: BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String, out System.Int32)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nIndicates whether the specified argument matches with this instance.\n"
  syntax:
    content: public bool IsArgumentMarching(string argumentstring, out int aliasIndex)
    parameters:
    - id: argumentstring
      type: System.String
      description: The argument to consider.
    - id: aliasIndex
      type: System.Int32
      description: The alias index to consider. -2 not found. -1 Name matches. otherwise the index of matched alias.
    return:
      type: System.Boolean
      description: Returns True if the specified matches this instance.
    content.vb: Public Function IsArgumentMarching(argumentstring As String, ByRef aliasIndex As Integer) As Boolean
  overload: BindOpen.Application.Options.OptionSpec.IsArgumentMarching*
  implements:
  - BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String,System.Int32@)
  nameWithType.vb: OptionSpec.IsArgumentMarching(String, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String, ByRef System.Int32)
  name.vb: IsArgumentMarching(String, ByRef Int32)
- uid: BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String)
  id: IsArgumentMarching(System.String)
  parent: BindOpen.Application.Options.OptionSpec
  langs:
  - csharp
  - vb
  name: IsArgumentMarching(String)
  nameWithType: OptionSpec.IsArgumentMarching(String)
  fullName: BindOpen.Application.Options.OptionSpec.IsArgumentMarching(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nIndicates whether the specified argument matches with this instance.\n"
  syntax:
    content: public bool IsArgumentMarching(string argumentstring)
    parameters:
    - id: argumentstring
      type: System.String
      description: The argument to consider.
    return:
      type: System.Boolean
      description: Returns True if the specified matches this instance.
    content.vb: Public Function IsArgumentMarching(argumentstring As String) As Boolean
  overload: BindOpen.Application.Options.OptionSpec.IsArgumentMarching*
  implements:
  - BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Application.Options
  commentId: N:BindOpen.Application.Options
  isExternal: true
  name: BindOpen.Application.Options
  nameWithType: BindOpen.Application.Options
  fullName: BindOpen.Application.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Application.Options.IOptionSpec
  commentId: T:BindOpen.Application.Options.IOptionSpec
  parent: BindOpen.Application.Options
  isExternal: true
  name: IOptionSpec
  nameWithType: IOptionSpec
  fullName: BindOpen.Application.Options.IOptionSpec
- uid: BindOpen.Data.Elements.IScalarElementSpec
  commentId: '!:BindOpen.Data.Elements.IScalarElementSpec'
  isExternal: true
  name: IScalarElementSpec
  nameWithType: IScalarElementSpec
  fullName: BindOpen.Data.Elements.IScalarElementSpec
- uid: BindOpen.Data.Elements.IDataElementSpec
  commentId: '!:BindOpen.Data.Elements.IDataElementSpec'
  isExternal: true
  name: IDataElementSpec
  nameWithType: IDataElementSpec
  fullName: BindOpen.Data.Elements.IDataElementSpec
- uid: BindOpen.Data.Specification.IDataSpecification
  commentId: '!:BindOpen.Data.Specification.IDataSpecification'
  isExternal: true
  name: IDataSpecification
  nameWithType: IDataSpecification
  fullName: BindOpen.Data.Specification.IDataSpecification
- uid: BindOpen.Data.Items.IIndexedDataItem
  commentId: '!:BindOpen.Data.Items.IIndexedDataItem'
  isExternal: true
  name: IIndexedDataItem
  nameWithType: IIndexedDataItem
  fullName: BindOpen.Data.Items.IIndexedDataItem
- uid: BindOpen.Data.Items.IDescribedDataItem
  isExternal: true
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  isExternal: true
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  isExternal: true
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  isExternal: true
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  isExternal: true
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.IIndexed
  isExternal: true
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Options.OptionSpec.#ctor*
  commentId: Overload:BindOpen.Application.Options.OptionSpec.#ctor
  isExternal: true
  name: OptionSpec
  nameWithType: OptionSpec.OptionSpec
  fullName: BindOpen.Application.Options.OptionSpec.OptionSpec
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Options.OptionNameKind
  commentId: T:BindOpen.Application.Options.OptionNameKind
  parent: BindOpen.Application.Options
  isExternal: true
  name: OptionNameKind
  nameWithType: OptionNameKind
  fullName: BindOpen.Application.Options.OptionNameKind
- uid: BindOpen.Data.Common.DataValueType
  isExternal: true
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Data.Common.RequirementLevel
  isExternal: true
  name: RequirementLevel
  nameWithType: RequirementLevel
  fullName: BindOpen.Data.Common.RequirementLevel
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: BindOpen.Application.Options.OptionSpec.IsArgumentMarching*
  commentId: Overload:BindOpen.Application.Options.OptionSpec.IsArgumentMarching
  isExternal: true
  name: IsArgumentMarching
  nameWithType: OptionSpec.IsArgumentMarching
  fullName: BindOpen.Application.Options.OptionSpec.IsArgumentMarching
- uid: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String,System.Int32@)
  commentId: M:BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String,System.Int32@)
  parent: BindOpen.Application.Options.IOptionSpec
  isExternal: true
  name: IsArgumentMarching(String, Int32)
  nameWithType: IOptionSpec.IsArgumentMarching(String, Int32)
  fullName: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String, System.Int32)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String,System.Int32@)
    name: IsArgumentMarching
    nameWithType: IOptionSpec.IsArgumentMarching
    fullName: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String,System.Int32@)
    name: IsArgumentMarching
    nameWithType: IOptionSpec.IsArgumentMarching
    fullName: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String)
  parent: BindOpen.Application.Options.IOptionSpec
  isExternal: true
  name: IsArgumentMarching(String)
  nameWithType: IOptionSpec.IsArgumentMarching(String)
  fullName: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String)
    name: IsArgumentMarching
    nameWithType: IOptionSpec.IsArgumentMarching
    fullName: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching(System.String)
    name: IsArgumentMarching
    nameWithType: IOptionSpec.IsArgumentMarching
    fullName: BindOpen.Application.Options.IOptionSpec.IsArgumentMarching
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
