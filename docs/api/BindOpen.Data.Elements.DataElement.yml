### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Elements.DataElement
  commentId: T:BindOpen.Data.Elements.DataElement
  id: DataElement
  parent: BindOpen.Data.Elements
  children:
  - BindOpen.Data.Elements.DataElement.#ctor
  - BindOpen.Data.Elements.DataElement.#ctor(System.String,System.String,System.String)
  - BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
  - BindOpen.Data.Elements.DataElement.ClearItems
  - BindOpen.Data.Elements.DataElement.Clone
  - BindOpen.Data.Elements.DataElement.Clone(System.String[])
  - BindOpen.Data.Elements.DataElement.Dispose(System.Boolean)
  - BindOpen.Data.Elements.DataElement.EventKind
  - BindOpen.Data.Elements.DataElement.EventKindSpecified
  - BindOpen.Data.Elements.DataElement.First
  - BindOpen.Data.Elements.DataElement.GetDefaultControlType
  - BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
  - BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
  - BindOpen.Data.Elements.DataElement.Item(System.Int32)
  - BindOpen.Data.Elements.DataElement.Item(System.String)
  - BindOpen.Data.Elements.DataElement.ItemizationMode
  - BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  - BindOpen.Data.Elements.DataElement.ItemReference
  - BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  - BindOpen.Data.Elements.DataElement.Items
  - BindOpen.Data.Elements.DataElement.ItemScript
  - BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  - BindOpen.Data.Elements.DataElement.NewSpecification
  - BindOpen.Data.Elements.DataElement.op_Explicit(BindOpen.Data.Elements.DataElement)~System.String
  - BindOpen.Data.Elements.DataElement.op_Explicit(System.String)~BindOpen.Data.Elements.DataElement
  - BindOpen.Data.Elements.DataElement.PropertyDetail
  - BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  - BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  - BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  - BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  - BindOpen.Data.Elements.DataElement.Specification
  - BindOpen.Data.Elements.DataElement.SpecificationSpecified
  - BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
  - BindOpen.Data.Elements.DataElement.ToString
  - BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
  - BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElement.ValueType
  - BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  langs:
  - csharp
  - vb
  name: DataElement
  nameWithType: DataElement
  fullName: BindOpen.Data.Elements.DataElement
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DataElement
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 22
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThis class represents a data element.\n"
  example: []
  syntax:
    content: 'public abstract class DataElement : IndexedDataItem, IIndexedDataItem, IDataElement, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed'
    content.vb: >-
      Public MustInherit Class DataElement
          Inherits IndexedDataItem
          Implements IIndexedDataItem, IDataElement, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.StoredDataItem
  - BindOpen.Data.Items.NamedDataItem
  - BindOpen.Data.Items.TitledDataItem
  - BindOpen.Data.Items.DescribedDataItem
  - BindOpen.Data.Items.IndexedDataItem
  derivedClasses:
  - BindOpen.Data.Elements.CarrierElement
  - BindOpen.Data.Elements.CollectionElement
  - BindOpen.Data.Elements.DocumentElement
  - BindOpen.Data.Elements.MetaDataElement
  - BindOpen.Data.Elements.ObjectElement
  - BindOpen.Data.Elements.ScalarElement
  - BindOpen.Data.Elements.Schema.SchemaElement
  - BindOpen.Data.Elements.SourceElement
  implements:
  - BindOpen.Data.Items.IIndexedDataItem
  - BindOpen.Data.Elements.IDataElement
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  - BindOpen.Data.Items.IIndexed
  inheritedMembers:
  - BindOpen.Data.Items.IndexedDataItem.Index
  - BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  - BindOpen.Data.Items.DescribedDataItem.Description
  - BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  - BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.Title
  - BindOpen.Data.Items.TitledDataItem.TitleSpecified
  - BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  - BindOpen.Data.Items.NamedDataItem.Name
  - BindOpen.Data.Items.NamedDataItem.NameSpecified
  - BindOpen.Data.Items.NamedDataItem.Key
  - BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  - BindOpen.Data.Items.StoredDataItem.NamePreffix
  - BindOpen.Data.Items.StoredDataItem.CreationDate
  - BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.LastModificationDate
  - BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Data.Elements.DataElement.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.DataElement})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: BindOpen.Data.Elements.DataElement.ValueType
  commentId: P:BindOpen.Data.Elements.DataElement.ValueType
  id: ValueType
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: DataElement.ValueType
  fullName: BindOpen.Data.Elements.DataElement.ValueType
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ValueType
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 60
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe value type of this instance.\n"
  example: []
  syntax:
    content: public DataValueType ValueType { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Common.DataValueType
    content.vb: Public Property ValueType As DataValueType
  overload: BindOpen.Data.Elements.DataElement.ValueType*
  implements:
  - BindOpen.Data.Elements.IDataElement.ValueType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  id: ValueTypeSpecified
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ValueTypeSpecified
  nameWithType: DataElement.ValueTypeSpecified
  fullName: BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ValueTypeSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 67
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ValueType property of this instance.\n"
  example: []
  syntax:
    content: public bool ValueTypeSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ValueTypeSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElement.ValueTypeSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.ItemizationMode
  commentId: P:BindOpen.Data.Elements.DataElement.ItemizationMode
  id: ItemizationMode
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ItemizationMode
  nameWithType: DataElement.ItemizationMode
  fullName: BindOpen.Data.Elements.DataElement.ItemizationMode
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemizationMode
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 73
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe itemization mode of this instance.\n"
  example: []
  syntax:
    content: public DataItemizationMode ItemizationMode { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DataItemizationMode
    content.vb: Public Property ItemizationMode As DataItemizationMode
  overload: BindOpen.Data.Elements.DataElement.ItemizationMode*
  implements:
  - BindOpen.Data.Elements.IDataElement.ItemizationMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  id: ItemizationModeSpecified
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ItemizationModeSpecified
  nameWithType: DataElement.ItemizationModeSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemizationModeSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 88
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ItemizationMode property of this instance.\n"
  example: []
  syntax:
    content: public bool ItemizationModeSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ItemizationModeSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElement.ItemizationModeSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.ItemReference
  commentId: P:BindOpen.Data.Elements.DataElement.ItemReference
  id: ItemReference
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ItemReference
  nameWithType: DataElement.ItemReference
  fullName: BindOpen.Data.Elements.DataElement.ItemReference
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemReference
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 94
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nItem reference of this instance.\n"
  example: []
  syntax:
    content: public DataReferenceDto ItemReference { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.References.DataReferenceDto
    content.vb: Public Property ItemReference As DataReferenceDto
  overload: BindOpen.Data.Elements.DataElement.ItemReference*
  implements:
  - BindOpen.Data.Elements.IDataElement.ItemReference
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  id: ItemReferenceSpecified
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ItemReferenceSpecified
  nameWithType: DataElement.ItemReferenceSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemReferenceSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 100
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ItemReference property of this instance.\n"
  example: []
  syntax:
    content: public bool ItemReferenceSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ItemReferenceSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElement.ItemReferenceSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.ItemScript
  commentId: P:BindOpen.Data.Elements.DataElement.ItemScript
  id: ItemScript
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ItemScript
  nameWithType: DataElement.ItemScript
  fullName: BindOpen.Data.Elements.DataElement.ItemScript
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemScript
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 106
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe script of this instance.\n"
  example: []
  syntax:
    content: public string ItemScript { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ItemScript As String
  overload: BindOpen.Data.Elements.DataElement.ItemScript*
  implements:
  - BindOpen.Data.Elements.IDataElement.ItemScript
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  id: ItemScriptSpecified
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ItemScriptSpecified
  nameWithType: DataElement.ItemScriptSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemScriptSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 112
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ItemScript property of this instance.\n"
  example: []
  syntax:
    content: public bool ItemScriptSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ItemScriptSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElement.ItemScriptSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.Items
  commentId: P:BindOpen.Data.Elements.DataElement.Items
  id: Items
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: DataElement.Items
  fullName: BindOpen.Data.Elements.DataElement.Items
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Items
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 118
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nItems of this instance.\n"
  example: []
  syntax:
    content: public List<object> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Public Property Items As List(Of Object)
  overload: BindOpen.Data.Elements.DataElement.Items*
  implements:
  - BindOpen.Data.Elements.IDataElement.Items
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.op_Explicit(System.String)~BindOpen.Data.Elements.DataElement
  commentId: M:BindOpen.Data.Elements.DataElement.op_Explicit(System.String)~BindOpen.Data.Elements.DataElement
  id: op_Explicit(System.String)~BindOpen.Data.Elements.DataElement
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Explicit(String to DataElement)
  nameWithType: DataElement.Explicit(String to DataElement)
  fullName: BindOpen.Data.Elements.DataElement.Explicit(System.String to BindOpen.Data.Elements.DataElement)
  type: Operator
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: op_Explicit
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 129
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nConverts from string.\n"
  example: []
  syntax:
    content: public static explicit operator DataElement(string st)
    parameters:
    - id: st
      type: System.String
      description: The string to consider.
    return:
      type: BindOpen.Data.Elements.DataElement
    content.vb: Public Shared Narrowing Operator CType(st As String) As DataElement
  overload: BindOpen.Data.Elements.DataElement.op_Explicit*
  nameWithType.vb: DataElement.Narrowing(String to DataElement)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BindOpen.Data.Elements.DataElement.Narrowing(System.String to BindOpen.Data.Elements.DataElement)
  name.vb: Narrowing(String to DataElement)
- uid: BindOpen.Data.Elements.DataElement.op_Explicit(BindOpen.Data.Elements.DataElement)~System.String
  commentId: M:BindOpen.Data.Elements.DataElement.op_Explicit(BindOpen.Data.Elements.DataElement)~System.String
  id: op_Explicit(BindOpen.Data.Elements.DataElement)~System.String
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Explicit(DataElement to String)
  nameWithType: DataElement.Explicit(DataElement to String)
  fullName: BindOpen.Data.Elements.DataElement.Explicit(BindOpen.Data.Elements.DataElement to System.String)
  type: Operator
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: op_Explicit
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 138
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nConverts to string.\n"
  example: []
  syntax:
    content: public static explicit operator string (DataElement element)
    parameters:
    - id: element
      type: BindOpen.Data.Elements.DataElement
      description: The element to consider.
    return:
      type: System.String
    content.vb: Public Shared Narrowing Operator CType(element As DataElement) As String
  overload: BindOpen.Data.Elements.DataElement.op_Explicit*
  nameWithType.vb: DataElement.Narrowing(DataElement to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BindOpen.Data.Elements.DataElement.Narrowing(BindOpen.Data.Elements.DataElement to System.String)
  name.vb: Narrowing(DataElement to String)
- uid: BindOpen.Data.Elements.DataElement.Specification
  commentId: P:BindOpen.Data.Elements.DataElement.Specification
  id: Specification
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Specification
  nameWithType: DataElement.Specification
  fullName: BindOpen.Data.Elements.DataElement.Specification
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Specification
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 148
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of this instance.\n"
  example: []
  syntax:
    content: public DataElementSpec Specification { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Elements.DataElementSpec
    content.vb: Public Property Specification As DataElementSpec
  overload: BindOpen.Data.Elements.DataElement.Specification*
  implements:
  - BindOpen.Data.Elements.IDataElement.Specification
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.SpecificationSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.SpecificationSpecified
  id: SpecificationSpecified
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: SpecificationSpecified
  nameWithType: DataElement.SpecificationSpecified
  fullName: BindOpen.Data.Elements.DataElement.SpecificationSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SpecificationSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 154
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the Specification property of this instance.\n"
  example: []
  syntax:
    content: public bool SpecificationSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SpecificationSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElement.SpecificationSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.Item(System.Int32)
  commentId: P:BindOpen.Data.Elements.DataElement.Item(System.Int32)
  id: Item(System.Int32)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: DataElement.Item[Int32]
  fullName: BindOpen.Data.Elements.DataElement.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: this[]
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 160
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nReturns the item with the specified indexed.\n"
  example: []
  syntax:
    content: public object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Item(index As Integer) As Object
  overload: BindOpen.Data.Elements.DataElement.Item*
  implements:
  - BindOpen.Data.Elements.IDataElement.Item(System.Int32)
  nameWithType.vb: DataElement.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: BindOpen.Data.Elements.DataElement.Item(System.Int32)
  name.vb: Item(Int32)
- uid: BindOpen.Data.Elements.DataElement.Item(System.String)
  commentId: P:BindOpen.Data.Elements.DataElement.Item(System.String)
  id: Item(System.String)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: DataElement.Item[String]
  fullName: BindOpen.Data.Elements.DataElement.Item[System.String]
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: this[]
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 166
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nReturns the item with the specified unique name.\n"
  example: []
  syntax:
    content: public object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Item(name As String) As Object
  overload: BindOpen.Data.Elements.DataElement.Item*
  implements:
  - BindOpen.Data.Elements.IDataElement.Item(System.String)
  nameWithType.vb: DataElement.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: BindOpen.Data.Elements.DataElement.Item(System.String)
  name.vb: Item(String)
- uid: BindOpen.Data.Elements.DataElement.First
  commentId: P:BindOpen.Data.Elements.DataElement.First
  id: First
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: First
  nameWithType: DataElement.First
  fullName: BindOpen.Data.Elements.DataElement.First
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: First
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 172
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nReturns the first item.\n"
  example: []
  syntax:
    content: public object First { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property First As Object
  overload: BindOpen.Data.Elements.DataElement.First*
  implements:
  - BindOpen.Data.Elements.IDataElement.First
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.PropertyDetail
  commentId: P:BindOpen.Data.Elements.DataElement.PropertyDetail
  id: PropertyDetail
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: PropertyDetail
  nameWithType: DataElement.PropertyDetail
  fullName: BindOpen.Data.Elements.DataElement.PropertyDetail
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: PropertyDetail
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 180
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nProperty detail of this instance.\n"
  example: []
  syntax:
    content: public DataElementSet PropertyDetail { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Elements.DataElementSet
    content.vb: Public Property PropertyDetail As DataElementSet
  overload: BindOpen.Data.Elements.DataElement.PropertyDetail*
  implements:
  - BindOpen.Data.Elements.IDataElement.PropertyDetail
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  id: PropertyDetailSpecified
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: PropertyDetailSpecified
  nameWithType: DataElement.PropertyDetailSpecified
  fullName: BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: PropertyDetailSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 190
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the PropertyDetail property of this instance.\n"
  example: []
  syntax:
    content: public bool PropertyDetailSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property PropertyDetailSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElement.PropertyDetailSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.EventKind
  commentId: P:BindOpen.Data.Elements.DataElement.EventKind
  id: EventKind
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: EventKind
  nameWithType: DataElement.EventKind
  fullName: BindOpen.Data.Elements.DataElement.EventKind
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: EventKind
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 196
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe event kind of this instance.\n"
  example: []
  syntax:
    content: public EventKinds? EventKind { get; set; }
    parameters: []
    return:
      type: System.Nullable{BindOpen.System.Diagnostics.Events.EventKinds}
    content.vb: Public Property EventKind As EventKinds?
  overload: BindOpen.Data.Elements.DataElement.EventKind*
  implements:
  - BindOpen.Data.Elements.IDataElement.EventKind
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.EventKindSpecified
  commentId: P:BindOpen.Data.Elements.DataElement.EventKindSpecified
  id: EventKindSpecified
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: EventKindSpecified
  nameWithType: DataElement.EventKindSpecified
  fullName: BindOpen.Data.Elements.DataElement.EventKindSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: EventKindSpecified
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 206
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the EventKind property of this instance.\n"
  example: []
  syntax:
    content: public bool EventKindSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property EventKindSpecified As Boolean
  overload: BindOpen.Data.Elements.DataElement.EventKindSpecified*
  implements:
  - BindOpen.Data.Elements.IDataElement.EventKindSpecified
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.DataElement.#ctor
  commentId: M:BindOpen.Data.Elements.DataElement.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: DataElement()
  nameWithType: DataElement.DataElement()
  fullName: BindOpen.Data.Elements.DataElement.DataElement()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 220
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nInitializes a new data element.\n"
  example: []
  syntax:
    content: protected DataElement()
    content.vb: Protected Sub New
  overload: BindOpen.Data.Elements.DataElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Data.Elements.DataElement.#ctor(System.String,System.String,System.String)
  commentId: M:BindOpen.Data.Elements.DataElement.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: DataElement(String, String, String)
  nameWithType: DataElement.DataElement(String, String, String)
  fullName: BindOpen.Data.Elements.DataElement.DataElement(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 230
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nInitializes a new data element.\n"
  example: []
  syntax:
    content: protected DataElement(string name = null, string namePreffix = null, string id = null)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    - id: namePreffix
      type: System.String
      description: The name preffix to consider.
    - id: id
      type: System.String
      description: The ID to consider.
    content.vb: Protected Sub New(name As String = Nothing, namePreffix As String = Nothing, id As String = Nothing)
  overload: BindOpen.Data.Elements.DataElement.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: GetObject``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: GetObject<T>(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElement.GetObject<T>(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.GetObject<T>(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetObject
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 253
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nReturns the item object of this instance.\n"
  example: []
  syntax:
    content: public virtual object GetObject<T>(IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The script variable set to use.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to populate.
    typeParameters:
    - id: T
    return:
      type: System.Object
      description: Returns the items of this instance.
    content.vb: Public Overridable Function GetObject(Of T)(scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing) As Object
  overload: BindOpen.Data.Elements.DataElement.GetObject*
  nameWithType.vb: DataElement.GetObject(Of T)(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BindOpen.Data.Elements.DataElement.GetObject(Of T)(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: GetObject(Of T)(IBdoScope, IBdoScriptVariableSet, IBdoLog)
- uid: BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: GetObject(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElement.GetObject(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.GetObject(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetObject
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 268
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nReturns the item object of this instance.\n"
  example: []
  syntax:
    content: public virtual object GetObject(IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The script variable set to use.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to populate.
    return:
      type: System.Object
      description: Returns the items of this instance.
    content.vb: Public Overridable Function GetObject(scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing) As Object
  overload: BindOpen.Data.Elements.DataElement.GetObject*
  implements:
  - BindOpen.Data.Elements.IDataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Elements.DataElement.ClearItems
  commentId: M:BindOpen.Data.Elements.DataElement.ClearItems
  id: ClearItems
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ClearItems()
  nameWithType: DataElement.ClearItems()
  fullName: BindOpen.Data.Elements.DataElement.ClearItems()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ClearItems
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 336
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nClears items of this instance.\n"
  example: []
  syntax:
    content: public void ClearItems()
    content.vb: Public Sub ClearItems
  overload: BindOpen.Data.Elements.DataElement.ClearItems*
  implements:
  - BindOpen.Data.Elements.IDataElement.ClearItems
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.NewSpecification
  commentId: M:BindOpen.Data.Elements.DataElement.NewSpecification
  id: NewSpecification
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: NewSpecification()
  nameWithType: DataElement.NewSpecification()
  fullName: BindOpen.Data.Elements.DataElement.NewSpecification()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: NewSpecification
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 347
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nCreates a new specification of this instance.\n"
  example: []
  syntax:
    content: public abstract DataElementSpec NewSpecification()
    return:
      type: BindOpen.Data.Elements.DataElementSpec
      description: Returns True .
    content.vb: Public MustOverride Function NewSpecification As DataElementSpec
  overload: BindOpen.Data.Elements.DataElement.NewSpecification*
  implements:
  - BindOpen.Data.Elements.IDataElement.NewSpecification
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  id: SetItem(System.Object)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: SetItem(Object)
  nameWithType: DataElement.SetItem(Object)
  fullName: BindOpen.Data.Elements.DataElement.SetItem(System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetItem
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 356
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSets the specified single item of this instance.\n"
  remarks: Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..
  example: []
  syntax:
    content: public virtual void SetItem(object item)
    parameters:
    - id: item
      type: System.Object
      description: The item to apply to this instance.
    content.vb: Public Overridable Sub SetItem(item As Object)
  overload: BindOpen.Data.Elements.DataElement.SetItem*
  implements:
  - BindOpen.Data.Elements.IDataElement.SetItem(System.Object)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  commentId: M:BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  id: SetItems(System.Object[])
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: SetItems(Object[])
  nameWithType: DataElement.SetItems(Object[])
  fullName: BindOpen.Data.Elements.DataElement.SetItems(System.Object[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetItems
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 368
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSets the specified single item of this instance.\n"
  remarks: Items of this instance must be allowed and must not be forbidden. Otherwise, the values will be the default ones..
  example: []
  syntax:
    content: public void SetItems(object[] items)
    parameters:
    - id: items
      type: System.Object[]
      description: The items to apply to this instance.
    content.vb: Public Sub SetItems(items As Object())
  overload: BindOpen.Data.Elements.DataElement.SetItems*
  implements:
  - BindOpen.Data.Elements.IDataElement.SetItems(System.Object[])
  nameWithType.vb: DataElement.SetItems(Object())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Elements.DataElement.SetItems(System.Object())
  name.vb: SetItems(Object())
- uid: BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  id: AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: AddItem(Object, IBdoLog)
  nameWithType: DataElement.AddItem(Object, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.AddItem(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddItem
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 383
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nAdds a new single item of this instance.\n"
  remarks: Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..
  example: []
  syntax:
    content: public virtual bool AddItem(object item, IBdoLog log = null)
    parameters:
    - id: item
      type: System.Object
      description: The string item of this instance.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to populate.
    return:
      type: System.Boolean
      description: Returns True if the specified has been well added.
    content.vb: Public Overridable Function AddItem(item As Object, log As IBdoLog = Nothing) As Boolean
  overload: BindOpen.Data.Elements.DataElement.AddItem*
  implements:
  - BindOpen.Data.Elements.IDataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  id: AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: AddItems(Object[], IBdoLog)
  nameWithType: DataElement.AddItems(Object[], IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.AddItems(System.Object[], BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddItems
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 423
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nAdds items to this instance.\n"
  remarks: Items of this instance must be allowed and must not be forbidden. Otherwise, the items will be the default ones..
  example: []
  syntax:
    content: public void AddItems(object[] items, IBdoLog log = null)
    parameters:
    - id: items
      type: System.Object[]
      description: The items of this instance.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to populate.
    content.vb: Public Sub AddItems(items As Object(), log As IBdoLog = Nothing)
  overload: BindOpen.Data.Elements.DataElement.AddItems*
  implements:
  - BindOpen.Data.Elements.IDataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataElement.AddItems(Object(), IBdoLog)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Elements.DataElement.AddItems(System.Object(), BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddItems(Object(), IBdoLog)
- uid: BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.SwitchItems(System.Object,System.Object)
  id: SwitchItems(System.Object,System.Object)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: SwitchItems(Object, Object)
  nameWithType: DataElement.SwitchItems(Object, Object)
  fullName: BindOpen.Data.Elements.DataElement.SwitchItems(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SwitchItems
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 443
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSwitches the single value value1 with the single value value2.\n"
  example: []
  syntax:
    content: public void SwitchItems(object value1, object value2)
    parameters:
    - id: value1
      type: System.Object
      description: The first single value to switch.
    - id: value2
      type: System.Object
      description: The second single value to switch.
    content.vb: Public Sub SwitchItems(value1 As Object, value2 As Object)
  overload: BindOpen.Data.Elements.DataElement.SwitchItems*
  implements:
  - BindOpen.Data.Elements.IDataElement.SwitchItems(System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.UpdateItem(System.Object,System.Object)
  id: UpdateItem(System.Object,System.Object)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: UpdateItem(Object, Object)
  nameWithType: DataElement.UpdateItem(Object, Object)
  fullName: BindOpen.Data.Elements.DataElement.UpdateItem(System.Object, System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateItem
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 459
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nUpdates the value value1 with the value value2.\n"
  example: []
  syntax:
    content: public void UpdateItem(object item, object aNewItem)
    parameters:
    - id: item
      type: System.Object
      description: The item to consider.
    - id: aNewItem
      type: System.Object
      description: The new item.
    content.vb: Public Sub UpdateItem(item As Object, aNewItem As Object)
  overload: BindOpen.Data.Elements.DataElement.UpdateItem*
  implements:
  - BindOpen.Data.Elements.IDataElement.UpdateItem(System.Object,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  id: RemoveItem(System.Object)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: RemoveItem(Object)
  nameWithType: DataElement.RemoveItem(Object)
  fullName: BindOpen.Data.Elements.DataElement.RemoveItem(System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: RemoveItem
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 471
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nRemoves the specified item.\n"
  example: []
  syntax:
    content: public bool RemoveItem(object item)
    parameters:
    - id: item
      type: System.Object
      description: 'The item '
    return:
      type: System.Boolean
    content.vb: Public Function RemoveItem(item As Object) As Boolean
  overload: BindOpen.Data.Elements.DataElement.RemoveItem*
  implements:
  - BindOpen.Data.Elements.IDataElement.RemoveItem(System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.GetDefaultControlType
  commentId: M:BindOpen.Data.Elements.DataElement.GetDefaultControlType
  id: GetDefaultControlType
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: GetDefaultControlType()
  nameWithType: DataElement.GetDefaultControlType()
  fullName: BindOpen.Data.Elements.DataElement.GetDefaultControlType()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetDefaultControlType
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 482
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nGets the default control type of this instance.\n"
  example: []
  syntax:
    content: public virtual DesignControlType GetDefaultControlType()
    return:
      type: BindOpen.Data.Specification.DesignControlType
      description: Returns the default control type of this instance.
    content.vb: Public Overridable Function GetDefaultControlType As DesignControlType
  overload: BindOpen.Data.Elements.DataElement.GetDefaultControlType*
  implements:
  - BindOpen.Data.Elements.IDataElement.GetDefaultControlType
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
  commentId: M:BindOpen.Data.Elements.DataElement.HasItem(System.Object,System.Boolean)
  id: HasItem(System.Object,System.Boolean)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: HasItem(Object, Boolean)
  nameWithType: DataElement.HasItem(Object, Boolean)
  fullName: BindOpen.Data.Elements.DataElement.HasItem(System.Object, System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: HasItem
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 493
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nIndicates whether this instance contains the specified scalar item or the specified entity name.\n"
  example: []
  syntax:
    content: public virtual bool HasItem(object indexItem, bool isCaseSensitive = false)
    parameters:
    - id: indexItem
      type: System.Object
      description: The index item to consider.
    - id: isCaseSensitive
      type: System.Boolean
      description: Indicates whether the verification is case sensitive.
    return:
      type: System.Boolean
      description: Returns true if this instance contains the specified scalar item or the specified entity name.
    content.vb: Public Overridable Function HasItem(indexItem As Object, isCaseSensitive As Boolean = False) As Boolean
  overload: BindOpen.Data.Elements.DataElement.HasItem*
  implements:
  - BindOpen.Data.Elements.IDataElement.HasItem(System.Object,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Elements.DataElement.ToString
  commentId: M:BindOpen.Data.Elements.DataElement.ToString
  id: ToString
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DataElement.ToString()
  fullName: BindOpen.Data.Elements.DataElement.ToString()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ToString
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 502
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nReturns a text node representing this instance.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: BindOpen.Data.Elements.DataElement.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElement.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataElement.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElement.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Update
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 523
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nUpdates this instance.\n"
  remarks: Put reference collections as null if you do not want to repair this instance.
  example: []
  syntax:
    content: >-
      public override IBdoLog Update<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: ILog of the operation.
    content.vb: Public Overrides Function Update(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  overload: BindOpen.Data.Elements.DataElement.Update*
  implements:
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElement.Update(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Elements.DataElement.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
- uid: BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Elements.DataElement.Check``1(System.Boolean,``0,System.String[])
  id: Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataElement.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Elements.DataElement.Check<T>(System.Boolean, T, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Check
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 588
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nChecks this instance.\n"
  example: []
  syntax:
    content: >-
      public override IBdoLog Check<T>(bool isExistenceChecked = true, T item = null, string[] specificationAreas = null)
          where T : IDataItem
    parameters:
    - id: isExistenceChecked
      type: System.Boolean
      description: Indicates whether the carrier existence is checked.
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the check log.
    content.vb: Public Overrides Function Check(Of T As IDataItem)(isExistenceChecked As Boolean = True, item As T = Nothing, specificationAreas As String() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  overload: BindOpen.Data.Elements.DataElement.Check*
  implements:
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  nameWithType.vb: DataElement.Check(Of T)(Boolean, T, String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Elements.DataElement.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
- uid: BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElement.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataElement.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElement.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Repair
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 636
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nRepairs this instance with the specified definition.\n"
  example: []
  syntax:
    content: >-
      public override IBdoLog Repair<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: ILog of the operation.
    content.vb: Public Overrides Function Repair(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  overload: BindOpen.Data.Elements.DataElement.Repair*
  implements:
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElement.Repair(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Elements.DataElement.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
- uid: BindOpen.Data.Elements.DataElement.Clone
  commentId: M:BindOpen.Data.Elements.DataElement.Clone
  id: Clone
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: DataElement.Clone()
  fullName: BindOpen.Data.Elements.DataElement.Clone()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 689
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overrides Function Clone As Object
  overridden: BindOpen.Data.Items.DescribedDataItem.Clone
  overload: BindOpen.Data.Elements.DataElement.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Elements.DataElement.Clone(System.String[])
  commentId: M:BindOpen.Data.Elements.DataElement.Clone(System.String[])
  id: Clone(System.String[])
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Clone(String[])
  nameWithType: DataElement.Clone(String[])
  fullName: BindOpen.Data.Elements.DataElement.Clone(System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 699
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public virtual object Clone(string[] elementSpecificationAreas = null)
    parameters:
    - id: elementSpecificationAreas
      type: System.String[]
      description: The data element areas to consider.
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overridable Function Clone(elementSpecificationAreas As String() = Nothing) As Object
  overload: BindOpen.Data.Elements.DataElement.Clone*
  implements:
  - BindOpen.Data.Elements.IDataElement.Clone(System.String[])
  nameWithType.vb: DataElement.Clone(String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BindOpen.Data.Elements.DataElement.Clone(System.String())
  name.vb: Clone(String())
- uid: BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataElement.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateStorageInfo
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 730
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nUpdates information for storage.\n"
  example: []
  syntax:
    content: public override void UpdateStorageInfo(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateStorageInfo(log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Elements.DataElement.UpdateStorageInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElement.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateRuntimeInfo
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 743
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nUpdates information for runtime.\n"
  example: []
  syntax:
    content: public override void UpdateRuntimeInfo(IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The set of script variables to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateRuntimeInfo(scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
  commentId: M:BindOpen.Data.Elements.DataElement.GetTextNode(System.String,System.String)
  id: GetTextNode(System.String,System.String)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: GetTextNode(String, String)
  nameWithType: DataElement.GetTextNode(String, String)
  fullName: BindOpen.Data.Elements.DataElement.GetTextNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetTextNode
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 756
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nGets a text node representing this instance.\n"
  example: []
  syntax:
    content: public string GetTextNode(string nodeName, string indent)
    parameters:
    - id: nodeName
      type: System.String
      description: Name of the tex node.
    - id: indent
      type: System.String
      description: Tabulation indent to include in the text.
    return:
      type: System.String
      description: Returns the text node.
    content.vb: Public Function GetTextNode(nodeName As String, indent As String) As String
  overload: BindOpen.Data.Elements.DataElement.GetTextNode*
  implements:
  - BindOpen.Data.Elements.IDataElement.GetTextNode(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.DataElement.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Elements.DataElement.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BindOpen.Data.Elements.DataElement
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: DataElement.Dispose(Boolean)
  fullName: BindOpen.Data.Elements.DataElement.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/DataElement.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Dispose
    path: ../src/BindOpen.Core/Data/Elements/DataElement.cs
    startLine: 784
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nDisposes this instance. \n"
  example: []
  syntax:
    content: protected override void Dispose(bool isDisposing)
    parameters:
    - id: isDisposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(isDisposing As Boolean)
  overridden: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  overload: BindOpen.Data.Elements.DataElement.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.StoredDataItem
  commentId: T:BindOpen.Data.Items.StoredDataItem
  parent: BindOpen.Data.Items
  name: StoredDataItem
  nameWithType: StoredDataItem
  fullName: BindOpen.Data.Items.StoredDataItem
- uid: BindOpen.Data.Items.NamedDataItem
  commentId: T:BindOpen.Data.Items.NamedDataItem
  parent: BindOpen.Data.Items
  name: NamedDataItem
  nameWithType: NamedDataItem
  fullName: BindOpen.Data.Items.NamedDataItem
- uid: BindOpen.Data.Items.TitledDataItem
  commentId: T:BindOpen.Data.Items.TitledDataItem
  parent: BindOpen.Data.Items
  name: TitledDataItem
  nameWithType: TitledDataItem
  fullName: BindOpen.Data.Items.TitledDataItem
- uid: BindOpen.Data.Items.DescribedDataItem
  commentId: T:BindOpen.Data.Items.DescribedDataItem
  parent: BindOpen.Data.Items
  name: DescribedDataItem
  nameWithType: DescribedDataItem
  fullName: BindOpen.Data.Items.DescribedDataItem
- uid: BindOpen.Data.Items.IndexedDataItem
  commentId: T:BindOpen.Data.Items.IndexedDataItem
  parent: BindOpen.Data.Items
  name: IndexedDataItem
  nameWithType: IndexedDataItem
  fullName: BindOpen.Data.Items.IndexedDataItem
- uid: BindOpen.Data.Items.IIndexedDataItem
  commentId: T:BindOpen.Data.Items.IIndexedDataItem
  parent: BindOpen.Data.Items
  name: IIndexedDataItem
  nameWithType: IIndexedDataItem
  fullName: BindOpen.Data.Items.IIndexedDataItem
- uid: BindOpen.Data.Elements.IDataElement
  commentId: T:BindOpen.Data.Elements.IDataElement
  parent: BindOpen.Data.Elements
  name: IDataElement
  nameWithType: IDataElement
  fullName: BindOpen.Data.Elements.IDataElement
- uid: BindOpen.Data.Items.IDescribedDataItem
  commentId: T:BindOpen.Data.Items.IDescribedDataItem
  parent: BindOpen.Data.Items
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  commentId: T:BindOpen.Data.Items.ITitledDataItem
  parent: BindOpen.Data.Items
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  commentId: T:BindOpen.Data.Items.INamedDataItem
  parent: BindOpen.Data.Items
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  commentId: T:BindOpen.Data.Items.IStoredDataItem
  parent: BindOpen.Data.Items
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  commentId: T:BindOpen.Data.Items.IStorable
  parent: BindOpen.Data.Items
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  commentId: T:BindOpen.Data.Items.IGloballyTitled
  parent: BindOpen.Data.Items
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.IIndexed
  commentId: T:BindOpen.Data.Items.IIndexed
  parent: BindOpen.Data.Items
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: BindOpen.Data.Items.IndexedDataItem.Index
  commentId: P:BindOpen.Data.Items.IndexedDataItem.Index
  parent: BindOpen.Data.Items.IndexedDataItem
  name: Index
  nameWithType: IndexedDataItem.Index
  fullName: BindOpen.Data.Items.IndexedDataItem.Index
- uid: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  commentId: P:BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  parent: BindOpen.Data.Items.IndexedDataItem
  name: IndexSpecified
  nameWithType: IndexedDataItem.IndexSpecified
  fullName: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Description
  commentId: P:BindOpen.Data.Items.DescribedDataItem.Description
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Description
  nameWithType: DescribedDataItem.Description
  fullName: BindOpen.Data.Items.DescribedDataItem.Description
- uid: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  commentId: P:BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  parent: BindOpen.Data.Items.DescribedDataItem
  name: DescriptionSpecified
  nameWithType: DescribedDataItem.DescriptionSpecified
  fullName: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Update(IDescribedDataItem)
  nameWithType: DescribedDataItem.Update(IDescribedDataItem)
  fullName: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String)
  nameWithType: DescribedDataItem.AddDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: DescribedDataItem.AddDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String)
  nameWithType: DescribedDataItem.SetDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: DescribedDataItem.SetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: DescribedDataItem.GetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.Title
  commentId: P:BindOpen.Data.Items.TitledDataItem.Title
  parent: BindOpen.Data.Items.TitledDataItem
  name: Title
  nameWithType: TitledDataItem.Title
  fullName: BindOpen.Data.Items.TitledDataItem.Title
- uid: BindOpen.Data.Items.TitledDataItem.TitleSpecified
  commentId: P:BindOpen.Data.Items.TitledDataItem.TitleSpecified
  parent: BindOpen.Data.Items.TitledDataItem
  name: TitleSpecified
  nameWithType: TitledDataItem.TitleSpecified
  fullName: BindOpen.Data.Items.TitledDataItem.TitleSpecified
- uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  commentId: M:BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  parent: BindOpen.Data.Items.TitledDataItem
  name: Update(ITitledDataItem)
  nameWithType: TitledDataItem.Update(ITitledDataItem)
  fullName: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String)
  nameWithType: TitledDataItem.AddTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String, String)
  nameWithType: TitledDataItem.AddTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String)
  nameWithType: TitledDataItem.SetTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String, String)
  nameWithType: TitledDataItem.SetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: GetTitle(String, String)
  nameWithType: TitledDataItem.GetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.Name
  commentId: P:BindOpen.Data.Items.NamedDataItem.Name
  parent: BindOpen.Data.Items.NamedDataItem
  name: Name
  nameWithType: NamedDataItem.Name
  fullName: BindOpen.Data.Items.NamedDataItem.Name
- uid: BindOpen.Data.Items.NamedDataItem.NameSpecified
  commentId: P:BindOpen.Data.Items.NamedDataItem.NameSpecified
  parent: BindOpen.Data.Items.NamedDataItem
  name: NameSpecified
  nameWithType: NamedDataItem.NameSpecified
  fullName: BindOpen.Data.Items.NamedDataItem.NameSpecified
- uid: BindOpen.Data.Items.NamedDataItem.Key
  commentId: M:BindOpen.Data.Items.NamedDataItem.Key
  parent: BindOpen.Data.Items.NamedDataItem
  name: Key()
  nameWithType: NamedDataItem.Key()
  fullName: BindOpen.Data.Items.NamedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  commentId: M:BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  parent: BindOpen.Data.Items.NamedDataItem
  isExternal: true
  name: GetClonedName(String, String)
  nameWithType: NamedDataItem.GetClonedName(String, String)
  fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.StoredDataItem.NamePreffix
  commentId: P:BindOpen.Data.Items.StoredDataItem.NamePreffix
  parent: BindOpen.Data.Items.StoredDataItem
  name: NamePreffix
  nameWithType: StoredDataItem.NamePreffix
  fullName: BindOpen.Data.Items.StoredDataItem.NamePreffix
- uid: BindOpen.Data.Items.StoredDataItem.CreationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDate
  nameWithType: StoredDataItem.CreationDate
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDate
- uid: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDateSpecified
  nameWithType: StoredDataItem.CreationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDate
  nameWithType: StoredDataItem.LastModificationDate
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDate
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDateSpecified
  nameWithType: StoredDataItem.LastModificationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  commentId: M:BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  parent: BindOpen.Data.Items.StoredDataItem
  name: DeclareUpdate()
  nameWithType: StoredDataItem.DeclareUpdate()
  fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate()
  spec.csharp:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.DataElement})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<DataElement>(Action<DataElement>)
  nameWithType: ObjectHelper.Using<DataElement>(Action<DataElement>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.DataElement>(System.Action<BindOpen.Data.Elements.DataElement>)
  nameWithType.vb: ObjectHelper.Using(Of DataElement)(Action(Of DataElement))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.DataElement)(System.Action(Of BindOpen.Data.Elements.DataElement))
  name.vb: Using(Of DataElement)(Action(Of DataElement))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<DataElement>
    nameWithType: ObjectHelper.Using<DataElement>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.DataElement>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of DataElement)
    nameWithType: ObjectHelper.Using(Of DataElement)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.DataElement)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Elements.DataElement.ValueType*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ValueType
  name: ValueType
  nameWithType: DataElement.ValueType
  fullName: BindOpen.Data.Elements.DataElement.ValueType
- uid: BindOpen.Data.Elements.IDataElement.ValueType
  commentId: P:BindOpen.Data.Elements.IDataElement.ValueType
  parent: BindOpen.Data.Elements.IDataElement
  name: ValueType
  nameWithType: IDataElement.ValueType
  fullName: BindOpen.Data.Elements.IDataElement.ValueType
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Data.Elements.DataElement.ValueTypeSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ValueTypeSpecified
  name: ValueTypeSpecified
  nameWithType: DataElement.ValueTypeSpecified
  fullName: BindOpen.Data.Elements.DataElement.ValueTypeSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Elements.DataElement.ItemizationMode*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ItemizationMode
  name: ItemizationMode
  nameWithType: DataElement.ItemizationMode
  fullName: BindOpen.Data.Elements.DataElement.ItemizationMode
- uid: BindOpen.Data.Elements.IDataElement.ItemizationMode
  commentId: P:BindOpen.Data.Elements.IDataElement.ItemizationMode
  parent: BindOpen.Data.Elements.IDataElement
  name: ItemizationMode
  nameWithType: IDataElement.ItemizationMode
  fullName: BindOpen.Data.Elements.IDataElement.ItemizationMode
- uid: BindOpen.Data.Items.DataItemizationMode
  commentId: T:BindOpen.Data.Items.DataItemizationMode
  parent: BindOpen.Data.Items
  name: DataItemizationMode
  nameWithType: DataItemizationMode
  fullName: BindOpen.Data.Items.DataItemizationMode
- uid: BindOpen.Data.Elements.DataElement.ItemizationModeSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
  name: ItemizationModeSpecified
  nameWithType: DataElement.ItemizationModeSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemizationModeSpecified
- uid: BindOpen.Data.Elements.DataElement.ItemReference*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ItemReference
  name: ItemReference
  nameWithType: DataElement.ItemReference
  fullName: BindOpen.Data.Elements.DataElement.ItemReference
- uid: BindOpen.Data.Elements.IDataElement.ItemReference
  commentId: P:BindOpen.Data.Elements.IDataElement.ItemReference
  parent: BindOpen.Data.Elements.IDataElement
  name: ItemReference
  nameWithType: IDataElement.ItemReference
  fullName: BindOpen.Data.Elements.IDataElement.ItemReference
- uid: BindOpen.Data.References.DataReferenceDto
  commentId: T:BindOpen.Data.References.DataReferenceDto
  parent: BindOpen.Data.References
  name: DataReferenceDto
  nameWithType: DataReferenceDto
  fullName: BindOpen.Data.References.DataReferenceDto
- uid: BindOpen.Data.References
  commentId: N:BindOpen.Data.References
  name: BindOpen.Data.References
  nameWithType: BindOpen.Data.References
  fullName: BindOpen.Data.References
- uid: BindOpen.Data.Elements.DataElement.ItemReferenceSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
  name: ItemReferenceSpecified
  nameWithType: DataElement.ItemReferenceSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemReferenceSpecified
- uid: BindOpen.Data.Elements.DataElement.ItemScript*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ItemScript
  name: ItemScript
  nameWithType: DataElement.ItemScript
  fullName: BindOpen.Data.Elements.DataElement.ItemScript
- uid: BindOpen.Data.Elements.IDataElement.ItemScript
  commentId: P:BindOpen.Data.Elements.IDataElement.ItemScript
  parent: BindOpen.Data.Elements.IDataElement
  name: ItemScript
  nameWithType: IDataElement.ItemScript
  fullName: BindOpen.Data.Elements.IDataElement.ItemScript
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Elements.DataElement.ItemScriptSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ItemScriptSpecified
  name: ItemScriptSpecified
  nameWithType: DataElement.ItemScriptSpecified
  fullName: BindOpen.Data.Elements.DataElement.ItemScriptSpecified
- uid: BindOpen.Data.Elements.DataElement.Items*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Items
  name: Items
  nameWithType: DataElement.Items
  fullName: BindOpen.Data.Elements.DataElement.Items
- uid: BindOpen.Data.Elements.IDataElement.Items
  commentId: P:BindOpen.Data.Elements.IDataElement.Items
  parent: BindOpen.Data.Elements.IDataElement
  name: Items
  nameWithType: IDataElement.Items
  fullName: BindOpen.Data.Elements.IDataElement.Items
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Elements.DataElement.op_Explicit*
  commentId: Overload:BindOpen.Data.Elements.DataElement.op_Explicit
  name: Explicit
  nameWithType: DataElement.Explicit
  fullName: BindOpen.Data.Elements.DataElement.Explicit
  nameWithType.vb: DataElement.Narrowing
  fullName.vb: BindOpen.Data.Elements.DataElement.Narrowing
  name.vb: Narrowing
- uid: BindOpen.Data.Elements.DataElement
  commentId: T:BindOpen.Data.Elements.DataElement
  parent: BindOpen.Data.Elements
  name: DataElement
  nameWithType: DataElement
  fullName: BindOpen.Data.Elements.DataElement
- uid: BindOpen.Data.Elements.DataElement.Specification*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Specification
  name: Specification
  nameWithType: DataElement.Specification
  fullName: BindOpen.Data.Elements.DataElement.Specification
- uid: BindOpen.Data.Elements.IDataElement.Specification
  commentId: P:BindOpen.Data.Elements.IDataElement.Specification
  parent: BindOpen.Data.Elements.IDataElement
  name: Specification
  nameWithType: IDataElement.Specification
  fullName: BindOpen.Data.Elements.IDataElement.Specification
- uid: BindOpen.Data.Elements.DataElementSpec
  commentId: T:BindOpen.Data.Elements.DataElementSpec
  parent: BindOpen.Data.Elements
  name: DataElementSpec
  nameWithType: DataElementSpec
  fullName: BindOpen.Data.Elements.DataElementSpec
- uid: BindOpen.Data.Elements.DataElement.SpecificationSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElement.SpecificationSpecified
  name: SpecificationSpecified
  nameWithType: DataElement.SpecificationSpecified
  fullName: BindOpen.Data.Elements.DataElement.SpecificationSpecified
- uid: BindOpen.Data.Elements.DataElement.Item*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Item
  name: Item
  nameWithType: DataElement.Item
  fullName: BindOpen.Data.Elements.DataElement.Item
- uid: BindOpen.Data.Elements.IDataElement.Item(System.Int32)
  commentId: P:BindOpen.Data.Elements.IDataElement.Item(System.Int32)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: Item[Int32]
  nameWithType: IDataElement.Item[Int32]
  fullName: BindOpen.Data.Elements.IDataElement.Item[System.Int32]
  nameWithType.vb: IDataElement.Item(Int32)
  fullName.vb: BindOpen.Data.Elements.IDataElement.Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.Item(System.Int32)
    name: Item
    nameWithType: IDataElement.Item
    fullName: BindOpen.Data.Elements.IDataElement.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.Item(System.Int32)
    name: Item
    nameWithType: IDataElement.Item
    fullName: BindOpen.Data.Elements.IDataElement.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Data.Elements.IDataElement.Item(System.String)
  commentId: P:BindOpen.Data.Elements.IDataElement.Item(System.String)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: Item[String]
  nameWithType: IDataElement.Item[String]
  fullName: BindOpen.Data.Elements.IDataElement.Item[System.String]
  nameWithType.vb: IDataElement.Item(String)
  fullName.vb: BindOpen.Data.Elements.IDataElement.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.Item(System.String)
    name: Item
    nameWithType: IDataElement.Item
    fullName: BindOpen.Data.Elements.IDataElement.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.Item(System.String)
    name: Item
    nameWithType: IDataElement.Item
    fullName: BindOpen.Data.Elements.IDataElement.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.First*
  commentId: Overload:BindOpen.Data.Elements.DataElement.First
  name: First
  nameWithType: DataElement.First
  fullName: BindOpen.Data.Elements.DataElement.First
- uid: BindOpen.Data.Elements.IDataElement.First
  commentId: P:BindOpen.Data.Elements.IDataElement.First
  parent: BindOpen.Data.Elements.IDataElement
  name: First
  nameWithType: IDataElement.First
  fullName: BindOpen.Data.Elements.IDataElement.First
- uid: BindOpen.Data.Elements.DataElement.PropertyDetail*
  commentId: Overload:BindOpen.Data.Elements.DataElement.PropertyDetail
  name: PropertyDetail
  nameWithType: DataElement.PropertyDetail
  fullName: BindOpen.Data.Elements.DataElement.PropertyDetail
- uid: BindOpen.Data.Elements.IDataElement.PropertyDetail
  commentId: P:BindOpen.Data.Elements.IDataElement.PropertyDetail
  parent: BindOpen.Data.Elements.IDataElement
  name: PropertyDetail
  nameWithType: IDataElement.PropertyDetail
  fullName: BindOpen.Data.Elements.IDataElement.PropertyDetail
- uid: BindOpen.Data.Elements.DataElementSet
  commentId: T:BindOpen.Data.Elements.DataElementSet
  parent: BindOpen.Data.Elements
  name: DataElementSet
  nameWithType: DataElementSet
  fullName: BindOpen.Data.Elements.DataElementSet
- uid: BindOpen.Data.Elements.DataElement.PropertyDetailSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
  name: PropertyDetailSpecified
  nameWithType: DataElement.PropertyDetailSpecified
  fullName: BindOpen.Data.Elements.DataElement.PropertyDetailSpecified
- uid: BindOpen.Data.Elements.DataElement.EventKind*
  commentId: Overload:BindOpen.Data.Elements.DataElement.EventKind
  name: EventKind
  nameWithType: DataElement.EventKind
  fullName: BindOpen.Data.Elements.DataElement.EventKind
- uid: BindOpen.Data.Elements.IDataElement.EventKind
  commentId: P:BindOpen.Data.Elements.IDataElement.EventKind
  parent: BindOpen.Data.Elements.IDataElement
  name: EventKind
  nameWithType: IDataElement.EventKind
  fullName: BindOpen.Data.Elements.IDataElement.EventKind
- uid: System.Nullable{BindOpen.System.Diagnostics.Events.EventKinds}
  commentId: T:System.Nullable{BindOpen.System.Diagnostics.Events.EventKinds}
  parent: System
  definition: System.Nullable`1
  name: Nullable<EventKinds>
  nameWithType: Nullable<EventKinds>
  fullName: System.Nullable<BindOpen.System.Diagnostics.Events.EventKinds>
  nameWithType.vb: Nullable(Of EventKinds)
  fullName.vb: System.Nullable(Of BindOpen.System.Diagnostics.Events.EventKinds)
  name.vb: Nullable(Of EventKinds)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.System.Diagnostics.Events.EventKinds
    name: EventKinds
    nameWithType: EventKinds
    fullName: BindOpen.System.Diagnostics.Events.EventKinds
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.EventKindSpecified*
  commentId: Overload:BindOpen.Data.Elements.DataElement.EventKindSpecified
  name: EventKindSpecified
  nameWithType: DataElement.EventKindSpecified
  fullName: BindOpen.Data.Elements.DataElement.EventKindSpecified
- uid: BindOpen.Data.Elements.IDataElement.EventKindSpecified
  commentId: P:BindOpen.Data.Elements.IDataElement.EventKindSpecified
  parent: BindOpen.Data.Elements.IDataElement
  name: EventKindSpecified
  nameWithType: IDataElement.EventKindSpecified
  fullName: BindOpen.Data.Elements.IDataElement.EventKindSpecified
- uid: BindOpen.Data.Elements.DataElement.#ctor*
  commentId: Overload:BindOpen.Data.Elements.DataElement.#ctor
  name: DataElement
  nameWithType: DataElement.DataElement
  fullName: BindOpen.Data.Elements.DataElement.DataElement
- uid: BindOpen.Data.Elements.DataElement.GetObject*
  commentId: Overload:BindOpen.Data.Elements.DataElement.GetObject
  name: GetObject
  nameWithType: DataElement.GetObject
  fullName: BindOpen.Data.Elements.DataElement.GetObject
- uid: BindOpen.Application.Scopes.IBdoScope
  commentId: T:BindOpen.Application.Scopes.IBdoScope
  parent: BindOpen.Application.Scopes
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  commentId: T:BindOpen.System.Scripting.IBdoScriptVariableSet
  parent: BindOpen.System.Scripting
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: BindOpen.System.Scripting
  commentId: N:BindOpen.System.Scripting
  name: BindOpen.System.Scripting
  nameWithType: BindOpen.System.Scripting
  fullName: BindOpen.System.Scripting
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Elements.IDataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.IDataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.IDataElement
  name: GetObject(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataElement.GetObject(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.IDataElement.GetObject(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetObject
    nameWithType: IDataElement.GetObject
    fullName: BindOpen.Data.Elements.IDataElement.GetObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.GetObject(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetObject
    nameWithType: IDataElement.GetObject
    fullName: BindOpen.Data.Elements.IDataElement.GetObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.ClearItems*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ClearItems
  name: ClearItems
  nameWithType: DataElement.ClearItems
  fullName: BindOpen.Data.Elements.DataElement.ClearItems
- uid: BindOpen.Data.Elements.IDataElement.ClearItems
  commentId: M:BindOpen.Data.Elements.IDataElement.ClearItems
  parent: BindOpen.Data.Elements.IDataElement
  name: ClearItems()
  nameWithType: IDataElement.ClearItems()
  fullName: BindOpen.Data.Elements.IDataElement.ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.ClearItems
    name: ClearItems
    nameWithType: IDataElement.ClearItems
    fullName: BindOpen.Data.Elements.IDataElement.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.ClearItems
    name: ClearItems
    nameWithType: IDataElement.ClearItems
    fullName: BindOpen.Data.Elements.IDataElement.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.NewSpecification*
  commentId: Overload:BindOpen.Data.Elements.DataElement.NewSpecification
  name: NewSpecification
  nameWithType: DataElement.NewSpecification
  fullName: BindOpen.Data.Elements.DataElement.NewSpecification
- uid: BindOpen.Data.Elements.IDataElement.NewSpecification
  commentId: M:BindOpen.Data.Elements.IDataElement.NewSpecification
  parent: BindOpen.Data.Elements.IDataElement
  name: NewSpecification()
  nameWithType: IDataElement.NewSpecification()
  fullName: BindOpen.Data.Elements.IDataElement.NewSpecification()
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.NewSpecification
    name: NewSpecification
    nameWithType: IDataElement.NewSpecification
    fullName: BindOpen.Data.Elements.IDataElement.NewSpecification
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.NewSpecification
    name: NewSpecification
    nameWithType: IDataElement.NewSpecification
    fullName: BindOpen.Data.Elements.IDataElement.NewSpecification
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.SetItem*
  commentId: Overload:BindOpen.Data.Elements.DataElement.SetItem
  name: SetItem
  nameWithType: DataElement.SetItem
  fullName: BindOpen.Data.Elements.DataElement.SetItem
- uid: BindOpen.Data.Elements.IDataElement.SetItem(System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElement.SetItem(System.Object)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: SetItem(Object)
  nameWithType: IDataElement.SetItem(Object)
  fullName: BindOpen.Data.Elements.IDataElement.SetItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.SetItem(System.Object)
    name: SetItem
    nameWithType: IDataElement.SetItem
    fullName: BindOpen.Data.Elements.IDataElement.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.SetItem(System.Object)
    name: SetItem
    nameWithType: IDataElement.SetItem
    fullName: BindOpen.Data.Elements.IDataElement.SetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.SetItems*
  commentId: Overload:BindOpen.Data.Elements.DataElement.SetItems
  name: SetItems
  nameWithType: DataElement.SetItems
  fullName: BindOpen.Data.Elements.DataElement.SetItems
- uid: BindOpen.Data.Elements.IDataElement.SetItems(System.Object[])
  commentId: M:BindOpen.Data.Elements.IDataElement.SetItems(System.Object[])
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: SetItems(Object[])
  nameWithType: IDataElement.SetItems(Object[])
  fullName: BindOpen.Data.Elements.IDataElement.SetItems(System.Object[])
  nameWithType.vb: IDataElement.SetItems(Object())
  fullName.vb: BindOpen.Data.Elements.IDataElement.SetItems(System.Object())
  name.vb: SetItems(Object())
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.SetItems(System.Object[])
    name: SetItems
    nameWithType: IDataElement.SetItems
    fullName: BindOpen.Data.Elements.IDataElement.SetItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.SetItems(System.Object[])
    name: SetItems
    nameWithType: IDataElement.SetItems
    fullName: BindOpen.Data.Elements.IDataElement.SetItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Elements.DataElement.AddItem*
  commentId: Overload:BindOpen.Data.Elements.DataElement.AddItem
  name: AddItem
  nameWithType: DataElement.AddItem
  fullName: BindOpen.Data.Elements.DataElement.AddItem
- uid: BindOpen.Data.Elements.IDataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.IDataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: AddItem(Object, IBdoLog)
  nameWithType: IDataElement.AddItem(Object, IBdoLog)
  fullName: BindOpen.Data.Elements.IDataElement.AddItem(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: AddItem
    nameWithType: IDataElement.AddItem
    fullName: BindOpen.Data.Elements.IDataElement.AddItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.AddItem(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: AddItem
    nameWithType: IDataElement.AddItem
    fullName: BindOpen.Data.Elements.IDataElement.AddItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.AddItems*
  commentId: Overload:BindOpen.Data.Elements.DataElement.AddItems
  name: AddItems
  nameWithType: DataElement.AddItems
  fullName: BindOpen.Data.Elements.DataElement.AddItems
- uid: BindOpen.Data.Elements.IDataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.IDataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: AddItems(Object[], IBdoLog)
  nameWithType: IDataElement.AddItems(Object[], IBdoLog)
  fullName: BindOpen.Data.Elements.IDataElement.AddItems(System.Object[], BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: IDataElement.AddItems(Object(), IBdoLog)
  fullName.vb: BindOpen.Data.Elements.IDataElement.AddItems(System.Object(), BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddItems(Object(), IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
    name: AddItems
    nameWithType: IDataElement.AddItems
    fullName: BindOpen.Data.Elements.IDataElement.AddItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.AddItems(System.Object[],BindOpen.System.Diagnostics.IBdoLog)
    name: AddItems
    nameWithType: IDataElement.AddItems
    fullName: BindOpen.Data.Elements.IDataElement.AddItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.SwitchItems*
  commentId: Overload:BindOpen.Data.Elements.DataElement.SwitchItems
  name: SwitchItems
  nameWithType: DataElement.SwitchItems
  fullName: BindOpen.Data.Elements.DataElement.SwitchItems
- uid: BindOpen.Data.Elements.IDataElement.SwitchItems(System.Object,System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElement.SwitchItems(System.Object,System.Object)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: SwitchItems(Object, Object)
  nameWithType: IDataElement.SwitchItems(Object, Object)
  fullName: BindOpen.Data.Elements.IDataElement.SwitchItems(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.SwitchItems(System.Object,System.Object)
    name: SwitchItems
    nameWithType: IDataElement.SwitchItems
    fullName: BindOpen.Data.Elements.IDataElement.SwitchItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.SwitchItems(System.Object,System.Object)
    name: SwitchItems
    nameWithType: IDataElement.SwitchItems
    fullName: BindOpen.Data.Elements.IDataElement.SwitchItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.UpdateItem*
  commentId: Overload:BindOpen.Data.Elements.DataElement.UpdateItem
  name: UpdateItem
  nameWithType: DataElement.UpdateItem
  fullName: BindOpen.Data.Elements.DataElement.UpdateItem
- uid: BindOpen.Data.Elements.IDataElement.UpdateItem(System.Object,System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElement.UpdateItem(System.Object,System.Object)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: UpdateItem(Object, Object)
  nameWithType: IDataElement.UpdateItem(Object, Object)
  fullName: BindOpen.Data.Elements.IDataElement.UpdateItem(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.UpdateItem(System.Object,System.Object)
    name: UpdateItem
    nameWithType: IDataElement.UpdateItem
    fullName: BindOpen.Data.Elements.IDataElement.UpdateItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.UpdateItem(System.Object,System.Object)
    name: UpdateItem
    nameWithType: IDataElement.UpdateItem
    fullName: BindOpen.Data.Elements.IDataElement.UpdateItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.RemoveItem*
  commentId: Overload:BindOpen.Data.Elements.DataElement.RemoveItem
  name: RemoveItem
  nameWithType: DataElement.RemoveItem
  fullName: BindOpen.Data.Elements.DataElement.RemoveItem
- uid: BindOpen.Data.Elements.IDataElement.RemoveItem(System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElement.RemoveItem(System.Object)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: RemoveItem(Object)
  nameWithType: IDataElement.RemoveItem(Object)
  fullName: BindOpen.Data.Elements.IDataElement.RemoveItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.RemoveItem(System.Object)
    name: RemoveItem
    nameWithType: IDataElement.RemoveItem
    fullName: BindOpen.Data.Elements.IDataElement.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.RemoveItem(System.Object)
    name: RemoveItem
    nameWithType: IDataElement.RemoveItem
    fullName: BindOpen.Data.Elements.IDataElement.RemoveItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.GetDefaultControlType*
  commentId: Overload:BindOpen.Data.Elements.DataElement.GetDefaultControlType
  name: GetDefaultControlType
  nameWithType: DataElement.GetDefaultControlType
  fullName: BindOpen.Data.Elements.DataElement.GetDefaultControlType
- uid: BindOpen.Data.Elements.IDataElement.GetDefaultControlType
  commentId: M:BindOpen.Data.Elements.IDataElement.GetDefaultControlType
  parent: BindOpen.Data.Elements.IDataElement
  name: GetDefaultControlType()
  nameWithType: IDataElement.GetDefaultControlType()
  fullName: BindOpen.Data.Elements.IDataElement.GetDefaultControlType()
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.GetDefaultControlType
    name: GetDefaultControlType
    nameWithType: IDataElement.GetDefaultControlType
    fullName: BindOpen.Data.Elements.IDataElement.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.GetDefaultControlType
    name: GetDefaultControlType
    nameWithType: IDataElement.GetDefaultControlType
    fullName: BindOpen.Data.Elements.IDataElement.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DesignControlType
  commentId: T:BindOpen.Data.Specification.DesignControlType
  parent: BindOpen.Data.Specification
  name: DesignControlType
  nameWithType: DesignControlType
  fullName: BindOpen.Data.Specification.DesignControlType
- uid: BindOpen.Data.Specification
  commentId: N:BindOpen.Data.Specification
  name: BindOpen.Data.Specification
  nameWithType: BindOpen.Data.Specification
  fullName: BindOpen.Data.Specification
- uid: BindOpen.Data.Elements.DataElement.HasItem*
  commentId: Overload:BindOpen.Data.Elements.DataElement.HasItem
  name: HasItem
  nameWithType: DataElement.HasItem
  fullName: BindOpen.Data.Elements.DataElement.HasItem
- uid: BindOpen.Data.Elements.IDataElement.HasItem(System.Object,System.Boolean)
  commentId: M:BindOpen.Data.Elements.IDataElement.HasItem(System.Object,System.Boolean)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: HasItem(Object, Boolean)
  nameWithType: IDataElement.HasItem(Object, Boolean)
  fullName: BindOpen.Data.Elements.IDataElement.HasItem(System.Object, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.HasItem(System.Object,System.Boolean)
    name: HasItem
    nameWithType: IDataElement.HasItem
    fullName: BindOpen.Data.Elements.IDataElement.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.HasItem(System.Object,System.Boolean)
    name: HasItem
    nameWithType: IDataElement.HasItem
    fullName: BindOpen.Data.Elements.IDataElement.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.ToString*
  commentId: Overload:BindOpen.Data.Elements.DataElement.ToString
  name: ToString
  nameWithType: DataElement.ToString
  fullName: BindOpen.Data.Elements.DataElement.ToString
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Update*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Update
  name: Update
  nameWithType: DataElement.Update
  fullName: BindOpen.Data.Elements.DataElement.Update
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Common.UpdateModes[]
  isExternal: true
  name: UpdateModes[]
  nameWithType: UpdateModes[]
  fullName: BindOpen.Data.Common.UpdateModes[]
  nameWithType.vb: UpdateModes()
  fullName.vb: BindOpen.Data.Common.UpdateModes()
  name.vb: UpdateModes()
  spec.csharp:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Check*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Check
  name: Check
  nameWithType: DataElement.Check
  fullName: BindOpen.Data.Elements.DataElement.Check
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Repair*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Repair
  name: Repair
  nameWithType: DataElement.Repair
  fullName: BindOpen.Data.Elements.DataElement.Repair
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.Clone
  commentId: M:BindOpen.Data.Items.DescribedDataItem.Clone
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Clone()
  nameWithType: DescribedDataItem.Clone()
  fullName: BindOpen.Data.Items.DescribedDataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.Clone
    name: Clone
    nameWithType: DescribedDataItem.Clone
    fullName: BindOpen.Data.Items.DescribedDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.Clone
    name: Clone
    nameWithType: DescribedDataItem.Clone
    fullName: BindOpen.Data.Items.DescribedDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Clone*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Clone
  name: Clone
  nameWithType: DataElement.Clone
  fullName: BindOpen.Data.Elements.DataElement.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElement.Clone(System.String[])
  commentId: M:BindOpen.Data.Elements.IDataElement.Clone(System.String[])
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: Clone(String[])
  nameWithType: IDataElement.Clone(String[])
  fullName: BindOpen.Data.Elements.IDataElement.Clone(System.String[])
  nameWithType.vb: IDataElement.Clone(String())
  fullName.vb: BindOpen.Data.Elements.IDataElement.Clone(System.String())
  name.vb: Clone(String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.Clone(System.String[])
    name: Clone
    nameWithType: IDataElement.Clone
    fullName: BindOpen.Data.Elements.IDataElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.Clone(System.String[])
    name: Clone
    nameWithType: IDataElement.Clone
    fullName: BindOpen.Data.Elements.IDataElement.Clone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DescribedDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DescribedDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DescribedDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.UpdateStorageInfo*
  commentId: Overload:BindOpen.Data.Elements.DataElement.UpdateStorageInfo
  name: UpdateStorageInfo
  nameWithType: DataElement.UpdateStorageInfo
  fullName: BindOpen.Data.Elements.DataElement.UpdateStorageInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DescribedDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DescribedDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DescribedDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo*
  commentId: Overload:BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo
  name: UpdateRuntimeInfo
  nameWithType: DataElement.UpdateRuntimeInfo
  fullName: BindOpen.Data.Elements.DataElement.UpdateRuntimeInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.GetTextNode*
  commentId: Overload:BindOpen.Data.Elements.DataElement.GetTextNode
  name: GetTextNode
  nameWithType: DataElement.GetTextNode
  fullName: BindOpen.Data.Elements.DataElement.GetTextNode
- uid: BindOpen.Data.Elements.IDataElement.GetTextNode(System.String,System.String)
  commentId: M:BindOpen.Data.Elements.IDataElement.GetTextNode(System.String,System.String)
  parent: BindOpen.Data.Elements.IDataElement
  isExternal: true
  name: GetTextNode(String, String)
  nameWithType: IDataElement.GetTextNode(String, String)
  fullName: BindOpen.Data.Elements.IDataElement.GetTextNode(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement.GetTextNode(System.String,System.String)
    name: GetTextNode
    nameWithType: IDataElement.GetTextNode
    fullName: BindOpen.Data.Elements.IDataElement.GetTextNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement.GetTextNode(System.String,System.String)
    name: GetTextNode
    nameWithType: IDataElement.GetTextNode
    fullName: BindOpen.Data.Elements.IDataElement.GetTextNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElement.Dispose*
  commentId: Overload:BindOpen.Data.Elements.DataElement.Dispose
  name: Dispose
  nameWithType: DataElement.Dispose
  fullName: BindOpen.Data.Elements.DataElement.Dispose
shouldSkipMarkup: true
