### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Queries.ApiScriptField
  commentId: T:BindOpen.Data.Queries.ApiScriptField
  id: ApiScriptField
  parent: BindOpen.Data.Queries
  children:
  - BindOpen.Data.Queries.ApiScriptField.#ctor
  - BindOpen.Data.Queries.ApiScriptField.#ctor(System.String,BindOpen.Extensions.Carriers.DbField)
  - BindOpen.Data.Queries.ApiScriptField.Field
  - BindOpen.Data.Queries.ApiScriptField.FieldAlias
  langs:
  - csharp
  - vb
  name: ApiScriptField
  nameWithType: ApiScriptField
  fullName: BindOpen.Data.Queries.ApiScriptField
  type: Class
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThis class represents a Api script expression.\n"
  syntax:
    content: 'public class ApiScriptField : DataItem'
    content.vb: >-
      Public Class ApiScriptField
          Inherits DataItem
  inheritance:
  - System.Object
  derivedClasses:
  - BindOpen.Data.Queries.ApiScriptClause
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Queries.ApiScriptField.#ctor
  commentId: M:BindOpen.Data.Queries.ApiScriptField.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Queries.ApiScriptField
  langs:
  - csharp
  - vb
  name: ApiScriptField()
  nameWithType: ApiScriptField.ApiScriptField()
  fullName: BindOpen.Data.Queries.ApiScriptField.ApiScriptField()
  type: Constructor
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nCreates a new instance of the ApiScriptExpression class.\n"
  syntax:
    content: public ApiScriptField()
    content.vb: Public Sub New
  overload: BindOpen.Data.Queries.ApiScriptField.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.ApiScriptField.#ctor(System.String,BindOpen.Extensions.Carriers.DbField)
  commentId: M:BindOpen.Data.Queries.ApiScriptField.#ctor(System.String,BindOpen.Extensions.Carriers.DbField)
  id: '#ctor(System.String,BindOpen.Extensions.Carriers.DbField)'
  parent: BindOpen.Data.Queries.ApiScriptField
  langs:
  - csharp
  - vb
  name: ApiScriptField(String, DbField)
  nameWithType: ApiScriptField.ApiScriptField(String, DbField)
  fullName: BindOpen.Data.Queries.ApiScriptField.ApiScriptField(System.String, BindOpen.Extensions.Carriers.DbField)
  type: Constructor
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nCreates a new instance of the ApiScriptExpression class.\n"
  syntax:
    content: public ApiScriptField(string fieldAlias, DbField field)
    parameters:
    - id: fieldAlias
      type: System.String
      description: The field alias to consider.
    - id: field
      type: BindOpen.Extensions.Carriers.DbField
      description: The field to consider.
    content.vb: Public Sub New(fieldAlias As String, field As DbField)
  overload: BindOpen.Data.Queries.ApiScriptField.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.ApiScriptField.FieldAlias
  commentId: P:BindOpen.Data.Queries.ApiScriptField.FieldAlias
  id: FieldAlias
  parent: BindOpen.Data.Queries.ApiScriptField
  langs:
  - csharp
  - vb
  name: FieldAlias
  nameWithType: ApiScriptField.FieldAlias
  fullName: BindOpen.Data.Queries.ApiScriptField.FieldAlias
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThe field alias of this instance.\n"
  syntax:
    content: public string FieldAlias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FieldAlias As String
  overload: BindOpen.Data.Queries.ApiScriptField.FieldAlias*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Queries.ApiScriptField.Field
  commentId: P:BindOpen.Data.Queries.ApiScriptField.Field
  id: Field
  parent: BindOpen.Data.Queries.ApiScriptField
  langs:
  - csharp
  - vb
  name: Field
  nameWithType: ApiScriptField.Field
  fullName: BindOpen.Data.Queries.ApiScriptField.Field
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThe field of this instance.\n"
  syntax:
    content: public DbField Field { get; set; }
    parameters: []
    return:
      type: BindOpen.Extensions.Carriers.DbField
    content.vb: Public Property Field As DbField
  overload: BindOpen.Data.Queries.ApiScriptField.Field*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  isExternal: true
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Queries.ApiScriptField.#ctor*
  commentId: Overload:BindOpen.Data.Queries.ApiScriptField.#ctor
  isExternal: true
  name: ApiScriptField
  nameWithType: ApiScriptField.ApiScriptField
  fullName: BindOpen.Data.Queries.ApiScriptField.ApiScriptField
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Extensions.Carriers.DbField
  commentId: T:BindOpen.Extensions.Carriers.DbField
  parent: BindOpen.Extensions.Carriers
  isExternal: true
  name: DbField
  nameWithType: DbField
  fullName: BindOpen.Extensions.Carriers.DbField
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  isExternal: true
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: BindOpen.Data.Queries.ApiScriptField.FieldAlias*
  commentId: Overload:BindOpen.Data.Queries.ApiScriptField.FieldAlias
  isExternal: true
  name: FieldAlias
  nameWithType: ApiScriptField.FieldAlias
  fullName: BindOpen.Data.Queries.ApiScriptField.FieldAlias
- uid: BindOpen.Data.Queries.ApiScriptField.Field*
  commentId: Overload:BindOpen.Data.Queries.ApiScriptField.Field
  isExternal: true
  name: Field
  nameWithType: ApiScriptField.Field
  fullName: BindOpen.Data.Queries.ApiScriptField.Field
shouldSkipMarkup: true
