### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Queries.DbFieldViewMode
  commentId: T:BindOpen.Data.Queries.DbFieldViewMode
  id: DbFieldViewMode
  parent: BindOpen.Data.Queries
  children:
  - BindOpen.Data.Queries.DbFieldViewMode.CompleteName
  - BindOpen.Data.Queries.DbFieldViewMode.CompleteNameAsAlias
  - BindOpen.Data.Queries.DbFieldViewMode.CompleteNameOrValue
  - BindOpen.Data.Queries.DbFieldViewMode.NameEqualsValue
  - BindOpen.Data.Queries.DbFieldViewMode.OnlyName
  - BindOpen.Data.Queries.DbFieldViewMode.OnlyNameAsAlias
  - BindOpen.Data.Queries.DbFieldViewMode.OnlyValue
  langs:
  - csharp
  - vb
  name: DbFieldViewMode
  nameWithType: DbFieldViewMode
  fullName: BindOpen.Data.Queries.DbFieldViewMode
  type: Enum
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: DbFieldViewMode
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 8
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nThis enumerates the possible modes of database field.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public enum DbFieldViewMode
    content.vb: >-
      <Serializable>

      Public Enum DbFieldViewMode
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: BindOpen.Data.Queries.DbFieldViewMode.OnlyName
  commentId: F:BindOpen.Data.Queries.DbFieldViewMode.OnlyName
  id: OnlyName
  parent: BindOpen.Data.Queries.DbFieldViewMode
  langs:
  - csharp
  - vb
  name: OnlyName
  nameWithType: DbFieldViewMode.OnlyName
  fullName: BindOpen.Data.Queries.DbFieldViewMode.OnlyName
  type: Field
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: OnlyName
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 15
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nOnly name.\n"
  example: []
  syntax:
    content: OnlyName = 0
    return:
      type: BindOpen.Data.Queries.DbFieldViewMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Queries.DbFieldViewMode.CompleteName
  commentId: F:BindOpen.Data.Queries.DbFieldViewMode.CompleteName
  id: CompleteName
  parent: BindOpen.Data.Queries.DbFieldViewMode
  langs:
  - csharp
  - vb
  name: CompleteName
  nameWithType: DbFieldViewMode.CompleteName
  fullName: BindOpen.Data.Queries.DbFieldViewMode.CompleteName
  type: Field
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: CompleteName
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 20
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nComplete name.\n"
  example: []
  syntax:
    content: CompleteName = 1
    return:
      type: BindOpen.Data.Queries.DbFieldViewMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Queries.DbFieldViewMode.CompleteNameOrValue
  commentId: F:BindOpen.Data.Queries.DbFieldViewMode.CompleteNameOrValue
  id: CompleteNameOrValue
  parent: BindOpen.Data.Queries.DbFieldViewMode
  langs:
  - csharp
  - vb
  name: CompleteNameOrValue
  nameWithType: DbFieldViewMode.CompleteNameOrValue
  fullName: BindOpen.Data.Queries.DbFieldViewMode.CompleteNameOrValue
  type: Field
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: CompleteNameOrValue
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 25
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nComplete name or value.\n"
  example: []
  syntax:
    content: CompleteNameOrValue = 2
    return:
      type: BindOpen.Data.Queries.DbFieldViewMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Queries.DbFieldViewMode.NameEqualsValue
  commentId: F:BindOpen.Data.Queries.DbFieldViewMode.NameEqualsValue
  id: NameEqualsValue
  parent: BindOpen.Data.Queries.DbFieldViewMode
  langs:
  - csharp
  - vb
  name: NameEqualsValue
  nameWithType: DbFieldViewMode.NameEqualsValue
  fullName: BindOpen.Data.Queries.DbFieldViewMode.NameEqualsValue
  type: Field
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: NameEqualsValue
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 30
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nName equals value.\n"
  example: []
  syntax:
    content: NameEqualsValue = 3
    return:
      type: BindOpen.Data.Queries.DbFieldViewMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Queries.DbFieldViewMode.OnlyValue
  commentId: F:BindOpen.Data.Queries.DbFieldViewMode.OnlyValue
  id: OnlyValue
  parent: BindOpen.Data.Queries.DbFieldViewMode
  langs:
  - csharp
  - vb
  name: OnlyValue
  nameWithType: DbFieldViewMode.OnlyValue
  fullName: BindOpen.Data.Queries.DbFieldViewMode.OnlyValue
  type: Field
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: OnlyValue
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 35
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nOnly value.\n"
  example: []
  syntax:
    content: OnlyValue = 4
    return:
      type: BindOpen.Data.Queries.DbFieldViewMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Queries.DbFieldViewMode.CompleteNameAsAlias
  commentId: F:BindOpen.Data.Queries.DbFieldViewMode.CompleteNameAsAlias
  id: CompleteNameAsAlias
  parent: BindOpen.Data.Queries.DbFieldViewMode
  langs:
  - csharp
  - vb
  name: CompleteNameAsAlias
  nameWithType: DbFieldViewMode.CompleteNameAsAlias
  fullName: BindOpen.Data.Queries.DbFieldViewMode.CompleteNameAsAlias
  type: Field
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: CompleteNameAsAlias
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 40
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nComplete name as alias.\n"
  example: []
  syntax:
    content: CompleteNameAsAlias = 5
    return:
      type: BindOpen.Data.Queries.DbFieldViewMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Queries.DbFieldViewMode.OnlyNameAsAlias
  commentId: F:BindOpen.Data.Queries.DbFieldViewMode.OnlyNameAsAlias
  id: OnlyNameAsAlias
  parent: BindOpen.Data.Queries.DbFieldViewMode
  langs:
  - csharp
  - vb
  name: OnlyNameAsAlias
  nameWithType: DbFieldViewMode.OnlyNameAsAlias
  fullName: BindOpen.Data.Queries.DbFieldViewMode.OnlyNameAsAlias
  type: Field
  source:
    remote:
      path: src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: OnlyNameAsAlias
    path: ../src/BindOpen.Databases/Data/Queries/Builders/DbFieldViewMode.cs
    startLine: 45
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Queries
  summary: "\nOnly name as alias.\n"
  example: []
  syntax:
    content: OnlyNameAsAlias = 6
    return:
      type: BindOpen.Data.Queries.DbFieldViewMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: BindOpen.Data.Queries.DbFieldViewMode
  commentId: T:BindOpen.Data.Queries.DbFieldViewMode
  parent: BindOpen.Data.Queries
  name: DbFieldViewMode
  nameWithType: DbFieldViewMode
  fullName: BindOpen.Data.Queries.DbFieldViewMode
shouldSkipMarkup: true
