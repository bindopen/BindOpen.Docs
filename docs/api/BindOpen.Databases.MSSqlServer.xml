<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.Databases.MSSqlServer</name>
    </assembly>
    <members>
        <member name="T:BindOpen.Application.Scopes.BdoScopeExtension_MSSqlServer">
            <summary>
            This class represents a BindOpen scope extension.
            </summary>
        </member>
        <member name="M:BindOpen.Application.Scopes.BdoScopeExtension_MSSqlServer.CreateMSSqlServerConnector(BindOpen.Application.Scopes.IBdoScope)">
            <summary>
            Creates a new MSSqlServer connector.
            </summary>
            <param name="scope">The scope to consider.</param>
            <returns>Returns the connector.</returns>
        </member>
        <member name="M:BindOpen.Application.Scopes.BdoScopeExtension_MSSqlServer.CreateMSSqlServerConnector(BindOpen.Application.Scopes.IBdoScope,System.String)">
            <summary>
            Creates a new MSSqlServer connector.
            </summary>
            <param name="scope">The scope to consider.</param>
            <param name="connectionString">The connection string to consider.</param>
            <returns>Returns the connector.</returns>
        </member>
        <member name="T:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer">
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
            <summary>
            This class represents a builder of database query.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.#ctor(BindOpen.Application.Scopes.IBdoScope)">
            <summary>
            Instantiates a new instance of the DbQueryBuilder_MSSqlServer class.
            </summary>
            <param name="scope">The scope to consider.</param>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_TextCount(System.Object[])">
            <summary>
            Evaluates the script word $SQLCOUNT.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Sum(System.Object[])">
            <summary>
            Evaluates the script word $SQLSUM.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Average(System.Object[])">
            <summary>
            Evaluates the script word $SQLAVG.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_In(System.Object[])">
            <summary>
            Evaluates the script word $SQLIN.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Eq(System.String,System.String)">
            <summary>
            Evaluates the script word $SQLEQ.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Diff(System.String,System.String)">
            <summary>
            Evaluates the script word $SQLDIFF.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Gt(System.String,System.String)">
            <summary>
            Evaluates the script word $SQLGT.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Gte(System.String,System.String)">
            <summary>
            Evaluates the script word $SQLGTE.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Lt(System.String,System.String)">
            <summary>
            Evaluates the script word $SQLLT.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Lte(System.String,System.String)">
            <summary>
            Evaluates the script word $SQLLTE.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_IsNull(System.String)">
            <summary>
            Evaluates the script word $SQLISNULL.
            </summary>
            <param name="value1"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_ConvertToText(System.String)">
            <summary>
            Evaluates the script word $SQLCONVERTTOTEXT.
            </summary>
            <param name="value1"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_CurrentDate(System.Object[])">
            <summary>
            Evaluates the script word $SQLGETCURRENTDATE.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_If(System.String,System.String,System.String)">
            <summary>
            Evaluates the script word $SQLIF.
            </summary>
            <param name="condition"></param>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Not(System.String)">
            <summary>
            Evaluates the script word $SQLNOT.
            </summary>
            <param name="value1">The value 1 to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Or(System.Object[])">
            <summary>
            Evaluates the script word $SQLOR.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_And(System.Object[])">
            <summary>
            Evaluates the script word $SQLAND.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Xor(System.Object[])">
            <summary>
            Evaluates the script word $SQLXOR.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Text(System.String)">
            <summary>
            Evaluates the script word $SQLTEXT.
            </summary>
            <param name="value1"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Like(System.String,System.String)">
            <summary>
            Evaluates the script word $SQLLIKE.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Replace(System.String,System.String,System.String)">
            <summary>
            Evaluates the script word $SQLREPLACE.
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Concatenate(System.Object[])">
            <summary>
            Evaluates the script word $SQLCONCATENATE.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Null">
            <summary>
            Evaluates the script word $SQLNULL.
            </summary>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_True">
            <summary>
            Evaluates the script word $SQLTRUE.
            </summary>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Database(System.String)">
            <summary>
            Evaluates the script word %SQLDATABASE.
            </summary>
            <param name="name"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Schema(System.String,System.String)">
            <summary>
            Evaluates the script word %SQLSCHEMA.
            </summary>
            <param name="name"></param>
            <param name="location"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Table(System.String,System.String)">
            <summary>
            Evaluates the script word [%DATABASE->]%TABLE.
            </summary>
            <param name="name"></param>
            <param name="location"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Field(System.String,System.String)">
            <summary>
            Evaluates the script word [[%DATABASE->]%TABLE->]%FIELD.
            </summary>
            <param name="name"></param>
            <param name="location"></param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_List(System.Object[])">
            <summary>
            Evaluates the script word $SQLLIST.
            </summary>
            <param name="parameters">The parameters to consider.</param>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_NewGuid">
            <summary>
            Evaluates the script word $SQLNEWGUID.
            </summary>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Random">
            <summary>
            Evaluates the script word $SQLRANDOM.
            </summary>
            <returns>The interpreted string value.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Query(BindOpen.Data.Queries.IDbSingleQuery,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)">
            <summary>
            Builds the specified simple database data query and put the result
            into the specified string MS Sql Server query.
            <remarks>We assume the query already exits.</remarks>
            </summary>
            <param name="query">The query to consider.</param>
            <param name="parameterSet">The parameter set to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the built query text.</returns>
        </member>
        <member name="M:BindOpen.Data.Queries.DbQueryBuilder_MSSqlServer.GetSqlText_Query(BindOpen.Data.Queries.IDbCompositeQuery,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)">
            <summary>
            Builds the SQL text of the specified merge query.
            </summary>
            <param name="query">The query to consider.</param>
            <param name="parameterSet">The parameter set to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the built query text.</returns>
        </member>
        <member name="T:BindOpen.Extensions.Connectors.BdoDbConnector_MSSqlServer">
            <summary>
            This class represents a OleDb database connector.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connectors.BdoDbConnector_MSSqlServer.#ctor">
            <summary>
            Instantiates a new instance of the BdoDbConnector_MSSqlServer class.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.Connectors.BdoDbConnector_MSSqlServer.#ctor(System.String,System.String)">
            <summary>
            Instantiates a new instance of the BdoDbConnector_MSSqlServer class.
            </summary>
            <param name="name">The name of this instance.</param>
            <param name="connectionString">The connection string to consider.</param>
        </member>
        <member name="M:BindOpen.Extensions.Connectors.BdoDbConnector_MSSqlServer.WithScope(BindOpen.Application.Scopes.IBdoScope)">
            <summary>
            Updates this instance considering the specified scope.
            </summary>
            <param name="scope">The scope to consider.</param>
            <returns>Returns the database builder.</returns>
        </member>
        <member name="M:BindOpen.Extensions.Connectors.BdoDbConnector_MSSqlServer.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)">
            <summary>
            
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Extensions.Connectors.BdoDbConnector_MSSqlServer.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)">
            <summary>
            Creates a command from the specified query.
            </summary>
            <param name="query">The query to consider.</param>
            <param name="parameterMode">Indicates whether parameters are replaced.</param>
            <param name="parameterSet">The parameter elements to consider.</param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log">The log to consider.</param>
            <returns>Returns the database command.</returns>
        </member>
        <member name="T:BindOpen.Extensions.References.BdoExtensionReferenceCollectionExtension">
            <summary>
            This class represents an extension reference extension.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.References.BdoExtensionReferenceCollectionExtension.AddMSSqlServer(BindOpen.Extensions.References.IBdoExtensionReferenceCollection)">
            <summary>
            Adds a MSSqlServer extension reference to a specified list of references.
            </summary>
            <returns>Returns the updated list of references.</returns>
        </member>
        <member name="T:BindOpen.Extensions.References.ExtensionReferenceFactory">
            <summary>
            This class represents an application scope factory.
            </summary>
        </member>
        <member name="M:BindOpen.Extensions.References.ExtensionReferenceFactory.CreateMSSqlServer">
            <summary>
            Creates a reference to the MSSqlServer extension.
            </summary>
            <returns>Returns the reference to the MSSqlServer extension.</returns>
        </member>
    </members>
</doc>
