### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Modules.IAppSection
  commentId: T:BindOpen.Application.Modules.IAppSection
  id: IAppSection
  parent: BindOpen.Application.Modules
  children:
  - BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  - BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  - BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  - BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  - BindOpen.Application.Modules.IAppSection.IconFileName
  - BindOpen.Application.Modules.IAppSection.IsVisible
  - BindOpen.Application.Modules.IAppSection.Module
  - BindOpen.Application.Modules.IAppSection.Parent
  - BindOpen.Application.Modules.IAppSection.Rank
  - BindOpen.Application.Modules.IAppSection.SubSections
  - BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  langs:
  - csharp
  - vb
  name: IAppSection
  nameWithType: IAppSection
  fullName: BindOpen.Application.Modules.IAppSection
  type: Interface
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: 'public interface IAppSection : IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed'
    content.vb: >-
      Public Interface IAppSection
          Inherits IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  commentId: M:BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  id: AddSection(BindOpen.Application.Modules.IAppSection)
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: AddSection(IAppSection)
  nameWithType: IAppSection.AddSection(IAppSection)
  fullName: BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: void AddSection(IAppSection section)
    parameters:
    - id: section
      type: BindOpen.Application.Modules.IAppSection
    content.vb: Sub AddSection(section As IAppSection)
  overload: BindOpen.Application.Modules.IAppSection.AddSection*
- uid: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  commentId: M:BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  id: AddSections(BindOpen.Application.Modules.AppSection[])
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: AddSections(AppSection[])
  nameWithType: IAppSection.AddSections(AppSection[])
  fullName: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: IAppSection AddSections(params AppSection[] sections)
    parameters:
    - id: sections
      type: BindOpen.Application.Modules.AppSection[]
    return:
      type: BindOpen.Application.Modules.IAppSection
    content.vb: Function AddSections(ParamArray sections As AppSection()) As IAppSection
  overload: BindOpen.Application.Modules.IAppSection.AddSections*
  nameWithType.vb: IAppSection.AddSections(AppSection())
  fullName.vb: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection())
  name.vb: AddSections(AppSection())
- uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  commentId: M:BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  id: GetSubSectionWithName(System.String)
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: GetSubSectionWithName(String)
  nameWithType: IAppSection.GetSubSectionWithName(String)
  fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: IAppSection GetSubSectionWithName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: BindOpen.Application.Modules.IAppSection
    content.vb: Function GetSubSectionWithName(name As String) As IAppSection
  overload: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName*
- uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  commentId: M:BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  id: GetSubSectionWithUniqueName(System.String)
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: GetSubSectionWithUniqueName(String)
  nameWithType: IAppSection.GetSubSectionWithUniqueName(String)
  fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: IAppSection GetSubSectionWithUniqueName(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: BindOpen.Application.Modules.IAppSection
    content.vb: Function GetSubSectionWithUniqueName(key As String) As IAppSection
  overload: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName*
- uid: BindOpen.Application.Modules.IAppSection.IconFileName
  commentId: P:BindOpen.Application.Modules.IAppSection.IconFileName
  id: IconFileName
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: IconFileName
  nameWithType: IAppSection.IconFileName
  fullName: BindOpen.Application.Modules.IAppSection.IconFileName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: string IconFileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property IconFileName As String
  overload: BindOpen.Application.Modules.IAppSection.IconFileName*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Modules.IAppSection.IsVisible
  commentId: P:BindOpen.Application.Modules.IAppSection.IsVisible
  id: IsVisible
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: IAppSection.IsVisible
  fullName: BindOpen.Application.Modules.IAppSection.IsVisible
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsVisible As Boolean
  overload: BindOpen.Application.Modules.IAppSection.IsVisible*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Modules.IAppSection.Module
  commentId: P:BindOpen.Application.Modules.IAppSection.Module
  id: Module
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: IAppSection.Module
  fullName: BindOpen.Application.Modules.IAppSection.Module
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: IAppModule Module { get; set; }
    parameters: []
    return:
      type: BindOpen.Application.Modules.IAppModule
    content.vb: Property Module As IAppModule
  overload: BindOpen.Application.Modules.IAppSection.Module*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Modules.IAppSection.Parent
  commentId: P:BindOpen.Application.Modules.IAppSection.Parent
  id: Parent
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: IAppSection.Parent
  fullName: BindOpen.Application.Modules.IAppSection.Parent
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: IAppSection Parent { get; set; }
    parameters: []
    return:
      type: BindOpen.Application.Modules.IAppSection
    content.vb: Property Parent As IAppSection
  overload: BindOpen.Application.Modules.IAppSection.Parent*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Modules.IAppSection.Rank
  commentId: P:BindOpen.Application.Modules.IAppSection.Rank
  id: Rank
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: IAppSection.Rank
  fullName: BindOpen.Application.Modules.IAppSection.Rank
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: int Rank { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property Rank As Integer
  overload: BindOpen.Application.Modules.IAppSection.Rank*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Modules.IAppSection.SubSections
  commentId: P:BindOpen.Application.Modules.IAppSection.SubSections
  id: SubSections
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: SubSections
  nameWithType: IAppSection.SubSections
  fullName: BindOpen.Application.Modules.IAppSection.SubSections
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: DataItemSet<AppSection> SubSections { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Modules.AppSection}
    content.vb: Property SubSections As DataItemSet(Of AppSection)
  overload: BindOpen.Application.Modules.IAppSection.SubSections*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  commentId: P:BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  id: ThumbIconFileName
  parent: BindOpen.Application.Modules.IAppSection
  langs:
  - csharp
  - vb
  name: ThumbIconFileName
  nameWithType: IAppSection.ThumbIconFileName
  fullName: BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\n\n"
  syntax:
    content: string ThumbIconFileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ThumbIconFileName As String
  overload: BindOpen.Application.Modules.IAppSection.ThumbIconFileName*
  modifiers.csharp:
  - get
  - set
references:
- uid: BindOpen.Application.Modules
  commentId: N:BindOpen.Application.Modules
  isExternal: true
  name: BindOpen.Application.Modules
  nameWithType: BindOpen.Application.Modules
  fullName: BindOpen.Application.Modules
- uid: BindOpen.Application.Modules.IAppSection.AddSection*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.AddSection
  isExternal: true
  name: AddSection
  nameWithType: IAppSection.AddSection
  fullName: BindOpen.Application.Modules.IAppSection.AddSection
- uid: BindOpen.Application.Modules.IAppSection
  commentId: T:BindOpen.Application.Modules.IAppSection
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppSection
  nameWithType: IAppSection
  fullName: BindOpen.Application.Modules.IAppSection
- uid: BindOpen.Application.Modules.IAppSection.AddSections*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.AddSections
  isExternal: true
  name: AddSections
  nameWithType: IAppSection.AddSections
  fullName: BindOpen.Application.Modules.IAppSection.AddSections
- uid: BindOpen.Application.Modules.AppSection[]
  isExternal: true
  name: AppSection[]
  nameWithType: AppSection[]
  fullName: BindOpen.Application.Modules.AppSection[]
  nameWithType.vb: AppSection()
  fullName.vb: BindOpen.Application.Modules.AppSection()
  name.vb: AppSection()
  spec.csharp:
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.GetSubSectionWithName
  isExternal: true
  name: GetSubSectionWithName
  nameWithType: IAppSection.GetSubSectionWithName
  fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName
  isExternal: true
  name: GetSubSectionWithUniqueName
  nameWithType: IAppSection.GetSubSectionWithUniqueName
  fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName
- uid: BindOpen.Application.Modules.IAppSection.IconFileName*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.IconFileName
  isExternal: true
  name: IconFileName
  nameWithType: IAppSection.IconFileName
  fullName: BindOpen.Application.Modules.IAppSection.IconFileName
- uid: BindOpen.Application.Modules.IAppSection.IsVisible*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.IsVisible
  isExternal: true
  name: IsVisible
  nameWithType: IAppSection.IsVisible
  fullName: BindOpen.Application.Modules.IAppSection.IsVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Modules.IAppSection.Module*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.Module
  isExternal: true
  name: Module
  nameWithType: IAppSection.Module
  fullName: BindOpen.Application.Modules.IAppSection.Module
- uid: BindOpen.Application.Modules.IAppModule
  commentId: T:BindOpen.Application.Modules.IAppModule
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppModule
  nameWithType: IAppModule
  fullName: BindOpen.Application.Modules.IAppModule
- uid: BindOpen.Application.Modules.IAppSection.Parent*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.Parent
  isExternal: true
  name: Parent
  nameWithType: IAppSection.Parent
  fullName: BindOpen.Application.Modules.IAppSection.Parent
- uid: BindOpen.Application.Modules.IAppSection.Rank*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.Rank
  isExternal: true
  name: Rank
  nameWithType: IAppSection.Rank
  fullName: BindOpen.Application.Modules.IAppSection.Rank
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Application.Modules.IAppSection.SubSections*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.SubSections
  isExternal: true
  name: SubSections
  nameWithType: IAppSection.SubSections
  fullName: BindOpen.Application.Modules.IAppSection.SubSections
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Modules.AppSection}
  commentId: '!:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Modules.AppSection}'
  definition: BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<AppSection>
  nameWithType: DataItemSet<AppSection>
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Modules.AppSection>
  nameWithType.vb: DataItemSet(Of AppSection)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Modules.AppSection)
  name.vb: DataItemSet(Of AppSection)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1
  isExternal: true
  name: DataItemSet<>
  nameWithType: DataItemSet<>
  fullName: BindOpen.Data.Items.DataItemSet<>
  nameWithType.vb: DataItemSet(Of )
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of )
  name.vb: DataItemSet(Of )
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.IAppSection.ThumbIconFileName*
  commentId: Overload:BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  isExternal: true
  name: ThumbIconFileName
  nameWithType: IAppSection.ThumbIconFileName
  fullName: BindOpen.Application.Modules.IAppSection.ThumbIconFileName
shouldSkipMarkup: true
