### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Connections.BdoDbConnection
  commentId: T:BindOpen.Data.Connections.BdoDbConnection
  id: BdoDbConnection
  parent: BindOpen.Data.Connections
  children:
  - BindOpen.Data.Connections.BdoDbConnection.#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)
  - BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  - BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  - BindOpen.Data.Connections.BdoDbConnection.Connect
  - BindOpen.Data.Connections.BdoDbConnection.Connector
  - BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  - BindOpen.Data.Connections.BdoDbConnection.Database
  - BindOpen.Data.Connections.BdoDbConnection.Disconnect
  - BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  - BindOpen.Data.Connections.BdoDbConnection.Native
  langs:
  - csharp
  - vb
  name: BdoDbConnection
  nameWithType: BdoDbConnection
  fullName: BindOpen.Data.Connections.BdoDbConnection
  type: Class
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nThis class represents a database connection.\n"
  syntax:
    content: 'public class BdoDbConnection : BdoConnection, IBdoDbConnection, IBdoConnection, IDisposable, IDbConnection'
    content.vb: >-
      Public Class BdoDbConnection
          Inherits BdoConnection
          Implements IBdoDbConnection, IBdoConnection, IDisposable, IDbConnection
  inheritance:
  - System.Object
  implements:
  - BindOpen.Data.Connections.IBdoDbConnection
  - BindOpen.Data.Connections.IBdoConnection
  - System.IDisposable
  - System.Data.IDbConnection
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Connections.BdoDbConnection.#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)
  id: '#ctor(BindOpen.Extensions.Connectors.BdoDbConnector,System.Data.IDbConnection)'
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: BdoDbConnection(BdoDbConnector, IDbConnection)
  nameWithType: BdoDbConnection.BdoDbConnection(BdoDbConnector, IDbConnection)
  fullName: BindOpen.Data.Connections.BdoDbConnection.BdoDbConnection(BindOpen.Extensions.Connectors.BdoDbConnector, System.Data.IDbConnection)
  type: Constructor
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nInstantiates a new instance of the BdoDbConnection class.\n"
  syntax:
    content: public BdoDbConnection(BdoDbConnector connector, IDbConnection nativeConnection)
    parameters:
    - id: connector
      type: BindOpen.Extensions.Connectors.BdoDbConnector
      description: The connector to consider.
    - id: nativeConnection
      type: System.Data.IDbConnection
      description: The native connection to consider.
    content.vb: Public Sub New(connector As BdoDbConnector, nativeConnection As IDbConnection)
  overload: BindOpen.Data.Connections.BdoDbConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  id: ChangeDatabase(System.String)
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: ChangeDatabase(String)
  nameWithType: BdoDbConnection.ChangeDatabase(String)
  fullName: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase(System.String)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nChanges the current database .\n"
  syntax:
    content: public IBdoLog ChangeDatabase(string databaseName)
    parameters:
    - id: databaseName
      type: System.String
      description: The name of the database to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Function ChangeDatabase(databaseName As String) As IBdoLog
  overload: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BdoDbConnection.Dispose(Boolean)
  fullName: BindOpen.Data.Connections.BdoDbConnection.Dispose(System.Boolean)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nDisposes this instance. \n"
  syntax:
    content: protected override void Dispose(bool isDisposing)
    parameters:
    - id: isDisposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(isDisposing As Boolean)
  overload: BindOpen.Data.Connections.BdoDbConnection.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: BindOpen.Data.Connections.BdoDbConnection.Connect
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.Connect
  id: Connect
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: BdoDbConnection.Connect()
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connect()
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nConnects this instance.\n"
  syntax:
    content: public override IBdoLog Connect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Connect As IBdoLog
  overload: BindOpen.Data.Connections.BdoDbConnection.Connect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoDbConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.Disconnect
  id: Disconnect
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: BdoDbConnection.Disconnect()
  fullName: BindOpen.Data.Connections.BdoDbConnection.Disconnect()
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nDisconnects this instance.\n"
  syntax:
    content: public override IBdoLog Disconnect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Disconnect As IBdoLog
  overload: BindOpen.Data.Connections.BdoDbConnection.Disconnect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  id: BeginTransaction
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction()
  nameWithType: BdoDbConnection.BeginTransaction()
  fullName: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction()
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nBegins transaction.\n"
  syntax:
    content: public IDbTransaction BeginTransaction()
    return:
      type: System.Data.IDbTransaction
      description: Returns the created transaction.
    content.vb: Public Function BeginTransaction As IDbTransaction
  overload: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  id: BeginTransaction(System.Data.IsolationLevel)
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: BeginTransaction(IsolationLevel)
  nameWithType: BdoDbConnection.BeginTransaction(IsolationLevel)
  fullName: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction(System.Data.IsolationLevel)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nBegins transaction.\n"
  syntax:
    content: public IDbTransaction BeginTransaction(IsolationLevel il)
    parameters:
    - id: il
      type: System.Data.IsolationLevel
      description: The isolation level to cosnider.
    return:
      type: System.Data.IDbTransaction
      description: Returns the created transaction.
    content.vb: Public Function BeginTransaction(il As IsolationLevel) As IDbTransaction
  overload: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  commentId: M:BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  id: CreateCommand
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: CreateCommand()
  nameWithType: BdoDbConnection.CreateCommand()
  fullName: BindOpen.Data.Connections.BdoDbConnection.CreateCommand()
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  syntax:
    content: public IDbCommand CreateCommand()
    return:
      type: System.Data.IDbCommand
    content.vb: Public Function CreateCommand As IDbCommand
  overload: BindOpen.Data.Connections.BdoDbConnection.CreateCommand*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoDbConnection.Connector
  commentId: P:BindOpen.Data.Connections.BdoDbConnection.Connector
  id: Connector
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Connector
  nameWithType: BdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connector
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nThe connector of this instance.\n"
  syntax:
    content: public IBdoDbConnector Connector { get; }
    parameters: []
    return:
      type: BindOpen.Extensions.Connectors.IBdoDbConnector
    content.vb: Public ReadOnly Property Connector As IBdoDbConnector
  overload: BindOpen.Data.Connections.BdoDbConnection.Connector*
  implements:
  - BindOpen.Data.Connections.IBdoDbConnection.Connector
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Connections.BdoDbConnection.Native
  commentId: P:BindOpen.Data.Connections.BdoDbConnection.Native
  id: Native
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Native
  nameWithType: BdoDbConnection.Native
  fullName: BindOpen.Data.Connections.BdoDbConnection.Native
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nGets the .NET database connection of this instance.\n"
  syntax:
    content: public IDbConnection Native { get; }
    parameters: []
    return:
      type: System.Data.IDbConnection
      description: Returns the connection of this instance.
    content.vb: Public ReadOnly Property Native As IDbConnection
  overload: BindOpen.Data.Connections.BdoDbConnection.Native*
  implements:
  - BindOpen.Data.Connections.IBdoDbConnection.Native
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Connections.BdoDbConnection.Database
  commentId: P:BindOpen.Data.Connections.BdoDbConnection.Database
  id: Database
  parent: BindOpen.Data.Connections.BdoDbConnection
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: BdoDbConnection.Database
  fullName: BindOpen.Data.Connections.BdoDbConnection.Database
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nThe name of the database of this instance.\n"
  syntax:
    content: public string Database { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Database As String
  overload: BindOpen.Data.Connections.BdoDbConnection.Database*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: BindOpen.Data.Connections
  commentId: N:BindOpen.Data.Connections
  isExternal: true
  name: BindOpen.Data.Connections
  nameWithType: BindOpen.Data.Connections
  fullName: BindOpen.Data.Connections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Data.Connections.IBdoDbConnection
  commentId: T:BindOpen.Data.Connections.IBdoDbConnection
  parent: BindOpen.Data.Connections
  isExternal: true
  name: IBdoDbConnection
  nameWithType: IBdoDbConnection
  fullName: BindOpen.Data.Connections.IBdoDbConnection
- uid: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: IBdoConnection
  nameWithType: IBdoConnection
  fullName: BindOpen.Data.Connections.IBdoConnection
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Data.IDbConnection
  isExternal: true
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Connections.BdoDbConnection.#ctor*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.#ctor
  isExternal: true
  name: BdoDbConnection
  nameWithType: BdoDbConnection.BdoDbConnection
  fullName: BindOpen.Data.Connections.BdoDbConnection.BdoDbConnection
- uid: BindOpen.Extensions.Connectors.BdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnector
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: BdoDbConnector
  nameWithType: BdoDbConnector
  fullName: BindOpen.Extensions.Connectors.BdoDbConnector
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  isExternal: true
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase
  isExternal: true
  name: ChangeDatabase
  nameWithType: BdoDbConnection.ChangeDatabase
  fullName: BindOpen.Data.Connections.BdoDbConnection.ChangeDatabase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Data.Connections.BdoDbConnection.Dispose*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Dispose
  isExternal: true
  name: Dispose
  nameWithType: BdoDbConnection.Dispose
  fullName: BindOpen.Data.Connections.BdoDbConnection.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Connections.BdoDbConnection.Connect*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Connect
  isExternal: true
  name: Connect
  nameWithType: BdoDbConnection.Connect
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connect
- uid: BindOpen.Data.Connections.BdoDbConnection.Disconnect*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Disconnect
  isExternal: true
  name: Disconnect
  nameWithType: BdoDbConnection.Disconnect
  fullName: BindOpen.Data.Connections.BdoDbConnection.Disconnect
- uid: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
  isExternal: true
  name: BeginTransaction
  nameWithType: BdoDbConnection.BeginTransaction
  fullName: BindOpen.Data.Connections.BdoDbConnection.BeginTransaction
- uid: System.Data.IDbTransaction
  isExternal: true
  name: IDbTransaction
  nameWithType: IDbTransaction
  fullName: System.Data.IDbTransaction
- uid: System.Data.IsolationLevel
  isExternal: true
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Data.IsolationLevel
- uid: BindOpen.Data.Connections.BdoDbConnection.CreateCommand*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.CreateCommand
  isExternal: true
  name: CreateCommand
  nameWithType: BdoDbConnection.CreateCommand
  fullName: BindOpen.Data.Connections.BdoDbConnection.CreateCommand
- uid: System.Data.IDbCommand
  isExternal: true
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: BindOpen.Data.Connections.BdoDbConnection.Connector*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Connector
  isExternal: true
  name: Connector
  nameWithType: BdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.BdoDbConnection.Connector
- uid: BindOpen.Data.Connections.IBdoDbConnection.Connector
  commentId: P:BindOpen.Data.Connections.IBdoDbConnection.Connector
  parent: BindOpen.Data.Connections.IBdoDbConnection
  isExternal: true
  name: Connector
  nameWithType: IBdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Connector
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.IBdoDbConnector
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: IBdoDbConnector
  nameWithType: IBdoDbConnector
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector
- uid: BindOpen.Data.Connections.BdoDbConnection.Native*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Native
  isExternal: true
  name: Native
  nameWithType: BdoDbConnection.Native
  fullName: BindOpen.Data.Connections.BdoDbConnection.Native
- uid: BindOpen.Data.Connections.IBdoDbConnection.Native
  commentId: P:BindOpen.Data.Connections.IBdoDbConnection.Native
  parent: BindOpen.Data.Connections.IBdoDbConnection
  isExternal: true
  name: Native
  nameWithType: IBdoDbConnection.Native
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Native
- uid: BindOpen.Data.Connections.BdoDbConnection.Database*
  commentId: Overload:BindOpen.Data.Connections.BdoDbConnection.Database
  isExternal: true
  name: Database
  nameWithType: BdoDbConnection.Database
  fullName: BindOpen.Data.Connections.BdoDbConnection.Database
shouldSkipMarkup: true
