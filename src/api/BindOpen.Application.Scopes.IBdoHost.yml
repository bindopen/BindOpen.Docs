### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Scopes.IBdoHost
  commentId: T:BindOpen.Application.Scopes.IBdoHost
  id: IBdoHost
  parent: BindOpen.Application.Scopes
  children:
  - BindOpen.Application.Scopes.IBdoHost.GetCredential(System.String)
  - BindOpen.Application.Scopes.IBdoHost.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  - BindOpen.Application.Scopes.IBdoHost.HostOptions
  - BindOpen.Application.Scopes.IBdoHost.Scope
  langs:
  - csharp
  - vb
  name: IBdoHost
  nameWithType: IBdoHost
  fullName: BindOpen.Application.Scopes.IBdoHost
  type: Interface
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nThe interface defines the base bot.\n"
  syntax:
    content: 'public interface IBdoHost : IBdoService, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IBdoScope'
    content.vb: >-
      Public Interface IBdoHost
          Inherits IBdoService, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IBdoScope
  inheritedMembers:
  - BindOpen.Application.Services.IBdoService.Start
  - BindOpen.Application.Services.IBdoService.End(BindOpen.System.Processing.ProcessExecutionStatus)
  - BindOpen.Application.Services.IBdoService.Loggers
  - BindOpen.Application.Services.IBdoService.AppDomainPool
  - BindOpen.Application.Services.IBdoService.Log
  - BindOpen.Application.Services.IBdoService.IsLoaded
  - BindOpen.Application.Services.IBdoService.ExecutionState
  - BindOpen.Application.Services.IBdoService.ExecutionStatus
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Application.Scopes.IBdoHost.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  commentId: M:BindOpen.Application.Scopes.IBdoHost.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  id: GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  parent: BindOpen.Application.Scopes.IBdoHost
  langs:
  - csharp
  - vb
  name: GetKnownPath(BdoHostPathKind)
  nameWithType: IBdoHost.GetKnownPath(BdoHostPathKind)
  fullName: BindOpen.Application.Scopes.IBdoHost.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nGet the specified known path.\n"
  syntax:
    content: string GetKnownPath(BdoHostPathKind pathKind)
    parameters:
    - id: pathKind
      type: BindOpen.Application.Scopes.BdoHostPathKind
      description: The kind of known path.
    return:
      type: System.String
      description: Returns the specified path.
    content.vb: Function GetKnownPath(pathKind As BdoHostPathKind) As String
  overload: BindOpen.Application.Scopes.IBdoHost.GetKnownPath*
- uid: BindOpen.Application.Scopes.IBdoHost.GetCredential(System.String)
  commentId: M:BindOpen.Application.Scopes.IBdoHost.GetCredential(System.String)
  id: GetCredential(System.String)
  parent: BindOpen.Application.Scopes.IBdoHost
  langs:
  - csharp
  - vb
  name: GetCredential(String)
  nameWithType: IBdoHost.GetCredential(String)
  fullName: BindOpen.Application.Scopes.IBdoHost.GetCredential(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nGets the specified credential.\n"
  syntax:
    content: IApplicationCredential GetCredential(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the credential to consider.
    return:
      type: BindOpen.Application.Security.IApplicationCredential
      description: Returns the specified credential.
    content.vb: Function GetCredential(name As String) As IApplicationCredential
  overload: BindOpen.Application.Scopes.IBdoHost.GetCredential*
- uid: BindOpen.Application.Scopes.IBdoHost.HostOptions
  commentId: P:BindOpen.Application.Scopes.IBdoHost.HostOptions
  id: HostOptions
  parent: BindOpen.Application.Scopes.IBdoHost
  langs:
  - csharp
  - vb
  name: HostOptions
  nameWithType: IBdoHost.HostOptions
  fullName: BindOpen.Application.Scopes.IBdoHost.HostOptions
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nThe options.\n"
  syntax:
    content: IBdoHostOptions HostOptions { get; }
    parameters: []
    return:
      type: BindOpen.Application.Scopes.IBdoHostOptions
    content.vb: ReadOnly Property HostOptions As IBdoHostOptions
  overload: BindOpen.Application.Scopes.IBdoHost.HostOptions*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Application.Scopes.IBdoHost.Scope
  commentId: P:BindOpen.Application.Scopes.IBdoHost.Scope
  id: Scope
  parent: BindOpen.Application.Scopes.IBdoHost
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: IBdoHost.Scope
  fullName: BindOpen.Application.Scopes.IBdoHost.Scope
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nThe scope to consider.\n"
  syntax:
    content: IBdoScope Scope { get; }
    parameters: []
    return:
      type: BindOpen.Application.Scopes.IBdoScope
    content.vb: ReadOnly Property Scope As IBdoScope
  overload: BindOpen.Application.Scopes.IBdoHost.Scope*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  isExternal: true
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: BindOpen.Application.Services.IBdoService.Start
  commentId: M:BindOpen.Application.Services.IBdoService.Start
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: Start()
  nameWithType: IBdoService.Start()
  fullName: BindOpen.Application.Services.IBdoService.Start()
  spec.csharp:
  - uid: BindOpen.Application.Services.IBdoService.Start
    name: Start
    nameWithType: IBdoService.Start
    fullName: BindOpen.Application.Services.IBdoService.Start
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.IBdoService.Start
    name: Start
    nameWithType: IBdoService.Start
    fullName: BindOpen.Application.Services.IBdoService.Start
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.IBdoService.End(BindOpen.System.Processing.ProcessExecutionStatus)
  commentId: M:BindOpen.Application.Services.IBdoService.End(BindOpen.System.Processing.ProcessExecutionStatus)
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: End(ProcessExecutionStatus)
  nameWithType: IBdoService.End(ProcessExecutionStatus)
  fullName: BindOpen.Application.Services.IBdoService.End(BindOpen.System.Processing.ProcessExecutionStatus)
  spec.csharp:
  - uid: BindOpen.Application.Services.IBdoService.End(BindOpen.System.Processing.ProcessExecutionStatus)
    name: End
    nameWithType: IBdoService.End
    fullName: BindOpen.Application.Services.IBdoService.End
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Processing.ProcessExecutionStatus
    name: ProcessExecutionStatus
    nameWithType: ProcessExecutionStatus
    fullName: BindOpen.System.Processing.ProcessExecutionStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.IBdoService.End(BindOpen.System.Processing.ProcessExecutionStatus)
    name: End
    nameWithType: IBdoService.End
    fullName: BindOpen.Application.Services.IBdoService.End
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Processing.ProcessExecutionStatus
    name: ProcessExecutionStatus
    nameWithType: ProcessExecutionStatus
    fullName: BindOpen.System.Processing.ProcessExecutionStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.IBdoService.Loggers
  commentId: P:BindOpen.Application.Services.IBdoService.Loggers
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: Loggers
  nameWithType: IBdoService.Loggers
  fullName: BindOpen.Application.Services.IBdoService.Loggers
- uid: BindOpen.Application.Services.IBdoService.AppDomainPool
  commentId: P:BindOpen.Application.Services.IBdoService.AppDomainPool
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: AppDomainPool
  nameWithType: IBdoService.AppDomainPool
  fullName: BindOpen.Application.Services.IBdoService.AppDomainPool
- uid: BindOpen.Application.Services.IBdoService.Log
  commentId: P:BindOpen.Application.Services.IBdoService.Log
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: Log
  nameWithType: IBdoService.Log
  fullName: BindOpen.Application.Services.IBdoService.Log
- uid: BindOpen.Application.Services.IBdoService.IsLoaded
  commentId: P:BindOpen.Application.Services.IBdoService.IsLoaded
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: IsLoaded
  nameWithType: IBdoService.IsLoaded
  fullName: BindOpen.Application.Services.IBdoService.IsLoaded
- uid: BindOpen.Application.Services.IBdoService.ExecutionState
  commentId: P:BindOpen.Application.Services.IBdoService.ExecutionState
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: ExecutionState
  nameWithType: IBdoService.ExecutionState
  fullName: BindOpen.Application.Services.IBdoService.ExecutionState
- uid: BindOpen.Application.Services.IBdoService.ExecutionStatus
  commentId: P:BindOpen.Application.Services.IBdoService.ExecutionStatus
  parent: BindOpen.Application.Services.IBdoService
  isExternal: true
  name: ExecutionStatus
  nameWithType: IBdoService.ExecutionStatus
  fullName: BindOpen.Application.Services.IBdoService.ExecutionStatus
- uid: BindOpen.Application.Services.IBdoService
  commentId: T:BindOpen.Application.Services.IBdoService
  parent: BindOpen.Application.Services
  isExternal: true
  name: IBdoService
  nameWithType: IBdoService
  fullName: BindOpen.Application.Services.IBdoService
- uid: BindOpen.Application.Services
  commentId: N:BindOpen.Application.Services
  isExternal: true
  name: BindOpen.Application.Services
  nameWithType: BindOpen.Application.Services
  fullName: BindOpen.Application.Services
- uid: BindOpen.Application.Scopes.IBdoHost.GetKnownPath*
  commentId: Overload:BindOpen.Application.Scopes.IBdoHost.GetKnownPath
  isExternal: true
  name: GetKnownPath
  nameWithType: IBdoHost.GetKnownPath
  fullName: BindOpen.Application.Scopes.IBdoHost.GetKnownPath
- uid: BindOpen.Application.Scopes.BdoHostPathKind
  commentId: T:BindOpen.Application.Scopes.BdoHostPathKind
  parent: BindOpen.Application.Scopes
  isExternal: true
  name: BdoHostPathKind
  nameWithType: BdoHostPathKind
  fullName: BindOpen.Application.Scopes.BdoHostPathKind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Scopes.IBdoHost.GetCredential*
  commentId: Overload:BindOpen.Application.Scopes.IBdoHost.GetCredential
  isExternal: true
  name: GetCredential
  nameWithType: IBdoHost.GetCredential
  fullName: BindOpen.Application.Scopes.IBdoHost.GetCredential
- uid: BindOpen.Application.Security.IApplicationCredential
  commentId: T:BindOpen.Application.Security.IApplicationCredential
  parent: BindOpen.Application.Security
  isExternal: true
  name: IApplicationCredential
  nameWithType: IApplicationCredential
  fullName: BindOpen.Application.Security.IApplicationCredential
- uid: BindOpen.Application.Security
  commentId: N:BindOpen.Application.Security
  isExternal: true
  name: BindOpen.Application.Security
  nameWithType: BindOpen.Application.Security
  fullName: BindOpen.Application.Security
- uid: BindOpen.Application.Scopes.IBdoHost.HostOptions*
  commentId: Overload:BindOpen.Application.Scopes.IBdoHost.HostOptions
  isExternal: true
  name: HostOptions
  nameWithType: IBdoHost.HostOptions
  fullName: BindOpen.Application.Scopes.IBdoHost.HostOptions
- uid: BindOpen.Application.Scopes.IBdoHostOptions
  commentId: T:BindOpen.Application.Scopes.IBdoHostOptions
  parent: BindOpen.Application.Scopes
  isExternal: true
  name: IBdoHostOptions
  nameWithType: IBdoHostOptions
  fullName: BindOpen.Application.Scopes.IBdoHostOptions
- uid: BindOpen.Application.Scopes.IBdoHost.Scope*
  commentId: Overload:BindOpen.Application.Scopes.IBdoHost.Scope
  isExternal: true
  name: Scope
  nameWithType: IBdoHost.Scope
  fullName: BindOpen.Application.Scopes.IBdoHost.Scope
- uid: BindOpen.Application.Scopes.IBdoScope
  isExternal: true
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
shouldSkipMarkup: true
