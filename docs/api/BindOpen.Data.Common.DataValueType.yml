### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  id: DataValueType
  parent: BindOpen.Data.Common
  children:
  - BindOpen.Data.Common.DataValueType.Any
  - BindOpen.Data.Common.DataValueType.Boolean
  - BindOpen.Data.Common.DataValueType.Carrier
  - BindOpen.Data.Common.DataValueType.Datasource
  - BindOpen.Data.Common.DataValueType.Date
  - BindOpen.Data.Common.DataValueType.Dictionary
  - BindOpen.Data.Common.DataValueType.Document
  - BindOpen.Data.Common.DataValueType.Element
  - BindOpen.Data.Common.DataValueType.Integer
  - BindOpen.Data.Common.DataValueType.Long
  - BindOpen.Data.Common.DataValueType.None
  - BindOpen.Data.Common.DataValueType.Number
  - BindOpen.Data.Common.DataValueType.Object
  - BindOpen.Data.Common.DataValueType.Schema
  - BindOpen.Data.Common.DataValueType.SchemaZone
  - BindOpen.Data.Common.DataValueType.StringValued
  - BindOpen.Data.Common.DataValueType.Text
  - BindOpen.Data.Common.DataValueType.Time
  - BindOpen.Data.Common.DataValueType.ULong
  langs:
  - csharp
  - vb
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
  type: Enum
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DataValueType
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 11
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nThis enumeration represents the possible data value types.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public enum DataValueType
    content.vb: >-
      <Serializable>

      Public Enum DataValueType
  extensionMethods:
  - BindOpen.Data.Common.DataValueType.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - BindOpen.Data.Common.DataValueType.BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
  - BindOpen.Data.Common.DataValueType.BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - BindOpen.Data.Common.DataValueType.BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: BindOpen.Data.Common.DataValueType.Any
  commentId: F:BindOpen.Data.Common.DataValueType.Any
  id: Any
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: DataValueType.Any
  fullName: BindOpen.Data.Common.DataValueType.Any
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Any
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 18
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nUndefined.\n"
  example: []
  syntax:
    content: Any = 0
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.None
  commentId: F:BindOpen.Data.Common.DataValueType.None
  id: None
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: None
  nameWithType: DataValueType.None
  fullName: BindOpen.Data.Common.DataValueType.None
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: None
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 23
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nNone.\n"
  example: []
  syntax:
    content: None = 1
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Boolean
  commentId: F:BindOpen.Data.Common.DataValueType.Boolean
  id: Boolean
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Boolean
  nameWithType: DataValueType.Boolean
  fullName: BindOpen.Data.Common.DataValueType.Boolean
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Boolean
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 28
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nBoolean.\n"
  example: []
  syntax:
    content: Boolean = 2
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Carrier
  commentId: F:BindOpen.Data.Common.DataValueType.Carrier
  id: Carrier
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Carrier
  nameWithType: DataValueType.Carrier
  fullName: BindOpen.Data.Common.DataValueType.Carrier
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Carrier
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 33
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nData carrier.\n"
  example: []
  syntax:
    content: Carrier = 3
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Datasource
  commentId: F:BindOpen.Data.Common.DataValueType.Datasource
  id: Datasource
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Datasource
  nameWithType: DataValueType.Datasource
  fullName: BindOpen.Data.Common.DataValueType.Datasource
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Datasource
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 38
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nData source.\n"
  example: []
  syntax:
    content: Datasource = 4
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Element
  commentId: F:BindOpen.Data.Common.DataValueType.Element
  id: Element
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Element
  nameWithType: DataValueType.Element
  fullName: BindOpen.Data.Common.DataValueType.Element
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Element
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 43
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nElement.\n"
  example: []
  syntax:
    content: Element = 5
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Date
  commentId: F:BindOpen.Data.Common.DataValueType.Date
  id: Date
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: DataValueType.Date
  fullName: BindOpen.Data.Common.DataValueType.Date
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Date
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 48
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nDate.\n"
  example: []
  syntax:
    content: Date = 6
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Dictionary
  commentId: F:BindOpen.Data.Common.DataValueType.Dictionary
  id: Dictionary
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Dictionary
  nameWithType: DataValueType.Dictionary
  fullName: BindOpen.Data.Common.DataValueType.Dictionary
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Dictionary
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 53
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nDictionary.\n"
  example: []
  syntax:
    content: Dictionary = 7
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Document
  commentId: F:BindOpen.Data.Common.DataValueType.Document
  id: Document
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Document
  nameWithType: DataValueType.Document
  fullName: BindOpen.Data.Common.DataValueType.Document
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Document
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 58
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nDocument.\n"
  example: []
  syntax:
    content: Document = 8
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Integer
  commentId: F:BindOpen.Data.Common.DataValueType.Integer
  id: Integer
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Integer
  nameWithType: DataValueType.Integer
  fullName: BindOpen.Data.Common.DataValueType.Integer
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Integer
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 63
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nInteger.\n"
  example: []
  syntax:
    content: Integer = 9
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Long
  commentId: F:BindOpen.Data.Common.DataValueType.Long
  id: Long
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Long
  nameWithType: DataValueType.Long
  fullName: BindOpen.Data.Common.DataValueType.Long
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Long
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 68
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nLong.\n"
  example: []
  syntax:
    content: Long = 10
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.ULong
  commentId: F:BindOpen.Data.Common.DataValueType.ULong
  id: ULong
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: ULong
  nameWithType: DataValueType.ULong
  fullName: BindOpen.Data.Common.DataValueType.ULong
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ULong
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 73
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nUltra long.\n"
  example: []
  syntax:
    content: ULong = 11
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Number
  commentId: F:BindOpen.Data.Common.DataValueType.Number
  id: Number
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Number
  nameWithType: DataValueType.Number
  fullName: BindOpen.Data.Common.DataValueType.Number
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Number
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 78
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nNumber value.\n"
  example: []
  syntax:
    content: Number = 12
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Object
  commentId: F:BindOpen.Data.Common.DataValueType.Object
  id: Object
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Object
  nameWithType: DataValueType.Object
  fullName: BindOpen.Data.Common.DataValueType.Object
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Object
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 83
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nObject.\n"
  example: []
  syntax:
    content: Object = 13
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Schema
  commentId: F:BindOpen.Data.Common.DataValueType.Schema
  id: Schema
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: DataValueType.Schema
  fullName: BindOpen.Data.Common.DataValueType.Schema
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Schema
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 88
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nSchema.\n"
  example: []
  syntax:
    content: Schema = 14
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.SchemaZone
  commentId: F:BindOpen.Data.Common.DataValueType.SchemaZone
  id: SchemaZone
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: SchemaZone
  nameWithType: DataValueType.SchemaZone
  fullName: BindOpen.Data.Common.DataValueType.SchemaZone
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SchemaZone
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 93
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nSchema zone.\n"
  example: []
  syntax:
    content: SchemaZone = 15
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.StringValued
  commentId: F:BindOpen.Data.Common.DataValueType.StringValued
  id: StringValued
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: StringValued
  nameWithType: DataValueType.StringValued
  fullName: BindOpen.Data.Common.DataValueType.StringValued
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: StringValued
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 98
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nSchema.\n"
  example: []
  syntax:
    content: StringValued = 16
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Text
  commentId: F:BindOpen.Data.Common.DataValueType.Text
  id: Text
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Text
  nameWithType: DataValueType.Text
  fullName: BindOpen.Data.Common.DataValueType.Text
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Text
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 103
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nText.\n"
  example: []
  syntax:
    content: Text = 17
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Data.Common.DataValueType.Time
  commentId: F:BindOpen.Data.Common.DataValueType.Time
  id: Time
  parent: BindOpen.Data.Common.DataValueType
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: DataValueType.Time
  fullName: BindOpen.Data.Common.DataValueType.Time
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/Data/Common/DataValueType.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Time
    path: ../src/BindOpen.Core/Data/Common/DataValueType.cs
    startLine: 108
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Common
  summary: "\nTime.\n"
  example: []
  syntax:
    content: Time = 18
    return:
      type: BindOpen.Data.Common.DataValueType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Common.DataValueType.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Data.Common.DataValueType)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueType.BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Data.Common.DataValueType)
  name: GetObjectType()
  nameWithType: DataValueTypeExtension.GetObjectType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
    name: GetObjectType
    nameWithType: DataValueTypeExtension.GetObjectType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
    name: GetObjectType
    nameWithType: DataValueTypeExtension.GetObjectType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueType.BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.DataValueType)
  name: IsCompatibleWith(DataValueType)
  nameWithType: DataValueTypeExtension.IsCompatibleWith(DataValueType)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType)
    name: IsCompatibleWith
    nameWithType: DataValueTypeExtension.IsCompatibleWith
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType)
    name: IsCompatibleWith
    nameWithType: DataValueTypeExtension.IsCompatibleWith
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueType.BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
  commentId: M:BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType(BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Specification.DataControlTypeExtension
  definition: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType(BindOpen.Data.Common.DataValueType)
  name: GetDefaultControlType()
  nameWithType: DataControlTypeExtension.GetDefaultControlType()
  fullName: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType()
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
    name: GetDefaultControlType
    nameWithType: DataControlTypeExtension.GetDefaultControlType
    fullName: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
    name: GetDefaultControlType
    nameWithType: DataControlTypeExtension.GetDefaultControlType
    fullName: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Data.Common.DataValueType)
  name: IsScalar(DataValueType)
  nameWithType: DataValueTypeExtension.IsScalar(DataValueType)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Data.Common.DataValueType)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(BindOpen.Data.Common.DataValueType)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Data.Common.DataValueType)
  name: GetObjectType(DataValueType)
  nameWithType: DataValueTypeExtension.GetObjectType(DataValueType)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Data.Common.DataValueType)
    name: GetObjectType
    nameWithType: DataValueTypeExtension.GetObjectType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType(BindOpen.Data.Common.DataValueType)
    name: GetObjectType
    nameWithType: DataValueTypeExtension.GetObjectType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetObjectType
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.DataValueType)
  name: IsCompatibleWith(DataValueType, DataValueType)
  nameWithType: DataValueTypeExtension.IsCompatibleWith(DataValueType, DataValueType)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.DataValueType)
    name: IsCompatibleWith
    nameWithType: DataValueTypeExtension.IsCompatibleWith
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.DataValueType)
    name: IsCompatibleWith
    nameWithType: DataValueTypeExtension.IsCompatibleWith
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType(BindOpen.Data.Common.DataValueType)
  name: GetDefaultControlType(DataValueType)
  nameWithType: DataControlTypeExtension.GetDefaultControlType(DataValueType)
  fullName: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType(BindOpen.Data.Common.DataValueType)
    name: GetDefaultControlType
    nameWithType: DataControlTypeExtension.GetDefaultControlType
    fullName: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType(BindOpen.Data.Common.DataValueType)
    name: GetDefaultControlType
    nameWithType: DataControlTypeExtension.GetDefaultControlType
    fullName: BindOpen.Data.Specification.DataControlTypeExtension.GetDefaultControlType
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataControlTypeExtension
  commentId: T:BindOpen.Data.Specification.DataControlTypeExtension
  parent: BindOpen.Data.Specification
  name: DataControlTypeExtension
  nameWithType: DataControlTypeExtension
  fullName: BindOpen.Data.Specification.DataControlTypeExtension
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification
  commentId: N:BindOpen.Data.Specification
  name: BindOpen.Data.Specification
  nameWithType: BindOpen.Data.Specification
  fullName: BindOpen.Data.Specification
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
shouldSkipMarkup: true
