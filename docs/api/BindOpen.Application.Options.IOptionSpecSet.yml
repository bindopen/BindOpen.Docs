### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Options.IOptionSpecSet
  commentId: T:BindOpen.Application.Options.IOptionSpecSet
  id: IOptionSpecSet
  parent: BindOpen.Application.Options
  children:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  - BindOpen.Application.Options.IOptionSpecSet.Condition
  - BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  - BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  - BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  - BindOpen.Application.Options.IOptionSpecSet.SubSets
  langs:
  - csharp
  - vb
  name: IOptionSpecSet
  nameWithType: IOptionSpecSet
  fullName: BindOpen.Application.Options.IOptionSpecSet
  type: Interface
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IOptionSpecSet
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 11
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: 'public interface IOptionSpecSet : IDataItemSet<OptionSpec>, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, IIndexed'
    content.vb: >-
      Public Interface IOptionSpecSet
          Inherits IDataItemSet(Of OptionSpec), INamed, IIndexed
  inheritedMembers:
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Items
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.Int32)
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.String)
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Count
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec[])
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.ClearItems
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(System.Collections.Generic.List{BindOpen.Application.Options.OptionSpec},BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec,BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.HasItem(System.String)
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.HasItems
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Remove(System.String[])
  - BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.Clone``1
  - System.ICloneable.Clone
  - System.IDisposable.Dispose
  - BindOpen.Data.Items.IIdentified.Id
  - BindOpen.Data.Items.IReferenced.Key
  - BindOpen.Data.Items.INamed.Name
  - BindOpen.Data.Items.IIndexed.Index
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Application.Options.IOptionSpecSet.Condition
  commentId: P:BindOpen.Application.Options.IOptionSpecSet.Condition
  id: Condition
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: IOptionSpecSet.Condition
  fullName: BindOpen.Application.Options.IOptionSpecSet.Condition
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Condition
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 16
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: Condition Condition { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Conditions.Condition
    content.vb: Property Condition As Condition
  overload: BindOpen.Application.Options.IOptionSpecSet.Condition*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Options.IOptionSpecSet.SubSets
  commentId: P:BindOpen.Application.Options.IOptionSpecSet.SubSets
  id: SubSets
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: SubSets
  nameWithType: IOptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.IOptionSpecSet.SubSets
  type: Property
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SubSets
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 21
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: List<OptionSpecSet> SubSets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
    content.vb: Property SubSets As List(Of OptionSpecSet)
  overload: BindOpen.Application.Options.IOptionSpecSet.SubSets*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(DataValueType, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(DataValueType, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 30
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddOption(DataValueType dataValueType, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: ''
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: ''
    - id: aliases
      type: System.String[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddOption(dataValueType As DataValueType, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  nameWithType.vb: IOptionSpecSet.AddOption(DataValueType, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, OptionNameKind, String())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 40
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddOption(DataValueType dataValueType, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: ''
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: ''
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: ''
    - id: aliases
      type: System.String[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddOption(dataValueType As DataValueType, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  nameWithType.vb: IOptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 48
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddOption(OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: ''
    - id: aliases
      type: System.String[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddOption(nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  nameWithType.vb: IOptionSpecSet.AddOption(OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(OptionNameKind, String())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  id: AddOption(System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(String[])
  nameWithType: IOptionSpecSet.AddOption(String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 55
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddOption(params string[] aliases)
    parameters:
    - id: aliases
      type: System.String[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddOption(ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  nameWithType.vb: IOptionSpecSet.AddOption(String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String())
  name.vb: AddOption(String())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 64
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddOption(RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: ''
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: ''
    - id: aliases
      type: System.String[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddOption(requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  nameWithType.vb: IOptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  id: AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(RequirementLevel, String[])
  nameWithType: IOptionSpecSet.AddOption(RequirementLevel, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 72
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddOption(RequirementLevel requirementLevel, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: ''
    - id: aliases
      type: System.String[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddOption(requirementLevel As RequirementLevel, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  nameWithType.vb: IOptionSpecSet.AddOption(RequirementLevel, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String())
  name.vb: AddOption(RequirementLevel, String())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(Type, RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 82
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddOption(Type type, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: type
      type: System.Type
      description: ''
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: ''
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: ''
    - id: aliases
      type: System.String[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddOption(type As Type, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  nameWithType.vb: IOptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(Type, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  id: AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(ICondition, IOptionSpec[])
  nameWithType: IOptionSpecSet.AddSubSet(ICondition, IOptionSpec[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSubSet
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 90
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddSubSet(ICondition condition, params IOptionSpec[] optionSpecifications)
    parameters:
    - id: condition
      type: BindOpen.Data.Conditions.ICondition
      description: ''
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddSubSet(condition As ICondition, ParamArray optionSpecifications As IOptionSpec()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddSubSet*
  nameWithType.vb: IOptionSpecSet.AddSubSet(ICondition, IOptionSpec())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(ICondition, IOptionSpec())
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  id: AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(IOptionSpecSet)
  nameWithType: IOptionSpecSet.AddSubSet(IOptionSpecSet)
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSubSet
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 97
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddSubSet(IOptionSpecSet subSet)
    parameters:
    - id: subSet
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddSubSet(subSet As IOptionSpecSet) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddSubSet*
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  id: AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(IOptionSpec[])
  nameWithType: IOptionSpecSet.AddSubSet(IOptionSpec[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSubSet
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 104
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet AddSubSet(params IOptionSpec[] optionSpecifications)
    parameters:
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function AddSubSet(ParamArray optionSpecifications As IOptionSpec()) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.AddSubSet*
  nameWithType.vb: IOptionSpecSet.AddSubSet(IOptionSpec())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(IOptionSpec())
- uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  id: ClearOptions
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: ClearOptions()
  nameWithType: IOptionSpecSet.ClearOptions()
  fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions()
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ClearOptions
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 109
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: void ClearOptions()
    content.vb: Sub ClearOptions
  overload: BindOpen.Application.Options.IOptionSpecSet.ClearOptions*
- uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  id: GetHelpText(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: GetHelpText(String)
  nameWithType: IOptionSpecSet.GetHelpText(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetHelpText
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 116
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: string GetHelpText(string uiCulture = "*")
    parameters:
    - id: uiCulture
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Function GetHelpText(uiCulture As String = "*") As String
  overload: BindOpen.Application.Options.IOptionSpecSet.GetHelpText*
- uid: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  id: HasOption(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: HasOption(String)
  nameWithType: IOptionSpecSet.HasOption(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: HasOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 123
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: bool HasOption(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function HasOption(name As String) As Boolean
  overload: BindOpen.Application.Options.IOptionSpecSet.HasOption*
- uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  id: RemoveOption(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  langs:
  - csharp
  - vb
  name: RemoveOption(String)
  nameWithType: IOptionSpecSet.RemoveOption(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: RemoveOption
    path: ../src/BindOpen.Runtime/Application/Options/Interfaces/IOptionSpecSet.cs
    startLine: 130
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\n\n"
  example: []
  syntax:
    content: IOptionSpecSet RemoveOption(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
      description: ''
    content.vb: Function RemoveOption(name As String) As IOptionSpecSet
  overload: BindOpen.Application.Options.IOptionSpecSet.RemoveOption*
references:
- uid: BindOpen.Application.Options
  commentId: N:BindOpen.Application.Options
  name: BindOpen.Application.Options
  nameWithType: BindOpen.Application.Options
  fullName: BindOpen.Application.Options
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Items
  commentId: P:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Items
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Items
  name: Items
  nameWithType: IDataItemSet<OptionSpec>.Items
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Items
  nameWithType.vb: IDataItemSet(Of OptionSpec).Items
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Items
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.Int32)
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: IDataItemSet<OptionSpec>.Item[Int32]
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Item[System.Int32]
  nameWithType.vb: IDataItemSet(Of OptionSpec).Item(Int32)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: IDataItemSet<OptionSpec>.Item
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: IDataItemSet(Of OptionSpec).Item
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.String)
  commentId: P:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Item(System.String)
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Item(System.String)
  name: Item[String]
  nameWithType: IDataItemSet<OptionSpec>.Item[String]
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Item[System.String]
  nameWithType.vb: IDataItemSet(Of OptionSpec).Item(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.String)
    name: Item
    nameWithType: IDataItemSet<OptionSpec>.Item
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.String)
    name: Item
    nameWithType: IDataItemSet(Of OptionSpec).Item
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Count
  commentId: P:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Count
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Count
  name: Count
  nameWithType: IDataItemSet<OptionSpec>.Count
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Count
  nameWithType.vb: IDataItemSet(Of OptionSpec).Count
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Count
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec[])
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec[])
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Add(`0[])
  name: Add(OptionSpec[])
  nameWithType: IDataItemSet<OptionSpec>.Add(OptionSpec[])
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Add(BindOpen.Application.Options.OptionSpec[])
  nameWithType.vb: IDataItemSet(Of OptionSpec).Add(OptionSpec())
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Add(BindOpen.Application.Options.OptionSpec())
  name.vb: Add(OptionSpec())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0[])
    name: Add
    nameWithType: IDataItemSet<OptionSpec>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0[])
    name: Add
    nameWithType: IDataItemSet(Of OptionSpec).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.ClearItems
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.ClearItems
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: IDataItemSet<OptionSpec>.ClearItems()
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.ClearItems()
  nameWithType.vb: IDataItemSet(Of OptionSpec).ClearItems()
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: IDataItemSet<OptionSpec>.ClearItems
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: IDataItemSet(Of OptionSpec).ClearItems
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(System.Collections.Generic.List{BindOpen.Application.Options.OptionSpec},BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(System.Collections.Generic.List{BindOpen.Application.Options.OptionSpec},BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(List<OptionSpec>, IDataItemSet<OptionSpec>)
  nameWithType: IDataItemSet<OptionSpec>.Add(List<OptionSpec>, IDataItemSet<OptionSpec>)
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Add(System.Collections.Generic.List<BindOpen.Application.Options.OptionSpec>, BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>)
  nameWithType.vb: IDataItemSet(Of OptionSpec).Add(List(Of OptionSpec), IDataItemSet(Of OptionSpec))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Add(System.Collections.Generic.List(Of BindOpen.Application.Options.OptionSpec), BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec))
  name.vb: Add(List(Of OptionSpec), IDataItemSet(Of OptionSpec))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet<OptionSpec>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet(Of OptionSpec).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec,BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Add(BindOpen.Application.Options.OptionSpec,BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(OptionSpec, IDataItemSet<OptionSpec>)
  nameWithType: IDataItemSet<OptionSpec>.Add(OptionSpec, IDataItemSet<OptionSpec>)
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Add(BindOpen.Application.Options.OptionSpec, BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>)
  nameWithType.vb: IDataItemSet(Of OptionSpec).Add(OptionSpec, IDataItemSet(Of OptionSpec))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Add(BindOpen.Application.Options.OptionSpec, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec))
  name.vb: Add(OptionSpec, IDataItemSet(Of OptionSpec))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet<OptionSpec>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet(Of OptionSpec).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec})
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<OptionSpec>)
  nameWithType: IDataItemSet<OptionSpec>.GetCommonItemKeys(IDataItemSet<OptionSpec>)
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>)
  nameWithType.vb: IDataItemSet(Of OptionSpec).GetCommonItemKeys(IDataItemSet(Of OptionSpec))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec))
  name.vb: GetCommonItemKeys(IDataItemSet(Of OptionSpec))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: IDataItemSet<OptionSpec>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: IDataItemSet(Of OptionSpec).GetCommonItemKeys
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.GetItem(System.String)
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
  name: GetItem(String)
  nameWithType: IDataItemSet<OptionSpec>.GetItem(String)
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.GetItem(System.String)
  nameWithType.vb: IDataItemSet(Of OptionSpec).GetItem(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet<OptionSpec>.GetItem
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet(Of OptionSpec).GetItem
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.HasItem(System.String)
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.HasItem(System.String)
  name: HasItem(String)
  nameWithType: IDataItemSet<OptionSpec>.HasItem(String)
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.HasItem(System.String)
  nameWithType.vb: IDataItemSet(Of OptionSpec).HasItem(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: IDataItemSet<OptionSpec>.HasItem
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: IDataItemSet(Of OptionSpec).HasItem
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.HasItems
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.HasItems
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.HasItems
  name: HasItems()
  nameWithType: IDataItemSet<OptionSpec>.HasItems()
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.HasItems()
  nameWithType.vb: IDataItemSet(Of OptionSpec).HasItems()
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItems
    name: HasItems
    nameWithType: IDataItemSet<OptionSpec>.HasItems
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItems
    name: HasItems
    nameWithType: IDataItemSet(Of OptionSpec).HasItems
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}.Remove(System.String[])
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  definition: BindOpen.Data.Items.IDataItemSet`1.Remove(System.String[])
  name: Remove(String[])
  nameWithType: IDataItemSet<OptionSpec>.Remove(String[])
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Remove(System.String[])
  nameWithType.vb: IDataItemSet(Of OptionSpec).Remove(String())
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: IDataItemSet<OptionSpec>.Remove
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: IDataItemSet(Of OptionSpec).Remove
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: IDataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: IDataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: IDataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: IDataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Clone``1
  commentId: M:BindOpen.Data.Items.IDataItem.Clone``1
  parent: BindOpen.Data.Items.IDataItem
  name: Clone<T>()
  nameWithType: IDataItem.Clone<T>()
  fullName: BindOpen.Data.Items.IDataItem.Clone<T>()
  nameWithType.vb: IDataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.IDataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone<T>
    nameWithType: IDataItem.Clone<T>
    fullName: BindOpen.Data.Items.IDataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone(Of T)
    nameWithType: IDataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIdentified.Id
  commentId: P:BindOpen.Data.Items.IIdentified.Id
  parent: BindOpen.Data.Items.IIdentified
  name: Id
  nameWithType: IIdentified.Id
  fullName: BindOpen.Data.Items.IIdentified.Id
- uid: BindOpen.Data.Items.IReferenced.Key
  commentId: M:BindOpen.Data.Items.IReferenced.Key
  parent: BindOpen.Data.Items.IReferenced
  name: Key()
  nameWithType: IReferenced.Key()
  fullName: BindOpen.Data.Items.IReferenced.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.INamed.Name
  commentId: P:BindOpen.Data.Items.INamed.Name
  parent: BindOpen.Data.Items.INamed
  name: Name
  nameWithType: INamed.Name
  fullName: BindOpen.Data.Items.INamed.Name
- uid: BindOpen.Data.Items.IIndexed.Index
  commentId: P:BindOpen.Data.Items.IIndexed.Index
  parent: BindOpen.Data.Items.IIndexed
  name: Index
  nameWithType: IIndexed.Index
  fullName: BindOpen.Data.Items.IIndexed.Index
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Items
  commentId: P:BindOpen.Data.Items.IDataItemSet`1.Items
  name: Items
  nameWithType: IDataItemSet<T>.Items
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Items
  nameWithType.vb: IDataItemSet(Of T).Items
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Items
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  commentId: T:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<OptionSpec>
  nameWithType: IDataItemSet<OptionSpec>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>
  nameWithType.vb: IDataItemSet(Of OptionSpec)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec)
  name.vb: IDataItemSet(Of OptionSpec)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.IDataItemSet`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: IDataItemSet<T>.Item[Int32]
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Item[System.Int32]
  nameWithType.vb: IDataItemSet(Of T).Item(Int32)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: IDataItemSet<T>.Item
    fullName: BindOpen.Data.Items.IDataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: IDataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.String)
  commentId: P:BindOpen.Data.Items.IDataItemSet`1.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: IDataItemSet<T>.Item[String]
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Item[System.String]
  nameWithType.vb: IDataItemSet(Of T).Item(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.String)
    name: Item
    nameWithType: IDataItemSet<T>.Item
    fullName: BindOpen.Data.Items.IDataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Item(System.String)
    name: Item
    nameWithType: IDataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Count
  commentId: P:BindOpen.Data.Items.IDataItemSet`1.Count
  name: Count
  nameWithType: IDataItemSet<T>.Count
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Count
  nameWithType.vb: IDataItemSet(Of T).Count
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Count
- uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0[])
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.Add(`0[])
  name: Add(T[])
  nameWithType: IDataItemSet<T>.Add(T[])
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Add(T[])
  nameWithType.vb: IDataItemSet(Of T).Add(T())
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Add(T())
  name.vb: Add(T())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0[])
    name: Add
    nameWithType: IDataItemSet<T>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0[])
    name: Add
    nameWithType: IDataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.ClearItems
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: IDataItemSet<T>.ClearItems()
  fullName: BindOpen.Data.Items.IDataItemSet<T>.ClearItems()
  nameWithType.vb: IDataItemSet(Of T).ClearItems()
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: IDataItemSet<T>.ClearItems
    fullName: BindOpen.Data.Items.IDataItemSet<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: IDataItemSet(Of T).ClearItems
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(List<T>, IDataItemSet<T>)
  nameWithType: IDataItemSet<T>.Add(List<T>, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Add(System.Collections.Generic.List<T>, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: IDataItemSet(Of T).Add(List(Of T), IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Add(System.Collections.Generic.List(Of T), BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(List(Of T), IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet<T>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(T, IDataItemSet<T>)
  nameWithType: IDataItemSet<T>.Add(T, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Add(T, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: IDataItemSet(Of T).Add(T, IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Add(T, BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(T, IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet<T>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<T>)
  nameWithType: IDataItemSet<T>.GetCommonItemKeys(IDataItemSet<T>)
  fullName: BindOpen.Data.Items.IDataItemSet<T>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: IDataItemSet(Of T).GetCommonItemKeys(IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: GetCommonItemKeys(IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: IDataItemSet<T>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.IDataItemSet<T>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: IDataItemSet(Of T).GetCommonItemKeys
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
  isExternal: true
  name: GetItem(String)
  nameWithType: IDataItemSet<T>.GetItem(String)
  fullName: BindOpen.Data.Items.IDataItemSet<T>.GetItem(System.String)
  nameWithType.vb: IDataItemSet(Of T).GetItem(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet<T>.GetItem
    fullName: BindOpen.Data.Items.IDataItemSet<T>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: IDataItemSet(Of T).GetItem
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.HasItem(System.String)
  isExternal: true
  name: HasItem(String)
  nameWithType: IDataItemSet<T>.HasItem(String)
  fullName: BindOpen.Data.Items.IDataItemSet<T>.HasItem(System.String)
  nameWithType.vb: IDataItemSet(Of T).HasItem(String)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: IDataItemSet<T>.HasItem
    fullName: BindOpen.Data.Items.IDataItemSet<T>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: IDataItemSet(Of T).HasItem
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.HasItems
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.HasItems
  name: HasItems()
  nameWithType: IDataItemSet<T>.HasItems()
  fullName: BindOpen.Data.Items.IDataItemSet<T>.HasItems()
  nameWithType.vb: IDataItemSet(Of T).HasItems()
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItems
    name: HasItems
    nameWithType: IDataItemSet<T>.HasItems
    fullName: BindOpen.Data.Items.IDataItemSet<T>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.HasItems
    name: HasItems
    nameWithType: IDataItemSet(Of T).HasItems
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.Remove(System.String[])
  isExternal: true
  name: Remove(String[])
  nameWithType: IDataItemSet<T>.Remove(String[])
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Remove(System.String[])
  nameWithType.vb: IDataItemSet(Of T).Remove(String())
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: IDataItemSet<T>.Remove
    fullName: BindOpen.Data.Items.IDataItemSet<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: IDataItemSet(Of T).Remove
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IIndexed
  commentId: T:BindOpen.Data.Items.IIndexed
  parent: BindOpen.Data.Items
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  commentId: T:BindOpen.Data.Items.IDataItemSet`1
  parent: BindOpen.Data.Items
  name: IDataItemSet<T>
  nameWithType: IDataItemSet<T>
  fullName: BindOpen.Data.Items.IDataItemSet<T>
  nameWithType.vb: IDataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T)
  name.vb: IDataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Application.Options.IOptionSpecSet.Condition*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.Condition
  name: Condition
  nameWithType: IOptionSpecSet.Condition
  fullName: BindOpen.Application.Options.IOptionSpecSet.Condition
- uid: BindOpen.Data.Conditions.Condition
  commentId: T:BindOpen.Data.Conditions.Condition
  parent: BindOpen.Data.Conditions
  name: Condition
  nameWithType: Condition
  fullName: BindOpen.Data.Conditions.Condition
- uid: BindOpen.Data.Conditions
  commentId: N:BindOpen.Data.Conditions
  name: BindOpen.Data.Conditions
  nameWithType: BindOpen.Data.Conditions
  fullName: BindOpen.Data.Conditions
- uid: BindOpen.Application.Options.IOptionSpecSet.SubSets*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.SubSets
  name: SubSets
  nameWithType: IOptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.IOptionSpecSet.SubSets
- uid: System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
  commentId: T:System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<OptionSpecSet>
  nameWithType: List<OptionSpecSet>
  fullName: System.Collections.Generic.List<BindOpen.Application.Options.OptionSpecSet>
  nameWithType.vb: List(Of OptionSpecSet)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Application.Options.OptionSpecSet)
  name.vb: List(Of OptionSpecSet)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpecSet
    name: OptionSpecSet
    nameWithType: OptionSpecSet
    fullName: BindOpen.Application.Options.OptionSpecSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpecSet
    name: OptionSpecSet
    nameWithType: OptionSpecSet
    fullName: BindOpen.Application.Options.OptionSpecSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.AddOption
  name: AddOption
  nameWithType: IOptionSpecSet.AddOption
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Application.Options.OptionNameKind
  commentId: T:BindOpen.Application.Options.OptionNameKind
  parent: BindOpen.Application.Options
  name: OptionNameKind
  nameWithType: OptionNameKind
  fullName: BindOpen.Application.Options.OptionNameKind
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Options.IOptionSpecSet
  commentId: T:BindOpen.Application.Options.IOptionSpecSet
  parent: BindOpen.Application.Options
  name: IOptionSpecSet
  nameWithType: IOptionSpecSet
  fullName: BindOpen.Application.Options.IOptionSpecSet
- uid: BindOpen.Data.Common.RequirementLevel
  commentId: T:BindOpen.Data.Common.RequirementLevel
  parent: BindOpen.Data.Common
  name: RequirementLevel
  nameWithType: RequirementLevel
  fullName: BindOpen.Data.Common.RequirementLevel
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.AddSubSet
  name: AddSubSet
  nameWithType: IOptionSpecSet.AddSubSet
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
- uid: BindOpen.Data.Conditions.ICondition
  commentId: T:BindOpen.Data.Conditions.ICondition
  parent: BindOpen.Data.Conditions
  name: ICondition
  nameWithType: ICondition
  fullName: BindOpen.Data.Conditions.ICondition
- uid: BindOpen.Application.Options.IOptionSpec[]
  isExternal: true
  name: IOptionSpec[]
  nameWithType: IOptionSpec[]
  fullName: BindOpen.Application.Options.IOptionSpec[]
  nameWithType.vb: IOptionSpec()
  fullName.vb: BindOpen.Application.Options.IOptionSpec()
  name.vb: IOptionSpec()
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  name: ClearOptions
  nameWithType: IOptionSpecSet.ClearOptions
  fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
- uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.GetHelpText
  name: GetHelpText
  nameWithType: IOptionSpecSet.GetHelpText
  fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Options.IOptionSpecSet.HasOption*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.HasOption
  name: HasOption
  nameWithType: IOptionSpecSet.HasOption
  fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption*
  commentId: Overload:BindOpen.Application.Options.IOptionSpecSet.RemoveOption
  name: RemoveOption
  nameWithType: IOptionSpecSet.RemoveOption
  fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption
shouldSkipMarkup: true
