### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Options.OptionSpecSet
  commentId: T:BindOpen.Application.Options.OptionSpecSet
  id: OptionSpecSet
  parent: BindOpen.Application.Options
  children:
  - BindOpen.Application.Options.OptionSpecSet.#ctor
  - BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  - BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String,System.String)
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  - BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  - BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  - BindOpen.Application.Options.OptionSpecSet.ClearOptions
  - BindOpen.Application.Options.OptionSpecSet.Condition
  - BindOpen.Application.Options.OptionSpecSet.Description
  - BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  - BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String,System.String)
  - BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  - BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  - BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  - BindOpen.Application.Options.OptionSpecSet.Index
  - BindOpen.Application.Options.OptionSpecSet.Name
  - BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  - BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  - BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String,System.String)
  - BindOpen.Application.Options.OptionSpecSet.SubSets
  langs:
  - csharp
  - vb
  name: OptionSpecSet
  nameWithType: OptionSpecSet
  fullName: BindOpen.Application.Options.OptionSpecSet
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThis class represents a option specification set.\n"
  syntax:
    content: 'public class OptionSpecSet : DataItemSet<OptionSpec>, IOptionSpecSet, IDataItemSet<OptionSpec>, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, IIndexed, IGloballyDescribed'
    content.vb: >-
      Public Class OptionSpecSet
          Inherits DataItemSet(Of OptionSpec)
          Implements IOptionSpecSet, IDataItemSet(Of OptionSpec), IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed, IIndexed, IGloballyDescribed
  inheritance:
  - System.Object
  implements:
  - BindOpen.Application.Options.IOptionSpecSet
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IIndexed
  - BindOpen.Data.Items.IGloballyDescribed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor
  commentId: M:BindOpen.Application.Options.OptionSpecSet.#ctor
  id: '#ctor'
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: OptionSpecSet()
  nameWithType: OptionSpecSet.OptionSpecSet()
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet()
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  syntax:
    content: public OptionSpecSet()
    content.vb: Public Sub New
  overload: BindOpen.Application.Options.OptionSpecSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Application.Options.IOptionSpec[])
  id: '#ctor(BindOpen.Application.Options.IOptionSpec[])'
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: OptionSpecSet(IOptionSpec[])
  nameWithType: OptionSpecSet.OptionSpecSet(IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Application.Options.IOptionSpec[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  syntax:
    content: public OptionSpecSet(params IOptionSpec[] optionSpecifications)
    parameters:
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    content.vb: Public Sub New(ParamArray optionSpecifications As IOptionSpec())
  overload: BindOpen.Application.Options.OptionSpecSet.#ctor*
  nameWithType.vb: OptionSpecSet.OptionSpecSet(IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Application.Options.IOptionSpec())
  name.vb: OptionSpecSet(IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  id: '#ctor(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])'
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: OptionSpecSet(ICondition, IOptionSpec[])
  nameWithType: OptionSpecSet.OptionSpecSet(ICondition, IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec[])
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  syntax:
    content: public OptionSpecSet(ICondition condition, params IOptionSpec[] optionSpecifications)
    parameters:
    - id: condition
      type: BindOpen.Data.Conditions.ICondition
      description: The condition to consider.
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    content.vb: Public Sub New(condition As ICondition, ParamArray optionSpecifications As IOptionSpec())
  overload: BindOpen.Application.Options.OptionSpecSet.#ctor*
  nameWithType.vb: OptionSpecSet.OptionSpecSet(ICondition, IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec())
  name.vb: OptionSpecSet(ICondition, IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  id: GetHelpText(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: GetHelpText(String)
  nameWithType: OptionSpecSet.GetHelpText(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.GetHelpText(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nGets the help text.\n"
  syntax:
    content: public string GetHelpText(string uiCulture = "*")
    parameters:
    - id: uiCulture
      type: System.String
      description: The UI culture to consider.
    return:
      type: System.String
      description: Returns the help text.
    content.vb: Public Function GetHelpText(uiCulture As String = "*") As String
  overload: BindOpen.Application.Options.OptionSpecSet.GetHelpText*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.ClearOptions
  commentId: M:BindOpen.Application.Options.OptionSpecSet.ClearOptions
  id: ClearOptions
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: ClearOptions()
  nameWithType: OptionSpecSet.ClearOptions()
  fullName: BindOpen.Application.Options.OptionSpecSet.ClearOptions()
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nClears the options.\n"
  syntax:
    content: public void ClearOptions()
    content.vb: Public Sub ClearOptions
  overload: BindOpen.Application.Options.OptionSpecSet.ClearOptions*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  id: AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(IOptionSpecSet)
  nameWithType: OptionSpecSet.AddSubSet(IOptionSpecSet)
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds the specified set of option specifications.\n"
  syntax:
    content: public IOptionSpecSet AddSubSet(IOptionSpecSet subSet)
    parameters:
    - id: subSet
      type: BindOpen.Application.Options.IOptionSpecSet
      description: The sub set to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddSubSet(subSet As IOptionSpecSet) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  id: AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(IOptionSpec[])
  nameWithType: OptionSpecSet.AddSubSet(IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new set of option specifications.\n"
  syntax:
    content: public IOptionSpecSet AddSubSet(params IOptionSpec[] optionSpecifications)
    parameters:
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddSubSet(ParamArray optionSpecifications As IOptionSpec()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: OptionSpecSet.AddSubSet(IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  id: AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddSubSet(ICondition, IOptionSpec[])
  nameWithType: OptionSpecSet.AddSubSet(ICondition, IOptionSpec[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nInstantiates a new instance of the OptionSpecSet class.\n"
  syntax:
    content: public IOptionSpecSet AddSubSet(ICondition condition, params IOptionSpec[] optionSpecifications)
    parameters:
    - id: condition
      type: BindOpen.Data.Conditions.ICondition
      description: The condition to consider.
    - id: optionSpecifications
      type: BindOpen.Application.Options.IOptionSpec[]
      description: The option specifications to consider.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddSubSet(condition As ICondition, ParamArray optionSpecifications As IOptionSpec()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: OptionSpecSet.AddSubSet(ICondition, IOptionSpec())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(ICondition, IOptionSpec())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  id: AddOption(System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(String[])
  nameWithType: OptionSpecSet.AddOption(String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  syntax:
    content: public IOptionSpecSet AddOption(params string[] aliases)
    parameters:
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(System.String())
  name.vb: AddOption(String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  syntax:
    content: public IOptionSpecSet AddOption(OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  id: AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(RequirementLevel, String[])
  nameWithType: OptionSpecSet.AddOption(RequirementLevel, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  syntax:
    content: public IOptionSpecSet AddOption(RequirementLevel requirementLevel, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to add.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(requirementLevel As RequirementLevel, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(RequirementLevel, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String())
  name.vb: AddOption(RequirementLevel, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(DataValueType, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(DataValueType, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  syntax:
    content: public IOptionSpecSet AddOption(DataValueType dataValueType, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The value type to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(dataValueType As DataValueType, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(DataValueType, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  syntax:
    content: public IOptionSpecSet AddOption(RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to add.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  syntax:
    content: public IOptionSpecSet AddOption(DataValueType dataValueType, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: dataValueType
      type: BindOpen.Data.Common.DataValueType
      description: The value type to consider.
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the entry to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(dataValueType As DataValueType, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  id: AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddOption(Type, RequirementLevel, OptionNameKind, String[])
  nameWithType: OptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds a new option specification.\n"
  syntax:
    content: public IOptionSpecSet AddOption(Type type, RequirementLevel requirementLevel, OptionNameKind nameKind, params string[] aliases)
    parameters:
    - id: type
      type: System.Type
      description: The type to consider.
    - id: requirementLevel
      type: BindOpen.Data.Common.RequirementLevel
      description: The requirement level of the option to consider.
    - id: nameKind
      type: BindOpen.Application.Options.OptionNameKind
      description: The name kind to consider.
    - id: aliases
      type: System.String[]
      description: Aliases of the option to add.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function AddOption(type As Type, requirementLevel As RequirementLevel, nameKind As OptionNameKind, ParamArray aliases As String()) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.AddOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  nameWithType.vb: OptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Options.OptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(Type, RequirementLevel, OptionNameKind, String())
- uid: BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  id: RemoveOption(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: RemoveOption(String)
  nameWithType: OptionSpecSet.RemoveOption(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.RemoveOption(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nDeletes the specified option.\n"
  syntax:
    content: public IOptionSpecSet RemoveOption(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the statement entry to remove.
    return:
      type: BindOpen.Application.Options.IOptionSpecSet
    content.vb: Public Function RemoveOption(name As String) As IOptionSpecSet
  overload: BindOpen.Application.Options.OptionSpecSet.RemoveOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  id: HasOption(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: HasOption(String)
  nameWithType: OptionSpecSet.HasOption(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.HasOption(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nIndicates whether this instance has the specified option.\n"
  syntax:
    content: public bool HasOption(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the option to consider.
    return:
      type: System.Boolean
    content.vb: Public Function HasOption(name As String) As Boolean
  overload: BindOpen.Application.Options.OptionSpecSet.HasOption*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  id: GetItem(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: GetItem(String)
  nameWithType: OptionSpecSet.GetItem(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.GetItem(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nReturns the item with the specified name.\n"
  syntax:
    content: public override OptionSpec GetItem(string key)
    parameters:
    - id: key
      type: System.String
      description: The name of the alias of the item to return.
    return:
      type: BindOpen.Application.Options.OptionSpec
      description: Returns the item with the specified name.
    content.vb: Public Overrides Function GetItem(key As String) As OptionSpec
  overload: BindOpen.Application.Options.OptionSpecSet.GetItem*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  id: AddDescription(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddDescription(String)
  nameWithType: OptionSpecSet.AddDescription(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds the title text.\n"
  syntax:
    content: public void AddDescription(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub AddDescription(text As String)
  overload: BindOpen.Application.Options.OptionSpecSet.AddDescription*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String,System.String)
  id: AddDescription(System.String,System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: AddDescription(String, String)
  nameWithType: OptionSpecSet.AddDescription(String, String)
  fullName: BindOpen.Application.Options.OptionSpecSet.AddDescription(System.String, System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nAdds the title text.\n"
  syntax:
    content: public void AddDescription(string key, string text)
    parameters:
    - id: key
      type: System.String
      description: The key to consider.
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub AddDescription(key As String, text As String)
  overload: BindOpen.Application.Options.OptionSpecSet.AddDescription*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  id: SetDescription(System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: SetDescription(String)
  nameWithType: OptionSpecSet.SetDescription(String)
  fullName: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nSets the title text.\n"
  syntax:
    content: public void SetDescription(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub SetDescription(text As String)
  overload: BindOpen.Application.Options.OptionSpecSet.SetDescription*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String,System.String)
  id: SetDescription(System.String,System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: SetDescription(String, String)
  nameWithType: OptionSpecSet.SetDescription(String, String)
  fullName: BindOpen.Application.Options.OptionSpecSet.SetDescription(System.String, System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nSets the title text.\n"
  syntax:
    content: public void SetDescription(string key = "*", string text = "*")
    parameters:
    - id: key
      type: System.String
      description: The key to consider.
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub SetDescription(key As String = "*", text As String = "*")
  overload: BindOpen.Application.Options.OptionSpecSet.SetDescription*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String,System.String)
  id: GetDescription(System.String,System.String)
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: GetDescription(String, String)
  nameWithType: OptionSpecSet.GetDescription(String, String)
  fullName: BindOpen.Application.Options.OptionSpecSet.GetDescription(System.String, System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nReturns the description label.\n"
  syntax:
    content: public virtual string GetDescription(string variantName = "*", string defaultVariantName = "*")
    parameters:
    - id: variantName
      type: System.String
      description: The variant variant name to consider.
    - id: defaultVariantName
      type: System.String
      description: The default variant name to consider.
    return:
      type: System.String
    content.vb: Public Overridable Function GetDescription(variantName As String = "*", defaultVariantName As String = "*") As String
  overload: BindOpen.Application.Options.OptionSpecSet.GetDescription*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Application.Options.OptionSpecSet.Description
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Description
  id: Description
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: OptionSpecSet.Description
  fullName: BindOpen.Application.Options.OptionSpecSet.Description
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nDescription of this instance.\n"
  syntax:
    content: public DictionaryDataItem Description { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DictionaryDataItem
    content.vb: Public Property Description As DictionaryDataItem
  overload: BindOpen.Application.Options.OptionSpecSet.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  commentId: P:BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  id: DescriptionSpecified
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: DescriptionSpecified
  nameWithType: OptionSpecSet.DescriptionSpecified
  fullName: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nSpecification of the Description property of this instance.\n"
  syntax:
    content: public bool DescriptionSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DescriptionSpecified As Boolean
  overload: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Options.OptionSpecSet.Name
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Name
  id: Name
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: OptionSpecSet.Name
  fullName: BindOpen.Application.Options.OptionSpecSet.Name
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe name of this instance.\n"
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: BindOpen.Application.Options.OptionSpecSet.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.Index
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Index
  id: Index
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: OptionSpecSet.Index
  fullName: BindOpen.Application.Options.OptionSpecSet.Index
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe index of this instance.\n"
  syntax:
    content: public int Index { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Index As Integer
  overload: BindOpen.Application.Options.OptionSpecSet.Index*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.Condition
  commentId: P:BindOpen.Application.Options.OptionSpecSet.Condition
  id: Condition
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: Condition
  nameWithType: OptionSpecSet.Condition
  fullName: BindOpen.Application.Options.OptionSpecSet.Condition
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe condition of this instance.\n"
  syntax:
    content: public Condition Condition { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Conditions.Condition
    content.vb: Public Property Condition As Condition
  overload: BindOpen.Application.Options.OptionSpecSet.Condition*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.Condition
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Options.OptionSpecSet.SubSets
  commentId: P:BindOpen.Application.Options.OptionSpecSet.SubSets
  id: SubSets
  parent: BindOpen.Application.Options.OptionSpecSet
  langs:
  - csharp
  - vb
  name: SubSets
  nameWithType: OptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.OptionSpecSet.SubSets
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Options
  summary: "\nThe sub sets of this instance.\n"
  syntax:
    content: public List<OptionSpecSet> SubSets { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
    content.vb: Public Property SubSets As List(Of OptionSpecSet)
  overload: BindOpen.Application.Options.OptionSpecSet.SubSets*
  implements:
  - BindOpen.Application.Options.IOptionSpecSet.SubSets
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Application.Options
  commentId: N:BindOpen.Application.Options
  isExternal: true
  name: BindOpen.Application.Options
  nameWithType: BindOpen.Application.Options
  fullName: BindOpen.Application.Options
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Application.Options.IOptionSpecSet
  commentId: T:BindOpen.Application.Options.IOptionSpecSet
  parent: BindOpen.Application.Options
  isExternal: true
  name: IOptionSpecSet
  nameWithType: IOptionSpecSet
  fullName: BindOpen.Application.Options.IOptionSpecSet
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}
  commentId: '!:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Options.OptionSpec}'
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<OptionSpec>
  nameWithType: IDataItemSet<OptionSpec>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Options.OptionSpec>
  nameWithType.vb: IDataItemSet(Of OptionSpec)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Options.OptionSpec)
  name.vb: IDataItemSet(Of OptionSpec)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpec
    name: OptionSpec
    nameWithType: OptionSpec
    fullName: BindOpen.Application.Options.OptionSpec
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IIndexed
  isExternal: true
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items.IDataItemSet`1
  isExternal: true
  name: IDataItemSet<>
  nameWithType: IDataItemSet<>
  fullName: BindOpen.Data.Items.IDataItemSet<>
  nameWithType.vb: IDataItemSet(Of )
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of )
  name.vb: IDataItemSet(Of )
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.#ctor*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.#ctor
  isExternal: true
  name: OptionSpecSet
  nameWithType: OptionSpecSet.OptionSpecSet
  fullName: BindOpen.Application.Options.OptionSpecSet.OptionSpecSet
- uid: BindOpen.Application.Options.IOptionSpec[]
  isExternal: true
  name: IOptionSpec[]
  nameWithType: IOptionSpec[]
  fullName: BindOpen.Application.Options.IOptionSpec[]
  nameWithType.vb: IOptionSpec()
  fullName.vb: BindOpen.Application.Options.IOptionSpec()
  name.vb: IOptionSpec()
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Conditions.ICondition
  isExternal: true
  name: ICondition
  nameWithType: ICondition
  fullName: BindOpen.Data.Conditions.ICondition
- uid: BindOpen.Application.Options.OptionSpecSet.GetHelpText*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.GetHelpText
  isExternal: true
  name: GetHelpText
  nameWithType: OptionSpecSet.GetHelpText
  fullName: BindOpen.Application.Options.OptionSpecSet.GetHelpText
- uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: GetHelpText(String)
  nameWithType: IOptionSpecSet.GetHelpText(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
    name: GetHelpText
    nameWithType: IOptionSpecSet.GetHelpText
    fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.GetHelpText(System.String)
    name: GetHelpText
    nameWithType: IOptionSpecSet.GetHelpText
    fullName: BindOpen.Application.Options.IOptionSpecSet.GetHelpText
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Options.OptionSpecSet.ClearOptions*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.ClearOptions
  isExternal: true
  name: ClearOptions
  nameWithType: OptionSpecSet.ClearOptions
  fullName: BindOpen.Application.Options.OptionSpecSet.ClearOptions
- uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.ClearOptions
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: ClearOptions()
  nameWithType: IOptionSpecSet.ClearOptions()
  fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions()
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
    name: ClearOptions
    nameWithType: IOptionSpecSet.ClearOptions
    fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
    name: ClearOptions
    nameWithType: IOptionSpecSet.ClearOptions
    fullName: BindOpen.Application.Options.IOptionSpecSet.ClearOptions
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.AddSubSet*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.AddSubSet
  isExternal: true
  name: AddSubSet
  nameWithType: OptionSpecSet.AddSubSet
  fullName: BindOpen.Application.Options.OptionSpecSet.AddSubSet
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddSubSet(IOptionSpecSet)
  nameWithType: IOptionSpecSet.AddSubSet(IOptionSpecSet)
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpecSet)
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddSubSet(IOptionSpec[])
  nameWithType: IOptionSpecSet.AddSubSet(IOptionSpec[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: IOptionSpecSet.AddSubSet(IOptionSpec())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(IOptionSpec())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddSubSet(ICondition, IOptionSpec[])
  nameWithType: IOptionSpecSet.AddSubSet(ICondition, IOptionSpec[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec[])
  nameWithType.vb: IOptionSpecSet.AddSubSet(ICondition, IOptionSpec())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition, BindOpen.Application.Options.IOptionSpec())
  name.vb: AddSubSet(ICondition, IOptionSpec())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: BindOpen.Data.Conditions.ICondition
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddSubSet(BindOpen.Data.Conditions.ICondition,BindOpen.Application.Options.IOptionSpec[])
    name: AddSubSet
    nameWithType: IOptionSpecSet.AddSubSet
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddSubSet
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Conditions.ICondition
    name: ICondition
    nameWithType: ICondition
    fullName: BindOpen.Data.Conditions.ICondition
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.IOptionSpec
    name: IOptionSpec
    nameWithType: IOptionSpec
    fullName: BindOpen.Application.Options.IOptionSpec
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.AddOption*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.AddOption
  isExternal: true
  name: AddOption
  nameWithType: OptionSpecSet.AddOption
  fullName: BindOpen.Application.Options.OptionSpecSet.AddOption
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(String[])
  nameWithType: IOptionSpecSet.AddOption(String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String())
  name.vb: AddOption(String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionNameKind
  commentId: T:BindOpen.Application.Options.OptionNameKind
  parent: BindOpen.Application.Options
  isExternal: true
  name: OptionNameKind
  nameWithType: OptionNameKind
  fullName: BindOpen.Application.Options.OptionNameKind
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(RequirementLevel, String[])
  nameWithType: IOptionSpecSet.AddOption(RequirementLevel, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(RequirementLevel, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, System.String())
  name.vb: AddOption(RequirementLevel, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.RequirementLevel
  isExternal: true
  name: RequirementLevel
  nameWithType: RequirementLevel
  fullName: BindOpen.Data.Common.RequirementLevel
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(DataValueType, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(DataValueType, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(DataValueType, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueType
  isExternal: true
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(RequirementLevel, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(DataValueType, RequirementLevel, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(BindOpen.Data.Common.DataValueType,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: AddOption(Type, RequirementLevel, OptionNameKind, String[])
  nameWithType: IOptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String[])
  fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String[])
  nameWithType.vb: IOptionSpecSet.AddOption(Type, RequirementLevel, OptionNameKind, String())
  fullName.vb: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type, BindOpen.Data.Common.RequirementLevel, BindOpen.Application.Options.OptionNameKind, System.String())
  name.vb: AddOption(Type, RequirementLevel, OptionNameKind, String())
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.AddOption(System.Type,BindOpen.Data.Common.RequirementLevel,BindOpen.Application.Options.OptionNameKind,System.String[])
    name: AddOption
    nameWithType: IOptionSpecSet.AddOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.AddOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.RequirementLevel
    name: RequirementLevel
    nameWithType: RequirementLevel
    fullName: BindOpen.Data.Common.RequirementLevel
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.OptionNameKind
    name: OptionNameKind
    nameWithType: OptionNameKind
    fullName: BindOpen.Application.Options.OptionNameKind
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: BindOpen.Application.Options.OptionSpecSet.RemoveOption*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.RemoveOption
  isExternal: true
  name: RemoveOption
  nameWithType: OptionSpecSet.RemoveOption
  fullName: BindOpen.Application.Options.OptionSpecSet.RemoveOption
- uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: RemoveOption(String)
  nameWithType: IOptionSpecSet.RemoveOption(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
    name: RemoveOption
    nameWithType: IOptionSpecSet.RemoveOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.RemoveOption(System.String)
    name: RemoveOption
    nameWithType: IOptionSpecSet.RemoveOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.RemoveOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Options.OptionSpecSet.HasOption*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.HasOption
  isExternal: true
  name: HasOption
  nameWithType: OptionSpecSet.HasOption
  fullName: BindOpen.Application.Options.OptionSpecSet.HasOption
- uid: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  commentId: M:BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: HasOption(String)
  nameWithType: IOptionSpecSet.HasOption(String)
  fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
    name: HasOption
    nameWithType: IOptionSpecSet.HasOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Options.IOptionSpecSet.HasOption(System.String)
    name: HasOption
    nameWithType: IOptionSpecSet.HasOption
    fullName: BindOpen.Application.Options.IOptionSpecSet.HasOption
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Options.OptionSpecSet.GetItem*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.GetItem
  isExternal: true
  name: GetItem
  nameWithType: OptionSpecSet.GetItem
  fullName: BindOpen.Application.Options.OptionSpecSet.GetItem
- uid: BindOpen.Application.Options.OptionSpec
  commentId: T:BindOpen.Application.Options.OptionSpec
  parent: BindOpen.Application.Options
  isExternal: true
  name: OptionSpec
  nameWithType: OptionSpec
  fullName: BindOpen.Application.Options.OptionSpec
- uid: BindOpen.Application.Options.OptionSpecSet.AddDescription*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.AddDescription
  isExternal: true
  name: AddDescription
  nameWithType: OptionSpecSet.AddDescription
  fullName: BindOpen.Application.Options.OptionSpecSet.AddDescription
- uid: BindOpen.Application.Options.OptionSpecSet.SetDescription*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.SetDescription
  isExternal: true
  name: SetDescription
  nameWithType: OptionSpecSet.SetDescription
  fullName: BindOpen.Application.Options.OptionSpecSet.SetDescription
- uid: BindOpen.Application.Options.OptionSpecSet.GetDescription*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.GetDescription
  isExternal: true
  name: GetDescription
  nameWithType: OptionSpecSet.GetDescription
  fullName: BindOpen.Application.Options.OptionSpecSet.GetDescription
- uid: BindOpen.Application.Options.OptionSpecSet.Description*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Description
  isExternal: true
  name: Description
  nameWithType: OptionSpecSet.Description
  fullName: BindOpen.Application.Options.OptionSpecSet.Description
- uid: BindOpen.Data.Items.DictionaryDataItem
  isExternal: true
  name: DictionaryDataItem
  nameWithType: DictionaryDataItem
  fullName: BindOpen.Data.Items.DictionaryDataItem
- uid: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
  isExternal: true
  name: DescriptionSpecified
  nameWithType: OptionSpecSet.DescriptionSpecified
  fullName: BindOpen.Application.Options.OptionSpecSet.DescriptionSpecified
- uid: BindOpen.Application.Options.OptionSpecSet.Name*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Name
  isExternal: true
  name: Name
  nameWithType: OptionSpecSet.Name
  fullName: BindOpen.Application.Options.OptionSpecSet.Name
- uid: BindOpen.Application.Options.OptionSpecSet.Index*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Index
  isExternal: true
  name: Index
  nameWithType: OptionSpecSet.Index
  fullName: BindOpen.Application.Options.OptionSpecSet.Index
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Application.Options.OptionSpecSet.Condition*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.Condition
  isExternal: true
  name: Condition
  nameWithType: OptionSpecSet.Condition
  fullName: BindOpen.Application.Options.OptionSpecSet.Condition
- uid: BindOpen.Application.Options.IOptionSpecSet.Condition
  commentId: P:BindOpen.Application.Options.IOptionSpecSet.Condition
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: Condition
  nameWithType: IOptionSpecSet.Condition
  fullName: BindOpen.Application.Options.IOptionSpecSet.Condition
- uid: BindOpen.Data.Conditions.Condition
  isExternal: true
  name: Condition
  nameWithType: Condition
  fullName: BindOpen.Data.Conditions.Condition
- uid: BindOpen.Application.Options.OptionSpecSet.SubSets*
  commentId: Overload:BindOpen.Application.Options.OptionSpecSet.SubSets
  isExternal: true
  name: SubSets
  nameWithType: OptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.OptionSpecSet.SubSets
- uid: BindOpen.Application.Options.IOptionSpecSet.SubSets
  commentId: P:BindOpen.Application.Options.IOptionSpecSet.SubSets
  parent: BindOpen.Application.Options.IOptionSpecSet
  isExternal: true
  name: SubSets
  nameWithType: IOptionSpecSet.SubSets
  fullName: BindOpen.Application.Options.IOptionSpecSet.SubSets
- uid: System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}
  commentId: '!:System.Collections.Generic.List{BindOpen.Application.Options.OptionSpecSet}'
  definition: System.Collections.Generic.List`1
  name: List<OptionSpecSet>
  nameWithType: List<OptionSpecSet>
  fullName: System.Collections.Generic.List<BindOpen.Application.Options.OptionSpecSet>
  nameWithType.vb: List(Of OptionSpecSet)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Application.Options.OptionSpecSet)
  name.vb: List(Of OptionSpecSet)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Options.OptionSpecSet
    name: OptionSpecSet
    nameWithType: OptionSpecSet
    fullName: BindOpen.Application.Options.OptionSpecSet
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Options.OptionSpecSet
    name: OptionSpecSet
    nameWithType: OptionSpecSet
    fullName: BindOpen.Application.Options.OptionSpecSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
