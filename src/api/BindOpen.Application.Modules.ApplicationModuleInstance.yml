### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Modules.ApplicationModuleInstance
  commentId: T:BindOpen.Application.Modules.ApplicationModuleInstance
  id: ApplicationModuleInstance
  parent: BindOpen.Application.Modules
  children:
  - BindOpen.Application.Modules.ApplicationModuleInstance.#ctor(BindOpen.Application.Modules.IAppModule,System.String)
  - BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri
  - BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel
  - BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath
  - BindOpen.Application.Modules.ApplicationModuleInstance.Dispose(System.Boolean)
  - BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  - BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName(System.String)
  - BindOpen.Application.Modules.ApplicationModuleInstance.Indexation
  - BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal
  - BindOpen.Application.Modules.ApplicationModuleInstance.Kind
  - BindOpen.Application.Modules.ApplicationModuleInstance.Module
  - BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName
  - BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet
  - BindOpen.Application.Modules.ApplicationModuleInstance.Sections
  - BindOpen.Application.Modules.ApplicationModuleInstance.SubKind
  - BindOpen.Application.Modules.ApplicationModuleInstance.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Application.Modules.ApplicationModuleInstance.Uri
  langs:
  - csharp
  - vb
  name: ApplicationModuleInstance
  nameWithType: ApplicationModuleInstance
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThis class represents an application module instance accessible by a visitor.\n"
  syntax:
    content: 'public class ApplicationModuleInstance : DescribedDataItem, IApplicationModuleInstance, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed'
    content.vb: >-
      Public Class ApplicationModuleInstance
          Inherits DescribedDataItem
          Implements IApplicationModuleInstance, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed
  inheritance:
  - System.Object
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.#ctor(BindOpen.Application.Modules.IAppModule,System.String)
  commentId: M:BindOpen.Application.Modules.ApplicationModuleInstance.#ctor(BindOpen.Application.Modules.IAppModule,System.String)
  id: '#ctor(BindOpen.Application.Modules.IAppModule,System.String)'
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: ApplicationModuleInstance(IAppModule, String)
  nameWithType: ApplicationModuleInstance.ApplicationModuleInstance(IAppModule, String)
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationModuleInstance(BindOpen.Application.Modules.IAppModule, System.String)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nInitializes a new instance of ApplicationModuleInstance class.\n"
  syntax:
    content: public ApplicationModuleInstance(IAppModule module, string uri)
    parameters:
    - id: module
      type: BindOpen.Application.Modules.IAppModule
      description: Module to consider.
    - id: uri
      type: System.String
      description: URI to consider.
    content.vb: Public Sub New(module As IAppModule, uri As String)
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Application.Modules.ApplicationModuleInstance.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: ApplicationModuleInstance.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nUpdates this instance.\n"
  remarks: Put reference collections as null if you do not want to repair this instance.
  syntax:
    content: >-
      public override IBdoLog Update<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Log of the operation.
    content.vb: Public Overrides Function Update(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.Update*
  nameWithType.vb: ApplicationModuleInstance.Update(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Application.Modules.ApplicationModuleInstance.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  commentId: M:BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  id: GetSectionWithCompleteName(System.String)
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: GetSectionWithCompleteName(String)
  nameWithType: ApplicationModuleInstance.GetSectionWithCompleteName(String)
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nReturns the application section of this instance with the specified complete name.\n"
  syntax:
    content: public IAppSection GetSectionWithCompleteName(string completeName)
    parameters:
    - id: completeName
      type: System.String
    return:
      type: BindOpen.Application.Modules.IAppSection
      description: The application section of this instance with the specified complete name.
    content.vb: Public Function GetSectionWithCompleteName(completeName As String) As IAppSection
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName(System.String)
  commentId: M:BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName(System.String)
  id: GetSectionWithName(System.String)
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: GetSectionWithName(String)
  nameWithType: ApplicationModuleInstance.GetSectionWithName(String)
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nReturns the application section of this instance with the specified name.\n"
  syntax:
    content: public IAppSection GetSectionWithName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: BindOpen.Application.Modules.IAppSection
      description: The application section of this instance with the specified name.
    content.vb: Public Function GetSectionWithName(name As String) As IAppSection
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Dispose(System.Boolean)
  commentId: M:BindOpen.Application.Modules.ApplicationModuleInstance.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: ApplicationModuleInstance.Dispose(Boolean)
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Dispose(System.Boolean)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nDisposes this instance. \n"
  syntax:
    content: protected override void Dispose(bool isDisposing)
    parameters:
    - id: isDisposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(isDisposing As Boolean)
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Module
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.Module
  id: Module
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: ApplicationModuleInstance.Module
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Module
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe module of this instance.\n"
  syntax:
    content: public IAppModule Module { get; set; }
    parameters: []
    return:
      type: BindOpen.Application.Modules.IAppModule
    content.vb: Public Property Module As IAppModule
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.Module*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.Module
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName
  id: ModuleName
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: ModuleName
  nameWithType: ApplicationModuleInstance.ModuleName
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe name of this instance.\n"
  syntax:
    content: public string ModuleName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ModuleName As String
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.ModuleName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Uri
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.Uri
  id: Uri
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: ApplicationModuleInstance.Uri
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Uri
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe URI of this instance.\n"
  syntax:
    content: public string Uri { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Uri As String
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.Uri*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.Uri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri
  id: AbsoluteUri
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: AbsoluteUri
  nameWithType: ApplicationModuleInstance.AbsoluteUri
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe URI of this instance.\n"
  syntax:
    content: public string AbsoluteUri { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AbsoluteUri As String
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.AbsoluteUri
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath
  id: ApplicationExecutionPath
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: ApplicationExecutionPath
  nameWithType: ApplicationModuleInstance.ApplicationExecutionPath
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe application execution path of this instance.\n"
  syntax:
    content: public string ApplicationExecutionPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ApplicationExecutionPath As String
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.ApplicationExecutionPath
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal
  id: IsLocal
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: IsLocal
  nameWithType: ApplicationModuleInstance.IsLocal
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nIndicates whether this instance is local.\n"
  syntax:
    content: public bool IsLocal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLocal As Boolean
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.IsLocal
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel
  id: AccessibilityLevel
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: AccessibilityLevel
  nameWithType: ApplicationModuleInstance.AccessibilityLevel
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe accessibility level of this instance.\n"
  syntax:
    content: public AccessibilityLevels AccessibilityLevel { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Common.AccessibilityLevels
    content.vb: Public Property AccessibilityLevel As AccessibilityLevels
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.AccessibilityLevel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Indexation
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.Indexation
  id: Indexation
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: Indexation
  nameWithType: ApplicationModuleInstance.Indexation
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Indexation
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nIndexation of this instance.\n"
  syntax:
    content: public InstanceIndexations Indexation { get; set; }
    parameters: []
    return:
      type: BindOpen.System.InstanceIndexations
    content.vb: Public Property Indexation As InstanceIndexations
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.Indexation*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.Indexation
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Kind
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.Kind
  id: Kind
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: Kind
  nameWithType: ApplicationModuleInstance.Kind
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Kind
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nKind of this instance.\n"
  syntax:
    content: public ApplicationModuleKind Kind { get; set; }
    parameters: []
    return:
      type: BindOpen.Application.Modules.ApplicationModuleKind
    content.vb: Public Property Kind As ApplicationModuleKind
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.Kind*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.Kind
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.SubKind
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.SubKind
  id: SubKind
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: SubKind
  nameWithType: ApplicationModuleInstance.SubKind
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.SubKind
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nSub kind of this instance.\n"
  syntax:
    content: public ApplicationModuleSubKind SubKind { get; set; }
    parameters: []
    return:
      type: BindOpen.Application.Modules.ApplicationModuleSubKind
    content.vb: Public Property SubKind As ApplicationModuleSubKind
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.SubKind*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.SubKind
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Sections
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.Sections
  id: Sections
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: Sections
  nameWithType: ApplicationModuleInstance.Sections
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Sections
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe sections of this instance.\n"
  syntax:
    content: public IDataItemSet<AppSection> Sections { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Modules.AppSection}
    content.vb: Public Property Sections As IDataItemSet(Of AppSection)
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.Sections*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.Sections
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet
  commentId: P:BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet
  id: OptionSet
  parent: BindOpen.Application.Modules.ApplicationModuleInstance
  langs:
  - csharp
  - vb
  name: OptionSet
  nameWithType: ApplicationModuleInstance.OptionSet
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe otpions of this instance.\n"
  syntax:
    content: public IOptionSet OptionSet { get; }
    parameters: []
    return:
      type: BindOpen.Application.Options.IOptionSet
    content.vb: Public ReadOnly Property OptionSet As IOptionSet
  overload: BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet*
  implements:
  - BindOpen.Application.Modules.IApplicationModuleInstance.OptionSet
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: BindOpen.Application.Modules
  commentId: N:BindOpen.Application.Modules
  isExternal: true
  name: BindOpen.Application.Modules
  nameWithType: BindOpen.Application.Modules
  fullName: BindOpen.Application.Modules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Application.Modules.IApplicationModuleInstance
  commentId: T:BindOpen.Application.Modules.IApplicationModuleInstance
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IApplicationModuleInstance
  nameWithType: IApplicationModuleInstance
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance
- uid: BindOpen.Data.Items.IDescribedDataItem
  isExternal: true
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  isExternal: true
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  isExternal: true
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  isExternal: true
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  isExternal: true
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.#ctor*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.#ctor
  isExternal: true
  name: ApplicationModuleInstance
  nameWithType: ApplicationModuleInstance.ApplicationModuleInstance
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationModuleInstance
- uid: BindOpen.Application.Modules.IAppModule
  commentId: T:BindOpen.Application.Modules.IAppModule
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppModule
  nameWithType: IAppModule
  fullName: BindOpen.Application.Modules.IAppModule
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Update*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.Update
  isExternal: true
  name: Update
  nameWithType: ApplicationModuleInstance.Update
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Update
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Common.UpdateModes[]
  isExternal: true
  name: UpdateModes[]
  nameWithType: UpdateModes[]
  fullName: BindOpen.Data.Common.UpdateModes[]
  nameWithType.vb: UpdateModes()
  fullName.vb: BindOpen.Data.Common.UpdateModes()
  name.vb: UpdateModes()
  spec.csharp:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName
  isExternal: true
  name: GetSectionWithCompleteName
  nameWithType: ApplicationModuleInstance.GetSectionWithCompleteName
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithCompleteName
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  commentId: M:BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: GetSectionWithCompleteName(String)
  nameWithType: IApplicationModuleInstance.GetSectionWithCompleteName(String)
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName(System.String)
    name: GetSectionWithCompleteName
    nameWithType: IApplicationModuleInstance.GetSectionWithCompleteName
    fullName: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName(System.String)
    name: GetSectionWithCompleteName
    nameWithType: IApplicationModuleInstance.GetSectionWithCompleteName
    fullName: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithCompleteName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.IAppSection
  commentId: T:BindOpen.Application.Modules.IAppSection
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppSection
  nameWithType: IAppSection
  fullName: BindOpen.Application.Modules.IAppSection
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName
  isExternal: true
  name: GetSectionWithName
  nameWithType: ApplicationModuleInstance.GetSectionWithName
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.GetSectionWithName
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName(System.String)
  commentId: M:BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName(System.String)
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: GetSectionWithName(String)
  nameWithType: IApplicationModuleInstance.GetSectionWithName(String)
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName(System.String)
    name: GetSectionWithName
    nameWithType: IApplicationModuleInstance.GetSectionWithName
    fullName: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName(System.String)
    name: GetSectionWithName
    nameWithType: IApplicationModuleInstance.GetSectionWithName
    fullName: BindOpen.Application.Modules.IApplicationModuleInstance.GetSectionWithName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Dispose*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.Dispose
  isExternal: true
  name: Dispose
  nameWithType: ApplicationModuleInstance.Dispose
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Module*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.Module
  isExternal: true
  name: Module
  nameWithType: ApplicationModuleInstance.Module
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Module
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.Module
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.Module
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: Module
  nameWithType: IApplicationModuleInstance.Module
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.Module
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName
  isExternal: true
  name: ModuleName
  nameWithType: ApplicationModuleInstance.ModuleName
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.ModuleName
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.ModuleName
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.ModuleName
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: ModuleName
  nameWithType: IApplicationModuleInstance.ModuleName
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.ModuleName
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Uri*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.Uri
  isExternal: true
  name: Uri
  nameWithType: ApplicationModuleInstance.Uri
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Uri
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.Uri
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.Uri
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: Uri
  nameWithType: IApplicationModuleInstance.Uri
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.Uri
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri
  isExternal: true
  name: AbsoluteUri
  nameWithType: ApplicationModuleInstance.AbsoluteUri
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.AbsoluteUri
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.AbsoluteUri
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.AbsoluteUri
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: AbsoluteUri
  nameWithType: IApplicationModuleInstance.AbsoluteUri
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.AbsoluteUri
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath
  isExternal: true
  name: ApplicationExecutionPath
  nameWithType: ApplicationModuleInstance.ApplicationExecutionPath
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.ApplicationExecutionPath
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.ApplicationExecutionPath
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.ApplicationExecutionPath
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: ApplicationExecutionPath
  nameWithType: IApplicationModuleInstance.ApplicationExecutionPath
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.ApplicationExecutionPath
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal
  isExternal: true
  name: IsLocal
  nameWithType: ApplicationModuleInstance.IsLocal
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.IsLocal
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.IsLocal
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.IsLocal
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: IsLocal
  nameWithType: IApplicationModuleInstance.IsLocal
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.IsLocal
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel
  isExternal: true
  name: AccessibilityLevel
  nameWithType: ApplicationModuleInstance.AccessibilityLevel
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.AccessibilityLevel
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.AccessibilityLevel
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.AccessibilityLevel
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: AccessibilityLevel
  nameWithType: IApplicationModuleInstance.AccessibilityLevel
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.AccessibilityLevel
- uid: BindOpen.Data.Common.AccessibilityLevels
  isExternal: true
  name: AccessibilityLevels
  nameWithType: AccessibilityLevels
  fullName: BindOpen.Data.Common.AccessibilityLevels
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Indexation*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.Indexation
  isExternal: true
  name: Indexation
  nameWithType: ApplicationModuleInstance.Indexation
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Indexation
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.Indexation
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.Indexation
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: Indexation
  nameWithType: IApplicationModuleInstance.Indexation
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.Indexation
- uid: BindOpen.System.InstanceIndexations
  commentId: T:BindOpen.System.InstanceIndexations
  parent: BindOpen.System
  isExternal: true
  name: InstanceIndexations
  nameWithType: InstanceIndexations
  fullName: BindOpen.System.InstanceIndexations
- uid: BindOpen.System
  commentId: N:BindOpen.System
  isExternal: true
  name: BindOpen.System
  nameWithType: BindOpen.System
  fullName: BindOpen.System
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Kind*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.Kind
  isExternal: true
  name: Kind
  nameWithType: ApplicationModuleInstance.Kind
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Kind
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.Kind
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.Kind
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: Kind
  nameWithType: IApplicationModuleInstance.Kind
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.Kind
- uid: BindOpen.Application.Modules.ApplicationModuleKind
  commentId: T:BindOpen.Application.Modules.ApplicationModuleKind
  parent: BindOpen.Application.Modules
  isExternal: true
  name: ApplicationModuleKind
  nameWithType: ApplicationModuleKind
  fullName: BindOpen.Application.Modules.ApplicationModuleKind
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.SubKind*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.SubKind
  isExternal: true
  name: SubKind
  nameWithType: ApplicationModuleInstance.SubKind
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.SubKind
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.SubKind
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.SubKind
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: SubKind
  nameWithType: IApplicationModuleInstance.SubKind
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.SubKind
- uid: BindOpen.Application.Modules.ApplicationModuleSubKind
  commentId: T:BindOpen.Application.Modules.ApplicationModuleSubKind
  parent: BindOpen.Application.Modules
  isExternal: true
  name: ApplicationModuleSubKind
  nameWithType: ApplicationModuleSubKind
  fullName: BindOpen.Application.Modules.ApplicationModuleSubKind
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.Sections*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.Sections
  isExternal: true
  name: Sections
  nameWithType: ApplicationModuleInstance.Sections
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.Sections
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.Sections
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.Sections
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: Sections
  nameWithType: IApplicationModuleInstance.Sections
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.Sections
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Modules.AppSection}
  commentId: '!:BindOpen.Data.Items.IDataItemSet{BindOpen.Application.Modules.AppSection}'
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<AppSection>
  nameWithType: IDataItemSet<AppSection>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Application.Modules.AppSection>
  nameWithType.vb: IDataItemSet(Of AppSection)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Application.Modules.AppSection)
  name.vb: IDataItemSet(Of AppSection)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  isExternal: true
  name: IDataItemSet<>
  nameWithType: IDataItemSet<>
  fullName: BindOpen.Data.Items.IDataItemSet<>
  nameWithType.vb: IDataItemSet(Of )
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of )
  name.vb: IDataItemSet(Of )
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet*
  commentId: Overload:BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet
  isExternal: true
  name: OptionSet
  nameWithType: ApplicationModuleInstance.OptionSet
  fullName: BindOpen.Application.Modules.ApplicationModuleInstance.OptionSet
- uid: BindOpen.Application.Modules.IApplicationModuleInstance.OptionSet
  commentId: P:BindOpen.Application.Modules.IApplicationModuleInstance.OptionSet
  parent: BindOpen.Application.Modules.IApplicationModuleInstance
  isExternal: true
  name: OptionSet
  nameWithType: IApplicationModuleInstance.OptionSet
  fullName: BindOpen.Application.Modules.IApplicationModuleInstance.OptionSet
- uid: BindOpen.Application.Options.IOptionSet
  commentId: T:BindOpen.Application.Options.IOptionSet
  parent: BindOpen.Application.Options
  isExternal: true
  name: IOptionSet
  nameWithType: IOptionSet
  fullName: BindOpen.Application.Options.IOptionSet
- uid: BindOpen.Application.Options
  commentId: N:BindOpen.Application.Options
  isExternal: true
  name: BindOpen.Application.Options
  nameWithType: BindOpen.Application.Options
  fullName: BindOpen.Application.Options
shouldSkipMarkup: true
