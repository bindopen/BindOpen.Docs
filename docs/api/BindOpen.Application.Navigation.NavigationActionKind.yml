### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Navigation.NavigationActionKind
  commentId: T:BindOpen.Application.Navigation.NavigationActionKind
  id: NavigationActionKind
  parent: BindOpen.Application.Navigation
  children:
  - BindOpen.Application.Navigation.NavigationActionKind.Add
  - BindOpen.Application.Navigation.NavigationActionKind.AdvancedSearch
  - BindOpen.Application.Navigation.NavigationActionKind.All
  - BindOpen.Application.Navigation.NavigationActionKind.Back
  - BindOpen.Application.Navigation.NavigationActionKind.BasicSearch
  - BindOpen.Application.Navigation.NavigationActionKind.Custom
  - BindOpen.Application.Navigation.NavigationActionKind.Delete
  - BindOpen.Application.Navigation.NavigationActionKind.Edit
  - BindOpen.Application.Navigation.NavigationActionKind.Export
  - BindOpen.Application.Navigation.NavigationActionKind.Import
  - BindOpen.Application.Navigation.NavigationActionKind.Insert
  - BindOpen.Application.Navigation.NavigationActionKind.InsertCancel
  - BindOpen.Application.Navigation.NavigationActionKind.LogAs
  - BindOpen.Application.Navigation.NavigationActionKind.MergeDbQuery
  - BindOpen.Application.Navigation.NavigationActionKind.Print
  - BindOpen.Application.Navigation.NavigationActionKind.Properties
  - BindOpen.Application.Navigation.NavigationActionKind.QuickSearch
  - BindOpen.Application.Navigation.NavigationActionKind.Refresh
  - BindOpen.Application.Navigation.NavigationActionKind.Save
  - BindOpen.Application.Navigation.NavigationActionKind.SaveCancel
  langs:
  - csharp
  - vb
  name: NavigationActionKind
  nameWithType: NavigationActionKind
  fullName: BindOpen.Application.Navigation.NavigationActionKind
  type: Enum
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: NavigationActionKind
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 5
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nThis enumeration lists the possible kinds of user actions.\n"
  example: []
  syntax:
    content: public enum NavigationActionKind
    content.vb: Public Enum NavigationActionKind
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: BindOpen.Application.Navigation.NavigationActionKind.All
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.All
  id: All
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: All
  nameWithType: NavigationActionKind.All
  fullName: BindOpen.Application.Navigation.NavigationActionKind.All
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: All
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 10
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nAll actions. It is represented by the &apos;*&apos; character.\n"
  example: []
  syntax:
    content: All = 0
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.LogAs
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.LogAs
  id: LogAs
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: LogAs
  nameWithType: NavigationActionKind.LogAs
  fullName: BindOpen.Application.Navigation.NavigationActionKind.LogAs
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LogAs
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 15
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nLog as another user.\n"
  example: []
  syntax:
    content: LogAs = 1
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.QuickSearch
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.QuickSearch
  id: QuickSearch
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: QuickSearch
  nameWithType: NavigationActionKind.QuickSearch
  fullName: BindOpen.Application.Navigation.NavigationActionKind.QuickSearch
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: QuickSearch
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 20
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nMake a quick search an entity object.\n"
  example: []
  syntax:
    content: QuickSearch = 2
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.BasicSearch
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.BasicSearch
  id: BasicSearch
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: BasicSearch
  nameWithType: NavigationActionKind.BasicSearch
  fullName: BindOpen.Application.Navigation.NavigationActionKind.BasicSearch
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BasicSearch
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 25
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nMake a basic search an entity object.\n"
  example: []
  syntax:
    content: BasicSearch = 3
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.AdvancedSearch
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.AdvancedSearch
  id: AdvancedSearch
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: AdvancedSearch
  nameWithType: NavigationActionKind.AdvancedSearch
  fullName: BindOpen.Application.Navigation.NavigationActionKind.AdvancedSearch
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AdvancedSearch
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 30
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nAdvanced search an entity object.\n"
  example: []
  syntax:
    content: AdvancedSearch = 4
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Add
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Add
  id: Add
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Add
  nameWithType: NavigationActionKind.Add
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Add
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Add
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 35
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nAdd an entity object.\n"
  example: []
  syntax:
    content: Add = 5
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.MergeDbQuery
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.MergeDbQuery
  id: MergeDbQuery
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: MergeDbQuery
  nameWithType: NavigationActionKind.MergeDbQuery
  fullName: BindOpen.Application.Navigation.NavigationActionKind.MergeDbQuery
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: MergeDbQuery
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 40
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nMergeDbQuery an entity object.\n"
  example: []
  syntax:
    content: MergeDbQuery = 6
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Properties
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Properties
  id: Properties
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Properties
  nameWithType: NavigationActionKind.Properties
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Properties
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Properties
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 45
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nView properties of an entity object.\n"
  example: []
  syntax:
    content: Properties = 7
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Refresh
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Refresh
  id: Refresh
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Refresh
  nameWithType: NavigationActionKind.Refresh
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Refresh
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Refresh
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 50
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nRefresh.\n"
  example: []
  syntax:
    content: Refresh = 8
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Edit
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Edit
  id: Edit
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Edit
  nameWithType: NavigationActionKind.Edit
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Edit
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Edit
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 55
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nEdit an entity object.\n"
  example: []
  syntax:
    content: Edit = 9
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Delete
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Delete
  id: Delete
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Delete
  nameWithType: NavigationActionKind.Delete
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Delete
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Delete
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 60
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nDelete an entity object.\n"
  example: []
  syntax:
    content: Delete = 10
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Export
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Export
  id: Export
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Export
  nameWithType: NavigationActionKind.Export
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Export
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Export
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 65
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nExport an entity object.\n"
  example: []
  syntax:
    content: Export = 11
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Import
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Import
  id: Import
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Import
  nameWithType: NavigationActionKind.Import
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Import
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Import
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 70
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nImport an entity object.\n"
  example: []
  syntax:
    content: Import = 12
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Print
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Print
  id: Print
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Print
  nameWithType: NavigationActionKind.Print
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Print
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Print
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 75
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nPrint an entity object.\n"
  example: []
  syntax:
    content: Print = 13
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Back
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Back
  id: Back
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Back
  nameWithType: NavigationActionKind.Back
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Back
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Back
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 80
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nGo backward.\n"
  example: []
  syntax:
    content: Back = 14
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Insert
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Insert
  id: Insert
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Insert
  nameWithType: NavigationActionKind.Insert
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Insert
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Insert
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 85
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nInsert an entity object.\n"
  example: []
  syntax:
    content: Insert = 15
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.InsertCancel
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.InsertCancel
  id: InsertCancel
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: InsertCancel
  nameWithType: NavigationActionKind.InsertCancel
  fullName: BindOpen.Application.Navigation.NavigationActionKind.InsertCancel
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: InsertCancel
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 90
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nCancel when inserting an entity object.\n"
  example: []
  syntax:
    content: InsertCancel = 16
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Save
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Save
  id: Save
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Save
  nameWithType: NavigationActionKind.Save
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Save
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Save
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 95
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nSave properties of an entity object.\n"
  example: []
  syntax:
    content: Save = 17
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.SaveCancel
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.SaveCancel
  id: SaveCancel
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: SaveCancel
  nameWithType: NavigationActionKind.SaveCancel
  fullName: BindOpen.Application.Navigation.NavigationActionKind.SaveCancel
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SaveCancel
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 100
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nCancel when saving properties of an entity object.\n"
  example: []
  syntax:
    content: SaveCancel = 18
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Application.Navigation.NavigationActionKind.Custom
  commentId: F:BindOpen.Application.Navigation.NavigationActionKind.Custom
  id: Custom
  parent: BindOpen.Application.Navigation.NavigationActionKind
  langs:
  - csharp
  - vb
  name: Custom
  nameWithType: NavigationActionKind.Custom
  fullName: BindOpen.Application.Navigation.NavigationActionKind.Custom
  type: Field
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Custom
    path: ../src/BindOpen.Runtime/Application/Navigation/NavigationActionKind.cs
    startLine: 105
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Navigation
  summary: "\nCustom action.\n"
  example: []
  syntax:
    content: Custom = 19
    return:
      type: BindOpen.Application.Navigation.NavigationActionKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.Application.Navigation
  commentId: N:BindOpen.Application.Navigation
  name: BindOpen.Application.Navigation
  nameWithType: BindOpen.Application.Navigation
  fullName: BindOpen.Application.Navigation
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Application.Navigation.NavigationActionKind
  commentId: T:BindOpen.Application.Navigation.NavigationActionKind
  parent: BindOpen.Application.Navigation
  name: NavigationActionKind
  nameWithType: NavigationActionKind
  fullName: BindOpen.Application.Navigation.NavigationActionKind
shouldSkipMarkup: true
