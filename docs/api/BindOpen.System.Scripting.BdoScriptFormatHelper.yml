### YamlMime:ManagedReference
items:
- uid: BindOpen.System.Scripting.BdoScriptFormatHelper
  commentId: T:BindOpen.System.Scripting.BdoScriptFormatHelper
  id: BdoScriptFormatHelper
  parent: BindOpen.System.Scripting
  children:
  - BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript(System.String)
  - BindOpen.System.Scripting.BdoScriptFormatHelper.Format(System.String,System.Int32)
  - BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript(System.String)
  langs:
  - csharp
  - vb
  name: BdoScriptFormatHelper
  nameWithType: BdoScriptFormatHelper
  fullName: BindOpen.System.Scripting.BdoScriptFormatHelper
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoScriptFormatHelper
    path: ../src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
    startLine: 8
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Scripting
  summary: "\nThis class represents a script format helper.\n"
  example: []
  syntax:
    content: public static class BdoScriptFormatHelper
    content.vb: Public Module BdoScriptFormatHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BindOpen.System.Scripting.BdoScriptFormatHelper.Format(System.String,System.Int32)
  commentId: M:BindOpen.System.Scripting.BdoScriptFormatHelper.Format(System.String,System.Int32)
  id: Format(System.String,System.Int32)
  parent: BindOpen.System.Scripting.BdoScriptFormatHelper
  langs:
  - csharp
  - vb
  name: Format(String, Int32)
  nameWithType: BdoScriptFormatHelper.Format(String, Int32)
  fullName: BindOpen.System.Scripting.BdoScriptFormatHelper.Format(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Format
    path: ../src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
    startLine: 23
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Scripting
  summary: "\nFormats the specified script string considering the specified number of tabulations.\n"
  example: []
  syntax:
    content: public static string Format(string script, int aTabulationNumber = 0)
    parameters:
    - id: script
      type: System.String
      description: The script to format.
    - id: aTabulationNumber
      type: System.Int32
      description: The number of tabulations.
    return:
      type: System.String
      description: Returns the formated script.
    content.vb: Public Shared Function Format(script As String, aTabulationNumber As Integer = 0) As String
  overload: BindOpen.System.Scripting.BdoScriptFormatHelper.Format*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript(System.String)
  commentId: M:BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript(System.String)
  id: LiteralizeScript(System.String)
  parent: BindOpen.System.Scripting.BdoScriptFormatHelper
  langs:
  - csharp
  - vb
  name: LiteralizeScript(String)
  nameWithType: BdoScriptFormatHelper.LiteralizeScript(String)
  fullName: BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LiteralizeScript
    path: ../src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
    startLine: 147
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Scripting
  summary: "\nReturns the specified script literalized.\n"
  example: []
  syntax:
    content: public static string LiteralizeScript(string script)
    parameters:
    - id: script
      type: System.String
      description: The script to literalize.
    return:
      type: System.String
      description: The specified script literalized.
    content.vb: Public Shared Function LiteralizeScript(script As String) As String
  overload: BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript(System.String)
  commentId: M:BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript(System.String)
  id: DeliteralizeScript(System.String)
  parent: BindOpen.System.Scripting.BdoScriptFormatHelper
  langs:
  - csharp
  - vb
  name: DeliteralizeScript(String)
  nameWithType: BdoScriptFormatHelper.DeliteralizeScript(String)
  fullName: BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DeliteralizeScript
    path: ../src/BindOpen.Core/System/Scripting/BdoScriptFormatHelper.cs
    startLine: 160
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Scripting
  summary: "\nReturns the specified script deliteralized.\n"
  example: []
  syntax:
    content: public static string DeliteralizeScript(string script)
    parameters:
    - id: script
      type: System.String
      description: The script to deliteralize.
    return:
      type: System.String
      description: The specified script deliteralized.
    content.vb: Public Shared Function DeliteralizeScript(script As String) As String
  overload: BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BindOpen.System.Scripting
  commentId: N:BindOpen.System.Scripting
  name: BindOpen.System.Scripting
  nameWithType: BindOpen.System.Scripting
  fullName: BindOpen.System.Scripting
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.System.Scripting.BdoScriptFormatHelper.Format*
  commentId: Overload:BindOpen.System.Scripting.BdoScriptFormatHelper.Format
  name: Format
  nameWithType: BdoScriptFormatHelper.Format
  fullName: BindOpen.System.Scripting.BdoScriptFormatHelper.Format
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript*
  commentId: Overload:BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript
  name: LiteralizeScript
  nameWithType: BdoScriptFormatHelper.LiteralizeScript
  fullName: BindOpen.System.Scripting.BdoScriptFormatHelper.LiteralizeScript
- uid: BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript*
  commentId: Overload:BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript
  name: DeliteralizeScript
  nameWithType: BdoScriptFormatHelper.DeliteralizeScript
  fullName: BindOpen.System.Scripting.BdoScriptFormatHelper.DeliteralizeScript
shouldSkipMarkup: true
