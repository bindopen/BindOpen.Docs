### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql
  commentId: T:BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql
  id: BdoScopeExtension_PostgreSql
  parent: BindOpen.Application.Scopes
  children:
  - BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope)
  - BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope,System.String)
  langs:
  - csharp
  - vb
  name: BdoScopeExtension_PostgreSql
  nameWithType: BdoScopeExtension_PostgreSql
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql
  type: Class
  source:
    remote:
      path: src/BindOpen.Databases.PostgreSql/Application/Scopes/BdoScopeExtension_PostgreSql.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: BdoScopeExtension_PostgreSql
    path: ../src/BindOpen.Databases.PostgreSql/Application/Scopes/BdoScopeExtension_PostgreSql.cs
    startLine: 8
  assemblies:
  - BindOpen.Databases.PostgreSql
  namespace: BindOpen.Application.Scopes
  summary: "\nThis class represents a BindOpen scope extension.\n"
  example: []
  syntax:
    content: public static class BdoScopeExtension_PostgreSql
    content.vb: Public Module BdoScopeExtension_PostgreSql
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope)
  id: CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope)
  isExtensionMethod: true
  parent: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql
  langs:
  - csharp
  - vb
  name: CreatePostgreSqlConnector(IBdoScope)
  nameWithType: BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(IBdoScope)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases.PostgreSql/Application/Scopes/BdoScopeExtension_PostgreSql.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: CreatePostgreSqlConnector
    path: ../src/BindOpen.Databases.PostgreSql/Application/Scopes/BdoScopeExtension_PostgreSql.cs
    startLine: 15
  assemblies:
  - BindOpen.Databases.PostgreSql
  namespace: BindOpen.Application.Scopes
  summary: "\nCreates a new PostgreSql connector.\n"
  example: []
  syntax:
    content: public static IBdoDbConnector CreatePostgreSqlConnector(this IBdoScope scope)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    return:
      type: BindOpen.Extensions.Connectors.IBdoDbConnector
      description: Returns the connector.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreatePostgreSqlConnector(scope As IBdoScope) As IBdoDbConnector
  overload: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope,System.String)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope,System.String)
  id: CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope,System.String)
  isExtensionMethod: true
  parent: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql
  langs:
  - csharp
  - vb
  name: CreatePostgreSqlConnector(IBdoScope, String)
  nameWithType: BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(IBdoScope, String)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector(BindOpen.Application.Scopes.IBdoScope, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases.PostgreSql/Application/Scopes/BdoScopeExtension_PostgreSql.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: CreatePostgreSqlConnector
    path: ../src/BindOpen.Databases.PostgreSql/Application/Scopes/BdoScopeExtension_PostgreSql.cs
    startLine: 24
  assemblies:
  - BindOpen.Databases.PostgreSql
  namespace: BindOpen.Application.Scopes
  summary: "\nCreates a new PostgreSql connector.\n"
  example: []
  syntax:
    content: public static IBdoDbConnector CreatePostgreSqlConnector(this IBdoScope scope, string connectionString = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: connectionString
      type: System.String
      description: The connection string to consider.
    return:
      type: BindOpen.Extensions.Connectors.IBdoDbConnector
      description: Returns the connector.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function CreatePostgreSqlConnector(scope As IBdoScope, connectionString As String = Nothing) As IBdoDbConnector
  overload: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector*
  commentId: Overload:BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector
  name: CreatePostgreSqlConnector
  nameWithType: BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_PostgreSql.CreatePostgreSqlConnector
- uid: BindOpen.Application.Scopes.IBdoScope
  commentId: T:BindOpen.Application.Scopes.IBdoScope
  parent: BindOpen.Application.Scopes
  isExternal: true
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.IBdoDbConnector
  parent: BindOpen.Extensions.Connectors
  name: IBdoDbConnector
  nameWithType: IBdoDbConnector
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
