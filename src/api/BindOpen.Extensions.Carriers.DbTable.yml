### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Carriers.DbTable
  commentId: T:BindOpen.Extensions.Carriers.DbTable
  id: DbTable
  parent: BindOpen.Extensions.Carriers
  children:
  - BindOpen.Extensions.Carriers.DbTable.#ctor
  - BindOpen.Extensions.Carriers.DbTable.Alias
  - BindOpen.Extensions.Carriers.DbTable.DataModule
  - BindOpen.Extensions.Carriers.DbTable.Expression
  - BindOpen.Extensions.Carriers.DbTable.op_Implicit(BindOpen.Extensions.Carriers.DbTable)~System.String
  - BindOpen.Extensions.Carriers.DbTable.Schema
  - BindOpen.Extensions.Carriers.DbTable.ToString
  - BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  - BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  - BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  langs:
  - csharp
  - vb
  name: DbTable
  nameWithType: DbTable
  fullName: BindOpen.Extensions.Carriers.DbTable
  type: Class
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nThis class represents a database data table.\n"
  syntax:
    content: 'public class DbTable : BdoCarrier, IDbQueryItem'
    content.vb: >-
      Public Class DbTable
          Inherits BdoCarrier
          Implements IDbQueryItem
  inheritance:
  - System.Object
  derivedClasses:
  - BindOpen.Data.Queries.DbDerivedTable
  - BindOpen.Data.Queries.DbJoinedTable
  - BindOpen.Data.Queries.DbTupledTable
  implements:
  - BindOpen.Data.Queries.IDbQueryItem
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Extensions.Carriers.DbTable.#ctor
  commentId: M:BindOpen.Extensions.Carriers.DbTable.#ctor
  id: '#ctor'
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: DbTable()
  nameWithType: DbTable.DbTable()
  fullName: BindOpen.Extensions.Carriers.DbTable.DbTable()
  type: Constructor
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nInstantiates a new instance of the DbDataTable class.\n"
  syntax:
    content: public DbTable()
    content.vb: Public Sub New
  overload: BindOpen.Extensions.Carriers.DbTable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.DbTable.ToString
  commentId: M:BindOpen.Extensions.Carriers.DbTable.ToString
  id: ToString
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: DbTable.ToString()
  fullName: BindOpen.Extensions.Carriers.DbTable.ToString()
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\n\n"
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overload: BindOpen.Extensions.Carriers.DbTable.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  commentId: M:BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  id: WithDataModule(System.String)
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: WithDataModule(String)
  nameWithType: DbTable.WithDataModule(String)
  fullName: BindOpen.Extensions.Carriers.DbTable.WithDataModule(System.String)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nSets the specified data module.\n"
  syntax:
    content: public DbTable WithDataModule(string dataModule)
    parameters:
    - id: dataModule
      type: System.String
      description: The data module to consider.
    return:
      type: BindOpen.Extensions.Carriers.DbTable
      description: Returns this instance.
    content.vb: Public Function WithDataModule(dataModule As String) As DbTable
  overload: BindOpen.Extensions.Carriers.DbTable.WithDataModule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  commentId: M:BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  id: WithSchema(System.String)
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: WithSchema(String)
  nameWithType: DbTable.WithSchema(String)
  fullName: BindOpen.Extensions.Carriers.DbTable.WithSchema(System.String)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nSets the specified schema.\n"
  syntax:
    content: public DbTable WithSchema(string schema)
    parameters:
    - id: schema
      type: System.String
      description: The schema to consider.
    return:
      type: BindOpen.Extensions.Carriers.DbTable
      description: Returns this instance.
    content.vb: Public Function WithSchema(schema As String) As DbTable
  overload: BindOpen.Extensions.Carriers.DbTable.WithSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  commentId: M:BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  id: WithAlias(System.String)
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: WithAlias(String)
  nameWithType: DbTable.WithAlias(String)
  fullName: BindOpen.Extensions.Carriers.DbTable.WithAlias(System.String)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nSets the specified alias.\n"
  syntax:
    content: public DbTable WithAlias(string alias)
    parameters:
    - id: alias
      type: System.String
      description: The alias to consider.
    return:
      type: BindOpen.Extensions.Carriers.DbTable
      description: Returns this instance.
    content.vb: Public Function WithAlias(alias As String) As DbTable
  overload: BindOpen.Extensions.Carriers.DbTable.WithAlias*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.DbTable.op_Implicit(BindOpen.Extensions.Carriers.DbTable)~System.String
  commentId: M:BindOpen.Extensions.Carriers.DbTable.op_Implicit(BindOpen.Extensions.Carriers.DbTable)~System.String
  id: op_Implicit(BindOpen.Extensions.Carriers.DbTable)~System.String
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: Implicit(DbTable to String)
  nameWithType: DbTable.Implicit(DbTable to String)
  fullName: BindOpen.Extensions.Carriers.DbTable.Implicit(BindOpen.Extensions.Carriers.DbTable to System.String)
  type: Operator
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nReturns the data expression string corresponding to this instance.\n"
  syntax:
    content: public static implicit operator string (DbTable table)
    parameters:
    - id: table
      type: BindOpen.Extensions.Carriers.DbTable
      description: The table to consider.
    return:
      type: System.String
    content.vb: Public Shared Widening Operator CType(table As DbTable) As String
  overload: BindOpen.Extensions.Carriers.DbTable.op_Implicit*
  nameWithType.vb: DbTable.Widening(DbTable to String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BindOpen.Extensions.Carriers.DbTable.Widening(BindOpen.Extensions.Carriers.DbTable to System.String)
  name.vb: Widening(DbTable to String)
- uid: BindOpen.Extensions.Carriers.DbTable.DataModule
  commentId: P:BindOpen.Extensions.Carriers.DbTable.DataModule
  id: DataModule
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: DataModule
  nameWithType: DbTable.DataModule
  fullName: BindOpen.Extensions.Carriers.DbTable.DataModule
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nData module of this instance.\n"
  syntax:
    content: public string DataModule { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DataModule As String
  overload: BindOpen.Extensions.Carriers.DbTable.DataModule*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.DbTable.Schema
  commentId: P:BindOpen.Extensions.Carriers.DbTable.Schema
  id: Schema
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: Schema
  nameWithType: DbTable.Schema
  fullName: BindOpen.Extensions.Carriers.DbTable.Schema
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nData module of this instance.\n"
  syntax:
    content: public string Schema { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Schema As String
  overload: BindOpen.Extensions.Carriers.DbTable.Schema*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.DbTable.Alias
  commentId: P:BindOpen.Extensions.Carriers.DbTable.Alias
  id: Alias
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: DbTable.Alias
  fullName: BindOpen.Extensions.Carriers.DbTable.Alias
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nAlias of this instance.\n"
  syntax:
    content: public string Alias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Alias As String
  overload: BindOpen.Extensions.Carriers.DbTable.Alias*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.DbTable.Expression
  commentId: P:BindOpen.Extensions.Carriers.DbTable.Expression
  id: Expression
  parent: BindOpen.Extensions.Carriers.DbTable
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: DbTable.Expression
  fullName: BindOpen.Extensions.Carriers.DbTable.Expression
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Carriers
  summary: "\nValue of this instance.\n"
  syntax:
    content: public DataExpression Expression { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Expression.DataExpression
    content.vb: Public Property Expression As DataExpression
  overload: BindOpen.Extensions.Carriers.DbTable.Expression*
  implements:
  - BindOpen.Data.Queries.IDbQueryItem.Expression
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  isExternal: true
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Data.Queries.IDbQueryItem
  commentId: T:BindOpen.Data.Queries.IDbQueryItem
  parent: BindOpen.Data.Queries
  isExternal: true
  name: IDbQueryItem
  nameWithType: IDbQueryItem
  fullName: BindOpen.Data.Queries.IDbQueryItem
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  isExternal: true
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: BindOpen.Extensions.Carriers.DbTable.#ctor*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.#ctor
  isExternal: true
  name: DbTable
  nameWithType: DbTable.DbTable
  fullName: BindOpen.Extensions.Carriers.DbTable.DbTable
- uid: BindOpen.Extensions.Carriers.DbTable.ToString*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.ToString
  isExternal: true
  name: ToString
  nameWithType: DbTable.ToString
  fullName: BindOpen.Extensions.Carriers.DbTable.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Extensions.Carriers.DbTable.WithDataModule*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.WithDataModule
  isExternal: true
  name: WithDataModule
  nameWithType: DbTable.WithDataModule
  fullName: BindOpen.Extensions.Carriers.DbTable.WithDataModule
- uid: BindOpen.Extensions.Carriers.DbTable
  commentId: T:BindOpen.Extensions.Carriers.DbTable
  parent: BindOpen.Extensions.Carriers
  isExternal: true
  name: DbTable
  nameWithType: DbTable
  fullName: BindOpen.Extensions.Carriers.DbTable
- uid: BindOpen.Extensions.Carriers.DbTable.WithSchema*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.WithSchema
  isExternal: true
  name: WithSchema
  nameWithType: DbTable.WithSchema
  fullName: BindOpen.Extensions.Carriers.DbTable.WithSchema
- uid: BindOpen.Extensions.Carriers.DbTable.WithAlias*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.WithAlias
  isExternal: true
  name: WithAlias
  nameWithType: DbTable.WithAlias
  fullName: BindOpen.Extensions.Carriers.DbTable.WithAlias
- uid: BindOpen.Extensions.Carriers.DbTable.op_Implicit*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.op_Implicit
  isExternal: true
  name: Implicit
  nameWithType: DbTable.Implicit
  fullName: BindOpen.Extensions.Carriers.DbTable.Implicit
  nameWithType.vb: DbTable.Widening
  fullName.vb: BindOpen.Extensions.Carriers.DbTable.Widening
  name.vb: Widening
- uid: BindOpen.Extensions.Carriers.DbTable.DataModule*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.DataModule
  isExternal: true
  name: DataModule
  nameWithType: DbTable.DataModule
  fullName: BindOpen.Extensions.Carriers.DbTable.DataModule
- uid: BindOpen.Extensions.Carriers.DbTable.Schema*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.Schema
  isExternal: true
  name: Schema
  nameWithType: DbTable.Schema
  fullName: BindOpen.Extensions.Carriers.DbTable.Schema
- uid: BindOpen.Extensions.Carriers.DbTable.Alias*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.Alias
  isExternal: true
  name: Alias
  nameWithType: DbTable.Alias
  fullName: BindOpen.Extensions.Carriers.DbTable.Alias
- uid: BindOpen.Extensions.Carriers.DbTable.Expression*
  commentId: Overload:BindOpen.Extensions.Carriers.DbTable.Expression
  isExternal: true
  name: Expression
  nameWithType: DbTable.Expression
  fullName: BindOpen.Extensions.Carriers.DbTable.Expression
- uid: BindOpen.Data.Queries.IDbQueryItem.Expression
  commentId: P:BindOpen.Data.Queries.IDbQueryItem.Expression
  parent: BindOpen.Data.Queries.IDbQueryItem
  isExternal: true
  name: Expression
  nameWithType: IDbQueryItem.Expression
  fullName: BindOpen.Data.Queries.IDbQueryItem.Expression
- uid: BindOpen.Data.Expression.DataExpression
  isExternal: true
  name: DataExpression
  nameWithType: DataExpression
  fullName: BindOpen.Data.Expression.DataExpression
shouldSkipMarkup: true
