### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector
  commentId: T:BindOpen.Extensions.Connectors.BdoRepoConnector
  id: BdoRepoConnector
  parent: BindOpen.Extensions.Connectors
  children:
  - BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor
  - BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  langs:
  - csharp
  - vb
  name: BdoRepoConnector
  nameWithType: BdoRepoConnector
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThis class represents a repository connector.\n"
  syntax:
    content: 'public abstract class BdoRepoConnector : BdoConnector'
    content.vb: >-
      Public MustInherit Class BdoRepoConnector
          Inherits BdoConnector
  inheritance:
  - System.Object
  derivedClasses:
  - BindOpen.Extensions.Connectors.BdoNFSConnector
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor
  id: '#ctor'
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: BdoRepoConnector()
  nameWithType: BdoRepoConnector.BdoRepoConnector()
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.BdoRepoConnector()
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nInstantiates a new instance of the RepositoryConnector class.\n"
  syntax:
    content: protected BdoRepoConnector()
    content.vb: Protected Sub New
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration)
  id: '#ctor(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration)'
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: BdoRepoConnector(IBdoConnectorConfiguration)
  nameWithType: BdoRepoConnector.BdoRepoConnector(IBdoConnectorConfiguration)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.BdoRepoConnector(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nInstantiates a new instance of the RepositoryConnector class.\n"
  syntax:
    content: protected BdoRepoConnector(IBdoConnectorConfiguration dto)
    parameters:
    - id: dto
      type: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
      description: The DTO item of this instance.
    content.vb: Protected Sub New(dto As IBdoConnectorConfiguration)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  id: CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: CreateConnection(IBdoLog)
  nameWithType: BdoRepoConnector.CreateConnection(IBdoLog)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nCreates a new connection.\n"
  syntax:
    content: public abstract BdoRepoConnection CreateConnection(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: BindOpen.Data.Connections.BdoRepoConnection
    content.vb: Public MustOverride Function CreateConnection(log As IBdoLog = Nothing) As BdoRepoConnection
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: Pull(String, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnector.Pull(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nPulls a remote file to a local Uri.\n"
  syntax:
    content: public virtual void Pull(string remoteFileUri, string localPathUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: remoteFileUri
      type: System.String
      description: The remote Uri to consider.
    - id: localPathUri
      type: System.String
      description: The Uri of the local path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overridable Sub Pull(remoteFileUri As String, localPathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  id: Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: Pull(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoRepoConnector.Pull(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nPulls a remote files in folder to a local Uri.\n"
  syntax:
    content: public virtual void Pull(string remoteFileUri, string remoteFilter, string localPathUri, bool canOverwrite, IBdoLog log = null, bool isRecursive = false)
    parameters:
    - id: remoteFileUri
      type: System.String
      description: The remote Uri to consider.
    - id: remoteFilter
      type: System.String
      description: The remote filter to consider.
    - id: localPathUri
      type: System.String
      description: The Uri of the local path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    content.vb: Public Overridable Sub Pull(remoteFileUri As String, remoteFilter As String, localPathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing, isRecursive As Boolean = False)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: Pull(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnector.Pull(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nPulls remote files to a local Uri.\n"
  syntax:
    content: public virtual void Pull(List<string> remoteFileUris, string localPathUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: remoteFileUris
      type: System.Collections.Generic.List{System.String}
      description: The remote Uris to consider.
    - id: localPathUri
      type: System.String
      description: The Uri of the local path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overridable Sub Pull(remoteFileUris As List(Of String), localPathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull*
  nameWithType.vb: BdoRepoConnector.Pull(List(Of String), String, Boolean, IBdoLog)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Pull(List(Of String), String, Boolean, IBdoLog)
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: Push(String, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnector.Push(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nPushes a local file to a remote Uri.\n"
  syntax:
    content: public virtual void Push(string localFileUri, string remotePathUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local Uri to consider.
    - id: remotePathUri
      type: System.String
      description: The Uri of the remote path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overridable Sub Push(localFileUri As String, remotePathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.Push*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  id: Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: Push(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoRepoConnector.Push(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nPushes a local file in folder to a remote Uri.\n"
  syntax:
    content: public virtual void Push(string localFileUri, string localFilter, string remotePathUri, bool canOverwrite, IBdoLog log = null, bool isRecursive = false)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local Uri to consider.
    - id: localFilter
      type: System.String
      description: The local filter to consider.
    - id: remotePathUri
      type: System.String
      description: The Uri of the remote path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    content.vb: Public Overridable Sub Push(localFileUri As String, localFilter As String, remotePathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing, isRecursive As Boolean = False)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.Push*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: Push(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnector.Push(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nPushes local files to a remote Uri.\n"
  syntax:
    content: public virtual void Push(List<string> localFileUris, string remotePathUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: localFileUris
      type: System.Collections.Generic.List{System.String}
      description: The local Uris to consider.
    - id: remotePathUri
      type: System.String
      description: The Uri of the remote path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overridable Sub Push(localFileUris As List(Of String), remotePathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.Push*
  nameWithType.vb: BdoRepoConnector.Push(List(Of String), String, Boolean, IBdoLog)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BindOpen.Extensions.Connectors.BdoRepoConnector.Push(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Push(List(Of String), String, Boolean, IBdoLog)
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  id: GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoRepoConnector.GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nGets the list of elements of the remote folder.\n"
  syntax:
    content: public virtual List<RepositoryItem> GetFiles(string folderUri, string filter, bool isRecursive, IBdoLog log = null, CarrierKind_standard fileKind)
    parameters:
    - id: folderUri
      type: System.String
      description: The Uri of the folder path to consider.
    - id: filter
      type: System.String
      description: The filter to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: fileKind
      type: BindOpen.Extensions.Carriers.CarrierKind_standard
      description: The kind of elements to consider.
    return:
      type: System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}
      description: Lists of elements of the remote folder.
    content.vb: Public Overridable Function GetFiles(folderUri As String, filter As String, isRecursive As Boolean, log As IBdoLog = Nothing, fileKind As CarrierKind_standard) As List(Of RepositoryItem)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  id: DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Extensions.Connectors.BdoRepoConnector
  langs:
  - csharp
  - vb
  name: DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoRepoConnector.DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems(System.String, System.String, System.DateTime, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Connectors
  summary: "\nDeletes the items.\n"
  syntax:
    content: public virtual void DeleteItems(string folderUri, string filter, DateTime timeLimit, bool isRecursive, IBdoLog log = null, CarrierKind_standard fileKind)
    parameters:
    - id: folderUri
      type: System.String
      description: The Uri of the folder path to consider.
    - id: filter
      type: System.String
      description: The filter to consider.
    - id: timeLimit
      type: System.DateTime
      description: The date time limit to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: fileKind
      type: BindOpen.Extensions.Carriers.CarrierKind_standard
      description: The kind of elements to consider.
    content.vb: Public Overridable Sub DeleteItems(folderUri As String, filter As String, timeLimit As DateTime, isRecursive As Boolean, log As IBdoLog = Nothing, fileKind As CarrierKind_standard)
  overload: BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  isExternal: true
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoRepoConnector.#ctor
  isExternal: true
  name: BdoRepoConnector
  nameWithType: BdoRepoConnector.BdoRepoConnector
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.BdoRepoConnector
- uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  isExternal: true
  name: IBdoConnectorConfiguration
  nameWithType: IBdoConnectorConfiguration
  fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection
  isExternal: true
  name: CreateConnection
  nameWithType: BdoRepoConnector.CreateConnection
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.CreateConnection
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Data.Connections.BdoRepoConnection
  commentId: T:BindOpen.Data.Connections.BdoRepoConnection
  parent: BindOpen.Data.Connections
  isExternal: true
  name: BdoRepoConnection
  nameWithType: BdoRepoConnection
  fullName: BindOpen.Data.Connections.BdoRepoConnection
- uid: BindOpen.Data.Connections
  commentId: N:BindOpen.Data.Connections
  isExternal: true
  name: BindOpen.Data.Connections
  nameWithType: BindOpen.Data.Connections
  fullName: BindOpen.Data.Connections
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoRepoConnector.Pull
  isExternal: true
  name: Pull
  nameWithType: BdoRepoConnector.Pull
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Pull
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{System.String}
  commentId: '!:System.Collections.Generic.List{System.String}'
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.Push*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoRepoConnector.Push
  isExternal: true
  name: Push
  nameWithType: BdoRepoConnector.Push
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.Push
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles
  isExternal: true
  name: GetFiles
  nameWithType: BdoRepoConnector.GetFiles
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.GetFiles
- uid: BindOpen.Extensions.Carriers.CarrierKind_standard
  commentId: T:BindOpen.Extensions.Carriers.CarrierKind_standard
  parent: BindOpen.Extensions.Carriers
  isExternal: true
  name: CarrierKind_standard
  nameWithType: CarrierKind_standard
  fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
- uid: System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}
  commentId: '!:System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}'
  definition: System.Collections.Generic.List`1
  name: List<RepositoryItem>
  nameWithType: List<RepositoryItem>
  fullName: System.Collections.Generic.List<BindOpen.Extensions.Carriers.RepositoryItem>
  nameWithType.vb: List(Of RepositoryItem)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.Carriers.RepositoryItem)
  name.vb: List(Of RepositoryItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Carriers.RepositoryItem
    name: RepositoryItem
    nameWithType: RepositoryItem
    fullName: BindOpen.Extensions.Carriers.RepositoryItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Carriers.RepositoryItem
    name: RepositoryItem
    nameWithType: RepositoryItem
    fullName: BindOpen.Extensions.Carriers.RepositoryItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  isExternal: true
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems*
  commentId: Overload:BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems
  isExternal: true
  name: DeleteItems
  nameWithType: BdoRepoConnector.DeleteItems
  fullName: BindOpen.Extensions.Connectors.BdoRepoConnector.DeleteItems
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
shouldSkipMarkup: true
