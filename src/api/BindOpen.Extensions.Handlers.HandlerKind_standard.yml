### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard
  commentId: T:BindOpen.Extensions.Handlers.HandlerKind_standard
  id: HandlerKind_standard
  parent: BindOpen.Extensions.Handlers
  children:
  - BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  - BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  - BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  - BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  - BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  - BindOpen.Extensions.Handlers.HandlerKind_standard.None
  - BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  - BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  - BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  - BindOpen.Extensions.Handlers.HandlerKind_standard.value__
  - BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  - BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  - BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  langs:
  - csharp
  - vb
  name: HandlerKind_standard
  nameWithType: HandlerKind_standard
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nThis enumeration lists all the possible kinds of the &apos;Standard&apos; handlers.\n"
  syntax:
    content: 'public sealed class HandlerKind_standard : Enum'
    content.vb: >-
      Public NotInheritable Class HandlerKind_standard
          Inherits

           Enum
  inheritance:
  - System.Object
  extensionMethods:
  - BindOpen.Extensions.Handlers.HandlerKind_standard.BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.value__
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.value__
  id: value__
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: HandlerKind_standard.value__
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.value__
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  syntax:
    content: public int value__
    return:
      type: System.Int32
    content.vb: Public value__ As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.None
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.None
  id: None
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: None
  nameWithType: HandlerKind_standard.None
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.None
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nNone.\n"
  syntax:
    content: public const HandlerKind_standard None
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const None As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  id: Any
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: HandlerKind_standard.Any
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.Any
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nAny.\n"
  syntax:
    content: public const HandlerKind_standard Any
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const Any As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  id: BdOS
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: BdOS
  nameWithType: HandlerKind_standard.BdOS
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.BdOS
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nBdO Script.\n"
  syntax:
    content: public const HandlerKind_standard BdOS
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const BdOS As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  id: DynamicDataContext
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: DynamicDataContext
  nameWithType: HandlerKind_standard.DynamicDataContext
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.DynamicDataContext
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nDynamic data context.\n"
  syntax:
    content: public const HandlerKind_standard DynamicDataContext
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const DynamicDataContext As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  id: XmlFile
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: XmlFile
  nameWithType: HandlerKind_standard.XmlFile
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFile
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nXml file.\n"
  syntax:
    content: public const HandlerKind_standard XmlFile
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const XmlFile As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  id: XmlFileReferenceInDatabase
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: XmlFileReferenceInDatabase
  nameWithType: HandlerKind_standard.XmlFileReferenceInDatabase
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.XmlFileReferenceInDatabase
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nXml file reference in database.\n"
  syntax:
    content: public const HandlerKind_standard XmlFileReferenceInDatabase
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const XmlFileReferenceInDatabase As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  id: TextFromFile
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextFromFile
  nameWithType: HandlerKind_standard.TextFromFile
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromFile
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nText from file.\n"
  syntax:
    content: public const HandlerKind_standard TextFromFile
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const TextFromFile As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  id: TextFileReferenceInDatabase
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextFileReferenceInDatabase
  nameWithType: HandlerKind_standard.TextFileReferenceInDatabase
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFileReferenceInDatabase
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nText file reference in database.\n"
  syntax:
    content: public const HandlerKind_standard TextFileReferenceInDatabase
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const TextFileReferenceInDatabase As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  id: Database
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: HandlerKind_standard.Database
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.Database
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nDatabase.\n"
  syntax:
    content: public const HandlerKind_standard Database
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const Database As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  id: TextFromXmlString
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextFromXmlString
  nameWithType: HandlerKind_standard.TextFromXmlString
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextFromXmlString
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nXml String.\n"
  syntax:
    content: public const HandlerKind_standard TextFromXmlString
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const TextFromXmlString As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  id: TextString
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: TextString
  nameWithType: HandlerKind_standard.TextString
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.TextString
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nText String.\n"
  syntax:
    content: public const HandlerKind_standard TextString
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const TextString As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  id: EmbedResource
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: EmbedResource
  nameWithType: HandlerKind_standard.EmbedResource
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.EmbedResource
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nEmbed resource\n"
  syntax:
    content: public const HandlerKind_standard EmbedResource
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const EmbedResource As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  id: WebService
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: WebService
  nameWithType: HandlerKind_standard.WebService
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.WebService
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nWeb service\n"
  syntax:
    content: public const HandlerKind_standard WebService
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const WebService As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  id: ReferenceSourceId
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: ReferenceSourceId
  nameWithType: HandlerKind_standard.ReferenceSourceId
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.ReferenceSourceId
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nReference source ID\n"
  syntax:
    content: public const HandlerKind_standard ReferenceSourceId
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const ReferenceSourceId As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  commentId: F:BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  id: SourceId
  parent: BindOpen.Extensions.Handlers.HandlerKind_standard
  langs:
  - csharp
  - vb
  name: SourceId
  nameWithType: HandlerKind_standard.SourceId
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard.SourceId
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Handlers
  summary: "\nSource ID\n"
  syntax:
    content: public const HandlerKind_standard SourceId
    return:
      type: BindOpen.Extensions.Handlers.HandlerKind_standard
    content.vb: Public Const SourceId As HandlerKind_standard
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.Extensions.Handlers
  commentId: N:BindOpen.Extensions.Handlers
  isExternal: true
  name: BindOpen.Extensions.Handlers
  nameWithType: BindOpen.Extensions.Handlers
  fullName: BindOpen.Extensions.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard.BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
  commentId: M:BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  parent: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
  definition: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  name: GetUniqueName()
  nameWithType: HandlerUniqueName_standardExtension.GetUniqueName()
  fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName()
  spec.csharp:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  commentId: M:BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  isExternal: true
  name: GetUniqueName(HandlerKind_standard)
  nameWithType: HandlerUniqueName_standardExtension.GetUniqueName(HandlerKind_standard)
  fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
  spec.csharp:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Handlers.HandlerKind_standard
    name: HandlerKind_standard
    nameWithType: HandlerKind_standard
    fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName(BindOpen.Extensions.Handlers.HandlerKind_standard)
    name: GetUniqueName
    nameWithType: HandlerUniqueName_standardExtension.GetUniqueName
    fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Handlers.HandlerKind_standard
    name: HandlerKind_standard
    nameWithType: HandlerKind_standard
    fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
  commentId: T:BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
  parent: BindOpen.Extensions.Handlers
  isExternal: true
  name: HandlerUniqueName_standardExtension
  nameWithType: HandlerUniqueName_standardExtension
  fullName: BindOpen.Extensions.Handlers.HandlerUniqueName_standardExtension
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Extensions.Handlers.HandlerKind_standard
  commentId: T:BindOpen.Extensions.Handlers.HandlerKind_standard
  parent: BindOpen.Extensions.Handlers
  isExternal: true
  name: HandlerKind_standard
  nameWithType: HandlerKind_standard
  fullName: BindOpen.Extensions.Handlers.HandlerKind_standard
shouldSkipMarkup: true
