### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Context.IBdoDataContext
  commentId: T:BindOpen.Data.Context.IBdoDataContext
  id: IBdoDataContext
  parent: BindOpen.Data.Context
  children:
  - BindOpen.Data.Context.IBdoDataContext.AddItem(System.String,System.Object,System.String,BindOpen.Data.Common.PersistenceLevel)
  - BindOpen.Data.Context.IBdoDataContext.AddScopedItem(System.String,System.Object,System.String)
  - BindOpen.Data.Context.IBdoDataContext.AddSingletonItem(System.String,System.Object,System.String)
  - BindOpen.Data.Context.IBdoDataContext.AddSystemItem(System.String,System.Object)
  - BindOpen.Data.Context.IBdoDataContext.AddTransientItem(System.String,System.Object,System.String)
  - BindOpen.Data.Context.IBdoDataContext.Clear
  - BindOpen.Data.Context.IBdoDataContext.ClearItems(BindOpen.Data.Common.PersistenceLevel)
  - BindOpen.Data.Context.IBdoDataContext.GetItem(System.String,System.String,BindOpen.Data.Common.PersistenceLevel)
  - BindOpen.Data.Context.IBdoDataContext.GetScopedItem(System.String,System.String)
  - BindOpen.Data.Context.IBdoDataContext.GetSingletonItem(System.String,System.String)
  - BindOpen.Data.Context.IBdoDataContext.GetSystemItem(System.String)
  - BindOpen.Data.Context.IBdoDataContext.GetTransientItem(System.String,System.String)
  - BindOpen.Data.Context.IBdoDataContext.Id
  - BindOpen.Data.Context.IBdoDataContext.Merge(BindOpen.Data.Context.IBdoDataContext)
  - BindOpen.Data.Context.IBdoDataContext.RemoveItems(System.String,BindOpen.Data.Common.PersistenceLevel)
  - BindOpen.Data.Context.IBdoDataContext.Save(System.String)
  - BindOpen.Data.Context.IBdoDataContext.ScopedItems
  - BindOpen.Data.Context.IBdoDataContext.SingletonItems
  - BindOpen.Data.Context.IBdoDataContext.TransientItems
  langs:
  - csharp
  - vb
  name: IBdoDataContext
  nameWithType: IBdoDataContext
  fullName: BindOpen.Data.Context.IBdoDataContext
  type: Interface
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IBdoDataContext
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 9
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: 'public interface IBdoDataContext : IDataItem, ICloneable, IDisposable'
    content.vb: >-
      Public Interface IBdoDataContext
          Inherits IDataItem
  inheritedMembers:
  - BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.Clone``1
  - System.ICloneable.Clone
  - System.IDisposable.Dispose
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Data.Context.IBdoDataContext.SingletonItems
  commentId: P:BindOpen.Data.Context.IBdoDataContext.SingletonItems
  id: SingletonItems
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: SingletonItems
  nameWithType: IBdoDataContext.SingletonItems
  fullName: BindOpen.Data.Context.IBdoDataContext.SingletonItems
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SingletonItems
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 14
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: Dictionary<string, object> SingletonItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: ReadOnly Property SingletonItems As Dictionary(Of String, Object)
  overload: BindOpen.Data.Context.IBdoDataContext.SingletonItems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Data.Context.IBdoDataContext.ScopedItems
  commentId: P:BindOpen.Data.Context.IBdoDataContext.ScopedItems
  id: ScopedItems
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: ScopedItems
  nameWithType: IBdoDataContext.ScopedItems
  fullName: BindOpen.Data.Context.IBdoDataContext.ScopedItems
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ScopedItems
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 19
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: Dictionary<string, object> ScopedItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: ReadOnly Property ScopedItems As Dictionary(Of String, Object)
  overload: BindOpen.Data.Context.IBdoDataContext.ScopedItems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Data.Context.IBdoDataContext.TransientItems
  commentId: P:BindOpen.Data.Context.IBdoDataContext.TransientItems
  id: TransientItems
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: TransientItems
  nameWithType: IBdoDataContext.TransientItems
  fullName: BindOpen.Data.Context.IBdoDataContext.TransientItems
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: TransientItems
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 24
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: Dictionary<string, object> TransientItems { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: ReadOnly Property TransientItems As Dictionary(Of String, Object)
  overload: BindOpen.Data.Context.IBdoDataContext.TransientItems*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Data.Context.IBdoDataContext.Id
  commentId: P:BindOpen.Data.Context.IBdoDataContext.Id
  id: Id
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: IBdoDataContext.Id
  fullName: BindOpen.Data.Context.IBdoDataContext.Id
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Id
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 29
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Id As String
  overload: BindOpen.Data.Context.IBdoDataContext.Id*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Context.IBdoDataContext.AddItem(System.String,System.Object,System.String,BindOpen.Data.Common.PersistenceLevel)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.AddItem(System.String,System.Object,System.String,BindOpen.Data.Common.PersistenceLevel)
  id: AddItem(System.String,System.Object,System.String,BindOpen.Data.Common.PersistenceLevel)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: AddItem(String, Object, String, PersistenceLevel)
  nameWithType: IBdoDataContext.AddItem(String, Object, String, PersistenceLevel)
  fullName: BindOpen.Data.Context.IBdoDataContext.AddItem(System.String, System.Object, System.String, BindOpen.Data.Common.PersistenceLevel)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 38
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void AddItem(string name, object item, string contextSectionName = null, PersistenceLevel persistenceLevel = PersistenceLevel.Singleton)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: item
      type: System.Object
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    - id: persistenceLevel
      type: BindOpen.Data.Common.PersistenceLevel
      description: ''
    content.vb: Sub AddItem(name As String, item As Object, contextSectionName As String = Nothing, persistenceLevel As PersistenceLevel = PersistenceLevel.Singleton)
  overload: BindOpen.Data.Context.IBdoDataContext.AddItem*
- uid: BindOpen.Data.Context.IBdoDataContext.AddScopedItem(System.String,System.Object,System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.AddScopedItem(System.String,System.Object,System.String)
  id: AddScopedItem(System.String,System.Object,System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: AddScopedItem(String, Object, String)
  nameWithType: IBdoDataContext.AddScopedItem(String, Object, String)
  fullName: BindOpen.Data.Context.IBdoDataContext.AddScopedItem(System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddScopedItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 46
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void AddScopedItem(string name, object item, string contextSectionName = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: item
      type: System.Object
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    content.vb: Sub AddScopedItem(name As String, item As Object, contextSectionName As String = Nothing)
  overload: BindOpen.Data.Context.IBdoDataContext.AddScopedItem*
- uid: BindOpen.Data.Context.IBdoDataContext.AddSingletonItem(System.String,System.Object,System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.AddSingletonItem(System.String,System.Object,System.String)
  id: AddSingletonItem(System.String,System.Object,System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: AddSingletonItem(String, Object, String)
  nameWithType: IBdoDataContext.AddSingletonItem(String, Object, String)
  fullName: BindOpen.Data.Context.IBdoDataContext.AddSingletonItem(System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSingletonItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 54
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void AddSingletonItem(string name, object item, string contextSectionName = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: item
      type: System.Object
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    content.vb: Sub AddSingletonItem(name As String, item As Object, contextSectionName As String = Nothing)
  overload: BindOpen.Data.Context.IBdoDataContext.AddSingletonItem*
- uid: BindOpen.Data.Context.IBdoDataContext.AddSystemItem(System.String,System.Object)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.AddSystemItem(System.String,System.Object)
  id: AddSystemItem(System.String,System.Object)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: AddSystemItem(String, Object)
  nameWithType: IBdoDataContext.AddSystemItem(String, Object)
  fullName: BindOpen.Data.Context.IBdoDataContext.AddSystemItem(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddSystemItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 61
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void AddSystemItem(string name, object item)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: item
      type: System.Object
      description: ''
    content.vb: Sub AddSystemItem(name As String, item As Object)
  overload: BindOpen.Data.Context.IBdoDataContext.AddSystemItem*
- uid: BindOpen.Data.Context.IBdoDataContext.AddTransientItem(System.String,System.Object,System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.AddTransientItem(System.String,System.Object,System.String)
  id: AddTransientItem(System.String,System.Object,System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: AddTransientItem(String, Object, String)
  nameWithType: IBdoDataContext.AddTransientItem(String, Object, String)
  fullName: BindOpen.Data.Context.IBdoDataContext.AddTransientItem(System.String, System.Object, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddTransientItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 69
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void AddTransientItem(string name, object item, string contextSectionName = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: item
      type: System.Object
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    content.vb: Sub AddTransientItem(name As String, item As Object, contextSectionName As String = Nothing)
  overload: BindOpen.Data.Context.IBdoDataContext.AddTransientItem*
- uid: BindOpen.Data.Context.IBdoDataContext.Clear
  commentId: M:BindOpen.Data.Context.IBdoDataContext.Clear
  id: Clear
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: IBdoDataContext.Clear()
  fullName: BindOpen.Data.Context.IBdoDataContext.Clear()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clear
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 74
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: BindOpen.Data.Context.IBdoDataContext.Clear*
- uid: BindOpen.Data.Context.IBdoDataContext.ClearItems(BindOpen.Data.Common.PersistenceLevel)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.ClearItems(BindOpen.Data.Common.PersistenceLevel)
  id: ClearItems(BindOpen.Data.Common.PersistenceLevel)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: ClearItems(PersistenceLevel)
  nameWithType: IBdoDataContext.ClearItems(PersistenceLevel)
  fullName: BindOpen.Data.Context.IBdoDataContext.ClearItems(BindOpen.Data.Common.PersistenceLevel)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ClearItems
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 80
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void ClearItems(PersistenceLevel persistenceLevel = PersistenceLevel.Singleton)
    parameters:
    - id: persistenceLevel
      type: BindOpen.Data.Common.PersistenceLevel
      description: ''
    content.vb: Sub ClearItems(persistenceLevel As PersistenceLevel = PersistenceLevel.Singleton)
  overload: BindOpen.Data.Context.IBdoDataContext.ClearItems*
- uid: BindOpen.Data.Context.IBdoDataContext.GetItem(System.String,System.String,BindOpen.Data.Common.PersistenceLevel)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.GetItem(System.String,System.String,BindOpen.Data.Common.PersistenceLevel)
  id: GetItem(System.String,System.String,BindOpen.Data.Common.PersistenceLevel)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: GetItem(String, String, PersistenceLevel)
  nameWithType: IBdoDataContext.GetItem(String, String, PersistenceLevel)
  fullName: BindOpen.Data.Context.IBdoDataContext.GetItem(System.String, System.String, BindOpen.Data.Common.PersistenceLevel)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 89
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: object GetItem(string name, string contextSectionName = null, PersistenceLevel persistenceLevel = PersistenceLevel.Any)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    - id: persistenceLevel
      type: BindOpen.Data.Common.PersistenceLevel
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Function GetItem(name As String, contextSectionName As String = Nothing, persistenceLevel As PersistenceLevel = PersistenceLevel.Any) As Object
  overload: BindOpen.Data.Context.IBdoDataContext.GetItem*
- uid: BindOpen.Data.Context.IBdoDataContext.GetScopedItem(System.String,System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.GetScopedItem(System.String,System.String)
  id: GetScopedItem(System.String,System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: GetScopedItem(String, String)
  nameWithType: IBdoDataContext.GetScopedItem(String, String)
  fullName: BindOpen.Data.Context.IBdoDataContext.GetScopedItem(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetScopedItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 97
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: object GetScopedItem(string name, string contextSectionName = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Function GetScopedItem(name As String, contextSectionName As String = Nothing) As Object
  overload: BindOpen.Data.Context.IBdoDataContext.GetScopedItem*
- uid: BindOpen.Data.Context.IBdoDataContext.GetSingletonItem(System.String,System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.GetSingletonItem(System.String,System.String)
  id: GetSingletonItem(System.String,System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: GetSingletonItem(String, String)
  nameWithType: IBdoDataContext.GetSingletonItem(String, String)
  fullName: BindOpen.Data.Context.IBdoDataContext.GetSingletonItem(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetSingletonItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 105
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: object GetSingletonItem(string name, string contextSectionName = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Function GetSingletonItem(name As String, contextSectionName As String = Nothing) As Object
  overload: BindOpen.Data.Context.IBdoDataContext.GetSingletonItem*
- uid: BindOpen.Data.Context.IBdoDataContext.GetSystemItem(System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.GetSystemItem(System.String)
  id: GetSystemItem(System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: GetSystemItem(String)
  nameWithType: IBdoDataContext.GetSystemItem(String)
  fullName: BindOpen.Data.Context.IBdoDataContext.GetSystemItem(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetSystemItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 112
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: object GetSystemItem(string name)
    parameters:
    - id: name
      type: System.String
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Function GetSystemItem(name As String) As Object
  overload: BindOpen.Data.Context.IBdoDataContext.GetSystemItem*
- uid: BindOpen.Data.Context.IBdoDataContext.GetTransientItem(System.String,System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.GetTransientItem(System.String,System.String)
  id: GetTransientItem(System.String,System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: GetTransientItem(String, String)
  nameWithType: IBdoDataContext.GetTransientItem(String, String)
  fullName: BindOpen.Data.Context.IBdoDataContext.GetTransientItem(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetTransientItem
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 120
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: object GetTransientItem(string name, string contextSectionName = null)
    parameters:
    - id: name
      type: System.String
      description: ''
    - id: contextSectionName
      type: System.String
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Function GetTransientItem(name As String, contextSectionName As String = Nothing) As Object
  overload: BindOpen.Data.Context.IBdoDataContext.GetTransientItem*
- uid: BindOpen.Data.Context.IBdoDataContext.Merge(BindOpen.Data.Context.IBdoDataContext)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.Merge(BindOpen.Data.Context.IBdoDataContext)
  id: Merge(BindOpen.Data.Context.IBdoDataContext)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: Merge(IBdoDataContext)
  nameWithType: IBdoDataContext.Merge(IBdoDataContext)
  fullName: BindOpen.Data.Context.IBdoDataContext.Merge(BindOpen.Data.Context.IBdoDataContext)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Merge
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 126
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void Merge(IBdoDataContext dataContext)
    parameters:
    - id: dataContext
      type: BindOpen.Data.Context.IBdoDataContext
      description: ''
    content.vb: Sub Merge(dataContext As IBdoDataContext)
  overload: BindOpen.Data.Context.IBdoDataContext.Merge*
- uid: BindOpen.Data.Context.IBdoDataContext.RemoveItems(System.String,BindOpen.Data.Common.PersistenceLevel)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.RemoveItems(System.String,BindOpen.Data.Common.PersistenceLevel)
  id: RemoveItems(System.String,BindOpen.Data.Common.PersistenceLevel)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: RemoveItems(String, PersistenceLevel)
  nameWithType: IBdoDataContext.RemoveItems(String, PersistenceLevel)
  fullName: BindOpen.Data.Context.IBdoDataContext.RemoveItems(System.String, BindOpen.Data.Common.PersistenceLevel)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: RemoveItems
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 133
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: void RemoveItems(string contextSectionName = null, PersistenceLevel persistenceLevel = PersistenceLevel.Singleton)
    parameters:
    - id: contextSectionName
      type: System.String
      description: ''
    - id: persistenceLevel
      type: BindOpen.Data.Common.PersistenceLevel
      description: ''
    content.vb: Sub RemoveItems(contextSectionName As String = Nothing, persistenceLevel As PersistenceLevel = PersistenceLevel.Singleton)
  overload: BindOpen.Data.Context.IBdoDataContext.RemoveItems*
- uid: BindOpen.Data.Context.IBdoDataContext.Save(System.String)
  commentId: M:BindOpen.Data.Context.IBdoDataContext.Save(System.String)
  id: Save(System.String)
  parent: BindOpen.Data.Context.IBdoDataContext
  langs:
  - csharp
  - vb
  name: Save(String)
  nameWithType: IBdoDataContext.Save(String)
  fullName: BindOpen.Data.Context.IBdoDataContext.Save(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Save
    path: ../src/BindOpen.Core/Data/Context/Interfaces/IBdoDataContext.cs
    startLine: 140
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Context
  summary: "\n\n"
  example: []
  syntax:
    content: bool Save(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function Save(filePath As String) As Boolean
  overload: BindOpen.Data.Context.IBdoDataContext.Save*
references:
- uid: BindOpen.Data.Context
  commentId: N:BindOpen.Data.Context
  name: BindOpen.Data.Context
  nameWithType: BindOpen.Data.Context
  fullName: BindOpen.Data.Context
- uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: IDataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: IDataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: IDataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: IDataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Clone``1
  commentId: M:BindOpen.Data.Items.IDataItem.Clone``1
  parent: BindOpen.Data.Items.IDataItem
  name: Clone<T>()
  nameWithType: IDataItem.Clone<T>()
  fullName: BindOpen.Data.Items.IDataItem.Clone<T>()
  nameWithType.vb: IDataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.IDataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone<T>
    nameWithType: IDataItem.Clone<T>
    fullName: BindOpen.Data.Items.IDataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone(Of T)
    nameWithType: IDataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Context.IBdoDataContext.SingletonItems*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.SingletonItems
  name: SingletonItems
  nameWithType: IBdoDataContext.SingletonItems
  fullName: BindOpen.Data.Context.IBdoDataContext.SingletonItems
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Context.IBdoDataContext.ScopedItems*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.ScopedItems
  name: ScopedItems
  nameWithType: IBdoDataContext.ScopedItems
  fullName: BindOpen.Data.Context.IBdoDataContext.ScopedItems
- uid: BindOpen.Data.Context.IBdoDataContext.TransientItems*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.TransientItems
  name: TransientItems
  nameWithType: IBdoDataContext.TransientItems
  fullName: BindOpen.Data.Context.IBdoDataContext.TransientItems
- uid: BindOpen.Data.Context.IBdoDataContext.Id*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.Id
  name: Id
  nameWithType: IBdoDataContext.Id
  fullName: BindOpen.Data.Context.IBdoDataContext.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Context.IBdoDataContext.AddItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.AddItem
  name: AddItem
  nameWithType: IBdoDataContext.AddItem
  fullName: BindOpen.Data.Context.IBdoDataContext.AddItem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Data.Common.PersistenceLevel
  commentId: T:BindOpen.Data.Common.PersistenceLevel
  parent: BindOpen.Data.Common
  name: PersistenceLevel
  nameWithType: PersistenceLevel
  fullName: BindOpen.Data.Common.PersistenceLevel
- uid: BindOpen.Data.Context.IBdoDataContext.AddScopedItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.AddScopedItem
  name: AddScopedItem
  nameWithType: IBdoDataContext.AddScopedItem
  fullName: BindOpen.Data.Context.IBdoDataContext.AddScopedItem
- uid: BindOpen.Data.Context.IBdoDataContext.AddSingletonItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.AddSingletonItem
  name: AddSingletonItem
  nameWithType: IBdoDataContext.AddSingletonItem
  fullName: BindOpen.Data.Context.IBdoDataContext.AddSingletonItem
- uid: BindOpen.Data.Context.IBdoDataContext.AddSystemItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.AddSystemItem
  name: AddSystemItem
  nameWithType: IBdoDataContext.AddSystemItem
  fullName: BindOpen.Data.Context.IBdoDataContext.AddSystemItem
- uid: BindOpen.Data.Context.IBdoDataContext.AddTransientItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.AddTransientItem
  name: AddTransientItem
  nameWithType: IBdoDataContext.AddTransientItem
  fullName: BindOpen.Data.Context.IBdoDataContext.AddTransientItem
- uid: BindOpen.Data.Context.IBdoDataContext.Clear*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.Clear
  name: Clear
  nameWithType: IBdoDataContext.Clear
  fullName: BindOpen.Data.Context.IBdoDataContext.Clear
- uid: BindOpen.Data.Context.IBdoDataContext.ClearItems*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.ClearItems
  name: ClearItems
  nameWithType: IBdoDataContext.ClearItems
  fullName: BindOpen.Data.Context.IBdoDataContext.ClearItems
- uid: BindOpen.Data.Context.IBdoDataContext.GetItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.GetItem
  name: GetItem
  nameWithType: IBdoDataContext.GetItem
  fullName: BindOpen.Data.Context.IBdoDataContext.GetItem
- uid: BindOpen.Data.Context.IBdoDataContext.GetScopedItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.GetScopedItem
  name: GetScopedItem
  nameWithType: IBdoDataContext.GetScopedItem
  fullName: BindOpen.Data.Context.IBdoDataContext.GetScopedItem
- uid: BindOpen.Data.Context.IBdoDataContext.GetSingletonItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.GetSingletonItem
  name: GetSingletonItem
  nameWithType: IBdoDataContext.GetSingletonItem
  fullName: BindOpen.Data.Context.IBdoDataContext.GetSingletonItem
- uid: BindOpen.Data.Context.IBdoDataContext.GetSystemItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.GetSystemItem
  name: GetSystemItem
  nameWithType: IBdoDataContext.GetSystemItem
  fullName: BindOpen.Data.Context.IBdoDataContext.GetSystemItem
- uid: BindOpen.Data.Context.IBdoDataContext.GetTransientItem*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.GetTransientItem
  name: GetTransientItem
  nameWithType: IBdoDataContext.GetTransientItem
  fullName: BindOpen.Data.Context.IBdoDataContext.GetTransientItem
- uid: BindOpen.Data.Context.IBdoDataContext.Merge*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.Merge
  name: Merge
  nameWithType: IBdoDataContext.Merge
  fullName: BindOpen.Data.Context.IBdoDataContext.Merge
- uid: BindOpen.Data.Context.IBdoDataContext
  commentId: T:BindOpen.Data.Context.IBdoDataContext
  parent: BindOpen.Data.Context
  name: IBdoDataContext
  nameWithType: IBdoDataContext
  fullName: BindOpen.Data.Context.IBdoDataContext
- uid: BindOpen.Data.Context.IBdoDataContext.RemoveItems*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.RemoveItems
  name: RemoveItems
  nameWithType: IBdoDataContext.RemoveItems
  fullName: BindOpen.Data.Context.IBdoDataContext.RemoveItems
- uid: BindOpen.Data.Context.IBdoDataContext.Save*
  commentId: Overload:BindOpen.Data.Context.IBdoDataContext.Save
  name: Save
  nameWithType: IBdoDataContext.Save
  fullName: BindOpen.Data.Context.IBdoDataContext.Save
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
