### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  commentId: T:BindOpen.Extensions.Runtime.BdoTaskConfiguration
  id: BdoTaskConfiguration
  parent: BindOpen.Extensions.Runtime
  children:
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor(System.String,BindOpen.Data.Elements.IDataElement[])
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check``1(System.Boolean,``0,System.String[])
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose(System.Boolean)
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  langs:
  - csharp
  - vb
  name: BdoTaskConfiguration
  nameWithType: BdoTaskConfiguration
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoTaskConfiguration
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 16
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThis class represents a task configuration.\n"
  example: []
  syntax:
    content: 'public class BdoTaskConfiguration : TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>, ITBdoExtensionTitledItemConfiguration<BdoTaskDefinition>, ITBdoExtensionItemConfiguration<BdoTaskDefinition>, IBdoTaskConfiguration, ITBdoExtensionTitledItemConfiguration<IBdoTaskDefinition>, ITBdoExtensionItemConfiguration<IBdoTaskDefinition>, IBdoBaseConfiguration, IDataElementSet, IDataItemSet<DataElement>, IGloballyDescribed, IGloballyTitled, INamed, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, ISavable'
    content.vb: >-
      Public Class BdoTaskConfiguration
          Inherits TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition)
          Implements ITBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition), ITBdoExtensionItemConfiguration(Of BdoTaskDefinition), IBdoTaskConfiguration, ITBdoExtensionTitledItemConfiguration(Of IBdoTaskDefinition), ITBdoExtensionItemConfiguration(Of IBdoTaskDefinition), IBdoBaseConfiguration, IDataElementSet, IDataItemSet(Of DataElement), IGloballyDescribed, IGloballyTitled, INamed, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, ISavable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  - BindOpen.Data.Elements.DataElementSet
  - BindOpen.Application.Configuration.BdoBaseConfiguration
  - BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  implements:
  - BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  - BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  - BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.IBdoTaskDefinition}
  - BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.IBdoTaskDefinition}
  - BindOpen.Application.Configuration.IBdoBaseConfiguration
  - BindOpen.Data.Elements.IDataElementSet
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement}
  - BindOpen.Data.Items.IGloballyDescribed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.ISavable
  inheritedMembers:
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Title
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.TitleSpecified
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitleText(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitleText(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitleText(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitleText(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddDescriptionText(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddDescriptionText(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetDescriptionText(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetDescriptionText(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetTitleText(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetDescriptionText(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitle(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitle(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitle(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitle(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetTitle(System.String,System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Kind
  - BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.DefinitionUniqueId
  - BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Group
  - BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GroupSpecified
  - BindOpen.Application.Configuration.BdoBaseConfiguration.Description
  - BindOpen.Application.Configuration.BdoBaseConfiguration.DescriptionSpecified
  - BindOpen.Application.Configuration.BdoBaseConfiguration.Name
  - BindOpen.Application.Configuration.BdoBaseConfiguration.CurrentFilePath
  - BindOpen.Application.Configuration.BdoBaseConfiguration.CreationDate
  - BindOpen.Application.Configuration.BdoBaseConfiguration.LastModificationDate
  - BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup(System.String,BindOpen.Data.Elements.IDataElement[])
  - BindOpen.Application.Configuration.BdoBaseConfiguration.Key
  - BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String)
  - BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String,System.String)
  - BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String)
  - BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String,System.String)
  - BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription(System.String,System.String)
  - BindOpen.Data.Elements.DataElementSet.Elements
  - BindOpen.Data.Elements.DataElementSet.ElementsSpecified
  - BindOpen.Data.Elements.DataElementSet.Item(System.String)
  - BindOpen.Data.Elements.DataElementSet.AddElement(BindOpen.Data.Elements.IDataElement,BindOpen.Data.Elements.IDataElementSet)
  - BindOpen.Data.Elements.DataElementSet.RemoveElement(System.String)
  - BindOpen.Data.Elements.DataElementSet.AddElementItem(System.String,System.Object,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElementSet.AddElementItems(System.String,System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElementSet.HasItem(System.String)
  - BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys(BindOpen.Data.Elements.IDataElementSet)
  - BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId(System.String)
  - BindOpen.Data.Elements.DataElementSet.GetElement(System.String,System.String)
  - BindOpen.Data.Elements.DataElementSet.GetGroupIds
  - BindOpen.Data.Elements.DataElementSet.GetElementObject(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElementSet.GetElementObject``1(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes(System.Int32)
  - BindOpen.Data.Elements.DataElementSet.GetTitleLabel(System.String,System.String,System.String,System.String[])
  - BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel(System.String,System.String,System.String,System.String[])
  - BindOpen.Data.Elements.DataElementSet.GetTextNode(System.String,System.String)
  - BindOpen.Data.Elements.DataElementSet.Sort(System.String)
  - BindOpen.Data.Elements.DataElementSet.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,{T1},System.String[])
  - BindOpen.Data.Elements.DataElementSet.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}._items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.ItemsSpecified
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Count
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Item(System.Int32)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.ClearItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(BindOpen.Data.Elements.DataElement[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Remove(System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.HasItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.GetItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(BindOpen.Data.Elements.DataElement,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(System.Collections.Generic.List{BindOpen.Data.Elements.DataElement},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.PropertyChanged
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.OnPropertyChanged(System.String)
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - BindOpen.Data.Elements.IDataElementSet.BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(System.String,BindOpen.Data.Elements.IDataElement[])
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Extensions.Runtime.BdoTaskConfiguration.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Extensions.Runtime.BdoTaskConfiguration})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - BindOpen.Data.Elements.IDataElementSet.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(System.Object)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail
  commentId: P:BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail
  id: InputDetail
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: InputDetail
  nameWithType: BdoTaskConfiguration.InputDetail
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: InputDetail
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 44
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nInput detail of this instance.\n"
  example: []
  syntax:
    content: public DataElementSet InputDetail { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Elements.DataElementSet
    content.vb: Public Property InputDetail As DataElementSet
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail*
  implements:
  - BindOpen.Extensions.Runtime.IBdoTaskConfiguration.InputDetail
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified
  commentId: P:BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified
  id: InputDetailSpecified
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: InputDetailSpecified
  nameWithType: BdoTaskConfiguration.InputDetailSpecified
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: InputDetailSpecified
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 54
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nSpecification of the InputSpecified property of this instance.\n"
  example: []
  syntax:
    content: public bool InputDetailSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property InputDetailSpecified As Boolean
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail
  commentId: P:BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail
  id: OutputDetail
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: OutputDetail
  nameWithType: BdoTaskConfiguration.OutputDetail
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: OutputDetail
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 60
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nOutput detail of this instance.\n"
  example: []
  syntax:
    content: public DataElementSet OutputDetail { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Elements.DataElementSet
    content.vb: Public Property OutputDetail As DataElementSet
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail*
  implements:
  - BindOpen.Extensions.Runtime.IBdoTaskConfiguration.OutputDetail
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified
  commentId: P:BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified
  id: OutputDetailSpecified
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: OutputDetailSpecified
  nameWithType: BdoTaskConfiguration.OutputDetailSpecified
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: OutputDetailSpecified
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 70
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nSpecification of the OutputSpecified property of this instance.\n"
  example: []
  syntax:
    content: public bool OutputDetailSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OutputDetailSpecified As Boolean
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor
  id: '#ctor'
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: BdoTaskConfiguration()
  nameWithType: BdoTaskConfiguration.BdoTaskConfiguration()
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.BdoTaskConfiguration()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 84
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nInstantiates a new instance of the TaskConfiguration class.\n"
  example: []
  syntax:
    content: public BdoTaskConfiguration()
    content.vb: Public Sub New
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor(System.String,BindOpen.Data.Elements.IDataElement[])
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor(System.String,BindOpen.Data.Elements.IDataElement[])
  id: '#ctor(System.String,BindOpen.Data.Elements.IDataElement[])'
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: BdoTaskConfiguration(String, IDataElement[])
  nameWithType: BdoTaskConfiguration.BdoTaskConfiguration(String, IDataElement[])
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.BdoTaskConfiguration(System.String, BindOpen.Data.Elements.IDataElement[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 93
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nInstantiates a new instance of the TaskConfiguration class.\n"
  example: []
  syntax:
    content: public BdoTaskConfiguration(string definitionUniqueId, params IDataElement[] items)
    parameters:
    - id: definitionUniqueId
      type: System.String
      description: The definition unique ID to consider.
    - id: items
      type: BindOpen.Data.Elements.IDataElement[]
      description: The items to consider.
    content.vb: Public Sub New(definitionUniqueId As String, ParamArray items As IDataElement())
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor*
  nameWithType.vb: BdoTaskConfiguration.BdoTaskConfiguration(String, IDataElement())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Extensions.Runtime.BdoTaskConfiguration.BdoTaskConfiguration(System.String, BindOpen.Data.Elements.IDataElement())
  name.vb: BdoTaskConfiguration(String, IDataElement())
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  id: GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: GetEntries(TaskEntryKind[])
  nameWithType: BdoTaskConfiguration.GetEntries(TaskEntryKind[])
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetEntries
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 115
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nGets the specified entries.\n"
  example: []
  syntax:
    content: public List<IDataElement> GetEntries(params TaskEntryKind[] taskEntryKinds)
    parameters:
    - id: taskEntryKinds
      type: BindOpen.Extensions.Definition.TaskEntryKind[]
      description: The kind end entries to consider.
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Elements.IDataElement}
      description: True if this instance is configurable.
    content.vb: Public Function GetEntries(ParamArray taskEntryKinds As TaskEntryKind()) As List(Of IDataElement)
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries*
  implements:
  - BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  nameWithType.vb: BdoTaskConfiguration.GetEntries(TaskEntryKind())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind())
  name.vb: GetEntries(TaskEntryKind())
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
  id: GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: GetEntryWithName(String, TaskEntryKind[])
  nameWithType: BdoTaskConfiguration.GetEntryWithName(String, TaskEntryKind[])
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName(System.String, BindOpen.Extensions.Definition.TaskEntryKind[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetEntryWithName
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 141
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nReturns the entry of the specified kind with the specified unique name.\n"
  example: []
  syntax:
    content: public IDataElement GetEntryWithName(string key, params TaskEntryKind[] taskEntryKinds)
    parameters:
    - id: key
      type: System.String
      description: The key to consider.
    - id: taskEntryKinds
      type: BindOpen.Extensions.Definition.TaskEntryKind[]
      description: The kind end entries to consider.
    return:
      type: BindOpen.Data.Elements.IDataElement
      description: Returns the input with the specified name.
    content.vb: Public Function GetEntryWithName(key As String, ParamArray taskEntryKinds As TaskEntryKind()) As IDataElement
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName*
  implements:
  - BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
  nameWithType.vb: BdoTaskConfiguration.GetEntryWithName(String, TaskEntryKind())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName(System.String, BindOpen.Extensions.Definition.TaskEntryKind())
  name.vb: GetEntryWithName(String, TaskEntryKind())
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone
  id: Clone
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: BdoTaskConfiguration.Clone()
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 158
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Returns the cloned metrics definition.
    content.vb: Public Overrides Function Clone As Object
  overridden: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Clone
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: BdoTaskConfiguration.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateStorageInfo
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 183
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nUpdates information for storage.\n"
  example: []
  syntax:
    content: public override void UpdateStorageInfo(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateStorageInfo(log As IBdoLog = Nothing)
  overridden: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoTaskConfiguration.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateRuntimeInfo
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 196
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nUpdates information for runtime.\n"
  example: []
  syntax:
    content: public override void UpdateRuntimeInfo(IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The set of script variables to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateRuntimeInfo(scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing)
  overridden: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: BdoTaskConfiguration.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Update
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 219
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nUpdates this instance.\n"
  remarks: Put reference collections as null if you do not want to repair this instance.
  example: []
  syntax:
    content: >-
      public override IBdoLog Update<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Log of the operation.
    content.vb: Public Overrides Function Update(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Elements.DataElementSet.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update*
  implements:
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: BdoTaskConfiguration.Update(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check``1(System.Boolean,``0,System.String[])
  id: Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: Check<T>(Boolean, T, String[])
  nameWithType: BdoTaskConfiguration.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check<T>(System.Boolean, T, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Check
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 244
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nChecks this instance.\n"
  example: []
  syntax:
    content: >-
      public override IBdoLog Check<T>(bool isExistenceChecked = true, T item = null, string[] specificationAreas = null)
          where T : IDataItem
    parameters:
    - id: isExistenceChecked
      type: System.Boolean
      description: Indicates whether the carrier existence is checked.
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the check log.
    content.vb: Public Overrides Function Check(Of T As IDataItem)(isExistenceChecked As Boolean = True, item As T = Nothing, specificationAreas As String() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,{T},System.String[])
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check*
  implements:
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  nameWithType.vb: BdoTaskConfiguration.Check(Of T)(Boolean, T, String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: BdoTaskConfiguration.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Repair
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 265
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nRepairs this instance with the specified definition.\n"
  example: []
  syntax:
    content: >-
      public override IBdoLog Repair<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Log of the operation.
    content.vb: Public Overrides Function Repair(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Elements.DataElementSet.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair*
  implements:
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: BdoTaskConfiguration.Repair(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose(System.Boolean)
  commentId: M:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: BdoTaskConfiguration.Dispose(Boolean)
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Dispose
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Tasks/BdoTaskConfiguration.cs
    startLine: 294
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nDisposes this instance. \n"
  example: []
  syntax:
    content: protected override void Dispose(bool isDisposing)
    parameters:
    - id: isDisposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(isDisposing As Boolean)
  overridden: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  overload: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  commentId: T:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<DataElement>
  nameWithType: DataItemSet<DataElement>
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>
  nameWithType.vb: DataItemSet(Of DataElement)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement)
  name.vb: DataItemSet(Of DataElement)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet
  commentId: T:BindOpen.Data.Elements.DataElementSet
  parent: BindOpen.Data.Elements
  name: DataElementSet
  nameWithType: DataElementSet
  fullName: BindOpen.Data.Elements.DataElementSet
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration
  commentId: T:BindOpen.Application.Configuration.BdoBaseConfiguration
  parent: BindOpen.Application.Configuration
  name: BdoBaseConfiguration
  nameWithType: BdoBaseConfiguration
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1
  name: TBdoExtensionItemConfiguration<BdoTaskDefinition>
  nameWithType: TBdoExtensionItemConfiguration<BdoTaskDefinition>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>
  nameWithType.vb: TBdoExtensionItemConfiguration(Of BdoTaskDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition)
  name.vb: TBdoExtensionItemConfiguration(Of BdoTaskDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1
    name: TBdoExtensionItemConfiguration
    nameWithType: TBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1
    name: TBdoExtensionItemConfiguration
    nameWithType: TBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1
  name: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition)
  name.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1
    name: TBdoExtensionTitledItemConfiguration
    nameWithType: TBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1
    name: TBdoExtensionTitledItemConfiguration
    nameWithType: TBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
  name: ITBdoExtensionTitledItemConfiguration<BdoTaskDefinition>
  nameWithType: ITBdoExtensionTitledItemConfiguration<BdoTaskDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>
  nameWithType.vb: ITBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition)
  name.vb: ITBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
    name: ITBdoExtensionTitledItemConfiguration
    nameWithType: ITBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
    name: ITBdoExtensionTitledItemConfiguration
    nameWithType: ITBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
  name: ITBdoExtensionItemConfiguration<BdoTaskDefinition>
  nameWithType: ITBdoExtensionItemConfiguration<BdoTaskDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>
  nameWithType.vb: ITBdoExtensionItemConfiguration(Of BdoTaskDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition)
  name.vb: ITBdoExtensionItemConfiguration(Of BdoTaskDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
    name: ITBdoExtensionItemConfiguration
    nameWithType: ITBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
    name: ITBdoExtensionItemConfiguration
    nameWithType: ITBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.BdoTaskDefinition
    name: BdoTaskDefinition
    nameWithType: BdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.BdoTaskDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  commentId: T:BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  parent: BindOpen.Extensions.Runtime
  name: IBdoTaskConfiguration
  nameWithType: IBdoTaskConfiguration
  fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.IBdoTaskDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.IBdoTaskDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
  name: ITBdoExtensionTitledItemConfiguration<IBdoTaskDefinition>
  nameWithType: ITBdoExtensionTitledItemConfiguration<IBdoTaskDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.IBdoTaskDefinition>
  nameWithType.vb: ITBdoExtensionTitledItemConfiguration(Of IBdoTaskDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.IBdoTaskDefinition)
  name.vb: ITBdoExtensionTitledItemConfiguration(Of IBdoTaskDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
    name: ITBdoExtensionTitledItemConfiguration
    nameWithType: ITBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoTaskDefinition
    name: IBdoTaskDefinition
    nameWithType: IBdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.IBdoTaskDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
    name: ITBdoExtensionTitledItemConfiguration
    nameWithType: ITBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoTaskDefinition
    name: IBdoTaskDefinition
    nameWithType: IBdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.IBdoTaskDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.IBdoTaskDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.IBdoTaskDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
  name: ITBdoExtensionItemConfiguration<IBdoTaskDefinition>
  nameWithType: ITBdoExtensionItemConfiguration<IBdoTaskDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration<BindOpen.Extensions.Definition.IBdoTaskDefinition>
  nameWithType.vb: ITBdoExtensionItemConfiguration(Of IBdoTaskDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration(Of BindOpen.Extensions.Definition.IBdoTaskDefinition)
  name.vb: ITBdoExtensionItemConfiguration(Of IBdoTaskDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
    name: ITBdoExtensionItemConfiguration
    nameWithType: ITBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoTaskDefinition
    name: IBdoTaskDefinition
    nameWithType: IBdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.IBdoTaskDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
    name: ITBdoExtensionItemConfiguration
    nameWithType: ITBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoTaskDefinition
    name: IBdoTaskDefinition
    nameWithType: IBdoTaskDefinition
    fullName: BindOpen.Extensions.Definition.IBdoTaskDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.IBdoBaseConfiguration
  commentId: T:BindOpen.Application.Configuration.IBdoBaseConfiguration
  parent: BindOpen.Application.Configuration
  name: IBdoBaseConfiguration
  nameWithType: IBdoBaseConfiguration
  fullName: BindOpen.Application.Configuration.IBdoBaseConfiguration
- uid: BindOpen.Data.Elements.IDataElementSet
  commentId: T:BindOpen.Data.Elements.IDataElementSet
  parent: BindOpen.Data.Elements
  name: IDataElementSet
  nameWithType: IDataElementSet
  fullName: BindOpen.Data.Elements.IDataElementSet
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement}
  commentId: T:BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<DataElement>
  nameWithType: IDataItemSet<DataElement>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Elements.DataElement>
  nameWithType.vb: IDataItemSet(Of DataElement)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Elements.DataElement)
  name.vb: IDataItemSet(Of DataElement)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.IGloballyTitled
  commentId: T:BindOpen.Data.Items.IGloballyTitled
  parent: BindOpen.Data.Items
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.ISavable
  commentId: T:BindOpen.Data.Items.ISavable
  parent: BindOpen.Data.Items
  name: ISavable
  nameWithType: ISavable
  fullName: BindOpen.Data.Items.ISavable
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Title
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Title
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Title
  name: Title
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.Title
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.Title
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).Title
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).Title
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.TitleSpecified
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.TitleSpecified
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.TitleSpecified
  name: TitleSpecified
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.TitleSpecified
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.TitleSpecified
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).TitleSpecified
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).TitleSpecified
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitleText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitleText(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String)
  name: AddTitleText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitleText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitleText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitleText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitleText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitleText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitleText(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)
  name: AddTitleText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitleText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitleText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitleText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitleText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitleText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitleText(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String)
  name: SetTitleText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitleText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitleText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitleText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitleText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitleText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitleText(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)
  name: SetTitleText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitleText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitleText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitleText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitleText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddDescriptionText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddDescriptionText(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)
  name: AddDescriptionText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddDescriptionText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddDescriptionText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddDescriptionText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddDescriptionText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddDescriptionText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddDescriptionText(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)
  name: AddDescriptionText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddDescriptionText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddDescriptionText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddDescriptionText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddDescriptionText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetDescriptionText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetDescriptionText(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)
  name: SetDescriptionText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetDescriptionText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetDescriptionText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetDescriptionText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetDescriptionText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetDescriptionText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetDescriptionText(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)
  name: SetDescriptionText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetDescriptionText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetDescriptionText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetDescriptionText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetDescriptionText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetTitleText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetTitleText(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)
  name: GetTitleText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.GetTitleText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.GetTitleText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).GetTitleText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).GetTitleText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)
    name: GetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.GetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.GetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)
    name: GetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).GetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).GetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetDescriptionText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetDescriptionText(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)
  name: GetDescriptionText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.GetDescriptionText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.GetDescriptionText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).GetDescriptionText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).GetDescriptionText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)
    name: GetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.GetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.GetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)
    name: GetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).GetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).GetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitle(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitle(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String)
  name: AddTitle(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitle(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitle(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitle(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.AddTitle(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String,System.String)
  name: AddTitle(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitle(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitle(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitle(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitle(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitle(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String)
  name: SetTitle(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitle(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitle(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitle(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.SetTitle(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String,System.String)
  name: SetTitle(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitle(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitle(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitle(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GetTitle(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitle(System.String,System.String)
  name: GetTitle(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.GetTitle(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.GetTitle(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).GetTitle(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.GetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).GetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Kind
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Kind
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.Kind
  name: Kind
  nameWithType: TBdoExtensionItemConfiguration<BdoTaskDefinition>.Kind
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.Kind
  nameWithType.vb: TBdoExtensionItemConfiguration(Of BdoTaskDefinition).Kind
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).Kind
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.DefinitionUniqueId
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.DefinitionUniqueId
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.DefinitionUniqueId
  name: DefinitionUniqueId
  nameWithType: TBdoExtensionItemConfiguration<BdoTaskDefinition>.DefinitionUniqueId
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.DefinitionUniqueId
  nameWithType.vb: TBdoExtensionItemConfiguration(Of BdoTaskDefinition).DefinitionUniqueId
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).DefinitionUniqueId
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Group
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Group
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.Group
  name: Group
  nameWithType: TBdoExtensionItemConfiguration<BdoTaskDefinition>.Group
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.Group
  nameWithType.vb: TBdoExtensionItemConfiguration(Of BdoTaskDefinition).Group
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).Group
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GroupSpecified
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.GroupSpecified
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.GroupSpecified
  name: GroupSpecified
  nameWithType: TBdoExtensionItemConfiguration<BdoTaskDefinition>.GroupSpecified
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.GroupSpecified
  nameWithType.vb: TBdoExtensionItemConfiguration(Of BdoTaskDefinition).GroupSpecified
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).GroupSpecified
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.Description
  commentId: P:BindOpen.Application.Configuration.BdoBaseConfiguration.Description
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: Description
  nameWithType: BdoBaseConfiguration.Description
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.Description
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.DescriptionSpecified
  commentId: P:BindOpen.Application.Configuration.BdoBaseConfiguration.DescriptionSpecified
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: DescriptionSpecified
  nameWithType: BdoBaseConfiguration.DescriptionSpecified
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.DescriptionSpecified
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.Name
  commentId: P:BindOpen.Application.Configuration.BdoBaseConfiguration.Name
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: Name
  nameWithType: BdoBaseConfiguration.Name
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.Name
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.CurrentFilePath
  commentId: P:BindOpen.Application.Configuration.BdoBaseConfiguration.CurrentFilePath
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: CurrentFilePath
  nameWithType: BdoBaseConfiguration.CurrentFilePath
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.CurrentFilePath
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.CreationDate
  commentId: P:BindOpen.Application.Configuration.BdoBaseConfiguration.CreationDate
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: CreationDate
  nameWithType: BdoBaseConfiguration.CreationDate
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.CreationDate
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.LastModificationDate
  commentId: P:BindOpen.Application.Configuration.BdoBaseConfiguration.LastModificationDate
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: LastModificationDate
  nameWithType: BdoBaseConfiguration.LastModificationDate
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.LastModificationDate
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup(System.String,BindOpen.Data.Elements.IDataElement[])
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup(System.String,BindOpen.Data.Elements.IDataElement[])
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  isExternal: true
  name: AddGroup(String, IDataElement[])
  nameWithType: BdoBaseConfiguration.AddGroup(String, IDataElement[])
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup(System.String, BindOpen.Data.Elements.IDataElement[])
  nameWithType.vb: BdoBaseConfiguration.AddGroup(String, IDataElement())
  fullName.vb: BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup(System.String, BindOpen.Data.Elements.IDataElement())
  name.vb: AddGroup(String, IDataElement())
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup(System.String,BindOpen.Data.Elements.IDataElement[])
    name: AddGroup
    nameWithType: BdoBaseConfiguration.AddGroup
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup(System.String,BindOpen.Data.Elements.IDataElement[])
    name: AddGroup
    nameWithType: BdoBaseConfiguration.AddGroup
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddGroup
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.Key
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.Key
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: Key()
  nameWithType: BdoBaseConfiguration.Key()
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.Key()
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.Key
    name: Key
    nameWithType: BdoBaseConfiguration.Key
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.Key
    name: Key
    nameWithType: BdoBaseConfiguration.Key
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  isExternal: true
  name: SaveXml(String, IBdoLog)
  nameWithType: BdoBaseConfiguration.SaveXml(String, IBdoLog)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: BdoBaseConfiguration.SaveXml
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: BdoBaseConfiguration.SaveXml
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  isExternal: true
  name: AddDescription(String)
  nameWithType: BdoBaseConfiguration.AddDescription(String)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String)
    name: AddDescription
    nameWithType: BdoBaseConfiguration.AddDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String)
    name: AddDescription
    nameWithType: BdoBaseConfiguration.AddDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String,System.String)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: BdoBaseConfiguration.AddDescription(String, String)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: BdoBaseConfiguration.AddDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: BdoBaseConfiguration.AddDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  isExternal: true
  name: SetDescription(String)
  nameWithType: BdoBaseConfiguration.SetDescription(String)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String)
    name: SetDescription
    nameWithType: BdoBaseConfiguration.SetDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String)
    name: SetDescription
    nameWithType: BdoBaseConfiguration.SetDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String,System.String)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: BdoBaseConfiguration.SetDescription(String, String)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: BdoBaseConfiguration.SetDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: BdoBaseConfiguration.SetDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription(System.String,System.String)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: BdoBaseConfiguration.GetDescription(String, String)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: BdoBaseConfiguration.GetDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: BdoBaseConfiguration.GetDescription
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Elements
  commentId: P:BindOpen.Data.Elements.DataElementSet.Elements
  parent: BindOpen.Data.Elements.DataElementSet
  name: Elements
  nameWithType: DataElementSet.Elements
  fullName: BindOpen.Data.Elements.DataElementSet.Elements
- uid: BindOpen.Data.Elements.DataElementSet.ElementsSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSet.ElementsSpecified
  parent: BindOpen.Data.Elements.DataElementSet
  name: ElementsSpecified
  nameWithType: DataElementSet.ElementsSpecified
  fullName: BindOpen.Data.Elements.DataElementSet.ElementsSpecified
- uid: BindOpen.Data.Elements.DataElementSet.Item(System.String)
  commentId: P:BindOpen.Data.Elements.DataElementSet.Item(System.String)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: Item[String]
  nameWithType: DataElementSet.Item[String]
  fullName: BindOpen.Data.Elements.DataElementSet.Item[System.String]
  nameWithType.vb: DataElementSet.Item(String)
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Item(System.String)
    name: Item
    nameWithType: DataElementSet.Item
    fullName: BindOpen.Data.Elements.DataElementSet.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Item(System.String)
    name: Item
    nameWithType: DataElementSet.Item
    fullName: BindOpen.Data.Elements.DataElementSet.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.AddElement(BindOpen.Data.Elements.IDataElement,BindOpen.Data.Elements.IDataElementSet)
  commentId: M:BindOpen.Data.Elements.DataElementSet.AddElement(BindOpen.Data.Elements.IDataElement,BindOpen.Data.Elements.IDataElementSet)
  parent: BindOpen.Data.Elements.DataElementSet
  name: AddElement(IDataElement, IDataElementSet)
  nameWithType: DataElementSet.AddElement(IDataElement, IDataElementSet)
  fullName: BindOpen.Data.Elements.DataElementSet.AddElement(BindOpen.Data.Elements.IDataElement, BindOpen.Data.Elements.IDataElementSet)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.AddElement(BindOpen.Data.Elements.IDataElement,BindOpen.Data.Elements.IDataElementSet)
    name: AddElement
    nameWithType: DataElementSet.AddElement
    fullName: BindOpen.Data.Elements.DataElementSet.AddElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.AddElement(BindOpen.Data.Elements.IDataElement,BindOpen.Data.Elements.IDataElementSet)
    name: AddElement
    nameWithType: DataElementSet.AddElement
    fullName: BindOpen.Data.Elements.DataElementSet.AddElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.RemoveElement(System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSet.RemoveElement(System.String)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: RemoveElement(String)
  nameWithType: DataElementSet.RemoveElement(String)
  fullName: BindOpen.Data.Elements.DataElementSet.RemoveElement(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.RemoveElement(System.String)
    name: RemoveElement
    nameWithType: DataElementSet.RemoveElement
    fullName: BindOpen.Data.Elements.DataElementSet.RemoveElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.RemoveElement(System.String)
    name: RemoveElement
    nameWithType: DataElementSet.RemoveElement
    fullName: BindOpen.Data.Elements.DataElementSet.RemoveElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.AddElementItem(System.String,System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElementSet.AddElementItem(System.String,System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: AddElementItem(String, Object, IBdoLog)
  nameWithType: DataElementSet.AddElementItem(String, Object, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElementSet.AddElementItem(System.String, System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.AddElementItem(System.String,System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: AddElementItem
    nameWithType: DataElementSet.AddElementItem
    fullName: BindOpen.Data.Elements.DataElementSet.AddElementItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.AddElementItem(System.String,System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: AddElementItem
    nameWithType: DataElementSet.AddElementItem
    fullName: BindOpen.Data.Elements.DataElementSet.AddElementItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.AddElementItems(System.String,System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElementSet.AddElementItems(System.String,System.Object[],BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: AddElementItems(String, Object[], IBdoLog)
  nameWithType: DataElementSet.AddElementItems(String, Object[], IBdoLog)
  fullName: BindOpen.Data.Elements.DataElementSet.AddElementItems(System.String, System.Object[], BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataElementSet.AddElementItems(String, Object(), IBdoLog)
  fullName.vb: BindOpen.Data.Elements.DataElementSet.AddElementItems(System.String, System.Object(), BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddElementItems(String, Object(), IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.AddElementItems(System.String,System.Object[],BindOpen.System.Diagnostics.IBdoLog)
    name: AddElementItems
    nameWithType: DataElementSet.AddElementItems
    fullName: BindOpen.Data.Elements.DataElementSet.AddElementItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.AddElementItems(System.String,System.Object[],BindOpen.System.Diagnostics.IBdoLog)
    name: AddElementItems
    nameWithType: DataElementSet.AddElementItems
    fullName: BindOpen.Data.Elements.DataElementSet.AddElementItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.HasItem(System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSet.HasItem(System.String)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: HasItem(String)
  nameWithType: DataElementSet.HasItem(String)
  fullName: BindOpen.Data.Elements.DataElementSet.HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.HasItem(System.String)
    name: HasItem
    nameWithType: DataElementSet.HasItem
    fullName: BindOpen.Data.Elements.DataElementSet.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.HasItem(System.String)
    name: HasItem
    nameWithType: DataElementSet.HasItem
    fullName: BindOpen.Data.Elements.DataElementSet.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys(BindOpen.Data.Elements.IDataElementSet)
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys(BindOpen.Data.Elements.IDataElementSet)
  parent: BindOpen.Data.Elements.DataElementSet
  name: GetCommonItemKeys(IDataElementSet)
  nameWithType: DataElementSet.GetCommonItemKeys(IDataElementSet)
  fullName: BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys(BindOpen.Data.Elements.IDataElementSet)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys(BindOpen.Data.Elements.IDataElementSet)
    name: GetCommonItemKeys
    nameWithType: DataElementSet.GetCommonItemKeys
    fullName: BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys(BindOpen.Data.Elements.IDataElementSet)
    name: GetCommonItemKeys
    nameWithType: DataElementSet.GetCommonItemKeys
    fullName: BindOpen.Data.Elements.DataElementSet.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId(System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId(System.String)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetElementsWithGroupId(String)
  nameWithType: DataElementSet.GetElementsWithGroupId(String)
  fullName: BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId(System.String)
    name: GetElementsWithGroupId
    nameWithType: DataElementSet.GetElementsWithGroupId
    fullName: BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId(System.String)
    name: GetElementsWithGroupId
    nameWithType: DataElementSet.GetElementsWithGroupId
    fullName: BindOpen.Data.Elements.DataElementSet.GetElementsWithGroupId
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetElement(System.String,System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetElement(System.String,System.String)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetElement(String, String)
  nameWithType: DataElementSet.GetElement(String, String)
  fullName: BindOpen.Data.Elements.DataElementSet.GetElement(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElement(System.String,System.String)
    name: GetElement
    nameWithType: DataElementSet.GetElement
    fullName: BindOpen.Data.Elements.DataElementSet.GetElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElement(System.String,System.String)
    name: GetElement
    nameWithType: DataElementSet.GetElement
    fullName: BindOpen.Data.Elements.DataElementSet.GetElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetGroupIds
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetGroupIds
  parent: BindOpen.Data.Elements.DataElementSet
  name: GetGroupIds()
  nameWithType: DataElementSet.GetGroupIds()
  fullName: BindOpen.Data.Elements.DataElementSet.GetGroupIds()
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetGroupIds
    name: GetGroupIds
    nameWithType: DataElementSet.GetGroupIds
    fullName: BindOpen.Data.Elements.DataElementSet.GetGroupIds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetGroupIds
    name: GetGroupIds
    nameWithType: DataElementSet.GetGroupIds
    fullName: BindOpen.Data.Elements.DataElementSet.GetGroupIds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetElementObject(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetElementObject(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetElementObject(String, IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElementSet.GetElementObject(String, IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElementSet.GetElementObject(System.String, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElementObject(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetElementObject
    nameWithType: DataElementSet.GetElementObject
    fullName: BindOpen.Data.Elements.DataElementSet.GetElementObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElementObject(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetElementObject
    nameWithType: DataElementSet.GetElementObject
    fullName: BindOpen.Data.Elements.DataElementSet.GetElementObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetElementObject``1(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetElementObject``1(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetElementObject<T>(String, IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataElementSet.GetElementObject<T>(String, IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Elements.DataElementSet.GetElementObject<T>(System.String, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataElementSet.GetElementObject(Of T)(String, IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Elements.DataElementSet.GetElementObject(Of T)(System.String, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: GetElementObject(Of T)(String, IBdoScope, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElementObject``1(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetElementObject<T>
    nameWithType: DataElementSet.GetElementObject<T>
    fullName: BindOpen.Data.Elements.DataElementSet.GetElementObject<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetElementObject``1(System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: GetElementObject(Of T)
    nameWithType: DataElementSet.GetElementObject(Of T)
    fullName: BindOpen.Data.Elements.DataElementSet.GetElementObject(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes(System.Int32)
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes(System.Int32)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetAvailableIndexes(Int32)
  nameWithType: DataElementSet.GetAvailableIndexes(Int32)
  fullName: BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes(System.Int32)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes(System.Int32)
    name: GetAvailableIndexes
    nameWithType: DataElementSet.GetAvailableIndexes
    fullName: BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes(System.Int32)
    name: GetAvailableIndexes
    nameWithType: DataElementSet.GetAvailableIndexes
    fullName: BindOpen.Data.Elements.DataElementSet.GetAvailableIndexes
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetTitleLabel(System.String,System.String,System.String,System.String[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetTitleLabel(System.String,System.String,System.String,System.String[])
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetTitleLabel(String, String, String, String[])
  nameWithType: DataElementSet.GetTitleLabel(String, String, String, String[])
  fullName: BindOpen.Data.Elements.DataElementSet.GetTitleLabel(System.String, System.String, System.String, System.String[])
  nameWithType.vb: DataElementSet.GetTitleLabel(String, String, String, String())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.GetTitleLabel(System.String, System.String, System.String, System.String())
  name.vb: GetTitleLabel(String, String, String, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetTitleLabel(System.String,System.String,System.String,System.String[])
    name: GetTitleLabel
    nameWithType: DataElementSet.GetTitleLabel
    fullName: BindOpen.Data.Elements.DataElementSet.GetTitleLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetTitleLabel(System.String,System.String,System.String,System.String[])
    name: GetTitleLabel
    nameWithType: DataElementSet.GetTitleLabel
    fullName: BindOpen.Data.Elements.DataElementSet.GetTitleLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel(System.String,System.String,System.String,System.String[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel(System.String,System.String,System.String,System.String[])
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetDescriptionLabel(String, String, String, String[])
  nameWithType: DataElementSet.GetDescriptionLabel(String, String, String, String[])
  fullName: BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel(System.String, System.String, System.String, System.String[])
  nameWithType.vb: DataElementSet.GetDescriptionLabel(String, String, String, String())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel(System.String, System.String, System.String, System.String())
  name.vb: GetDescriptionLabel(String, String, String, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel(System.String,System.String,System.String,System.String[])
    name: GetDescriptionLabel
    nameWithType: DataElementSet.GetDescriptionLabel
    fullName: BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel(System.String,System.String,System.String,System.String[])
    name: GetDescriptionLabel
    nameWithType: DataElementSet.GetDescriptionLabel
    fullName: BindOpen.Data.Elements.DataElementSet.GetDescriptionLabel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.GetTextNode(System.String,System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSet.GetTextNode(System.String,System.String)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: GetTextNode(String, String)
  nameWithType: DataElementSet.GetTextNode(String, String)
  fullName: BindOpen.Data.Elements.DataElementSet.GetTextNode(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.GetTextNode(System.String,System.String)
    name: GetTextNode
    nameWithType: DataElementSet.GetTextNode
    fullName: BindOpen.Data.Elements.DataElementSet.GetTextNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.GetTextNode(System.String,System.String)
    name: GetTextNode
    nameWithType: DataElementSet.GetTextNode
    fullName: BindOpen.Data.Elements.DataElementSet.GetTextNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Sort(System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSet.Sort(System.String)
  parent: BindOpen.Data.Elements.DataElementSet
  isExternal: true
  name: Sort(String)
  nameWithType: DataElementSet.Sort(String)
  fullName: BindOpen.Data.Elements.DataElementSet.Sort(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Sort(System.String)
    name: Sort
    nameWithType: DataElementSet.Sort
    fullName: BindOpen.Data.Elements.DataElementSet.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Sort(System.String)
    name: Sort
    nameWithType: DataElementSet.Sort
    fullName: BindOpen.Data.Elements.DataElementSet.Sort
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElementSet
  definition: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataElementSet.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSet.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSet.Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataElementSet.Update<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataElementSet.Update(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,{T1},System.String[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Elements.DataElementSet
  definition: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataElementSet.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Elements.DataElementSet.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataElementSet.Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataElementSet.Check<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataElementSet.Check(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElementSet
  definition: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataElementSet.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSet.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSet.Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataElementSet.Repair<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataElementSet.Repair(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}._items
  commentId: F:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}._items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<DataElement>._items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>._items
  nameWithType.vb: DataItemSet(Of DataElement)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement)._items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Items
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<DataElement>.Items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Items
  nameWithType.vb: DataItemSet(Of DataElement).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.ItemsSpecified
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<DataElement>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of DataElement).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Count
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Count
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<DataElement>.Count
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Count
  nameWithType.vb: DataItemSet(Of DataElement).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Count
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Item(System.Int32)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: DataItemSet<DataElement>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of DataElement).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<DataElement>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of DataElement).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.ClearItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<DataElement>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.ClearItems()
  nameWithType.vb: DataItemSet(Of DataElement).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<DataElement>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of DataElement).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(BindOpen.Data.Elements.DataElement[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(BindOpen.Data.Elements.DataElement[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(DataElement[])
  nameWithType: DataItemSet<DataElement>.Add(DataElement[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Add(BindOpen.Data.Elements.DataElement[])
  nameWithType.vb: DataItemSet(Of DataElement).Add(DataElement())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Add(BindOpen.Data.Elements.DataElement())
  name.vb: Add(DataElement())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<DataElement>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of DataElement).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Remove(System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  name: Remove(String[])
  nameWithType: DataItemSet<DataElement>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of DataElement).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<DataElement>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of DataElement).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.HasItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<DataElement>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.HasItems()
  nameWithType.vb: DataItemSet(Of DataElement).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<DataElement>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of DataElement).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.GetItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  name: GetItem(String)
  nameWithType: DataItemSet<DataElement>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of DataElement).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<DataElement>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of DataElement).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<DataElement>)
  nameWithType: DataItemSet<DataElement>.GetCommonItemKeys(IDataItemSet<DataElement>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Elements.DataElement>)
  nameWithType.vb: DataItemSet(Of DataElement).GetCommonItemKeys(IDataItemSet(Of DataElement))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Elements.DataElement))
  name.vb: GetCommonItemKeys(IDataItemSet(Of DataElement))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<DataElement>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of DataElement).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(BindOpen.Data.Elements.DataElement,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(BindOpen.Data.Elements.DataElement,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(DataElement, IDataItemSet<DataElement>)
  nameWithType: DataItemSet<DataElement>.Add(DataElement, IDataItemSet<DataElement>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Add(BindOpen.Data.Elements.DataElement, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Elements.DataElement>)
  nameWithType.vb: DataItemSet(Of DataElement).Add(DataElement, IDataItemSet(Of DataElement))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Add(BindOpen.Data.Elements.DataElement, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Elements.DataElement))
  name.vb: Add(DataElement, IDataItemSet(Of DataElement))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<DataElement>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of DataElement).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(System.Collections.Generic.List{BindOpen.Data.Elements.DataElement},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.Add(System.Collections.Generic.List{BindOpen.Data.Elements.DataElement},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Elements.DataElement})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(List<DataElement>, IDataItemSet<DataElement>)
  nameWithType: DataItemSet<DataElement>.Add(List<DataElement>, IDataItemSet<DataElement>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Add(System.Collections.Generic.List<BindOpen.Data.Elements.DataElement>, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Elements.DataElement>)
  nameWithType.vb: DataItemSet(Of DataElement).Add(List(Of DataElement), IDataItemSet(Of DataElement))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Add(System.Collections.Generic.List(Of BindOpen.Data.Elements.DataElement), BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Elements.DataElement))
  name.vb: Add(List(Of DataElement), IDataItemSet(Of DataElement))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<DataElement>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of DataElement).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.DataElement
    name: DataElement
    nameWithType: DataElement
    fullName: BindOpen.Data.Elements.DataElement
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.PropertyChanged
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<DataElement>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.PropertyChanged
  nameWithType.vb: DataItemSet(Of DataElement).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}.OnPropertyChanged(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Elements.DataElement}
  definition: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<DataElement>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of DataElement).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<DataElement>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Elements.DataElement>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of DataElement).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Elements.DataElement).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElementSet.BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
  commentId: M:BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
  parent: BindOpen.Application.Arguments.AppArgumentHelper
  definition: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
  name: Check(IOptionSpecSet, Boolean)
  nameWithType: AppArgumentHelper.Check(IOptionSpecSet, Boolean)
  fullName: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Application.Options.IOptionSpecSet, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
    name: Check
    nameWithType: AppArgumentHelper.Check
    fullName: BindOpen.Application.Arguments.AppArgumentHelper.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
    name: Check
    nameWithType: AppArgumentHelper.Check
    fullName: BindOpen.Application.Arguments.AppArgumentHelper.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(System.String,BindOpen.Data.Elements.IDataElement[])
  commentId: M:BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(``0,System.String,BindOpen.Data.Elements.IDataElement[])
  parent: BindOpen.Application.Configuration.ConfigurationFactory
  definition: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(``0,System.String,BindOpen.Data.Elements.IDataElement[])
  name: AddGroup<BdoTaskConfiguration>(String, IDataElement[])
  nameWithType: ConfigurationFactory.AddGroup<BdoTaskConfiguration>(String, IDataElement[])
  fullName: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup<BindOpen.Extensions.Runtime.BdoTaskConfiguration>(System.String, BindOpen.Data.Elements.IDataElement[])
  nameWithType.vb: ConfigurationFactory.AddGroup(Of BdoTaskConfiguration)(String, IDataElement())
  fullName.vb: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup(Of BindOpen.Extensions.Runtime.BdoTaskConfiguration)(System.String, BindOpen.Data.Elements.IDataElement())
  name.vb: AddGroup(Of BdoTaskConfiguration)(String, IDataElement())
  spec.csharp:
  - uid: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(System.String,BindOpen.Data.Elements.IDataElement[])
    name: AddGroup<BdoTaskConfiguration>
    nameWithType: ConfigurationFactory.AddGroup<BdoTaskConfiguration>
    fullName: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup<BindOpen.Extensions.Runtime.BdoTaskConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(System.String,BindOpen.Data.Elements.IDataElement[])
    name: AddGroup(Of BdoTaskConfiguration)
    nameWithType: ConfigurationFactory.AddGroup(Of BdoTaskConfiguration)
    fullName: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup(Of BindOpen.Extensions.Runtime.BdoTaskConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Extensions.Runtime.BdoTaskConfiguration})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<BdoTaskConfiguration>(Action<BdoTaskConfiguration>)
  nameWithType: ObjectHelper.Using<BdoTaskConfiguration>(Action<BdoTaskConfiguration>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Extensions.Runtime.BdoTaskConfiguration>(System.Action<BindOpen.Extensions.Runtime.BdoTaskConfiguration>)
  nameWithType.vb: ObjectHelper.Using(Of BdoTaskConfiguration)(Action(Of BdoTaskConfiguration))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Extensions.Runtime.BdoTaskConfiguration)(System.Action(Of BindOpen.Extensions.Runtime.BdoTaskConfiguration))
  name.vb: Using(Of BdoTaskConfiguration)(Action(Of BdoTaskConfiguration))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<BdoTaskConfiguration>
    nameWithType: ObjectHelper.Using<BdoTaskConfiguration>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Extensions.Runtime.BdoTaskConfiguration>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration
    name: BdoTaskConfiguration
    nameWithType: BdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of BdoTaskConfiguration)
    nameWithType: ObjectHelper.Using(Of BdoTaskConfiguration)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Extensions.Runtime.BdoTaskConfiguration)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration
    name: BdoTaskConfiguration
    nameWithType: BdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElementSet.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(BindOpen.Data.Elements.IDataElementSet,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(BindOpen.Data.Elements.IDataElementSet,System.Object)
  name: UpdateFromObject<T>(Object)
  nameWithType: ObjectHelper.UpdateFromObject<T>(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject<T>(System.Object)
  nameWithType.vb: ObjectHelper.UpdateFromObject(Of T)(Object)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject(Of T)(System.Object)
  name.vb: UpdateFromObject(Of T)(Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(System.Object)
    name: UpdateFromObject<T>
    nameWithType: ObjectHelper.UpdateFromObject<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(System.Object)
    name: UpdateFromObject(Of T)
    nameWithType: ObjectHelper.UpdateFromObject(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Items.DataItemSet`1
  commentId: T:BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<T>
  nameWithType: DataItemSet<T>
  fullName: BindOpen.Data.Items.DataItemSet<T>
  nameWithType.vb: DataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)
  name.vb: DataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: BindOpen.Application.Configuration
  commentId: N:BindOpen.Application.Configuration
  name: BindOpen.Application.Configuration
  nameWithType: BindOpen.Application.Configuration
  fullName: BindOpen.Application.Configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1
  name: TBdoExtensionItemConfiguration<T>
  nameWithType: TBdoExtensionItemConfiguration<T>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<T>
  nameWithType.vb: TBdoExtensionItemConfiguration(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of T)
  name.vb: TBdoExtensionItemConfiguration(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1
    name: TBdoExtensionItemConfiguration
    nameWithType: TBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1
    name: TBdoExtensionItemConfiguration
    nameWithType: TBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1
  name: TBdoExtensionTitledItemConfiguration<T>
  nameWithType: TBdoExtensionTitledItemConfiguration<T>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T)
  name.vb: TBdoExtensionTitledItemConfiguration(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1
    name: TBdoExtensionTitledItemConfiguration
    nameWithType: TBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1
    name: TBdoExtensionTitledItemConfiguration
    nameWithType: TBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
  name: ITBdoExtensionTitledItemConfiguration<T>
  nameWithType: ITBdoExtensionTitledItemConfiguration<T>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration<T>
  nameWithType.vb: ITBdoExtensionTitledItemConfiguration(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration(Of T)
  name.vb: ITBdoExtensionTitledItemConfiguration(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
    name: ITBdoExtensionTitledItemConfiguration
    nameWithType: ITBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration`1
    name: ITBdoExtensionTitledItemConfiguration
    nameWithType: ITBdoExtensionTitledItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionTitledItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
  name: ITBdoExtensionItemConfiguration<T>
  nameWithType: ITBdoExtensionItemConfiguration<T>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration<T>
  nameWithType.vb: ITBdoExtensionItemConfiguration(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration(Of T)
  name.vb: ITBdoExtensionItemConfiguration(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
    name: ITBdoExtensionItemConfiguration
    nameWithType: ITBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration`1
    name: ITBdoExtensionItemConfiguration
    nameWithType: ITBdoExtensionItemConfiguration
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItemConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  commentId: T:BindOpen.Data.Items.IDataItemSet`1
  parent: BindOpen.Data.Items
  name: IDataItemSet<T>
  nameWithType: IDataItemSet<T>
  fullName: BindOpen.Data.Items.IDataItemSet<T>
  nameWithType.vb: IDataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T)
  name.vb: IDataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Title
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Title
  name: Title
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.Title
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.Title
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).Title
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).Title
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.TitleSpecified
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.TitleSpecified
  name: TitleSpecified
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.TitleSpecified
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.TitleSpecified
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).TitleSpecified
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).TitleSpecified
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String)
  isExternal: true
  name: AddTitleText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitleText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitleText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).AddTitleText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitleText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)
  isExternal: true
  name: AddTitleText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitleText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitleText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).AddTitleText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitleText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitleText(System.String,System.String)
    name: AddTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).AddTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String)
  isExternal: true
  name: SetTitleText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitleText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitleText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).SetTitleText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitleText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)
  isExternal: true
  name: SetTitleText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitleText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitleText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).SetTitleText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitleText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitleText(System.String,System.String)
    name: SetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).SetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)
  isExternal: true
  name: AddDescriptionText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)
  isExternal: true
  name: AddDescriptionText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddDescriptionText(System.String,System.String)
    name: AddDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)
  isExternal: true
  name: SetDescriptionText(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)
  isExternal: true
  name: SetDescriptionText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetDescriptionText(System.String,System.String)
    name: SetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)
  isExternal: true
  name: GetTitleText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.GetTitleText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.GetTitleText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).GetTitleText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).GetTitleText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)
    name: GetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.GetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.GetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitleText(System.String,System.String)
    name: GetTitleText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).GetTitleText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).GetTitleText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)
  isExternal: true
  name: GetDescriptionText(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.GetDescriptionText(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.GetDescriptionText(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).GetDescriptionText(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).GetDescriptionText(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)
    name: GetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.GetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.GetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetDescriptionText(System.String,System.String)
    name: GetDescriptionText
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).GetDescriptionText
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).GetDescriptionText
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String)
  isExternal: true
  name: AddTitle(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitle(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitle(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).AddTitle(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String,System.String)
  isExternal: true
  name: AddTitle(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitle(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitle(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).AddTitle(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).AddTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String)
  isExternal: true
  name: SetTitle(String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitle(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitle(System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).SetTitle(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String,System.String)
  isExternal: true
  name: SetTitle(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitle(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitle(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).SetTitle(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).SetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitle(System.String,System.String)
  isExternal: true
  name: GetTitle(String, String)
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.GetTitle(String, String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.GetTitle(System.String, System.String)
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).GetTitle(String, String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.GetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).GetTitle
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.Kind
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.Kind
  name: Kind
  nameWithType: TBdoExtensionItemConfiguration<T>.Kind
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<T>.Kind
  nameWithType.vb: TBdoExtensionItemConfiguration(Of T).Kind
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of T).Kind
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.DefinitionUniqueId
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.DefinitionUniqueId
  name: DefinitionUniqueId
  nameWithType: TBdoExtensionItemConfiguration<T>.DefinitionUniqueId
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<T>.DefinitionUniqueId
  nameWithType.vb: TBdoExtensionItemConfiguration(Of T).DefinitionUniqueId
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of T).DefinitionUniqueId
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.Group
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.Group
  name: Group
  nameWithType: TBdoExtensionItemConfiguration<T>.Group
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<T>.Group
  nameWithType.vb: TBdoExtensionItemConfiguration(Of T).Group
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of T).Group
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.GroupSpecified
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration`1.GroupSpecified
  name: GroupSpecified
  nameWithType: TBdoExtensionItemConfiguration<T>.GroupSpecified
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration<T>.GroupSpecified
  nameWithType.vb: TBdoExtensionItemConfiguration(Of T).GroupSpecified
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItemConfiguration(Of T).GroupSpecified
- uid: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataElementSet.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSet.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSet.Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataElementSet.Update<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataElementSet.Update(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataElementSet.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Elements.DataElementSet.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataElementSet.Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataElementSet.Check<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataElementSet.Check(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataElementSet.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSet.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSet.Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataElementSet.Repair<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataElementSet.Repair(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1._items
  commentId: F:BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<T>._items
  fullName: BindOpen.Data.Items.DataItemSet<T>._items
  nameWithType.vb: DataItemSet(Of T)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)._items
- uid: BindOpen.Data.Items.DataItemSet`1.Items
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<T>.Items
  fullName: BindOpen.Data.Items.DataItemSet<T>.Items
  nameWithType.vb: DataItemSet(Of T).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Items
- uid: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<T>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<T>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of T).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet`1.Count
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<T>.Count
  fullName: BindOpen.Data.Items.DataItemSet<T>.Count
  nameWithType.vb: DataItemSet(Of T).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Count
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: DataItemSet<T>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of T).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<T>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems()
  nameWithType.vb: DataItemSet(Of T).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<T>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of T).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(T[])
  nameWithType: DataItemSet<T>.Add(T[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T[])
  nameWithType.vb: DataItemSet(Of T).Add(T())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T())
  name.vb: Add(T())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  isExternal: true
  name: Remove(String[])
  nameWithType: DataItemSet<T>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of T).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<T>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of T).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<T>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems()
  nameWithType.vb: DataItemSet(Of T).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<T>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of T).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  isExternal: true
  name: GetItem(String)
  nameWithType: DataItemSet<T>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of T).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<T>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of T).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<T>)
  nameWithType: DataItemSet<T>.GetCommonItemKeys(IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).GetCommonItemKeys(IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: GetCommonItemKeys(IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<T>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of T).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(T, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(T, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(T, IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T, BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(T, IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(List<T>, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(List<T>, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(System.Collections.Generic.List<T>, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(List(Of T), IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(System.Collections.Generic.List(Of T), BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(List(Of T), IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<T>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<T>.PropertyChanged
  nameWithType.vb: DataItemSet(Of T).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<T>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of T).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<T>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of T).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
  commentId: M:BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
  isExternal: true
  name: Check(IDataElementSet, IOptionSpecSet, Boolean)
  nameWithType: AppArgumentHelper.Check(IDataElementSet, IOptionSpecSet, Boolean)
  fullName: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Options.IOptionSpecSet, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
    name: Check
    nameWithType: AppArgumentHelper.Check
    fullName: BindOpen.Application.Arguments.AppArgumentHelper.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Arguments.AppArgumentHelper.Check(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Options.IOptionSpecSet,System.Boolean)
    name: Check
    nameWithType: AppArgumentHelper.Check
    fullName: BindOpen.Application.Arguments.AppArgumentHelper.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Options.IOptionSpecSet
    name: IOptionSpecSet
    nameWithType: IOptionSpecSet
    fullName: BindOpen.Application.Options.IOptionSpecSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Arguments.AppArgumentHelper
  commentId: T:BindOpen.Application.Arguments.AppArgumentHelper
  parent: BindOpen.Application.Arguments
  name: AppArgumentHelper
  nameWithType: AppArgumentHelper
  fullName: BindOpen.Application.Arguments.AppArgumentHelper
- uid: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(``0,System.String,BindOpen.Data.Elements.IDataElement[])
  commentId: M:BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(``0,System.String,BindOpen.Data.Elements.IDataElement[])
  isExternal: true
  name: AddGroup<T>(T, String, IDataElement[])
  nameWithType: ConfigurationFactory.AddGroup<T>(T, String, IDataElement[])
  fullName: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup<T>(T, System.String, BindOpen.Data.Elements.IDataElement[])
  nameWithType.vb: ConfigurationFactory.AddGroup(Of T)(T, String, IDataElement())
  fullName.vb: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup(Of T)(T, System.String, BindOpen.Data.Elements.IDataElement())
  name.vb: AddGroup(Of T)(T, String, IDataElement())
  spec.csharp:
  - uid: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(``0,System.String,BindOpen.Data.Elements.IDataElement[])
    name: AddGroup<T>
    nameWithType: ConfigurationFactory.AddGroup<T>
    fullName: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup``1(``0,System.String,BindOpen.Data.Elements.IDataElement[])
    name: AddGroup(Of T)
    nameWithType: ConfigurationFactory.AddGroup(Of T)
    fullName: BindOpen.Application.Configuration.ConfigurationFactory.AddGroup(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.ConfigurationFactory
  commentId: T:BindOpen.Application.Configuration.ConfigurationFactory
  parent: BindOpen.Application.Configuration
  name: ConfigurationFactory
  nameWithType: ConfigurationFactory
  fullName: BindOpen.Application.Configuration.ConfigurationFactory
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(BindOpen.Data.Elements.IDataElementSet,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(BindOpen.Data.Elements.IDataElementSet,System.Object)
  isExternal: true
  name: UpdateFromObject<T>(IDataElementSet, Object)
  nameWithType: ObjectHelper.UpdateFromObject<T>(IDataElementSet, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject<T>(BindOpen.Data.Elements.IDataElementSet, System.Object)
  nameWithType.vb: ObjectHelper.UpdateFromObject(Of T)(IDataElementSet, Object)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject(Of T)(BindOpen.Data.Elements.IDataElementSet, System.Object)
  name.vb: UpdateFromObject(Of T)(IDataElementSet, Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(BindOpen.Data.Elements.IDataElementSet,System.Object)
    name: UpdateFromObject<T>
    nameWithType: ObjectHelper.UpdateFromObject<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject``1(BindOpen.Data.Elements.IDataElementSet,System.Object)
    name: UpdateFromObject(Of T)
    nameWithType: ObjectHelper.UpdateFromObject(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromObject(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Arguments
  commentId: N:BindOpen.Application.Arguments
  name: BindOpen.Application.Arguments
  nameWithType: BindOpen.Application.Arguments
  fullName: BindOpen.Application.Arguments
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail
  name: InputDetail
  nameWithType: BdoTaskConfiguration.InputDetail
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetail
- uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.InputDetail
  commentId: P:BindOpen.Extensions.Runtime.IBdoTaskConfiguration.InputDetail
  parent: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  name: InputDetail
  nameWithType: IBdoTaskConfiguration.InputDetail
  fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.InputDetail
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified
  name: InputDetailSpecified
  nameWithType: BdoTaskConfiguration.InputDetailSpecified
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.InputDetailSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail
  name: OutputDetail
  nameWithType: BdoTaskConfiguration.OutputDetail
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetail
- uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.OutputDetail
  commentId: P:BindOpen.Extensions.Runtime.IBdoTaskConfiguration.OutputDetail
  parent: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  name: OutputDetail
  nameWithType: IBdoTaskConfiguration.OutputDetail
  fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.OutputDetail
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified
  name: OutputDetailSpecified
  nameWithType: BdoTaskConfiguration.OutputDetailSpecified
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.OutputDetailSpecified
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.#ctor
  name: BdoTaskConfiguration
  nameWithType: BdoTaskConfiguration.BdoTaskConfiguration
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.BdoTaskConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Elements.IDataElement[]
  isExternal: true
  name: IDataElement[]
  nameWithType: IDataElement[]
  fullName: BindOpen.Data.Elements.IDataElement[]
  nameWithType.vb: IDataElement()
  fullName.vb: BindOpen.Data.Elements.IDataElement()
  name.vb: IDataElement()
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries
  name: GetEntries
  nameWithType: BdoTaskConfiguration.GetEntries
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntries
- uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  commentId: M:BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  parent: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  name: GetEntries(TaskEntryKind[])
  nameWithType: IBdoTaskConfiguration.GetEntries(TaskEntryKind[])
  fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
  nameWithType.vb: IBdoTaskConfiguration.GetEntries(TaskEntryKind())
  fullName.vb: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind())
  name.vb: GetEntries(TaskEntryKind())
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
    name: GetEntries
    nameWithType: IBdoTaskConfiguration.GetEntries
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.TaskEntryKind
    name: TaskEntryKind
    nameWithType: TaskEntryKind
    fullName: BindOpen.Extensions.Definition.TaskEntryKind
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries(BindOpen.Extensions.Definition.TaskEntryKind[])
    name: GetEntries
    nameWithType: IBdoTaskConfiguration.GetEntries
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntries
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.TaskEntryKind
    name: TaskEntryKind
    nameWithType: TaskEntryKind
    fullName: BindOpen.Extensions.Definition.TaskEntryKind
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Definition.TaskEntryKind[]
  isExternal: true
  name: TaskEntryKind[]
  nameWithType: TaskEntryKind[]
  fullName: BindOpen.Extensions.Definition.TaskEntryKind[]
  nameWithType.vb: TaskEntryKind()
  fullName.vb: BindOpen.Extensions.Definition.TaskEntryKind()
  name.vb: TaskEntryKind()
  spec.csharp:
  - uid: BindOpen.Extensions.Definition.TaskEntryKind
    name: TaskEntryKind
    nameWithType: TaskEntryKind
    fullName: BindOpen.Extensions.Definition.TaskEntryKind
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Extensions.Definition.TaskEntryKind
    name: TaskEntryKind
    nameWithType: TaskEntryKind
    fullName: BindOpen.Extensions.Definition.TaskEntryKind
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.List{BindOpen.Data.Elements.IDataElement}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Elements.IDataElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IDataElement>
  nameWithType: List<IDataElement>
  fullName: System.Collections.Generic.List<BindOpen.Data.Elements.IDataElement>
  nameWithType.vb: List(Of IDataElement)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Elements.IDataElement)
  name.vb: List(Of IDataElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName
  name: GetEntryWithName
  nameWithType: BdoTaskConfiguration.GetEntryWithName
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.GetEntryWithName
- uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
  commentId: M:BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
  parent: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  isExternal: true
  name: GetEntryWithName(String, TaskEntryKind[])
  nameWithType: IBdoTaskConfiguration.GetEntryWithName(String, TaskEntryKind[])
  fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName(System.String, BindOpen.Extensions.Definition.TaskEntryKind[])
  nameWithType.vb: IBdoTaskConfiguration.GetEntryWithName(String, TaskEntryKind())
  fullName.vb: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName(System.String, BindOpen.Extensions.Definition.TaskEntryKind())
  name.vb: GetEntryWithName(String, TaskEntryKind())
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
    name: GetEntryWithName
    nameWithType: IBdoTaskConfiguration.GetEntryWithName
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Definition.TaskEntryKind
    name: TaskEntryKind
    nameWithType: TaskEntryKind
    fullName: BindOpen.Extensions.Definition.TaskEntryKind
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName(System.String,BindOpen.Extensions.Definition.TaskEntryKind[])
    name: GetEntryWithName
    nameWithType: IBdoTaskConfiguration.GetEntryWithName
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration.GetEntryWithName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Definition.TaskEntryKind
    name: TaskEntryKind
    nameWithType: TaskEntryKind
    fullName: BindOpen.Extensions.Definition.TaskEntryKind
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElement
  commentId: T:BindOpen.Data.Elements.IDataElement
  parent: BindOpen.Data.Elements
  name: IDataElement
  nameWithType: IDataElement
  fullName: BindOpen.Data.Elements.IDataElement
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Clone
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}.Clone
  parent: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration{BindOpen.Extensions.Definition.BdoTaskDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Clone
  name: Clone()
  nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.Clone()
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.Clone()
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).Clone()
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).Clone()
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Clone
    name: Clone
    nameWithType: TBdoExtensionTitledItemConfiguration<BdoTaskDefinition>.Clone
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<BindOpen.Extensions.Definition.BdoTaskDefinition>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Clone
    name: Clone
    nameWithType: TBdoExtensionTitledItemConfiguration(Of BdoTaskDefinition).Clone
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of BindOpen.Extensions.Definition.BdoTaskDefinition).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone
  name: Clone
  nameWithType: BdoTaskConfiguration.Clone
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Clone
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Clone
  name: Clone()
  nameWithType: TBdoExtensionTitledItemConfiguration<T>.Clone()
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.Clone()
  nameWithType.vb: TBdoExtensionTitledItemConfiguration(Of T).Clone()
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).Clone()
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Clone
    name: Clone
    nameWithType: TBdoExtensionTitledItemConfiguration<T>.Clone
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration`1.Clone
    name: Clone
    nameWithType: TBdoExtensionTitledItemConfiguration(Of T).Clone
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionTitledItemConfiguration(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: BdoBaseConfiguration.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: BdoBaseConfiguration.UpdateStorageInfo
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: BdoBaseConfiguration.UpdateStorageInfo
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo
  name: UpdateStorageInfo
  nameWithType: BdoTaskConfiguration.UpdateStorageInfo
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateStorageInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Configuration.BdoBaseConfiguration
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoBaseConfiguration.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: BdoBaseConfiguration.UpdateRuntimeInfo
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: BdoBaseConfiguration.UpdateRuntimeInfo
    fullName: BindOpen.Application.Configuration.BdoBaseConfiguration.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo
  name: UpdateRuntimeInfo
  nameWithType: BdoTaskConfiguration.UpdateRuntimeInfo
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.UpdateRuntimeInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope
  commentId: T:BindOpen.Application.Scopes.IBdoScope
  parent: BindOpen.Application.Scopes
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  commentId: T:BindOpen.System.Scripting.IBdoScriptVariableSet
  parent: BindOpen.System.Scripting
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: BindOpen.System.Scripting
  commentId: N:BindOpen.System.Scripting
  name: BindOpen.System.Scripting
  nameWithType: BindOpen.System.Scripting
  fullName: BindOpen.System.Scripting
- uid: BindOpen.Data.Elements.DataElementSet.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElementSet
  definition: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataElementSet.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSet.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSet.Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataElementSet.Update<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataElementSet.Update(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update
  name: Update
  nameWithType: BdoTaskConfiguration.Update
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Update
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Common.UpdateModes[]
  isExternal: true
  name: UpdateModes[]
  nameWithType: UpdateModes[]
  fullName: BindOpen.Data.Common.UpdateModes[]
  nameWithType.vb: UpdateModes()
  fullName.vb: BindOpen.Data.Common.UpdateModes()
  name.vb: UpdateModes()
  spec.csharp:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Elements.DataElementSet
  definition: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataElementSet.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Elements.DataElementSet.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataElementSet.Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataElementSet.Check<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataElementSet.Check(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check
  name: Check
  nameWithType: BdoTaskConfiguration.Check
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Check
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSet.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElementSet
  definition: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataElementSet.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSet.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSet.Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSet.Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataElementSet.Repair<T1>
    fullName: BindOpen.Data.Elements.DataElementSet.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSet.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataElementSet.Repair(Of T1)
    fullName: BindOpen.Data.Elements.DataElementSet.Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair
  name: Repair
  nameWithType: BdoTaskConfiguration.Repair
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Repair
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose
  name: Dispose
  nameWithType: BdoTaskConfiguration.Dispose
  fullName: BindOpen.Extensions.Runtime.BdoTaskConfiguration.Dispose
shouldSkipMarkup: true
