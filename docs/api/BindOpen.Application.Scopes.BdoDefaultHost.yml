### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Scopes.BdoDefaultHost
  commentId: T:BindOpen.Application.Scopes.BdoDefaultHost
  id: BdoDefaultHost
  parent: BindOpen.Application.Scopes
  children:
  - BindOpen.Application.Scopes.BdoDefaultHost.#ctor
  - BindOpen.Application.Scopes.BdoDefaultHost.#ctor(BindOpen.Application.Scopes.IBdoScope,BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings})
  langs:
  - csharp
  - vb
  name: BdoDefaultHost
  nameWithType: BdoDefaultHost
  fullName: BindOpen.Application.Scopes.BdoDefaultHost
  type: Class
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Scopes/Hosts/BdoDefaultHost.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoDefaultHost
    path: ../src/BindOpen.Runtime/Application/Scopes/Hosts/BdoDefaultHost.cs
    startLine: 7
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nThis class represents a default application host.\n"
  example: []
  syntax:
    content: 'public class BdoDefaultHost : TBdoHost<BdoDefaultAppSettings>, IBdoTrigeredService, ITBdoHost<BdoDefaultAppSettings>, ITBdoService<BdoDefaultAppSettings>, IBdoHost, IBdoService, IIdentifiedDataItem, IDataItem, ICloneable, IIdentified, IReferenced, IBdoScope, IDisposable'
    content.vb: >-
      Public Class BdoDefaultHost
          Inherits TBdoHost(Of BdoDefaultAppSettings)
          Implements IBdoTrigeredService, ITBdoHost(Of BdoDefaultAppSettings), ITBdoService(Of BdoDefaultAppSettings), IBdoHost, IBdoService, IIdentifiedDataItem, IDataItem, ICloneable, IIdentified, IReferenced, IBdoScope, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Application.Services.BdoService
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  implements:
  - BindOpen.Application.Services.IBdoTrigeredService
  - BindOpen.Application.Scopes.ITBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  - BindOpen.Application.Services.ITBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  - BindOpen.Application.Scopes.IBdoHost
  - BindOpen.Application.Services.IBdoService
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Application.Scopes.IBdoScope
  - System.IDisposable
  inheritedMembers:
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Scope
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.HostOptions
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Options
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}})
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Start
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Process(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.End(BindOpen.System.Processing.ProcessExecutionStatus)
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings}})
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.GetCredential(System.String)
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.AppDomain
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExtensionStore
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.DataStore
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Context
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Interpreter
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  - BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Clear
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Settings
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnStartSuccess
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnStartFailure
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnExecutionSucess
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnExecutionFailure
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.StartSucceeds
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.StartFails
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExecutionSucceedes
  - BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExecutionFails
  - BindOpen.Application.Services.BdoService._isLoaded
  - BindOpen.Application.Services.BdoService._scope
  - BindOpen.Application.Services.BdoService.IsLoaded
  - BindOpen.Application.Services.BdoService.Loggers
  - BindOpen.Application.Services.BdoService.ExecutionState
  - BindOpen.Application.Services.BdoService.ExecutionStatus
  - BindOpen.Application.Services.BdoService.AppDomainPool
  - BindOpen.Application.Services.BdoService.Log
  - BindOpen.Application.Services.BdoService.Dispose(System.Boolean)
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.Key
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.IdentifiedDataItem.Clone
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Scopes.BdoDefaultHost.#ctor
  commentId: M:BindOpen.Application.Scopes.BdoDefaultHost.#ctor
  id: '#ctor'
  parent: BindOpen.Application.Scopes.BdoDefaultHost
  langs:
  - csharp
  - vb
  name: BdoDefaultHost()
  nameWithType: BdoDefaultHost.BdoDefaultHost()
  fullName: BindOpen.Application.Scopes.BdoDefaultHost.BdoDefaultHost()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Scopes/Hosts/BdoDefaultHost.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Runtime/Application/Scopes/Hosts/BdoDefaultHost.cs
    startLine: 18
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nInstantiates a new instance of the BdoDefaultHost class.\n"
  example: []
  syntax:
    content: public BdoDefaultHost()
    content.vb: Public Sub New
  overload: BindOpen.Application.Scopes.BdoDefaultHost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoDefaultHost.#ctor(BindOpen.Application.Scopes.IBdoScope,BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings})
  commentId: M:BindOpen.Application.Scopes.BdoDefaultHost.#ctor(BindOpen.Application.Scopes.IBdoScope,BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings})
  id: '#ctor(BindOpen.Application.Scopes.IBdoScope,BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings})'
  parent: BindOpen.Application.Scopes.BdoDefaultHost
  langs:
  - csharp
  - vb
  name: BdoDefaultHost(IBdoScope, ITBdoHostOptions<BdoDefaultAppSettings>)
  nameWithType: BdoDefaultHost.BdoDefaultHost(IBdoScope, ITBdoHostOptions<BdoDefaultAppSettings>)
  fullName: BindOpen.Application.Scopes.BdoDefaultHost.BdoDefaultHost(BindOpen.Application.Scopes.IBdoScope, BindOpen.Application.Scopes.ITBdoHostOptions<BindOpen.Application.Settings.BdoDefaultAppSettings>)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Runtime/Application/Scopes/Hosts/BdoDefaultHost.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Runtime/Application/Scopes/Hosts/BdoDefaultHost.cs
    startLine: 27
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Scopes
  summary: "\nInstantiates a new instance of the BdoDefaultHost class.\n"
  example: []
  syntax:
    content: public BdoDefaultHost(IBdoScope scope = null, ITBdoHostOptions<BdoDefaultAppSettings> options = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: options
      type: BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings}
      description: The options to consider.
    content.vb: Public Sub New(scope As IBdoScope = Nothing, options As ITBdoHostOptions(Of BdoDefaultAppSettings) = Nothing)
  overload: BindOpen.Application.Scopes.BdoDefaultHost.#ctor*
  nameWithType.vb: BdoDefaultHost.BdoDefaultHost(IBdoScope, ITBdoHostOptions(Of BdoDefaultAppSettings))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Scopes.BdoDefaultHost.BdoDefaultHost(BindOpen.Application.Scopes.IBdoScope, BindOpen.Application.Scopes.ITBdoHostOptions(Of BindOpen.Application.Settings.BdoDefaultAppSettings))
  name.vb: BdoDefaultHost(IBdoScope, ITBdoHostOptions(Of BdoDefaultAppSettings))
references:
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Application.Services.BdoService
  commentId: T:BindOpen.Application.Services.BdoService
  parent: BindOpen.Application.Services
  name: BdoService
  nameWithType: BdoService
  fullName: BindOpen.Application.Services.BdoService
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  commentId: T:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  parent: BindOpen.Application.Services
  definition: BindOpen.Application.Services.TBdoService`1
  name: TBdoService<BdoDefaultAppSettings>
  nameWithType: TBdoService<BdoDefaultAppSettings>
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings)
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings)
  name.vb: TBdoService(Of BdoDefaultAppSettings)
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1
    name: TBdoService
    nameWithType: TBdoService
    fullName: BindOpen.Application.Services.TBdoService
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1
    name: TBdoService
    nameWithType: TBdoService
    fullName: BindOpen.Application.Services.TBdoService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  commentId: T:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  parent: BindOpen.Application.Scopes
  definition: BindOpen.Application.Scopes.TBdoHost`1
  name: TBdoHost<BdoDefaultAppSettings>
  nameWithType: TBdoHost<BdoDefaultAppSettings>
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings)
  name.vb: TBdoHost(Of BdoDefaultAppSettings)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1
    name: TBdoHost
    nameWithType: TBdoHost
    fullName: BindOpen.Application.Scopes.TBdoHost
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1
    name: TBdoHost
    nameWithType: TBdoHost
    fullName: BindOpen.Application.Scopes.TBdoHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.IBdoTrigeredService
  commentId: T:BindOpen.Application.Services.IBdoTrigeredService
  parent: BindOpen.Application.Services
  name: IBdoTrigeredService
  nameWithType: IBdoTrigeredService
  fullName: BindOpen.Application.Services.IBdoTrigeredService
- uid: BindOpen.Application.Scopes.ITBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  commentId: T:BindOpen.Application.Scopes.ITBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  parent: BindOpen.Application.Scopes
  definition: BindOpen.Application.Scopes.ITBdoHost`1
  name: ITBdoHost<BdoDefaultAppSettings>
  nameWithType: ITBdoHost<BdoDefaultAppSettings>
  fullName: BindOpen.Application.Scopes.ITBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>
  nameWithType.vb: ITBdoHost(Of BdoDefaultAppSettings)
  fullName.vb: BindOpen.Application.Scopes.ITBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings)
  name.vb: ITBdoHost(Of BdoDefaultAppSettings)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.ITBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  commentId: T:BindOpen.Application.Services.ITBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  parent: BindOpen.Application.Services
  definition: BindOpen.Application.Services.ITBdoService`1
  name: ITBdoService<BdoDefaultAppSettings>
  nameWithType: ITBdoService<BdoDefaultAppSettings>
  fullName: BindOpen.Application.Services.ITBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>
  nameWithType.vb: ITBdoService(Of BdoDefaultAppSettings)
  fullName.vb: BindOpen.Application.Services.ITBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings)
  name.vb: ITBdoService(Of BdoDefaultAppSettings)
  spec.csharp:
  - uid: BindOpen.Application.Services.ITBdoService`1
    name: ITBdoService
    nameWithType: ITBdoService
    fullName: BindOpen.Application.Services.ITBdoService
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Services.ITBdoService`1
    name: ITBdoService
    nameWithType: ITBdoService
    fullName: BindOpen.Application.Services.ITBdoService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoHost
  commentId: T:BindOpen.Application.Scopes.IBdoHost
  parent: BindOpen.Application.Scopes
  name: IBdoHost
  nameWithType: IBdoHost
  fullName: BindOpen.Application.Scopes.IBdoHost
- uid: BindOpen.Application.Services.IBdoService
  commentId: T:BindOpen.Application.Services.IBdoService
  parent: BindOpen.Application.Services
  name: IBdoService
  nameWithType: IBdoService
  fullName: BindOpen.Application.Services.IBdoService
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Application.Scopes.IBdoScope
  commentId: T:BindOpen.Application.Scopes.IBdoScope
  parent: BindOpen.Application.Scopes
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Scope
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Scope
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Scope
  name: Scope
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Scope
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Scope
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Scope
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Scope
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.HostOptions
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.HostOptions
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.HostOptions
  name: HostOptions
  nameWithType: TBdoHost<BdoDefaultAppSettings>.HostOptions
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.HostOptions
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).HostOptions
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).HostOptions
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Options
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Options
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Options
  name: Options
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Options
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Options
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Options
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Options
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}})
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}})
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{`0}})
  name: Run(Action<ITBdoHost<BdoDefaultAppSettings>>)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Run(Action<ITBdoHost<BdoDefaultAppSettings>>)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Run(System.Action<BindOpen.Application.Scopes.ITBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>>)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Run(Action(Of ITBdoHost(Of BdoDefaultAppSettings)))
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Run(System.Action(Of BindOpen.Application.Scopes.ITBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings)))
  name.vb: Run(Action(Of ITBdoHost(Of BdoDefaultAppSettings)))
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{`0}})
    name: Run
    nameWithType: TBdoHost<BdoDefaultAppSettings>.Run
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{`0}})
    name: Run
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).Run
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Start
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Start
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Start
  name: Start()
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Start()
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Start()
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Start()
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Start()
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Start
    name: Start
    nameWithType: TBdoHost<BdoDefaultAppSettings>.Start
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Start
    name: Start
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).Start
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Process(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Process(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Process(BindOpen.System.Diagnostics.IBdoLog)
  name: Process(IBdoLog)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Process(IBdoLog)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Process(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Process(IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Process(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Process(BindOpen.System.Diagnostics.IBdoLog)
    name: Process
    nameWithType: TBdoHost<BdoDefaultAppSettings>.Process
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Process(BindOpen.System.Diagnostics.IBdoLog)
    name: Process
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).Process
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.End(BindOpen.System.Processing.ProcessExecutionStatus)
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.End(BindOpen.System.Processing.ProcessExecutionStatus)
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.End(BindOpen.System.Processing.ProcessExecutionStatus)
  name: End(ProcessExecutionStatus)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.End(ProcessExecutionStatus)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.End(BindOpen.System.Processing.ProcessExecutionStatus)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).End(ProcessExecutionStatus)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).End(BindOpen.System.Processing.ProcessExecutionStatus)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.End(BindOpen.System.Processing.ProcessExecutionStatus)
    name: End
    nameWithType: TBdoHost<BdoDefaultAppSettings>.End
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.End
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Processing.ProcessExecutionStatus
    name: ProcessExecutionStatus
    nameWithType: ProcessExecutionStatus
    fullName: BindOpen.System.Processing.ProcessExecutionStatus
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.End(BindOpen.System.Processing.ProcessExecutionStatus)
    name: End
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).End
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).End
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Processing.ProcessExecutionStatus
    name: ProcessExecutionStatus
    nameWithType: ProcessExecutionStatus
    fullName: BindOpen.System.Processing.ProcessExecutionStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings}})
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings}})
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{`0}})
  name: Configure(Action<ITBdoHostOptions<BdoDefaultAppSettings>>)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Configure(Action<ITBdoHostOptions<BdoDefaultAppSettings>>)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Configure(System.Action<BindOpen.Application.Scopes.ITBdoHostOptions<BindOpen.Application.Settings.BdoDefaultAppSettings>>)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Configure(Action(Of ITBdoHostOptions(Of BdoDefaultAppSettings)))
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Configure(System.Action(Of BindOpen.Application.Scopes.ITBdoHostOptions(Of BindOpen.Application.Settings.BdoDefaultAppSettings)))
  name.vb: Configure(Action(Of ITBdoHostOptions(Of BdoDefaultAppSettings)))
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{`0}})
    name: Configure
    nameWithType: TBdoHost<BdoDefaultAppSettings>.Configure
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{`0}})
    name: Configure
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).Configure
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  name: GetKnownPath(BdoHostPathKind)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.GetKnownPath(BdoHostPathKind)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).GetKnownPath(BdoHostPathKind)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
    name: GetKnownPath
    nameWithType: TBdoHost<BdoDefaultAppSettings>.GetKnownPath
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.GetKnownPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.BdoHostPathKind
    name: BdoHostPathKind
    nameWithType: BdoHostPathKind
    fullName: BindOpen.Application.Scopes.BdoHostPathKind
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
    name: GetKnownPath
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).GetKnownPath
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).GetKnownPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.BdoHostPathKind
    name: BdoHostPathKind
    nameWithType: BdoHostPathKind
    fullName: BindOpen.Application.Scopes.BdoHostPathKind
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.GetCredential(System.String)
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.GetCredential(System.String)
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.GetCredential(System.String)
  name: GetCredential(String)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.GetCredential(String)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.GetCredential(System.String)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).GetCredential(String)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).GetCredential(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetCredential(System.String)
    name: GetCredential
    nameWithType: TBdoHost<BdoDefaultAppSettings>.GetCredential
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.GetCredential
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetCredential(System.String)
    name: GetCredential
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).GetCredential
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).GetCredential
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  name: Initialize(IBdoLog)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Initialize(IBdoLog)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Initialize(IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Initialize(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Initialize(BindOpen.System.Diagnostics.IBdoLog)
    name: Initialize
    nameWithType: TBdoHost<BdoDefaultAppSettings>.Initialize
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Initialize(BindOpen.System.Diagnostics.IBdoLog)
    name: Initialize
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).Initialize
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.AppDomain
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.AppDomain
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.AppDomain
  name: AppDomain
  nameWithType: TBdoHost<BdoDefaultAppSettings>.AppDomain
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.AppDomain
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).AppDomain
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).AppDomain
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExtensionStore
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExtensionStore
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.ExtensionStore
  name: ExtensionStore
  nameWithType: TBdoHost<BdoDefaultAppSettings>.ExtensionStore
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.ExtensionStore
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).ExtensionStore
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).ExtensionStore
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.DataStore
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.DataStore
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.DataStore
  name: DataStore
  nameWithType: TBdoHost<BdoDefaultAppSettings>.DataStore
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.DataStore
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).DataStore
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).DataStore
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Context
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Context
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Context
  name: Context
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Context
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Context
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Context
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Context
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Interpreter
  commentId: P:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Interpreter
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Interpreter
  name: Interpreter
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Interpreter
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Interpreter
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Interpreter
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Interpreter
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  name: Check(Boolean, Boolean, Boolean, Boolean)
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Check(Boolean, Boolean, Boolean, Boolean)
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Check(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Check(Boolean, Boolean, Boolean, Boolean)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Check(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: Check
    nameWithType: TBdoHost<BdoDefaultAppSettings>.Check
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: Check
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).Check
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  name: LoadExtensions(IBdoExtensionReference[])
  nameWithType: TBdoHost<BdoDefaultAppSettings>.LoadExtensions(IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).LoadExtensions(IBdoExtensionReference())
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(IBdoExtensionReference())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost<BdoDefaultAppSettings>.LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  name: LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  nameWithType: TBdoHost<BdoDefaultAppSettings>.LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.LoadExtensions(System.Action<BindOpen.Application.Scopes.IExtensionLoadOptions>, BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).LoadExtensions(System.Action(Of BindOpen.Application.Scopes.IExtensionLoadOptions), BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost<BdoDefaultAppSettings>.LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Clear
  commentId: M:BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}.Clear
  parent: BindOpen.Application.Scopes.TBdoHost{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Scopes.TBdoHost`1.Clear
  name: Clear()
  nameWithType: TBdoHost<BdoDefaultAppSettings>.Clear()
  fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Clear()
  nameWithType.vb: TBdoHost(Of BdoDefaultAppSettings).Clear()
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Clear()
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Clear
    name: Clear
    nameWithType: TBdoHost<BdoDefaultAppSettings>.Clear
    fullName: BindOpen.Application.Scopes.TBdoHost<BindOpen.Application.Settings.BdoDefaultAppSettings>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Clear
    name: Clear
    nameWithType: TBdoHost(Of BdoDefaultAppSettings).Clear
    fullName: BindOpen.Application.Scopes.TBdoHost(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Settings
  commentId: P:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Settings
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.Settings
  name: Settings
  nameWithType: TBdoService<BdoDefaultAppSettings>.Settings
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.Settings
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).Settings
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Settings
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnStartSuccess
  commentId: P:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnStartSuccess
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.Action_OnStartSuccess
  name: Action_OnStartSuccess
  nameWithType: TBdoService<BdoDefaultAppSettings>.Action_OnStartSuccess
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.Action_OnStartSuccess
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).Action_OnStartSuccess
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Action_OnStartSuccess
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnStartFailure
  commentId: P:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnStartFailure
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.Action_OnStartFailure
  name: Action_OnStartFailure
  nameWithType: TBdoService<BdoDefaultAppSettings>.Action_OnStartFailure
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.Action_OnStartFailure
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).Action_OnStartFailure
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Action_OnStartFailure
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnExecutionSucess
  commentId: P:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnExecutionSucess
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.Action_OnExecutionSucess
  name: Action_OnExecutionSucess
  nameWithType: TBdoService<BdoDefaultAppSettings>.Action_OnExecutionSucess
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.Action_OnExecutionSucess
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).Action_OnExecutionSucess
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Action_OnExecutionSucess
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnExecutionFailure
  commentId: P:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.Action_OnExecutionFailure
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.Action_OnExecutionFailure
  name: Action_OnExecutionFailure
  nameWithType: TBdoService<BdoDefaultAppSettings>.Action_OnExecutionFailure
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.Action_OnExecutionFailure
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).Action_OnExecutionFailure
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).Action_OnExecutionFailure
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.StartSucceeds
  commentId: M:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.StartSucceeds
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.StartSucceeds
  name: StartSucceeds()
  nameWithType: TBdoService<BdoDefaultAppSettings>.StartSucceeds()
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.StartSucceeds()
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).StartSucceeds()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).StartSucceeds()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.StartSucceeds
    name: StartSucceeds
    nameWithType: TBdoService<BdoDefaultAppSettings>.StartSucceeds
    fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.StartSucceeds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.StartSucceeds
    name: StartSucceeds
    nameWithType: TBdoService(Of BdoDefaultAppSettings).StartSucceeds
    fullName: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).StartSucceeds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.StartFails
  commentId: M:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.StartFails
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.StartFails
  name: StartFails()
  nameWithType: TBdoService<BdoDefaultAppSettings>.StartFails()
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.StartFails()
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).StartFails()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).StartFails()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.StartFails
    name: StartFails
    nameWithType: TBdoService<BdoDefaultAppSettings>.StartFails
    fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.StartFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.StartFails
    name: StartFails
    nameWithType: TBdoService(Of BdoDefaultAppSettings).StartFails
    fullName: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).StartFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExecutionSucceedes
  commentId: M:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExecutionSucceedes
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.ExecutionSucceedes
  name: ExecutionSucceedes()
  nameWithType: TBdoService<BdoDefaultAppSettings>.ExecutionSucceedes()
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.ExecutionSucceedes()
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).ExecutionSucceedes()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).ExecutionSucceedes()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionSucceedes
    name: ExecutionSucceedes
    nameWithType: TBdoService<BdoDefaultAppSettings>.ExecutionSucceedes
    fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.ExecutionSucceedes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionSucceedes
    name: ExecutionSucceedes
    nameWithType: TBdoService(Of BdoDefaultAppSettings).ExecutionSucceedes
    fullName: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).ExecutionSucceedes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExecutionFails
  commentId: M:BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}.ExecutionFails
  parent: BindOpen.Application.Services.TBdoService{BindOpen.Application.Settings.BdoDefaultAppSettings}
  definition: BindOpen.Application.Services.TBdoService`1.ExecutionFails
  name: ExecutionFails()
  nameWithType: TBdoService<BdoDefaultAppSettings>.ExecutionFails()
  fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.ExecutionFails()
  nameWithType.vb: TBdoService(Of BdoDefaultAppSettings).ExecutionFails()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).ExecutionFails()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionFails
    name: ExecutionFails
    nameWithType: TBdoService<BdoDefaultAppSettings>.ExecutionFails
    fullName: BindOpen.Application.Services.TBdoService<BindOpen.Application.Settings.BdoDefaultAppSettings>.ExecutionFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionFails
    name: ExecutionFails
    nameWithType: TBdoService(Of BdoDefaultAppSettings).ExecutionFails
    fullName: BindOpen.Application.Services.TBdoService(Of BindOpen.Application.Settings.BdoDefaultAppSettings).ExecutionFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.BdoService._isLoaded
  commentId: F:BindOpen.Application.Services.BdoService._isLoaded
  parent: BindOpen.Application.Services.BdoService
  name: _isLoaded
  nameWithType: BdoService._isLoaded
  fullName: BindOpen.Application.Services.BdoService._isLoaded
- uid: BindOpen.Application.Services.BdoService._scope
  commentId: F:BindOpen.Application.Services.BdoService._scope
  parent: BindOpen.Application.Services.BdoService
  name: _scope
  nameWithType: BdoService._scope
  fullName: BindOpen.Application.Services.BdoService._scope
- uid: BindOpen.Application.Services.BdoService.IsLoaded
  commentId: P:BindOpen.Application.Services.BdoService.IsLoaded
  parent: BindOpen.Application.Services.BdoService
  name: IsLoaded
  nameWithType: BdoService.IsLoaded
  fullName: BindOpen.Application.Services.BdoService.IsLoaded
- uid: BindOpen.Application.Services.BdoService.Loggers
  commentId: P:BindOpen.Application.Services.BdoService.Loggers
  parent: BindOpen.Application.Services.BdoService
  name: Loggers
  nameWithType: BdoService.Loggers
  fullName: BindOpen.Application.Services.BdoService.Loggers
- uid: BindOpen.Application.Services.BdoService.ExecutionState
  commentId: P:BindOpen.Application.Services.BdoService.ExecutionState
  parent: BindOpen.Application.Services.BdoService
  name: ExecutionState
  nameWithType: BdoService.ExecutionState
  fullName: BindOpen.Application.Services.BdoService.ExecutionState
- uid: BindOpen.Application.Services.BdoService.ExecutionStatus
  commentId: P:BindOpen.Application.Services.BdoService.ExecutionStatus
  parent: BindOpen.Application.Services.BdoService
  name: ExecutionStatus
  nameWithType: BdoService.ExecutionStatus
  fullName: BindOpen.Application.Services.BdoService.ExecutionStatus
- uid: BindOpen.Application.Services.BdoService.AppDomainPool
  commentId: P:BindOpen.Application.Services.BdoService.AppDomainPool
  parent: BindOpen.Application.Services.BdoService
  name: AppDomainPool
  nameWithType: BdoService.AppDomainPool
  fullName: BindOpen.Application.Services.BdoService.AppDomainPool
- uid: BindOpen.Application.Services.BdoService.Log
  commentId: P:BindOpen.Application.Services.BdoService.Log
  parent: BindOpen.Application.Services.BdoService
  name: Log
  nameWithType: BdoService.Log
  fullName: BindOpen.Application.Services.BdoService.Log
- uid: BindOpen.Application.Services.BdoService.Dispose(System.Boolean)
  commentId: M:BindOpen.Application.Services.BdoService.Dispose(System.Boolean)
  parent: BindOpen.Application.Services.BdoService
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: BdoService.Dispose(Boolean)
  fullName: BindOpen.Application.Services.BdoService.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Application.Services.BdoService.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BdoService.Dispose
    fullName: BindOpen.Application.Services.BdoService.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.BdoService.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BdoService.Dispose
    fullName: BindOpen.Application.Services.BdoService.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.Key
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Key
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Key()
  nameWithType: IdentifiedDataItem.Key()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Clone
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Clone()
  nameWithType: IdentifiedDataItem.Clone()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
    name: Clone
    nameWithType: IdentifiedDataItem.Clone
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
    name: Clone
    nameWithType: IdentifiedDataItem.Clone
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  definition: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  name: GetDatasourceDepot()
  nameWithType: BdoDatasourceExtensions.GetDatasourceDepot()
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot()
  spec.csharp:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Application.Services
  commentId: N:BindOpen.Application.Services
  name: BindOpen.Application.Services
  nameWithType: BindOpen.Application.Services
  fullName: BindOpen.Application.Services
- uid: BindOpen.Application.Services.TBdoService`1
  commentId: T:BindOpen.Application.Services.TBdoService`1
  name: TBdoService<S>
  nameWithType: TBdoService<S>
  fullName: BindOpen.Application.Services.TBdoService<S>
  nameWithType.vb: TBdoService(Of S)
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S)
  name.vb: TBdoService(Of S)
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1
    name: TBdoService
    nameWithType: TBdoService
    fullName: BindOpen.Application.Services.TBdoService
  - name: <
    nameWithType: <
    fullName: <
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1
    name: TBdoService
    nameWithType: TBdoService
    fullName: BindOpen.Application.Services.TBdoService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1
  commentId: T:BindOpen.Application.Scopes.TBdoHost`1
  name: TBdoHost<S>
  nameWithType: TBdoHost<S>
  fullName: BindOpen.Application.Scopes.TBdoHost<S>
  nameWithType.vb: TBdoHost(Of S)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S)
  name.vb: TBdoHost(Of S)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1
    name: TBdoHost
    nameWithType: TBdoHost
    fullName: BindOpen.Application.Scopes.TBdoHost
  - name: <
    nameWithType: <
    fullName: <
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1
    name: TBdoHost
    nameWithType: TBdoHost
    fullName: BindOpen.Application.Scopes.TBdoHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.ITBdoHost`1
  commentId: T:BindOpen.Application.Scopes.ITBdoHost`1
  parent: BindOpen.Application.Scopes
  name: ITBdoHost<S>
  nameWithType: ITBdoHost<S>
  fullName: BindOpen.Application.Scopes.ITBdoHost<S>
  nameWithType.vb: ITBdoHost(Of S)
  fullName.vb: BindOpen.Application.Scopes.ITBdoHost(Of S)
  name.vb: ITBdoHost(Of S)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: <
    nameWithType: <
    fullName: <
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.ITBdoService`1
  commentId: T:BindOpen.Application.Services.ITBdoService`1
  name: ITBdoService<S>
  nameWithType: ITBdoService<S>
  fullName: BindOpen.Application.Services.ITBdoService<S>
  nameWithType.vb: ITBdoService(Of S)
  fullName.vb: BindOpen.Application.Services.ITBdoService(Of S)
  name.vb: ITBdoService(Of S)
  spec.csharp:
  - uid: BindOpen.Application.Services.ITBdoService`1
    name: ITBdoService
    nameWithType: ITBdoService
    fullName: BindOpen.Application.Services.ITBdoService
  - name: <
    nameWithType: <
    fullName: <
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Services.ITBdoService`1
    name: ITBdoService
    nameWithType: ITBdoService
    fullName: BindOpen.Application.Services.ITBdoService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.Scope
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.Scope
  name: Scope
  nameWithType: TBdoHost<S>.Scope
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Scope
  nameWithType.vb: TBdoHost(Of S).Scope
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Scope
- uid: BindOpen.Application.Scopes.TBdoHost`1.HostOptions
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.HostOptions
  name: HostOptions
  nameWithType: TBdoHost<S>.HostOptions
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.HostOptions
  nameWithType.vb: TBdoHost(Of S).HostOptions
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).HostOptions
- uid: BindOpen.Application.Scopes.TBdoHost`1.Options
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.Options
  name: Options
  nameWithType: TBdoHost<S>.Options
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Options
  nameWithType.vb: TBdoHost(Of S).Options
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Options
- uid: BindOpen.Application.Scopes.TBdoHost`1.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{`0}})
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{`0}})
  isExternal: true
  name: Run(Action<ITBdoHost<S>>)
  nameWithType: TBdoHost<S>.Run(Action<ITBdoHost<S>>)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Run(System.Action<BindOpen.Application.Scopes.ITBdoHost<S>>)
  nameWithType.vb: TBdoHost(Of S).Run(Action(Of ITBdoHost(Of S)))
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Run(System.Action(Of BindOpen.Application.Scopes.ITBdoHost(Of S)))
  name.vb: Run(Action(Of ITBdoHost(Of S)))
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{`0}})
    name: Run
    nameWithType: TBdoHost<S>.Run
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: <
    nameWithType: <
    fullName: <
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Run(System.Action{BindOpen.Application.Scopes.ITBdoHost{`0}})
    name: Run
    nameWithType: TBdoHost(Of S).Run
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).Run
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.ITBdoHost`1
    name: ITBdoHost
    nameWithType: ITBdoHost
    fullName: BindOpen.Application.Scopes.ITBdoHost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.Start
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.Start
  name: Start()
  nameWithType: TBdoHost<S>.Start()
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Start()
  nameWithType.vb: TBdoHost(Of S).Start()
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Start()
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Start
    name: Start
    nameWithType: TBdoHost<S>.Start
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Start
    name: Start
    nameWithType: TBdoHost(Of S).Start
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).Start
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.Process(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.Process(BindOpen.System.Diagnostics.IBdoLog)
  name: Process(IBdoLog)
  nameWithType: TBdoHost<S>.Process(IBdoLog)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Process(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoHost(Of S).Process(IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Process(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Process(BindOpen.System.Diagnostics.IBdoLog)
    name: Process
    nameWithType: TBdoHost<S>.Process
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Process(BindOpen.System.Diagnostics.IBdoLog)
    name: Process
    nameWithType: TBdoHost(Of S).Process
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).Process
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.End(BindOpen.System.Processing.ProcessExecutionStatus)
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.End(BindOpen.System.Processing.ProcessExecutionStatus)
  name: End(ProcessExecutionStatus)
  nameWithType: TBdoHost<S>.End(ProcessExecutionStatus)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.End(BindOpen.System.Processing.ProcessExecutionStatus)
  nameWithType.vb: TBdoHost(Of S).End(ProcessExecutionStatus)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).End(BindOpen.System.Processing.ProcessExecutionStatus)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.End(BindOpen.System.Processing.ProcessExecutionStatus)
    name: End
    nameWithType: TBdoHost<S>.End
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.End
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Processing.ProcessExecutionStatus
    name: ProcessExecutionStatus
    nameWithType: ProcessExecutionStatus
    fullName: BindOpen.System.Processing.ProcessExecutionStatus
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.End(BindOpen.System.Processing.ProcessExecutionStatus)
    name: End
    nameWithType: TBdoHost(Of S).End
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).End
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Processing.ProcessExecutionStatus
    name: ProcessExecutionStatus
    nameWithType: ProcessExecutionStatus
    fullName: BindOpen.System.Processing.ProcessExecutionStatus
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{`0}})
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{`0}})
  isExternal: true
  name: Configure(Action<ITBdoHostOptions<S>>)
  nameWithType: TBdoHost<S>.Configure(Action<ITBdoHostOptions<S>>)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Configure(System.Action<BindOpen.Application.Scopes.ITBdoHostOptions<S>>)
  nameWithType.vb: TBdoHost(Of S).Configure(Action(Of ITBdoHostOptions(Of S)))
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Configure(System.Action(Of BindOpen.Application.Scopes.ITBdoHostOptions(Of S)))
  name.vb: Configure(Action(Of ITBdoHostOptions(Of S)))
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{`0}})
    name: Configure
    nameWithType: TBdoHost<S>.Configure
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Configure(System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{`0}})
    name: Configure
    nameWithType: TBdoHost(Of S).Configure
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  name: GetKnownPath(BdoHostPathKind)
  nameWithType: TBdoHost<S>.GetKnownPath(BdoHostPathKind)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  nameWithType.vb: TBdoHost(Of S).GetKnownPath(BdoHostPathKind)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
    name: GetKnownPath
    nameWithType: TBdoHost<S>.GetKnownPath
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.GetKnownPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.BdoHostPathKind
    name: BdoHostPathKind
    nameWithType: BdoHostPathKind
    fullName: BindOpen.Application.Scopes.BdoHostPathKind
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetKnownPath(BindOpen.Application.Scopes.BdoHostPathKind)
    name: GetKnownPath
    nameWithType: TBdoHost(Of S).GetKnownPath
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).GetKnownPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.BdoHostPathKind
    name: BdoHostPathKind
    nameWithType: BdoHostPathKind
    fullName: BindOpen.Application.Scopes.BdoHostPathKind
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.GetCredential(System.String)
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.GetCredential(System.String)
  isExternal: true
  name: GetCredential(String)
  nameWithType: TBdoHost<S>.GetCredential(String)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.GetCredential(System.String)
  nameWithType.vb: TBdoHost(Of S).GetCredential(String)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).GetCredential(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetCredential(System.String)
    name: GetCredential
    nameWithType: TBdoHost<S>.GetCredential
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.GetCredential
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.GetCredential(System.String)
    name: GetCredential
    nameWithType: TBdoHost(Of S).GetCredential
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).GetCredential
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  name: Initialize(IBdoLog)
  nameWithType: TBdoHost<S>.Initialize(IBdoLog)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Initialize(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoHost(Of S).Initialize(IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Initialize(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Initialize(BindOpen.System.Diagnostics.IBdoLog)
    name: Initialize
    nameWithType: TBdoHost<S>.Initialize
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Initialize(BindOpen.System.Diagnostics.IBdoLog)
    name: Initialize
    nameWithType: TBdoHost(Of S).Initialize
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).Initialize
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.AppDomain
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.AppDomain
  name: AppDomain
  nameWithType: TBdoHost<S>.AppDomain
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.AppDomain
  nameWithType.vb: TBdoHost(Of S).AppDomain
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).AppDomain
- uid: BindOpen.Application.Scopes.TBdoHost`1.ExtensionStore
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.ExtensionStore
  name: ExtensionStore
  nameWithType: TBdoHost<S>.ExtensionStore
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.ExtensionStore
  nameWithType.vb: TBdoHost(Of S).ExtensionStore
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).ExtensionStore
- uid: BindOpen.Application.Scopes.TBdoHost`1.DataStore
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.DataStore
  name: DataStore
  nameWithType: TBdoHost<S>.DataStore
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.DataStore
  nameWithType.vb: TBdoHost(Of S).DataStore
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).DataStore
- uid: BindOpen.Application.Scopes.TBdoHost`1.Context
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.Context
  name: Context
  nameWithType: TBdoHost<S>.Context
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Context
  nameWithType.vb: TBdoHost(Of S).Context
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Context
- uid: BindOpen.Application.Scopes.TBdoHost`1.Interpreter
  commentId: P:BindOpen.Application.Scopes.TBdoHost`1.Interpreter
  name: Interpreter
  nameWithType: TBdoHost<S>.Interpreter
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Interpreter
  nameWithType.vb: TBdoHost(Of S).Interpreter
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Interpreter
- uid: BindOpen.Application.Scopes.TBdoHost`1.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  isExternal: true
  name: Check(Boolean, Boolean, Boolean, Boolean)
  nameWithType: TBdoHost<S>.Check(Boolean, Boolean, Boolean, Boolean)
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Check(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  nameWithType.vb: TBdoHost(Of S).Check(Boolean, Boolean, Boolean, Boolean)
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Check(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: Check
    nameWithType: TBdoHost<S>.Check
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: Check
    nameWithType: TBdoHost(Of S).Check
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  name: LoadExtensions(IBdoExtensionReference[])
  nameWithType: TBdoHost<S>.LoadExtensions(IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: TBdoHost(Of S).LoadExtensions(IBdoExtensionReference())
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(IBdoExtensionReference())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost<S>.LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost(Of S).LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  isExternal: true
  name: LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  nameWithType: TBdoHost<S>.LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.LoadExtensions(System.Action<BindOpen.Application.Scopes.IExtensionLoadOptions>, BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: TBdoHost(Of S).LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).LoadExtensions(System.Action(Of BindOpen.Application.Scopes.IExtensionLoadOptions), BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost<S>.LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: TBdoHost(Of S).LoadExtensions
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.TBdoHost`1.Clear
  commentId: M:BindOpen.Application.Scopes.TBdoHost`1.Clear
  name: Clear()
  nameWithType: TBdoHost<S>.Clear()
  fullName: BindOpen.Application.Scopes.TBdoHost<S>.Clear()
  nameWithType.vb: TBdoHost(Of S).Clear()
  fullName.vb: BindOpen.Application.Scopes.TBdoHost(Of S).Clear()
  spec.csharp:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Clear
    name: Clear
    nameWithType: TBdoHost<S>.Clear
    fullName: BindOpen.Application.Scopes.TBdoHost<S>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.TBdoHost`1.Clear
    name: Clear
    nameWithType: TBdoHost(Of S).Clear
    fullName: BindOpen.Application.Scopes.TBdoHost(Of S).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService`1.Settings
  commentId: P:BindOpen.Application.Services.TBdoService`1.Settings
  name: Settings
  nameWithType: TBdoService<S>.Settings
  fullName: BindOpen.Application.Services.TBdoService<S>.Settings
  nameWithType.vb: TBdoService(Of S).Settings
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).Settings
- uid: BindOpen.Application.Services.TBdoService`1.Action_OnStartSuccess
  commentId: P:BindOpen.Application.Services.TBdoService`1.Action_OnStartSuccess
  name: Action_OnStartSuccess
  nameWithType: TBdoService<S>.Action_OnStartSuccess
  fullName: BindOpen.Application.Services.TBdoService<S>.Action_OnStartSuccess
  nameWithType.vb: TBdoService(Of S).Action_OnStartSuccess
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).Action_OnStartSuccess
- uid: BindOpen.Application.Services.TBdoService`1.Action_OnStartFailure
  commentId: P:BindOpen.Application.Services.TBdoService`1.Action_OnStartFailure
  name: Action_OnStartFailure
  nameWithType: TBdoService<S>.Action_OnStartFailure
  fullName: BindOpen.Application.Services.TBdoService<S>.Action_OnStartFailure
  nameWithType.vb: TBdoService(Of S).Action_OnStartFailure
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).Action_OnStartFailure
- uid: BindOpen.Application.Services.TBdoService`1.Action_OnExecutionSucess
  commentId: P:BindOpen.Application.Services.TBdoService`1.Action_OnExecutionSucess
  name: Action_OnExecutionSucess
  nameWithType: TBdoService<S>.Action_OnExecutionSucess
  fullName: BindOpen.Application.Services.TBdoService<S>.Action_OnExecutionSucess
  nameWithType.vb: TBdoService(Of S).Action_OnExecutionSucess
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).Action_OnExecutionSucess
- uid: BindOpen.Application.Services.TBdoService`1.Action_OnExecutionFailure
  commentId: P:BindOpen.Application.Services.TBdoService`1.Action_OnExecutionFailure
  name: Action_OnExecutionFailure
  nameWithType: TBdoService<S>.Action_OnExecutionFailure
  fullName: BindOpen.Application.Services.TBdoService<S>.Action_OnExecutionFailure
  nameWithType.vb: TBdoService(Of S).Action_OnExecutionFailure
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).Action_OnExecutionFailure
- uid: BindOpen.Application.Services.TBdoService`1.StartSucceeds
  commentId: M:BindOpen.Application.Services.TBdoService`1.StartSucceeds
  name: StartSucceeds()
  nameWithType: TBdoService<S>.StartSucceeds()
  fullName: BindOpen.Application.Services.TBdoService<S>.StartSucceeds()
  nameWithType.vb: TBdoService(Of S).StartSucceeds()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).StartSucceeds()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.StartSucceeds
    name: StartSucceeds
    nameWithType: TBdoService<S>.StartSucceeds
    fullName: BindOpen.Application.Services.TBdoService<S>.StartSucceeds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.StartSucceeds
    name: StartSucceeds
    nameWithType: TBdoService(Of S).StartSucceeds
    fullName: BindOpen.Application.Services.TBdoService(Of S).StartSucceeds
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService`1.StartFails
  commentId: M:BindOpen.Application.Services.TBdoService`1.StartFails
  name: StartFails()
  nameWithType: TBdoService<S>.StartFails()
  fullName: BindOpen.Application.Services.TBdoService<S>.StartFails()
  nameWithType.vb: TBdoService(Of S).StartFails()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).StartFails()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.StartFails
    name: StartFails
    nameWithType: TBdoService<S>.StartFails
    fullName: BindOpen.Application.Services.TBdoService<S>.StartFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.StartFails
    name: StartFails
    nameWithType: TBdoService(Of S).StartFails
    fullName: BindOpen.Application.Services.TBdoService(Of S).StartFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService`1.ExecutionSucceedes
  commentId: M:BindOpen.Application.Services.TBdoService`1.ExecutionSucceedes
  name: ExecutionSucceedes()
  nameWithType: TBdoService<S>.ExecutionSucceedes()
  fullName: BindOpen.Application.Services.TBdoService<S>.ExecutionSucceedes()
  nameWithType.vb: TBdoService(Of S).ExecutionSucceedes()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).ExecutionSucceedes()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionSucceedes
    name: ExecutionSucceedes
    nameWithType: TBdoService<S>.ExecutionSucceedes
    fullName: BindOpen.Application.Services.TBdoService<S>.ExecutionSucceedes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionSucceedes
    name: ExecutionSucceedes
    nameWithType: TBdoService(Of S).ExecutionSucceedes
    fullName: BindOpen.Application.Services.TBdoService(Of S).ExecutionSucceedes
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.TBdoService`1.ExecutionFails
  commentId: M:BindOpen.Application.Services.TBdoService`1.ExecutionFails
  name: ExecutionFails()
  nameWithType: TBdoService<S>.ExecutionFails()
  fullName: BindOpen.Application.Services.TBdoService<S>.ExecutionFails()
  nameWithType.vb: TBdoService(Of S).ExecutionFails()
  fullName.vb: BindOpen.Application.Services.TBdoService(Of S).ExecutionFails()
  spec.csharp:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionFails
    name: ExecutionFails
    nameWithType: TBdoService<S>.ExecutionFails
    fullName: BindOpen.Application.Services.TBdoService<S>.ExecutionFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.TBdoService`1.ExecutionFails
    name: ExecutionFails
    nameWithType: TBdoService(Of S).ExecutionFails
    fullName: BindOpen.Application.Services.TBdoService(Of S).ExecutionFails
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  name: GetDatasourceDepot(IBdoScope)
  nameWithType: BdoDatasourceExtensions.GetDatasourceDepot(IBdoScope)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  spec.csharp:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions
  commentId: T:BindOpen.Data.Stores.BdoDatasourceExtensions
  parent: BindOpen.Data.Stores
  name: BdoDatasourceExtensions
  nameWithType: BdoDatasourceExtensions
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores
  commentId: N:BindOpen.Data.Stores
  name: BindOpen.Data.Stores
  nameWithType: BindOpen.Data.Stores
  fullName: BindOpen.Data.Stores
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Application.Scopes.BdoDefaultHost.#ctor*
  commentId: Overload:BindOpen.Application.Scopes.BdoDefaultHost.#ctor
  name: BdoDefaultHost
  nameWithType: BdoDefaultHost.BdoDefaultHost
  fullName: BindOpen.Application.Scopes.BdoDefaultHost.BdoDefaultHost
- uid: BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings}
  commentId: T:BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings}
  parent: BindOpen.Application.Scopes
  definition: BindOpen.Application.Scopes.ITBdoHostOptions`1
  name: ITBdoHostOptions<BdoDefaultAppSettings>
  nameWithType: ITBdoHostOptions<BdoDefaultAppSettings>
  fullName: BindOpen.Application.Scopes.ITBdoHostOptions<BindOpen.Application.Settings.BdoDefaultAppSettings>
  nameWithType.vb: ITBdoHostOptions(Of BdoDefaultAppSettings)
  fullName.vb: BindOpen.Application.Scopes.ITBdoHostOptions(Of BindOpen.Application.Settings.BdoDefaultAppSettings)
  name.vb: ITBdoHostOptions(Of BdoDefaultAppSettings)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Settings.BdoDefaultAppSettings
    name: BdoDefaultAppSettings
    nameWithType: BdoDefaultAppSettings
    fullName: BindOpen.Application.Settings.BdoDefaultAppSettings
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
  commentId: T:BindOpen.Application.Scopes.ITBdoHostOptions`1
  parent: BindOpen.Application.Scopes
  name: ITBdoHostOptions<S>
  nameWithType: ITBdoHostOptions<S>
  fullName: BindOpen.Application.Scopes.ITBdoHostOptions<S>
  nameWithType.vb: ITBdoHostOptions(Of S)
  fullName.vb: BindOpen.Application.Scopes.ITBdoHostOptions(Of S)
  name.vb: ITBdoHostOptions(Of S)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: S
    nameWithType: S
    fullName: S
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Scopes.ITBdoHostOptions`1
    name: ITBdoHostOptions
    nameWithType: ITBdoHostOptions
    fullName: BindOpen.Application.Scopes.ITBdoHostOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: S
    nameWithType: S
    fullName: S
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
