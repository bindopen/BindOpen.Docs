### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.IBdoDbConnector
  id: IBdoDbConnector
  parent: BindOpen.Extensions.Connectors
  children:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  - BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  - BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  - BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  - BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  - BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  - BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  - BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  langs:
  - csharp
  - vb
  name: IBdoDbConnector
  nameWithType: IBdoDbConnector
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector
  type: Interface
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThis class defines a database connector.\n"
  syntax:
    content: 'public interface IBdoDbConnector : ITBdoConnector<IBdoDbConnection>, IBdoConnector, ITBdoExtensionItem<IBdoConnectorDefinition>, IBdoExtensionItem, IDataItem, ICloneable, IDisposable, IIdentifiedDataItem, IIdentified, IReferenced, INamed'
    content.vb: >-
      Public Interface IBdoDbConnector
          Inherits ITBdoConnector(Of IBdoDbConnection), IBdoConnector, ITBdoExtensionItem(Of IBdoConnectorDefinition), IBdoExtensionItem, IDataItem, ICloneable, IDisposable, IIdentifiedDataItem, IIdentified, IReferenced, INamed
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IBdoDbConnector.CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nGets the SQL text of the specified query.\n"
  syntax:
    content: string CreateCommandText(IDbQuery query, DbQueryParameterMode parameterMode, IDataElementSet parameterSet = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
      description: The query to consider.
    - id: parameterMode
      type: BindOpen.Data.Queries.DbQueryParameterMode
      description: Indicates whether parameters are replaced.
    - id: parameterSet
      type: BindOpen.Data.Elements.IDataElementSet
      description: The parameter set to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The script variable set to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: System.String
      description: Returns the SQL text of the specified query.
    content.vb: Function CreateCommandText(query As IDbQuery, parameterMode As DbQueryParameterMode, parameterSet As IDataElementSet = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing) As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText*
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  commentId: M:BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  id: EstimateDbConnectorKind
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: EstimateDbConnectorKind()
  nameWithType: IBdoDbConnector.EstimateDbConnectorKind()
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind()
  type: Method
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nEstimates the kind of the database connector of this instance.\n"
  syntax:
    content: BdoDbConnectorKind EstimateDbConnectorKind()
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
      description: The database connector kind of this instance.
    content.vb: Function EstimateDbConnectorKind As BdoDbConnectorKind
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind*
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  id: Provider
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: IBdoDbConnector.Provider
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe provider of this instance.\n"
  syntax:
    content: string Provider { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Provider As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  id: ServerAddress
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: ServerAddress
  nameWithType: IBdoDbConnector.ServerAddress
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe server address of this instance.\n"
  syntax:
    content: string ServerAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ServerAddress As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  id: InitialCatalog
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: InitialCatalog
  nameWithType: IBdoDbConnector.InitialCatalog
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe initial catalog of this instance.\n"
  syntax:
    content: string InitialCatalog { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property InitialCatalog As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  id: IntegratedSecurity
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: IntegratedSecurity
  nameWithType: IBdoDbConnector.IntegratedSecurity
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe integrated security of this instance.\n"
  syntax:
    content: string IntegratedSecurity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property IntegratedSecurity As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  id: UserName
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: IBdoDbConnector.UserName
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe user name of this instance.\n"
  syntax:
    content: string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property UserName As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  id: Password
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: IBdoDbConnector.Password
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe password of this instance.\n"
  syntax:
    content: string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Password As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.Password*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  id: DatabaseConnectorKind
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: DatabaseConnectorKind
  nameWithType: IBdoDbConnector.DatabaseConnectorKind
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  type: Property
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe database kind of this instance.\n"
  syntax:
    content: BdoDbConnectorKind DatabaseConnectorKind { get; set; }
    parameters: []
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Property DatabaseConnectorKind As BdoDbConnectorKind
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind*
  modifiers.csharp:
  - get
  - set
references:
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  isExternal: true
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText
  isExternal: true
  name: CreateCommandText
  nameWithType: IBdoDbConnector.CreateCommandText
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText
- uid: BindOpen.Data.Queries.IDbQuery
  commentId: T:BindOpen.Data.Queries.IDbQuery
  parent: BindOpen.Data.Queries
  isExternal: true
  name: IDbQuery
  nameWithType: IDbQuery
  fullName: BindOpen.Data.Queries.IDbQuery
- uid: BindOpen.Data.Queries.DbQueryParameterMode
  commentId: T:BindOpen.Data.Queries.DbQueryParameterMode
  parent: BindOpen.Data.Queries
  isExternal: true
  name: DbQueryParameterMode
  nameWithType: DbQueryParameterMode
  fullName: BindOpen.Data.Queries.DbQueryParameterMode
- uid: BindOpen.Data.Elements.IDataElementSet
  isExternal: true
  name: IDataElementSet
  nameWithType: IDataElementSet
  fullName: BindOpen.Data.Elements.IDataElementSet
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  isExternal: true
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  isExternal: true
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  isExternal: true
  name: EstimateDbConnectorKind
  nameWithType: IBdoDbConnector.EstimateDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnectorKind
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: BdoDbConnectorKind
  nameWithType: BdoDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  isExternal: true
  name: Provider
  nameWithType: IBdoDbConnector.Provider
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  isExternal: true
  name: ServerAddress
  nameWithType: IBdoDbConnector.ServerAddress
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  isExternal: true
  name: InitialCatalog
  nameWithType: IBdoDbConnector.InitialCatalog
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  isExternal: true
  name: IntegratedSecurity
  nameWithType: IBdoDbConnector.IntegratedSecurity
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  isExternal: true
  name: UserName
  nameWithType: IBdoDbConnector.UserName
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Password*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  isExternal: true
  name: Password
  nameWithType: IBdoDbConnector.Password
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  isExternal: true
  name: DatabaseConnectorKind
  nameWithType: IBdoDbConnector.DatabaseConnectorKind
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
shouldSkipMarkup: true
