### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension
  commentId: T:BindOpen.Extensions.Definition.BdoExtensionItemKindExtension
  id: BdoExtensionItemKindExtension
  parent: BindOpen.Extensions.Definition
  children:
  - BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto)
  - BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(System.Type)
  langs:
  - csharp
  - vb
  name: BdoExtensionItemKindExtension
  nameWithType: BdoExtensionItemKindExtension
  fullName: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Definition/Items/BdoExtensionItemKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoExtensionItemKindExtension
    path: ../src/BindOpen.Core/Extensions/Definition/Items/BdoExtensionItemKind.cs
    startLine: 84
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Definition
  summary: "\nThis class represents an extension item kind extension.\n"
  example: []
  syntax:
    content: public static class BdoExtensionItemKindExtension
    content.vb: Public Module BdoExtensionItemKindExtension
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto)
  commentId: M:BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto)
  id: GetExtensionItemKind(BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto)
  isExtensionMethod: true
  parent: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension
  langs:
  - csharp
  - vb
  name: GetExtensionItemKind(IBdoExtensionItemDefinitionDto)
  nameWithType: BdoExtensionItemKindExtension.GetExtensionItemKind(IBdoExtensionItemDefinitionDto)
  fullName: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Definition/Items/BdoExtensionItemKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetExtensionItemKind
    path: ../src/BindOpen.Core/Extensions/Definition/Items/BdoExtensionItemKind.cs
    startLine: 90
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Definition
  summary: "\nGets the extension item kind corresponding to the specified object.\n"
  example: []
  syntax:
    content: public static BdoExtensionItemKind GetExtensionItemKind(this IBdoExtensionItemDefinitionDto appExtensionItemDefinition)
    parameters:
    - id: appExtensionItemDefinition
      type: BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto
      description: The BindOpen extension item to consider.
    return:
      type: BindOpen.Extensions.Definition.BdoExtensionItemKind
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExtensionItemKind(appExtensionItemDefinition As IBdoExtensionItemDefinitionDto) As BdoExtensionItemKind
  overload: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(System.Type)
  commentId: M:BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(System.Type)
  id: GetExtensionItemKind(System.Type)
  isExtensionMethod: true
  parent: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension
  langs:
  - csharp
  - vb
  name: GetExtensionItemKind(Type)
  nameWithType: BdoExtensionItemKindExtension.GetExtensionItemKind(Type)
  fullName: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind(System.Type)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Definition/Items/BdoExtensionItemKind.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetExtensionItemKind
    path: ../src/BindOpen.Core/Extensions/Definition/Items/BdoExtensionItemKind.cs
    startLine: 99
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Definition
  summary: "\nGets the extension item kind corresponding to the specified type.\n"
  example: []
  syntax:
    content: public static BdoExtensionItemKind GetExtensionItemKind(this Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to consider.
    return:
      type: BindOpen.Extensions.Definition.BdoExtensionItemKind
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetExtensionItemKind(type As Type) As BdoExtensionItemKind
  overload: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BindOpen.Extensions.Definition
  commentId: N:BindOpen.Extensions.Definition
  name: BindOpen.Extensions.Definition
  nameWithType: BindOpen.Extensions.Definition
  fullName: BindOpen.Extensions.Definition
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind*
  commentId: Overload:BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind
  name: GetExtensionItemKind
  nameWithType: BdoExtensionItemKindExtension.GetExtensionItemKind
  fullName: BindOpen.Extensions.Definition.BdoExtensionItemKindExtension.GetExtensionItemKind
- uid: BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto
  commentId: T:BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto
  parent: BindOpen.Extensions.Definition
  name: IBdoExtensionItemDefinitionDto
  nameWithType: IBdoExtensionItemDefinitionDto
  fullName: BindOpen.Extensions.Definition.IBdoExtensionItemDefinitionDto
- uid: BindOpen.Extensions.Definition.BdoExtensionItemKind
  commentId: T:BindOpen.Extensions.Definition.BdoExtensionItemKind
  parent: BindOpen.Extensions.Definition
  name: BdoExtensionItemKind
  nameWithType: BdoExtensionItemKind
  fullName: BindOpen.Extensions.Definition.BdoExtensionItemKind
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
shouldSkipMarkup: true
