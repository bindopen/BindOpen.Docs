### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Elements.IDataElementSpec
  commentId: T:BindOpen.Data.Elements.IDataElementSpec
  id: IDataElementSpec
  parent: BindOpen.Data.Elements
  children:
  - BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  - BindOpen.Data.Elements.IDataElementSpec.Aliases
  - BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  - BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  - BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  - BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  - BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  - BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  - BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  - BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  - BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  - BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.IDataElementSpec.GroupId
  - BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  - BindOpen.Data.Elements.IDataElementSpec.IsValueList
  - BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  - BindOpen.Data.Elements.IDataElementSpec.ItemScript
  - BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  - BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  - BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  - BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  - BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  - BindOpen.Data.Elements.IDataElementSpec.ValueType
  langs:
  - csharp
  - vb
  name: IDataElementSpec
  nameWithType: IDataElementSpec
  fullName: BindOpen.Data.Elements.IDataElementSpec
  type: Interface
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IDataElementSpec
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 11
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: 'public interface IDataElementSpec : IDataSpecification, IIndexedDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed'
    content.vb: >-
      Public Interface IDataElementSpec
          Inherits IDataSpecification
  inheritedMembers:
  - BindOpen.Data.Specification.IDataSpecification.AccessibilityLevel
  - BindOpen.Data.Specification.IDataSpecification.InheritanceLevel
  - BindOpen.Data.Specification.IDataSpecification.RequirementLevel
  - BindOpen.Data.Specification.IDataSpecification.RequirementScript
  - BindOpen.Data.Specification.IDataSpecification.SpecificationLevels
  - BindOpen.Data.Specification.IDataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  - BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  - BindOpen.Data.Specification.IDataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  - BindOpen.Data.Specification.IDataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  - BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  - BindOpen.Data.Items.ITitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  - BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.Clone``1
  - System.ICloneable.Clone
  - System.IDisposable.Dispose
  - BindOpen.Data.Items.IIdentified.Id
  - BindOpen.Data.Items.IReferenced.Key
  - BindOpen.Data.Items.IStorable.CreationDate
  - BindOpen.Data.Items.IStorable.LastModificationDate
  - BindOpen.Data.Items.INamed.Name
  - BindOpen.Data.Items.IGloballyTitled.Title
  - BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String)
  - BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String,System.String)
  - BindOpen.Data.Items.IGloballyTitled.GetTitle(System.String,System.String)
  - BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String,System.String)
  - BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String)
  - BindOpen.Data.Items.IGloballyDescribed.Description
  - BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  - BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  - BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  - BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  - BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  - BindOpen.Data.Items.IIndexed.Index
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Data.Elements.IDataElementSpec.Aliases
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.Aliases
  id: Aliases
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: Aliases
  nameWithType: IDataElementSpec.Aliases
  fullName: BindOpen.Data.Elements.IDataElementSpec.Aliases
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Aliases
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 16
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: List<string> Aliases { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Property Aliases As List(Of String)
  overload: BindOpen.Data.Elements.IDataElementSpec.Aliases*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  id: AreaSpecifications
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: AreaSpecifications
  nameWithType: IDataElementSpec.AreaSpecifications
  fullName: BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AreaSpecifications
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 21
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: List<DataAreaSpecification> AreaSpecifications { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Specification.DataAreaSpecification}
    content.vb: Property AreaSpecifications As List(Of DataAreaSpecification)
  overload: BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  id: AvailableItemizationModes
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: AvailableItemizationModes
  nameWithType: IDataElementSpec.AvailableItemizationModes
  fullName: BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AvailableItemizationModes
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 26
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: List<DataItemizationMode> AvailableItemizationModes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Items.DataItemizationMode}
    content.vb: Property AvailableItemizationModes As List(Of DataItemizationMode)
  overload: BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  id: ConstraintStatement
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: ConstraintStatement
  nameWithType: IDataElementSpec.ConstraintStatement
  fullName: BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ConstraintStatement
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 31
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: DataConstraintStatement ConstraintStatement { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Specification.DataConstraintStatement
    content.vb: Property ConstraintStatement As DataConstraintStatement
  overload: BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  id: DefaultItems
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: DefaultItems
  nameWithType: IDataElementSpec.DefaultItems
  fullName: BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DefaultItems
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 36
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: List<object> DefaultItems { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: Property DefaultItems As List(Of Object)
  overload: BindOpen.Data.Elements.IDataElementSpec.DefaultItems*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  id: DefaultStringItems
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: DefaultStringItems
  nameWithType: IDataElementSpec.DefaultStringItems
  fullName: BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DefaultStringItems
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 41
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: List<string> DefaultStringItems { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Property DefaultStringItems As List(Of String)
  overload: BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  id: DesignStatement
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: DesignStatement
  nameWithType: IDataElementSpec.DesignStatement
  fullName: BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DesignStatement
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 46
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: DataDesignStatement DesignStatement { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Specification.DataDesignStatement
    content.vb: Property DesignStatement As DataDesignStatement
  overload: BindOpen.Data.Elements.IDataElementSpec.DesignStatement*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.GroupId
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.GroupId
  id: GroupId
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: GroupId
  nameWithType: IDataElementSpec.GroupId
  fullName: BindOpen.Data.Elements.IDataElementSpec.GroupId
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GroupId
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 51
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: string GroupId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property GroupId As String
  overload: BindOpen.Data.Elements.IDataElementSpec.GroupId*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  id: IsAllocatable
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: IsAllocatable
  nameWithType: IDataElementSpec.IsAllocatable
  fullName: BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsAllocatable
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 56
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: bool IsAllocatable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property IsAllocatable As Boolean
  overload: BindOpen.Data.Elements.IDataElementSpec.IsAllocatable*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.IsValueList
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.IsValueList
  id: IsValueList
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: IsValueList
  nameWithType: IDataElementSpec.IsValueList
  fullName: BindOpen.Data.Elements.IDataElementSpec.IsValueList
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsValueList
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 61
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: bool IsValueList { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsValueList As Boolean
  overload: BindOpen.Data.Elements.IDataElementSpec.IsValueList*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  id: ItemRequirementLevel
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: ItemRequirementLevel
  nameWithType: IDataElementSpec.ItemRequirementLevel
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemRequirementLevel
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 66
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: RequirementLevel ItemRequirementLevel { get; }
    parameters: []
    return:
      type: BindOpen.Data.Common.RequirementLevel
    content.vb: ReadOnly Property ItemRequirementLevel As RequirementLevel
  overload: BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemScript
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ItemScript
  id: ItemScript
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: ItemScript
  nameWithType: IDataElementSpec.ItemScript
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemScript
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemScript
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 71
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: string ItemScript { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ItemScript As String
  overload: BindOpen.Data.Elements.IDataElementSpec.ItemScript*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  id: ItemSpecificationLevels
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: ItemSpecificationLevels
  nameWithType: IDataElementSpec.ItemSpecificationLevels
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ItemSpecificationLevels
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 76
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: List<SpecificationLevels> ItemSpecificationLevels { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Common.SpecificationLevels}
    content.vb: Property ItemSpecificationLevels As List(Of SpecificationLevels)
  overload: BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  id: MaximumItemNumber
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: MaximumItemNumber
  nameWithType: IDataElementSpec.MaximumItemNumber
  fullName: BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: MaximumItemNumber
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 81
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: int MaximumItemNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property MaximumItemNumber As Integer
  overload: BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  id: MinimumItemNumber
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: MinimumItemNumber
  nameWithType: IDataElementSpec.MinimumItemNumber
  fullName: BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: MinimumItemNumber
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 86
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: int MinimumItemNumber { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Property MinimumItemNumber As Integer
  overload: BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.ValueType
  commentId: P:BindOpen.Data.Elements.IDataElementSpec.ValueType
  id: ValueType
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: ValueType
  nameWithType: IDataElementSpec.ValueType
  fullName: BindOpen.Data.Elements.IDataElementSpec.ValueType
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ValueType
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 91
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: DataValueType ValueType { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Common.DataValueType
    content.vb: Property ValueType As DataValueType
  overload: BindOpen.Data.Elements.IDataElementSpec.ValueType*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  id: AddDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: AddDefaultItem(Object)
  nameWithType: IDataElementSpec.AddDefaultItem(Object)
  fullName: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem(System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddDefaultItem
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 98
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: bool AddDefaultItem(object item)
    parameters:
    - id: item
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function AddDefaultItem(item As Object) As Boolean
  overload: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem*
- uid: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  id: GetAreaSpecification(System.String)
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: GetAreaSpecification(String)
  nameWithType: IDataElementSpec.GetAreaSpecification(String)
  fullName: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetAreaSpecification
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 105
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: IDataAreaSpecification GetAreaSpecification(string areaName)
    parameters:
    - id: areaName
      type: System.String
      description: ''
    return:
      type: BindOpen.Data.Specification.IDataAreaSpecification
      description: ''
    content.vb: Function GetAreaSpecification(areaName As String) As IDataAreaSpecification
  overload: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification*
- uid: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  id: GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: GetDefaultItemObject(IBdoLog)
  nameWithType: IDataElementSpec.GetDefaultItemObject(IBdoLog)
  fullName: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetDefaultItemObject
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 112
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: object GetDefaultItemObject(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Function GetDefaultItemObject(log As IBdoLog = Nothing) As Object
  overload: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject*
- uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  id: SetDefaultItem(System.Collections.Generic.List{System.Object})
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: SetDefaultItem(List<Object>)
  nameWithType: IDataElementSpec.SetDefaultItem(List<Object>)
  fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List<System.Object>)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDefaultItem
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 119
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: bool SetDefaultItem(List<object> defaultItems)
    parameters:
    - id: defaultItems
      type: System.Collections.Generic.List{System.Object}
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function SetDefaultItem(defaultItems As List(Of Object)) As Boolean
  overload: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem*
  nameWithType.vb: IDataElementSpec.SetDefaultItem(List(Of Object))
  fullName.vb: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Collections.Generic.List(Of System.Object))
  name.vb: SetDefaultItem(List(Of Object))
- uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  id: SetDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: SetDefaultItem(Object)
  nameWithType: IDataElementSpec.SetDefaultItem(Object)
  fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem(System.Object)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDefaultItem
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 126
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: bool SetDefaultItem(object item)
    parameters:
    - id: item
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function SetDefaultItem(item As Object) As Boolean
  overload: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem*
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  id: CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: CheckItem(Object, IDataElement)
  nameWithType: IDataElementSpec.CheckItem(Object, IDataElement)
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CheckItem
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 134
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: IBdoLog CheckItem(object item, IDataElement dataElement)
    parameters:
    - id: item
      type: System.Object
      description: ''
    - id: dataElement
      type: BindOpen.Data.Elements.IDataElement
      description: ''
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: ''
    content.vb: Function CheckItem(item As Object, dataElement As IDataElement) As IBdoLog
  overload: BindOpen.Data.Elements.IDataElementSpec.CheckItem*
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  id: CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  parent: BindOpen.Data.Elements.IDataElementSpec
  langs:
  - csharp
  - vb
  name: CheckElement(IDataElement, String[])
  nameWithType: IDataElementSpec.CheckElement(IDataElement, String[])
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CheckElement
    path: ../src/BindOpen.Core/Data/Elements/Interfaces/IDataElementSpec.cs
    startLine: 144
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\n\n"
  example: []
  syntax:
    content: IBdoLog CheckElement(IDataElement dataElement, string[] specificationAreas = null)
    parameters:
    - id: dataElement
      type: BindOpen.Data.Elements.IDataElement
      description: ''
    - id: specificationAreas
      type: System.String[]
      description: ''
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: ''
    content.vb: Function CheckElement(dataElement As IDataElement, specificationAreas As String() = Nothing) As IBdoLog
  overload: BindOpen.Data.Elements.IDataElementSpec.CheckElement*
  nameWithType.vb: IDataElementSpec.CheckElement(IDataElement, String())
  fullName.vb: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String())
  name.vb: CheckElement(IDataElement, String())
references:
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: BindOpen.Data.Specification.IDataSpecification.AccessibilityLevel
  commentId: P:BindOpen.Data.Specification.IDataSpecification.AccessibilityLevel
  parent: BindOpen.Data.Specification.IDataSpecification
  name: AccessibilityLevel
  nameWithType: IDataSpecification.AccessibilityLevel
  fullName: BindOpen.Data.Specification.IDataSpecification.AccessibilityLevel
- uid: BindOpen.Data.Specification.IDataSpecification.InheritanceLevel
  commentId: P:BindOpen.Data.Specification.IDataSpecification.InheritanceLevel
  parent: BindOpen.Data.Specification.IDataSpecification
  name: InheritanceLevel
  nameWithType: IDataSpecification.InheritanceLevel
  fullName: BindOpen.Data.Specification.IDataSpecification.InheritanceLevel
- uid: BindOpen.Data.Specification.IDataSpecification.RequirementLevel
  commentId: P:BindOpen.Data.Specification.IDataSpecification.RequirementLevel
  parent: BindOpen.Data.Specification.IDataSpecification
  name: RequirementLevel
  nameWithType: IDataSpecification.RequirementLevel
  fullName: BindOpen.Data.Specification.IDataSpecification.RequirementLevel
- uid: BindOpen.Data.Specification.IDataSpecification.RequirementScript
  commentId: P:BindOpen.Data.Specification.IDataSpecification.RequirementScript
  parent: BindOpen.Data.Specification.IDataSpecification
  name: RequirementScript
  nameWithType: IDataSpecification.RequirementScript
  fullName: BindOpen.Data.Specification.IDataSpecification.RequirementScript
- uid: BindOpen.Data.Specification.IDataSpecification.SpecificationLevels
  commentId: P:BindOpen.Data.Specification.IDataSpecification.SpecificationLevels
  parent: BindOpen.Data.Specification.IDataSpecification
  name: SpecificationLevels
  nameWithType: IDataSpecification.SpecificationLevels
  fullName: BindOpen.Data.Specification.IDataSpecification.SpecificationLevels
- uid: BindOpen.Data.Specification.IDataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  commentId: M:BindOpen.Data.Specification.IDataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  parent: BindOpen.Data.Specification.IDataSpecification
  name: Check(IDataSpecification)
  nameWithType: IDataSpecification.Check(IDataSpecification)
  fullName: BindOpen.Data.Specification.IDataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
    name: Check
    nameWithType: IDataSpecification.Check
    fullName: BindOpen.Data.Specification.IDataSpecification.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
    name: Check
    nameWithType: IDataSpecification.Check
    fullName: BindOpen.Data.Specification.IDataSpecification.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  commentId: M:BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  parent: BindOpen.Data.Specification.IDataSpecification
  name: IsCompatibleWith(IDataItem)
  nameWithType: IDataSpecification.IsCompatibleWith(IDataItem)
  fullName: BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
    name: IsCompatibleWith
    nameWithType: IDataSpecification.IsCompatibleWith
    fullName: BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItem
    name: IDataItem
    nameWithType: IDataItem
    fullName: BindOpen.Data.Items.IDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
    name: IsCompatibleWith
    nameWithType: IDataSpecification.IsCompatibleWith
    fullName: BindOpen.Data.Specification.IDataSpecification.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItem
    name: IDataItem
    nameWithType: IDataItem
    fullName: BindOpen.Data.Items.IDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.IDataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  commentId: M:BindOpen.Data.Specification.IDataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  parent: BindOpen.Data.Specification.IDataSpecification
  name: Repair(IDataSpecification)
  nameWithType: IDataSpecification.Repair(IDataSpecification)
  fullName: BindOpen.Data.Specification.IDataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
    name: Repair
    nameWithType: IDataSpecification.Repair
    fullName: BindOpen.Data.Specification.IDataSpecification.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
    name: Repair
    nameWithType: IDataSpecification.Repair
    fullName: BindOpen.Data.Specification.IDataSpecification.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.IDataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  commentId: M:BindOpen.Data.Specification.IDataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  parent: BindOpen.Data.Specification.IDataSpecification
  isExternal: true
  name: Update(IDataElementSpec, String[])
  nameWithType: IDataSpecification.Update(IDataElementSpec, String[])
  fullName: BindOpen.Data.Specification.IDataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec, System.String[])
  nameWithType.vb: IDataSpecification.Update(IDataElementSpec, String())
  fullName.vb: BindOpen.Data.Specification.IDataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec, System.String())
  name.vb: Update(IDataElementSpec, String())
  spec.csharp:
  - uid: BindOpen.Data.Specification.IDataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
    name: Update
    nameWithType: IDataSpecification.Update
    fullName: BindOpen.Data.Specification.IDataSpecification.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSpec
    name: IDataElementSpec
    nameWithType: IDataElementSpec
    fullName: BindOpen.Data.Elements.IDataElementSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.IDataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
    name: Update
    nameWithType: IDataSpecification.Update
    fullName: BindOpen.Data.Specification.IDataSpecification.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSpec
    name: IDataElementSpec
    nameWithType: IDataElementSpec
    fullName: BindOpen.Data.Elements.IDataElementSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  commentId: M:BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  parent: BindOpen.Data.Items.IDescribedDataItem
  name: Update(IDescribedDataItem)
  nameWithType: IDescribedDataItem.Update(IDescribedDataItem)
  fullName: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: IDescribedDataItem.Update
    fullName: BindOpen.Data.Items.IDescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: IDescribedDataItem.Update
    fullName: BindOpen.Data.Items.IDescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.ITitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  commentId: M:BindOpen.Data.Items.ITitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  parent: BindOpen.Data.Items.ITitledDataItem
  name: Update(ITitledDataItem)
  nameWithType: ITitledDataItem.Update(ITitledDataItem)
  fullName: BindOpen.Data.Items.ITitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.ITitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: ITitledDataItem.Update
    fullName: BindOpen.Data.Items.ITitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.ITitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: ITitledDataItem.Update
    fullName: BindOpen.Data.Items.ITitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: IDataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: IDataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: IDataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: IDataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Clone``1
  commentId: M:BindOpen.Data.Items.IDataItem.Clone``1
  parent: BindOpen.Data.Items.IDataItem
  name: Clone<T>()
  nameWithType: IDataItem.Clone<T>()
  fullName: BindOpen.Data.Items.IDataItem.Clone<T>()
  nameWithType.vb: IDataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.IDataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone<T>
    nameWithType: IDataItem.Clone<T>
    fullName: BindOpen.Data.Items.IDataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone(Of T)
    nameWithType: IDataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIdentified.Id
  commentId: P:BindOpen.Data.Items.IIdentified.Id
  parent: BindOpen.Data.Items.IIdentified
  name: Id
  nameWithType: IIdentified.Id
  fullName: BindOpen.Data.Items.IIdentified.Id
- uid: BindOpen.Data.Items.IReferenced.Key
  commentId: M:BindOpen.Data.Items.IReferenced.Key
  parent: BindOpen.Data.Items.IReferenced
  name: Key()
  nameWithType: IReferenced.Key()
  fullName: BindOpen.Data.Items.IReferenced.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IStorable.CreationDate
  commentId: P:BindOpen.Data.Items.IStorable.CreationDate
  parent: BindOpen.Data.Items.IStorable
  name: CreationDate
  nameWithType: IStorable.CreationDate
  fullName: BindOpen.Data.Items.IStorable.CreationDate
- uid: BindOpen.Data.Items.IStorable.LastModificationDate
  commentId: P:BindOpen.Data.Items.IStorable.LastModificationDate
  parent: BindOpen.Data.Items.IStorable
  name: LastModificationDate
  nameWithType: IStorable.LastModificationDate
  fullName: BindOpen.Data.Items.IStorable.LastModificationDate
- uid: BindOpen.Data.Items.INamed.Name
  commentId: P:BindOpen.Data.Items.INamed.Name
  parent: BindOpen.Data.Items.INamed
  name: Name
  nameWithType: INamed.Name
  fullName: BindOpen.Data.Items.INamed.Name
- uid: BindOpen.Data.Items.IGloballyTitled.Title
  commentId: P:BindOpen.Data.Items.IGloballyTitled.Title
  parent: BindOpen.Data.Items.IGloballyTitled
  name: Title
  nameWithType: IGloballyTitled.Title
  fullName: BindOpen.Data.Items.IGloballyTitled.Title
- uid: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String)
  parent: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: AddTitle(String)
  nameWithType: IGloballyTitled.AddTitle(String)
  fullName: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String)
    name: AddTitle
    nameWithType: IGloballyTitled.AddTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String)
    name: AddTitle
    nameWithType: IGloballyTitled.AddTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: AddTitle(String, String)
  nameWithType: IGloballyTitled.AddTitle(String, String)
  fullName: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: IGloballyTitled.AddTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyTitled.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: IGloballyTitled.AddTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyTitled.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyTitled.GetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: GetTitle(String, String)
  nameWithType: IGloballyTitled.GetTitle(String, String)
  fullName: BindOpen.Data.Items.IGloballyTitled.GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyTitled.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: IGloballyTitled.GetTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyTitled.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: IGloballyTitled.GetTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: SetTitle(String, String)
  nameWithType: IGloballyTitled.SetTitle(String, String)
  fullName: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: IGloballyTitled.SetTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: IGloballyTitled.SetTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String)
  parent: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: SetTitle(String)
  nameWithType: IGloballyTitled.SetTitle(String)
  fullName: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String)
    name: SetTitle
    nameWithType: IGloballyTitled.SetTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyTitled.SetTitle(System.String)
    name: SetTitle
    nameWithType: IGloballyTitled.SetTitle
    fullName: BindOpen.Data.Items.IGloballyTitled.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.Description
  commentId: P:BindOpen.Data.Items.IGloballyDescribed.Description
  parent: BindOpen.Data.Items.IGloballyDescribed
  name: Description
  nameWithType: IGloballyDescribed.Description
  fullName: BindOpen.Data.Items.IGloballyDescribed.Description
- uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: AddDescription(String)
  nameWithType: IGloballyDescribed.AddDescription(String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: IGloballyDescribed.AddDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: IGloballyDescribed.GetDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: IGloballyDescribed.GetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: IGloballyDescribed.GetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: IGloballyDescribed.SetDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: SetDescription(String)
  nameWithType: IGloballyDescribed.SetDescription(String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIndexed.Index
  commentId: P:BindOpen.Data.Items.IIndexed.Index
  parent: BindOpen.Data.Items.IIndexed
  name: Index
  nameWithType: IIndexed.Index
  fullName: BindOpen.Data.Items.IIndexed.Index
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.IDataSpecification
  commentId: T:BindOpen.Data.Specification.IDataSpecification
  parent: BindOpen.Data.Specification
  name: IDataSpecification
  nameWithType: IDataSpecification
  fullName: BindOpen.Data.Specification.IDataSpecification
- uid: BindOpen.Data.Items.IDescribedDataItem
  commentId: T:BindOpen.Data.Items.IDescribedDataItem
  parent: BindOpen.Data.Items
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  commentId: T:BindOpen.Data.Items.ITitledDataItem
  parent: BindOpen.Data.Items
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  commentId: T:BindOpen.Data.Items.IStorable
  parent: BindOpen.Data.Items
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  commentId: T:BindOpen.Data.Items.IGloballyTitled
  parent: BindOpen.Data.Items
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.IIndexed
  commentId: T:BindOpen.Data.Items.IIndexed
  parent: BindOpen.Data.Items
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification
  commentId: N:BindOpen.Data.Specification
  name: BindOpen.Data.Specification
  nameWithType: BindOpen.Data.Specification
  fullName: BindOpen.Data.Specification
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Elements.IDataElementSpec.Aliases*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.Aliases
  name: Aliases
  nameWithType: IDataElementSpec.Aliases
  fullName: BindOpen.Data.Elements.IDataElementSpec.Aliases
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
  name: AreaSpecifications
  nameWithType: IDataElementSpec.AreaSpecifications
  fullName: BindOpen.Data.Elements.IDataElementSpec.AreaSpecifications
- uid: System.Collections.Generic.List{BindOpen.Data.Specification.DataAreaSpecification}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Specification.DataAreaSpecification}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DataAreaSpecification>
  nameWithType: List<DataAreaSpecification>
  fullName: System.Collections.Generic.List<BindOpen.Data.Specification.DataAreaSpecification>
  nameWithType.vb: List(Of DataAreaSpecification)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Specification.DataAreaSpecification)
  name.vb: List(Of DataAreaSpecification)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Specification.DataAreaSpecification
    name: DataAreaSpecification
    nameWithType: DataAreaSpecification
    fullName: BindOpen.Data.Specification.DataAreaSpecification
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Specification.DataAreaSpecification
    name: DataAreaSpecification
    nameWithType: DataAreaSpecification
    fullName: BindOpen.Data.Specification.DataAreaSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
  name: AvailableItemizationModes
  nameWithType: IDataElementSpec.AvailableItemizationModes
  fullName: BindOpen.Data.Elements.IDataElementSpec.AvailableItemizationModes
- uid: System.Collections.Generic.List{BindOpen.Data.Items.DataItemizationMode}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Items.DataItemizationMode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<DataItemizationMode>
  nameWithType: List<DataItemizationMode>
  fullName: System.Collections.Generic.List<BindOpen.Data.Items.DataItemizationMode>
  nameWithType.vb: List(Of DataItemizationMode)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Items.DataItemizationMode)
  name.vb: List(Of DataItemizationMode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.DataItemizationMode
    name: DataItemizationMode
    nameWithType: DataItemizationMode
    fullName: BindOpen.Data.Items.DataItemizationMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.DataItemizationMode
    name: DataItemizationMode
    nameWithType: DataItemizationMode
    fullName: BindOpen.Data.Items.DataItemizationMode
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
  name: ConstraintStatement
  nameWithType: IDataElementSpec.ConstraintStatement
  fullName: BindOpen.Data.Elements.IDataElementSpec.ConstraintStatement
- uid: BindOpen.Data.Specification.DataConstraintStatement
  commentId: T:BindOpen.Data.Specification.DataConstraintStatement
  parent: BindOpen.Data.Specification
  name: DataConstraintStatement
  nameWithType: DataConstraintStatement
  fullName: BindOpen.Data.Specification.DataConstraintStatement
- uid: BindOpen.Data.Elements.IDataElementSpec.DefaultItems*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.DefaultItems
  name: DefaultItems
  nameWithType: IDataElementSpec.DefaultItems
  fullName: BindOpen.Data.Elements.IDataElementSpec.DefaultItems
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
  name: DefaultStringItems
  nameWithType: IDataElementSpec.DefaultStringItems
  fullName: BindOpen.Data.Elements.IDataElementSpec.DefaultStringItems
- uid: BindOpen.Data.Elements.IDataElementSpec.DesignStatement*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.DesignStatement
  name: DesignStatement
  nameWithType: IDataElementSpec.DesignStatement
  fullName: BindOpen.Data.Elements.IDataElementSpec.DesignStatement
- uid: BindOpen.Data.Specification.DataDesignStatement
  commentId: T:BindOpen.Data.Specification.DataDesignStatement
  parent: BindOpen.Data.Specification
  name: DataDesignStatement
  nameWithType: DataDesignStatement
  fullName: BindOpen.Data.Specification.DataDesignStatement
- uid: BindOpen.Data.Elements.IDataElementSpec.GroupId*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.GroupId
  name: GroupId
  nameWithType: IDataElementSpec.GroupId
  fullName: BindOpen.Data.Elements.IDataElementSpec.GroupId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Elements.IDataElementSpec.IsAllocatable*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
  name: IsAllocatable
  nameWithType: IDataElementSpec.IsAllocatable
  fullName: BindOpen.Data.Elements.IDataElementSpec.IsAllocatable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Elements.IDataElementSpec.IsValueList*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.IsValueList
  name: IsValueList
  nameWithType: IDataElementSpec.IsValueList
  fullName: BindOpen.Data.Elements.IDataElementSpec.IsValueList
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
  name: ItemRequirementLevel
  nameWithType: IDataElementSpec.ItemRequirementLevel
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemRequirementLevel
- uid: BindOpen.Data.Common.RequirementLevel
  commentId: T:BindOpen.Data.Common.RequirementLevel
  parent: BindOpen.Data.Common
  name: RequirementLevel
  nameWithType: RequirementLevel
  fullName: BindOpen.Data.Common.RequirementLevel
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemScript*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.ItemScript
  name: ItemScript
  nameWithType: IDataElementSpec.ItemScript
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemScript
- uid: BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
  name: ItemSpecificationLevels
  nameWithType: IDataElementSpec.ItemSpecificationLevels
  fullName: BindOpen.Data.Elements.IDataElementSpec.ItemSpecificationLevels
- uid: System.Collections.Generic.List{BindOpen.Data.Common.SpecificationLevels}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Common.SpecificationLevels}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SpecificationLevels>
  nameWithType: List<SpecificationLevels>
  fullName: System.Collections.Generic.List<BindOpen.Data.Common.SpecificationLevels>
  nameWithType.vb: List(Of SpecificationLevels)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Common.SpecificationLevels)
  name.vb: List(Of SpecificationLevels)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
  name: MaximumItemNumber
  nameWithType: IDataElementSpec.MaximumItemNumber
  fullName: BindOpen.Data.Elements.IDataElementSpec.MaximumItemNumber
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
  name: MinimumItemNumber
  nameWithType: IDataElementSpec.MinimumItemNumber
  fullName: BindOpen.Data.Elements.IDataElementSpec.MinimumItemNumber
- uid: BindOpen.Data.Elements.IDataElementSpec.ValueType*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.ValueType
  name: ValueType
  nameWithType: IDataElementSpec.ValueType
  fullName: BindOpen.Data.Elements.IDataElementSpec.ValueType
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem
  name: AddDefaultItem
  nameWithType: IDataElementSpec.AddDefaultItem
  fullName: BindOpen.Data.Elements.IDataElementSpec.AddDefaultItem
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification
  name: GetAreaSpecification
  nameWithType: IDataElementSpec.GetAreaSpecification
  fullName: BindOpen.Data.Elements.IDataElementSpec.GetAreaSpecification
- uid: BindOpen.Data.Specification.IDataAreaSpecification
  commentId: T:BindOpen.Data.Specification.IDataAreaSpecification
  parent: BindOpen.Data.Specification
  name: IDataAreaSpecification
  nameWithType: IDataAreaSpecification
  fullName: BindOpen.Data.Specification.IDataAreaSpecification
- uid: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject
  name: GetDefaultItemObject
  nameWithType: IDataElementSpec.GetDefaultItemObject
  fullName: BindOpen.Data.Elements.IDataElementSpec.GetDefaultItemObject
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem
  name: SetDefaultItem
  nameWithType: IDataElementSpec.SetDefaultItem
  fullName: BindOpen.Data.Elements.IDataElementSpec.SetDefaultItem
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.CheckItem
  name: CheckItem
  nameWithType: IDataElementSpec.CheckItem
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem
- uid: BindOpen.Data.Elements.IDataElement
  commentId: T:BindOpen.Data.Elements.IDataElement
  parent: BindOpen.Data.Elements
  name: IDataElement
  nameWithType: IDataElement
  fullName: BindOpen.Data.Elements.IDataElement
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement*
  commentId: Overload:BindOpen.Data.Elements.IDataElementSpec.CheckElement
  name: CheckElement
  nameWithType: IDataElementSpec.CheckElement
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
shouldSkipMarkup: true
