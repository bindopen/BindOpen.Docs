### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnectorKind
  id: BdoDbConnectorKind
  parent: BindOpen.Extensions.Connectors
  children:
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.Any
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.MSSqlServer
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.MySQL
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.None
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.Oracle
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.PostgreSql
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.value__
  langs:
  - csharp
  - vb
  name: BdoDbConnectorKind
  nameWithType: BdoDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  type: Class
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThis enumeration lists all the possible kinds of database connectors.\n"
  syntax:
    content: 'public sealed class BdoDbConnectorKind : Enum'
    content.vb: >-
      Public NotInheritable Class BdoDbConnectorKind
          Inherits

           Enum
  inheritance:
  - System.Object
  extensionMethods:
  - BindOpen.Extensions.Connectors.BdoDbConnectorKind.BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.value__
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnectorKind.value__
  id: value__
  parent: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: BdoDbConnectorKind.value__
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind.value__
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  syntax:
    content: public int value__
    return:
      type: System.Int32
    content.vb: Public value__ As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.None
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnectorKind.None
  id: None
  parent: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  langs:
  - csharp
  - vb
  name: None
  nameWithType: BdoDbConnectorKind.None
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind.None
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nNone.\n"
  syntax:
    content: public const BdoDbConnectorKind None
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Public Const None As BdoDbConnectorKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.Any
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnectorKind.Any
  id: Any
  parent: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: BdoDbConnectorKind.Any
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind.Any
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nAny.\n"
  syntax:
    content: public const BdoDbConnectorKind Any
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Public Const Any As BdoDbConnectorKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.MSSqlServer
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnectorKind.MSSqlServer
  id: MSSqlServer
  parent: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  langs:
  - csharp
  - vb
  name: MSSqlServer
  nameWithType: BdoDbConnectorKind.MSSqlServer
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind.MSSqlServer
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nMicrosoft SQL Server.\n"
  syntax:
    content: public const BdoDbConnectorKind MSSqlServer
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Public Const MSSqlServer As BdoDbConnectorKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.Oracle
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnectorKind.Oracle
  id: Oracle
  parent: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  langs:
  - csharp
  - vb
  name: Oracle
  nameWithType: BdoDbConnectorKind.Oracle
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind.Oracle
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nOracle.\n"
  syntax:
    content: public const BdoDbConnectorKind Oracle
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Public Const Oracle As BdoDbConnectorKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.MySQL
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnectorKind.MySQL
  id: MySQL
  parent: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  langs:
  - csharp
  - vb
  name: MySQL
  nameWithType: BdoDbConnectorKind.MySQL
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind.MySQL
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nMySQL.\n"
  syntax:
    content: public const BdoDbConnectorKind MySQL
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Public Const MySQL As BdoDbConnectorKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.PostgreSql
  commentId: F:BindOpen.Extensions.Connectors.BdoDbConnectorKind.PostgreSql
  id: PostgreSql
  parent: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  langs:
  - csharp
  - vb
  name: PostgreSql
  nameWithType: BdoDbConnectorKind.PostgreSql
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind.PostgreSql
  type: Field
  source:
    path: BindOpen.Databases
    isExternal: true
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nPostgre SQL.\n"
  syntax:
    content: public const BdoDbConnectorKind PostgreSql
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Public Const PostgreSql As BdoDbConnectorKind
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  isExternal: true
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind.BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
  commentId: M:BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName(BindOpen.Extensions.Connectors.BdoDbConnectorKind)
  parent: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension
  definition: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName(BindOpen.Extensions.Connectors.BdoDbConnectorKind)
  name: GetUniqueName()
  nameWithType: ConnectorKind_databaseExtension.GetUniqueName()
  fullName: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName()
  spec.csharp:
  - uid: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
    name: GetUniqueName
    nameWithType: ConnectorKind_databaseExtension.GetUniqueName
    fullName: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
    name: GetUniqueName
    nameWithType: ConnectorKind_databaseExtension.GetUniqueName
    fullName: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName(BindOpen.Extensions.Connectors.BdoDbConnectorKind)
  commentId: M:BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName(BindOpen.Extensions.Connectors.BdoDbConnectorKind)
  isExternal: true
  name: GetUniqueName(BdoDbConnectorKind)
  nameWithType: ConnectorKind_databaseExtension.GetUniqueName(BdoDbConnectorKind)
  fullName: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName(BindOpen.Extensions.Connectors.BdoDbConnectorKind)
  spec.csharp:
  - uid: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName(BindOpen.Extensions.Connectors.BdoDbConnectorKind)
    name: GetUniqueName
    nameWithType: ConnectorKind_databaseExtension.GetUniqueName
    fullName: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    name: BdoDbConnectorKind
    nameWithType: BdoDbConnectorKind
    fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName(BindOpen.Extensions.Connectors.BdoDbConnectorKind)
    name: GetUniqueName
    nameWithType: ConnectorKind_databaseExtension.GetUniqueName
    fullName: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension.GetUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    name: BdoDbConnectorKind
    nameWithType: BdoDbConnectorKind
    fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension
  commentId: T:BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: ConnectorKind_databaseExtension
  nameWithType: ConnectorKind_databaseExtension
  fullName: BindOpen.Extensions.Connectors.ConnectorKind_databaseExtension
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnectorKind
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: BdoDbConnectorKind
  nameWithType: BdoDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind
shouldSkipMarkup: true
