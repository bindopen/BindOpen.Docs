### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions
  commentId: T:BindOpen.Data.Stores.BdoDatasourceExtensions
  id: BdoDatasourceExtensions
  parent: BindOpen.Data.Stores
  children:
  - BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  - BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  - BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Data.Stores.IBdoDataStore)
  - BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore)
  - BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.System.Diagnostics.IBdoLog})
  - BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot})
  langs:
  - csharp
  - vb
  name: BdoDatasourceExtensions
  nameWithType: BdoDatasourceExtensions
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Stores
  summary: "\nThis class represents an data source extensions.\n"
  syntax:
    content: 'public static class BdoDatasourceExtensions : Object'
    content.vb: >-
      Public Module BdoDatasourceExtensions
          Inherits Object
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore)
  id: RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore)
  isExtensionMethod: true
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  langs:
  - csharp
  - vb
  name: RegisterDatasources(IBdoDataStore)
  nameWithType: BdoDatasourceExtensions.RegisterDatasources(IBdoDataStore)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Stores
  summary: "\nAdd a datasource depot into the specified data store executing the specified action.\n"
  syntax:
    content: public static IBdoDataStore RegisterDatasources(this IBdoDataStore dataStore)
    parameters:
    - id: dataStore
      type: BindOpen.Data.Stores.IBdoDataStore
      description: The data store to consider.
    return:
      type: BindOpen.Data.Stores.IBdoDataStore
      description: Returns the data store to update.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterDatasources(dataStore As IBdoDataStore) As IBdoDataStore
  overload: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot})
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot})
  id: RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot})
  isExtensionMethod: true
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  langs:
  - csharp
  - vb
  name: RegisterDatasources(IBdoDataStore, Action<IBdoDatasourceDepot>)
  nameWithType: BdoDatasourceExtensions.RegisterDatasources(IBdoDataStore, Action<IBdoDatasourceDepot>)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore, System.Action<BindOpen.Data.Stores.IBdoDatasourceDepot>)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Stores
  summary: "\nAdd a datasource depot into the specified data store executing the specified action.\n"
  syntax:
    content: public static IBdoDataStore RegisterDatasources(this IBdoDataStore dataStore, Action<IBdoDatasourceDepot> action)
    parameters:
    - id: dataStore
      type: BindOpen.Data.Stores.IBdoDataStore
      description: The data store to consider.
    - id: action
      type: System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot}
      description: The action to execute on the created depot.
    return:
      type: BindOpen.Data.Stores.IBdoDataStore
      description: Returns the data store to update.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterDatasources(dataStore As IBdoDataStore, action As Action(Of IBdoDatasourceDepot)) As IBdoDataStore
  overload: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources*
  nameWithType.vb: BdoDatasourceExtensions.RegisterDatasources(IBdoDataStore, Action(Of IBdoDatasourceDepot))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore, System.Action(Of BindOpen.Data.Stores.IBdoDatasourceDepot))
  name.vb: RegisterDatasources(IBdoDataStore, Action(Of IBdoDatasourceDepot))
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.System.Diagnostics.IBdoLog})
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.System.Diagnostics.IBdoLog})
  id: RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore,System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.System.Diagnostics.IBdoLog})
  isExtensionMethod: true
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  langs:
  - csharp
  - vb
  name: RegisterDatasources(IBdoDataStore, Action<IBdoDatasourceDepot, IBdoLog>)
  nameWithType: BdoDatasourceExtensions.RegisterDatasources(IBdoDataStore, Action<IBdoDatasourceDepot, IBdoLog>)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore, System.Action<BindOpen.Data.Stores.IBdoDatasourceDepot, BindOpen.System.Diagnostics.IBdoLog>)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Stores
  summary: "\nAdd a data source depot into the specified data store using the specified options.\n"
  syntax:
    content: public static IBdoDataStore RegisterDatasources(this IBdoDataStore dataStore, Action<IBdoDatasourceDepot, IBdoLog> action)
    parameters:
    - id: dataStore
      type: BindOpen.Data.Stores.IBdoDataStore
      description: The data store to consider.
    - id: action
      type: System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.System.Diagnostics.IBdoLog}
      description: The action to execute on the created depot.
    return:
      type: BindOpen.Data.Stores.IBdoDataStore
      description: Returns the data store to update.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function RegisterDatasources(dataStore As IBdoDataStore, action As Action(Of IBdoDatasourceDepot, IBdoLog)) As IBdoDataStore
  overload: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources*
  nameWithType.vb: BdoDatasourceExtensions.RegisterDatasources(IBdoDataStore, Action(Of IBdoDatasourceDepot, IBdoLog))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources(BindOpen.Data.Stores.IBdoDataStore, System.Action(Of BindOpen.Data.Stores.IBdoDatasourceDepot, BindOpen.System.Diagnostics.IBdoLog))
  name.vb: RegisterDatasources(IBdoDataStore, Action(Of IBdoDatasourceDepot, IBdoLog))
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  id: AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  isExtensionMethod: true
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  langs:
  - csharp
  - vb
  name: AddFromConfiguration(IBdoDatasourceDepot, IBdoHostOptions)
  nameWithType: BdoDatasourceExtensions.AddFromConfiguration(IBdoDatasourceDepot, IBdoHostOptions)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot, BindOpen.Application.Scopes.IBdoHostOptions)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Stores
  summary: "\nAdds sources from BindOpen configuration.\n"
  syntax:
    content: public static IBdoDatasourceDepot AddFromConfiguration(this IBdoDatasourceDepot depot, IBdoHostOptions options)
    parameters:
    - id: depot
      type: BindOpen.Data.Stores.IBdoDatasourceDepot
    - id: options
      type: BindOpen.Application.Scopes.IBdoHostOptions
      description: The host options to consider.
    return:
      type: BindOpen.Data.Stores.IBdoDatasourceDepot
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddFromConfiguration(depot As IBdoDatasourceDepot, options As IBdoHostOptions) As IBdoDatasourceDepot
  overload: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Data.Stores.IBdoDataStore)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Data.Stores.IBdoDataStore)
  id: GetDatasourceDepot(BindOpen.Data.Stores.IBdoDataStore)
  isExtensionMethod: true
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  langs:
  - csharp
  - vb
  name: GetDatasourceDepot(IBdoDataStore)
  nameWithType: BdoDatasourceExtensions.GetDatasourceDepot(IBdoDataStore)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Data.Stores.IBdoDataStore)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Stores
  summary: "\nGets the datasource depot of the specified data store.\n"
  syntax:
    content: public static IBdoDatasourceDepot GetDatasourceDepot(this IBdoDataStore dataStore)
    parameters:
    - id: dataStore
      type: BindOpen.Data.Stores.IBdoDataStore
      description: The data store to consider.
    return:
      type: BindOpen.Data.Stores.IBdoDatasourceDepot
      description: Returns the datasource depot of the specified data store.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDatasourceDepot(dataStore As IBdoDataStore) As IBdoDatasourceDepot
  overload: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  id: GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  isExtensionMethod: true
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  langs:
  - csharp
  - vb
  name: GetDatasourceDepot(IBdoScope)
  nameWithType: BdoDatasourceExtensions.GetDatasourceDepot(IBdoScope)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Stores
  summary: "\nGets the datasource depot of the specified scope.\n"
  syntax:
    content: public static IBdoDatasourceDepot GetDatasourceDepot(this IBdoScope scope)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The data store to consider.
    return:
      type: BindOpen.Data.Stores.IBdoDatasourceDepot
      description: Returns the datasource depot of the specified scope.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetDatasourceDepot(scope As IBdoScope) As IBdoDatasourceDepot
  overload: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BindOpen.Data.Stores
  commentId: N:BindOpen.Data.Stores
  isExternal: true
  name: BindOpen.Data.Stores
  nameWithType: BindOpen.Data.Stores
  fullName: BindOpen.Data.Stores
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources
  isExternal: true
  name: RegisterDatasources
  nameWithType: BdoDatasourceExtensions.RegisterDatasources
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.RegisterDatasources
- uid: BindOpen.Data.Stores.IBdoDataStore
  isExternal: true
  name: IBdoDataStore
  nameWithType: IBdoDataStore
  fullName: BindOpen.Data.Stores.IBdoDataStore
- uid: System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot}
  commentId: '!:System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot}'
  definition: System.Action`1
  name: Action<IBdoDatasourceDepot>
  nameWithType: Action<IBdoDatasourceDepot>
  fullName: System.Action<BindOpen.Data.Stores.IBdoDatasourceDepot>
  nameWithType.vb: Action(Of IBdoDatasourceDepot)
  fullName.vb: System.Action(Of BindOpen.Data.Stores.IBdoDatasourceDepot)
  name.vb: Action(Of IBdoDatasourceDepot)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot
    name: IBdoDatasourceDepot
    nameWithType: IBdoDatasourceDepot
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot
    name: IBdoDatasourceDepot
    nameWithType: IBdoDatasourceDepot
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`1
  isExternal: true
  name: Action<>
  nameWithType: Action<>
  fullName: System.Action<>
  nameWithType.vb: Action(Of )
  fullName.vb: System.Action(Of )
  name.vb: Action(Of )
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.System.Diagnostics.IBdoLog}
  commentId: '!:System.Action{BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.System.Diagnostics.IBdoLog}'
  definition: System.Action`2
  name: Action<IBdoDatasourceDepot, IBdoLog>
  nameWithType: Action<IBdoDatasourceDepot, IBdoLog>
  fullName: System.Action<BindOpen.Data.Stores.IBdoDatasourceDepot, BindOpen.System.Diagnostics.IBdoLog>
  nameWithType.vb: Action(Of IBdoDatasourceDepot, IBdoLog)
  fullName.vb: System.Action(Of BindOpen.Data.Stores.IBdoDatasourceDepot, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Action(Of IBdoDatasourceDepot, IBdoLog)
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot
    name: IBdoDatasourceDepot
    nameWithType: IBdoDatasourceDepot
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot
    name: IBdoDatasourceDepot
    nameWithType: IBdoDatasourceDepot
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action`2
  isExternal: true
  name: Action<, >
  nameWithType: Action<, >
  fullName: System.Action<, >
  nameWithType.vb: Action(Of , )
  fullName.vb: System.Action(Of , )
  name.vb: Action(Of , )
  spec.csharp:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration
  isExternal: true
  name: AddFromConfiguration
  nameWithType: BdoDatasourceExtensions.AddFromConfiguration
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot
  isExternal: true
  name: IBdoDatasourceDepot
  nameWithType: IBdoDatasourceDepot
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
- uid: BindOpen.Application.Scopes.IBdoHostOptions
  commentId: T:BindOpen.Application.Scopes.IBdoHostOptions
  parent: BindOpen.Application.Scopes
  isExternal: true
  name: IBdoHostOptions
  nameWithType: IBdoHostOptions
  fullName: BindOpen.Application.Scopes.IBdoHostOptions
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  isExternal: true
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  isExternal: true
  name: GetDatasourceDepot
  nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
- uid: BindOpen.Application.Scopes.IBdoScope
  isExternal: true
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
shouldSkipMarkup: true
