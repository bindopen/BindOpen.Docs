### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Connections.BdoNFSConnection
  commentId: T:BindOpen.Data.Connections.BdoNFSConnection
  id: BdoNFSConnection
  parent: BindOpen.Data.Connections
  children:
  - BindOpen.Data.Connections.BdoNFSConnection.#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)
  - BindOpen.Data.Connections.BdoNFSConnection.Connect
  - BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  - BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  - BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  - BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  - BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  - BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  langs:
  - csharp
  - vb
  name: BdoNFSConnection
  nameWithType: BdoNFSConnection
  fullName: BindOpen.Data.Connections.BdoNFSConnection
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nThis class represents a file NFS connector.\n"
  syntax:
    content: 'public class BdoNFSConnection : BdoRepoConnection, IRepoConnection, IBdoConnection, IDisposable'
    content.vb: >-
      Public Class BdoNFSConnection
          Inherits BdoRepoConnection
          Implements IRepoConnection, IBdoConnection, IDisposable
  inheritance:
  - System.Object
  - BindOpen.Data.Connections.BdoRepoConnection
  implements:
  - BindOpen.Data.Connections.IBdoConnection
  - System.IDisposable
  inheritedMembers:
  - BindOpen.Data.Connections.BdoRepoConnection.Connector
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Connections.BdoNFSConnection.#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)
  id: '#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)'
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: BdoNFSConnection(BdoNFSConnector)
  nameWithType: BdoNFSConnection.BdoNFSConnection(BdoNFSConnector)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.BdoNFSConnection(BindOpen.Extensions.Connectors.BdoNFSConnector)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nInstantiates a new instance of the NFSConnection class.\n"
  syntax:
    content: public BdoNFSConnection(BdoNFSConnector connector)
    parameters:
    - id: connector
      type: BindOpen.Extensions.Connectors.BdoNFSConnector
    content.vb: Public Sub New(connector As BdoNFSConnector)
  overload: BindOpen.Data.Connections.BdoNFSConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoNFSConnection.Connect
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Connect
  id: Connect
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: BdoNFSConnection.Connect()
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Connect()
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nConnects this instance.\n"
  syntax:
    content: public override IBdoLog Connect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Connect As IBdoLog
  overload: BindOpen.Data.Connections.BdoNFSConnection.Connect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  id: Disconnect
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: BdoNFSConnection.Disconnect()
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Disconnect()
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDisconnects this instance.\n"
  syntax:
    content: public override IBdoLog Disconnect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Disconnect As IBdoLog
  overload: BindOpen.Data.Connections.BdoNFSConnection.Disconnect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Pull(String, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Pull(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPulls a remote file to a local URI.\n"
  syntax:
    content: public override void Pull(string remoteFileUri, string localUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: remoteFileUri
      type: System.String
      description: The URI of the remote file to consider.
    - id: localUri
      type: System.String
      description: The local URI to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Pull(remoteFileUri As String, localUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  id: Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Pull(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoNFSConnection.Pull(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPulls a remote files in folder to a local URI.\n"
  syntax:
    content: public override void Pull(string remoteFileUri, string remoteFilter, string localFolderUri, bool canOverwrite, IBdoLog log = null, bool isRecursive = false)
    parameters:
    - id: remoteFileUri
      type: System.String
      description: The URI of the remote file to consider.
    - id: remoteFilter
      type: System.String
      description: The remote filter to consider.
    - id: localFolderUri
      type: System.String
      description: The URI of the local folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    content.vb: Public Overrides Sub Pull(remoteFileUri As String, remoteFilter As String, localFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing, isRecursive As Boolean = False)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Pull(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Pull(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPulls remote files to a local URI.\n"
  syntax:
    content: public override void Pull(List<string> remoteFileUris, string localFolderUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: remoteFileUris
      type: System.Collections.Generic.List{System.String}
      description: The remote URIs to consider.
    - id: localFolderUri
      type: System.String
      description: The URI of the local folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Pull(remoteFileUris As List(Of String), localFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  nameWithType.vb: BdoNFSConnection.Pull(List(Of String), String, Boolean, IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Pull(List(Of String), String, Boolean, IBdoLog)
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Push(String, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Push(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPosts a local file to a remote Uri.\n"
  syntax:
    content: public override void Push(string localFileUri, string remotePathUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local Uri to consider.
    - id: remotePathUri
      type: System.String
      description: The Uri of the remote path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Push(localFileUri As String, remotePathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Push*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  id: Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Push(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoNFSConnection.Push(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPushes a local file into folder to a remote URI.\n"
  syntax:
    content: public override void Push(string localFileUri, string localFilter, string remoteFolderUri, bool canOverwrite, IBdoLog log = null, bool isRecursive = false)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local URI to consider.
    - id: localFilter
      type: System.String
      description: The local filter to consider.
    - id: remoteFolderUri
      type: System.String
      description: The URI of the remote folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    content.vb: Public Overrides Sub Push(localFileUri As String, localFilter As String, remoteFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing, isRecursive As Boolean = False)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Push*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Push(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Push(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPushes local files to a remote URI.\n"
  syntax:
    content: public override void Push(List<string> localFileUris, string remoteFolderUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: localFileUris
      type: System.Collections.Generic.List{System.String}
      description: The local URIs to consider.
    - id: remoteFolderUri
      type: System.String
      description: The URI of the remote folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Push(localFileUris As List(Of String), remoteFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Push*
  nameWithType.vb: BdoNFSConnection.Push(List(Of String), String, Boolean, IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Push(List(Of String), String, Boolean, IBdoLog)
- uid: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  id: WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: WaitForFile(String, Int32, IBdoLog)
  nameWithType: BdoNFSConnection.WaitForFile(String, Int32, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String, System.Int32, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nWaits for the specified file to be accessible.\n"
  syntax:
    content: public static bool WaitForFile(string path, int aSecondNumber = 4, IBdoLog log = null)
    parameters:
    - id: path
      type: System.String
      description: The path of the file to consider.
    - id: aSecondNumber
      type: System.Int32
      description: The number of seconds to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: System.Boolean
      description: Returns true if the file is available. False otherwise.
    content.vb: Public Shared Function WaitForFile(path As String, aSecondNumber As Integer = 4, log As IBdoLog = Nothing) As Boolean
  overload: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  id: GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoNFSConnection.GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nGets the list of elements of the remote folder.\n"
  syntax:
    content: public override List<RepositoryItem> GetFiles(string folderUri, string filter, bool isRecursive, IBdoLog log = null, CarrierKind_standard fileKind)
    parameters:
    - id: folderUri
      type: System.String
      description: The Uri of the folder path to consider.
    - id: filter
      type: System.String
      description: The filter to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: fileKind
      type: BindOpen.Extensions.Carriers.CarrierKind_standard
      description: The kind of files to consider.
    return:
      type: System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}
      description: Lists of elements of the remote folder.
    content.vb: Public Overrides Function GetFiles(folderUri As String, filter As String, isRecursive As Boolean, log As IBdoLog = Nothing, fileKind As CarrierKind_standard) As List(Of RepositoryItem)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  overload: BindOpen.Data.Connections.BdoNFSConnection.GetFiles*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  id: DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: DeleteFile(String, IBdoLog)
  nameWithType: BdoNFSConnection.DeleteFile(String, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDeletes a local file.\n"
  syntax:
    content: public static void DeleteFile(string localFileUri, IBdoLog log = null)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local Uri to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Shared Sub DeleteFile(localFileUri As String, log As IBdoLog = Nothing)
  overload: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  id: DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: DeleteFolder(String, IBdoLog)
  nameWithType: BdoNFSConnection.DeleteFolder(String, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDeletes a local folder.\n"
  syntax:
    content: public static void DeleteFolder(string localfolderUri, IBdoLog log = null)
    parameters:
    - id: localfolderUri
      type: System.String
      description: The local Uri to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Shared Sub DeleteFolder(localfolderUri As String, log As IBdoLog = Nothing)
  overload: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  id: DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoNFSConnection.DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String, System.String, System.DateTime, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDeletes the items.\n"
  syntax:
    content: public override void DeleteItems(string folderUri, string filter, DateTime timeLimit, bool isRecursive, IBdoLog log = null, CarrierKind_standard fileKind)
    parameters:
    - id: folderUri
      type: System.String
      description: The Uri of the folder path to consider.
    - id: filter
      type: System.String
      description: The filter to consider.
    - id: timeLimit
      type: System.DateTime
      description: The date time limit to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: fileKind
      type: BindOpen.Extensions.Carriers.CarrierKind_standard
      description: The kind of elements to consider.
    content.vb: Public Overrides Sub DeleteItems(folderUri As String, filter As String, timeLimit As DateTime, isRecursive As Boolean, log As IBdoLog = Nothing, fileKind As CarrierKind_standard)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  overload: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BindOpen.Data.Connections
  commentId: N:BindOpen.Data.Connections
  isExternal: true
  name: BindOpen.Data.Connections
  nameWithType: BindOpen.Data.Connections
  fullName: BindOpen.Data.Connections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Data.Connections.BdoRepoConnection
  commentId: T:BindOpen.Data.Connections.BdoRepoConnection
  parent: BindOpen.Data.Connections
  isExternal: true
  name: BdoRepoConnection
  nameWithType: BdoRepoConnection
  fullName: BindOpen.Data.Connections.BdoRepoConnection
- uid: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: IBdoConnection
  nameWithType: IBdoConnection
  fullName: BindOpen.Data.Connections.IBdoConnection
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Connections.BdoRepoConnection.Connector
  commentId: P:BindOpen.Data.Connections.BdoRepoConnection.Connector
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Connector
  nameWithType: BdoRepoConnection.Connector
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Connector
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Connections.BdoNFSConnection.#ctor*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.#ctor
  isExternal: true
  name: BdoNFSConnection
  nameWithType: BdoNFSConnection.BdoNFSConnection
  fullName: BindOpen.Data.Connections.BdoNFSConnection.BdoNFSConnection
- uid: BindOpen.Extensions.Connectors.BdoNFSConnector
  commentId: T:BindOpen.Extensions.Connectors.BdoNFSConnector
  parent: BindOpen.Extensions.Connectors
  isExternal: true
  name: BdoNFSConnector
  nameWithType: BdoNFSConnector
  fullName: BindOpen.Extensions.Connectors.BdoNFSConnector
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  isExternal: true
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: BindOpen.Data.Connections.BdoNFSConnection.Connect*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Connect
  isExternal: true
  name: Connect
  nameWithType: BdoNFSConnection.Connect
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Connect
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Data.Connections.BdoNFSConnection.Disconnect*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  isExternal: true
  name: Disconnect
  nameWithType: BdoNFSConnection.Disconnect
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Disconnect
- uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Pull(String, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Pull(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Pull
  isExternal: true
  name: Pull
  nameWithType: BdoNFSConnection.Pull
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Pull(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoRepoConnection.Pull(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Pull(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Pull(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoRepoConnection.Pull(List(Of String), String, Boolean, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Pull(List(Of String), String, Boolean, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: '!:System.Collections.Generic.List{System.String}'
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Push(String, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Push(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Push
  isExternal: true
  name: Push
  nameWithType: BdoNFSConnection.Push
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push
- uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Push(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoRepoConnection.Push(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Push(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Push(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoRepoConnection.Push(List(Of String), String, Boolean, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Push(List(Of String), String, Boolean, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.WaitForFile
  isExternal: true
  name: WaitForFile
  nameWithType: BdoNFSConnection.WaitForFile
  fullName: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoRepoConnection.GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: GetFiles
    nameWithType: BdoRepoConnection.GetFiles
    fullName: BindOpen.Data.Connections.BdoRepoConnection.GetFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: GetFiles
    nameWithType: BdoRepoConnection.GetFiles
    fullName: BindOpen.Data.Connections.BdoRepoConnection.GetFiles
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.GetFiles*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.GetFiles
  isExternal: true
  name: GetFiles
  nameWithType: BdoNFSConnection.GetFiles
  fullName: BindOpen.Data.Connections.BdoNFSConnection.GetFiles
- uid: BindOpen.Extensions.Carriers.CarrierKind_standard
  commentId: T:BindOpen.Extensions.Carriers.CarrierKind_standard
  parent: BindOpen.Extensions.Carriers
  isExternal: true
  name: CarrierKind_standard
  nameWithType: CarrierKind_standard
  fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
- uid: System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}
  commentId: '!:System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}'
  definition: System.Collections.Generic.List`1
  name: List<RepositoryItem>
  nameWithType: List<RepositoryItem>
  fullName: System.Collections.Generic.List<BindOpen.Extensions.Carriers.RepositoryItem>
  nameWithType.vb: List(Of RepositoryItem)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.Carriers.RepositoryItem)
  name.vb: List(Of RepositoryItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Carriers.RepositoryItem
    name: RepositoryItem
    nameWithType: RepositoryItem
    fullName: BindOpen.Extensions.Carriers.RepositoryItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Carriers.RepositoryItem
    name: RepositoryItem
    nameWithType: RepositoryItem
    fullName: BindOpen.Extensions.Carriers.RepositoryItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  isExternal: true
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.DeleteFile
  isExternal: true
  name: DeleteFile
  nameWithType: BdoNFSConnection.DeleteFile
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder
  isExternal: true
  name: DeleteFolder
  nameWithType: BdoNFSConnection.DeleteFolder
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder
- uid: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoRepoConnection.DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String, System.String, System.DateTime, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: DeleteItems
    nameWithType: BdoRepoConnection.DeleteItems
    fullName: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: DeleteItems
    nameWithType: BdoRepoConnection.DeleteItems
    fullName: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.DeleteItems
  isExternal: true
  name: DeleteItems
  nameWithType: BdoNFSConnection.DeleteItems
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems
- uid: System.DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
shouldSkipMarkup: true
