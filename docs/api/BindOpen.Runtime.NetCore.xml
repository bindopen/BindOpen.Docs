<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BindOpen.Runtime.NetCore</name>
    </assembly>
    <members>
        <member name="T:BindOpen.Data.Resolvers.SerializerSettingsFactory">
            <summary>
            This class represents a startup helpers
            </summary>
        </member>
        <member name="M:BindOpen.Data.Resolvers.SerializerSettingsFactory.InitializeSettings(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            
            </summary>
            <param name="settings"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Resolvers.SerializerSettingsFactory.CreateSettings">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Data.Resolvers.XmlContractResolver">
            <summary>
            This class represents an application client.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Resolvers.XmlContractResolver.CreateProperty(System.Reflection.MemberInfo,Newtonsoft.Json.MemberSerialization)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <param name="memberSerialization"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Data.Resolvers.XmlContractResolver.ConfigureProperty(System.Reflection.MemberInfo,Newtonsoft.Json.Serialization.JsonProperty)">
            <summary>
            
            </summary>
            <param name="member"></param>
            <param name="property"></param>
        </member>
        <member name="T:BindOpen.Data.Stores.BdoDatasourceExtensions">
            <summary>
            This class represents an data source extensions.
            </summary>
        </member>
        <member name="M:BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Adds sources from host.
            </summary>
            <param name="depot">The datasource depot to consider.</param>
            <param name="config">The configuration to consider.</param>
            <param name="keyName">The key name to consider.</param>
        </member>
        <member name="T:BindOpen.Application.Services.BdoHostedService">
            <summary>
            This service represents a BindOpen bot service that can be hosted in generic .Net core host.
            </summary>
        </member>
        <member name="P:BindOpen.Application.Services.BdoHostedService.Host">
            <summary>
            The BindOpen host of this instance.
            </summary>
        </member>
        <member name="M:BindOpen.Application.Services.BdoHostedService.#ctor(BindOpen.Application.Scopes.IBdoHost)">
            <summary>
            Creates a new instance of the BdoHostedService class.
            </summary>
        </member>
        <member name="M:BindOpen.Application.Services.BdoHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Starts this instance.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:BindOpen.Application.Services.BdoHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Ends this instance.
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:BindOpen.Application.Services.IBdoHostedService">
            <summary>
            This interface defines a BindOpen bot service that can be hosted in generic .Net core host.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions">
            <summary>
            This static class extends .Net core dependency injection namespace.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBindOpen(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{BindOpen.Application.Settings.BdoDefaultAppSettings}})">
            <summary>
            Adds a BindOpen default service.
            </summary>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.GetBindOpenHost(System.IServiceProvider)">
            <summary>
            Adds a BindOpen host.
            </summary>
            <param name="provider">The service provider to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBindOpen``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{``0}})">
            <summary>
            Adds a BindOpen service.
            </summary>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBindOpen``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{BindOpen.Application.Scopes.ITBdoHostOptions{``1}})">
            <summary>
            Adds a BindOpen service.
            </summary>
            <typeparam name="SHost">The class of bot to consider.</typeparam>
            <typeparam name="S"></typeparam>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBdoConnectedService``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Func{BindOpen.Application.Scopes.IBdoHost,``1})">
            <summary>
            Adds a BidnOpen connected service.
            </summary>
            <typeparam name="TService">The interface of BindOpen connected service to consider.</typeparam>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <returns>Returns the updated service collection.</returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.BdoAppServiceCollectionExtensions.AddBdoConnectedService``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime,System.Func{BindOpen.Application.Scopes.IBdoHost,``1})">
            <summary>
            Adds a BidnOpen connected service.
            </summary>
            <typeparam name="TService">The interface of BindOpen connected service to consider.</typeparam>
            <typeparam name="TImplementation">The service implementation to consider.</typeparam>
            <param name="services">The collection of services to populate.</param>
            <param name="setupAction">The setup action to consider.</param>
            <param name="serviceLifetime">The service life time to consider.</param>
            <returns>Returns the updated service collection.</returns>
        </member>
        <member name="T:Microsoft.Extensions.Configuration.ConfigurationExtension">
            <summary>
            This static class extends .Net core configuration.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.ScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configuration"></param>
            <param name="key"></param>
            <param name="scope"></param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue``1(Microsoft.Extensions.Configuration.IConfiguration,System.String,System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.ScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="configuration"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <param name="scope"></param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="type"></param>
            <param name="key"></param>
            <param name="scope"></param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.Configuration.ConfigurationExtension.GetBdoValue(Microsoft.Extensions.Configuration.IConfiguration,System.Type,System.String,System.String,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.ScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)">
            <summary>
            
            </summary>
            <param name="configuration"></param>
            <param name="type"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <param name="scope"></param>
            <param name="scriptVariableSet">The script variable set to consider.</param>
            <param name="log"></param>
            <returns></returns>
        </member>
    </members>
</doc>
