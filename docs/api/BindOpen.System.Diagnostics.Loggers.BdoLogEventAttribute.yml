### YamlMime:ManagedReference
items:
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  commentId: T:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  id: BdoLogEventAttribute
  parent: BindOpen.System.Diagnostics.Loggers
  children:
  - BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Description
  - BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Id
  - BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Name
  - BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__ResultCode
  - BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Source
  - BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__StackTrace
  - BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Title
  langs:
  - csharp
  - vb
  name: BdoLogEventAttribute
  nameWithType: BdoLogEventAttribute
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoLogEventAttribute
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 9
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThis enumeration lists the possible log event attributes.\n"
  example: []
  syntax:
    content: public static class BdoLogEventAttribute
    content.vb: Public Module BdoLogEventAttribute
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Id
  commentId: F:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Id
  id: __Id
  parent: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  langs:
  - csharp
  - vb
  name: __Id
  nameWithType: BdoLogEventAttribute.__Id
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Id
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __Id
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 14
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThe ID of the log.\n"
  example: []
  syntax:
    content: public static string __Id
    return:
      type: System.String
    content.vb: Public Shared __Id As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Name
  commentId: F:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Name
  id: __Name
  parent: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  langs:
  - csharp
  - vb
  name: __Name
  nameWithType: BdoLogEventAttribute.__Name
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Name
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __Name
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 18
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThe name of the log.\n"
  example: []
  syntax:
    content: public static string __Name
    return:
      type: System.String
    content.vb: Public Shared __Name As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Title
  commentId: F:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Title
  id: __Title
  parent: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  langs:
  - csharp
  - vb
  name: __Title
  nameWithType: BdoLogEventAttribute.__Title
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Title
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __Title
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 22
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThe title of the log.\n"
  example: []
  syntax:
    content: public static string __Title
    return:
      type: System.String
    content.vb: Public Shared __Title As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Description
  commentId: F:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Description
  id: __Description
  parent: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  langs:
  - csharp
  - vb
  name: __Description
  nameWithType: BdoLogEventAttribute.__Description
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Description
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __Description
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 26
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThe description of the log.\n"
  example: []
  syntax:
    content: public static string __Description
    return:
      type: System.String
    content.vb: Public Shared __Description As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__ResultCode
  commentId: F:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__ResultCode
  id: __ResultCode
  parent: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  langs:
  - csharp
  - vb
  name: __ResultCode
  nameWithType: BdoLogEventAttribute.__ResultCode
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__ResultCode
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __ResultCode
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 30
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThe detail of the log.\n"
  example: []
  syntax:
    content: public static string __ResultCode
    return:
      type: System.String
    content.vb: Public Shared __ResultCode As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Source
  commentId: F:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Source
  id: __Source
  parent: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  langs:
  - csharp
  - vb
  name: __Source
  nameWithType: BdoLogEventAttribute.__Source
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__Source
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __Source
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 34
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThe ID of the task of the log.\n"
  example: []
  syntax:
    content: public static string __Source
    return:
      type: System.String
    content.vb: Public Shared __Source As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__StackTrace
  commentId: F:BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__StackTrace
  id: __StackTrace
  parent: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute
  langs:
  - csharp
  - vb
  name: __StackTrace
  nameWithType: BdoLogEventAttribute.__StackTrace
  fullName: BindOpen.System.Diagnostics.Loggers.BdoLogEventAttribute.__StackTrace
  type: Field
  source:
    remote:
      path: src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: __StackTrace
    path: ../src/BindOpen.Core/System/Diagnostics/Loggers/BdoLogEventAttribute.cs
    startLine: 38
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.System.Diagnostics.Loggers
  summary: "\nThe name of the task of the log.\n"
  example: []
  syntax:
    content: public static string __StackTrace
    return:
      type: System.String
    content.vb: Public Shared __StackTrace As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BindOpen.System.Diagnostics.Loggers
  commentId: N:BindOpen.System.Diagnostics.Loggers
  name: BindOpen.System.Diagnostics.Loggers
  nameWithType: BindOpen.System.Diagnostics.Loggers
  fullName: BindOpen.System.Diagnostics.Loggers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
