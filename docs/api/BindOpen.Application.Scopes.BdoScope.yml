### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Scopes.BdoScope
  commentId: T:BindOpen.Application.Scopes.BdoScope
  id: BdoScope
  parent: BindOpen.Application.Scopes
  children:
  - BindOpen.Application.Scopes.BdoScope.#ctor(System.AppDomain)
  - BindOpen.Application.Scopes.BdoScope.AppDomain
  - BindOpen.Application.Scopes.BdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - BindOpen.Application.Scopes.BdoScope.Clear
  - BindOpen.Application.Scopes.BdoScope.Context
  - BindOpen.Application.Scopes.BdoScope.DataStore
  - BindOpen.Application.Scopes.BdoScope.ExtensionStore
  - BindOpen.Application.Scopes.BdoScope.Interpreter
  - BindOpen.Application.Scopes.BdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  - BindOpen.Application.Scopes.BdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  - BindOpen.Application.Scopes.BdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  langs:
  - csharp
  - vb
  name: BdoScope
  nameWithType: BdoScope
  fullName: BindOpen.Application.Scopes.BdoScope
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoScope
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 16
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nThis class represents an application scope.\n"
  example: []
  syntax:
    content: 'public class BdoScope : DataItem, IDataItem, ICloneable, IBdoScope, IDisposable'
    content.vb: >-
      Public Class BdoScope
          Inherits DataItem
          Implements IDataItem, ICloneable, IBdoScope, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  implements:
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - BindOpen.Application.Scopes.IBdoScope
  - System.IDisposable
  inheritedMembers:
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(System.String)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Application.Scopes.BdoScope.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Application.Scopes.BdoScope})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Scopes.BdoScope.AppDomain
  commentId: P:BindOpen.Application.Scopes.BdoScope.AppDomain
  id: AppDomain
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: AppDomain
  nameWithType: BdoScope.AppDomain
  fullName: BindOpen.Application.Scopes.BdoScope.AppDomain
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AppDomain
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 27
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nThe application domain.\n"
  example: []
  syntax:
    content: public AppDomain AppDomain { get; }
    parameters: []
    return:
      type: System.AppDomain
    content.vb: Public ReadOnly Property AppDomain As AppDomain
  overload: BindOpen.Application.Scopes.BdoScope.AppDomain*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.AppDomain
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Application.Scopes.BdoScope.ExtensionStore
  commentId: P:BindOpen.Application.Scopes.BdoScope.ExtensionStore
  id: ExtensionStore
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: ExtensionStore
  nameWithType: BdoScope.ExtensionStore
  fullName: BindOpen.Application.Scopes.BdoScope.ExtensionStore
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ExtensionStore
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 32
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nThe BindOpen extension store of this instance.\n"
  example: []
  syntax:
    content: public IBdoExtensionStore ExtensionStore { get; set; }
    parameters: []
    return:
      type: BindOpen.Extensions.Runtime.IBdoExtensionStore
    content.vb: Public Property ExtensionStore As IBdoExtensionStore
  overload: BindOpen.Application.Scopes.BdoScope.ExtensionStore*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.ExtensionStore
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoScope.Interpreter
  commentId: P:BindOpen.Application.Scopes.BdoScope.Interpreter
  id: Interpreter
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: Interpreter
  nameWithType: BdoScope.Interpreter
  fullName: BindOpen.Application.Scopes.BdoScope.Interpreter
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Interpreter
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 37
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nThe script interpreter of this instance.\n"
  example: []
  syntax:
    content: public IBdoScriptInterpreter Interpreter { get; set; }
    parameters: []
    return:
      type: BindOpen.System.Scripting.IBdoScriptInterpreter
    content.vb: Public Property Interpreter As IBdoScriptInterpreter
  overload: BindOpen.Application.Scopes.BdoScope.Interpreter*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.Interpreter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoScope.Context
  commentId: P:BindOpen.Application.Scopes.BdoScope.Context
  id: Context
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: BdoScope.Context
  fullName: BindOpen.Application.Scopes.BdoScope.Context
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Context
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 42
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nThe data context of this instance.\n"
  example: []
  syntax:
    content: public IBdoDataContext Context { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Context.IBdoDataContext
    content.vb: Public Property Context As IBdoDataContext
  overload: BindOpen.Application.Scopes.BdoScope.Context*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.Context
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoScope.DataStore
  commentId: P:BindOpen.Application.Scopes.BdoScope.DataStore
  id: DataStore
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: DataStore
  nameWithType: BdoScope.DataStore
  fullName: BindOpen.Application.Scopes.BdoScope.DataStore
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DataStore
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 47
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nThe data store of this instance.\n"
  example: []
  syntax:
    content: public IBdoDataStore DataStore { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Stores.IBdoDataStore
    content.vb: Public Property DataStore As IBdoDataStore
  overload: BindOpen.Application.Scopes.BdoScope.DataStore*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.DataStore
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoScope.#ctor(System.AppDomain)
  commentId: M:BindOpen.Application.Scopes.BdoScope.#ctor(System.AppDomain)
  id: '#ctor(System.AppDomain)'
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: BdoScope(AppDomain)
  nameWithType: BdoScope.BdoScope(AppDomain)
  fullName: BindOpen.Application.Scopes.BdoScope.BdoScope(System.AppDomain)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 61
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nInstantiates a new instance of the BdoScope class.\n"
  example: []
  syntax:
    content: public BdoScope(AppDomain appDomain = null)
    parameters:
    - id: appDomain
      type: System.AppDomain
      description: The application domain to instance.
    content.vb: Public Sub New(appDomain As AppDomain = Nothing)
  overload: BindOpen.Application.Scopes.BdoScope.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:BindOpen.Application.Scopes.BdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: Check(Boolean, Boolean, Boolean, Boolean)
  nameWithType: BdoScope.Check(Boolean, Boolean, Boolean, Boolean)
  fullName: BindOpen.Application.Scopes.BdoScope.Check(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Check
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 89
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nCheck the specified item.\n"
  example: []
  syntax:
    content: public IBdoLog Check(bool isExtensionStoreChecked = false, bool isScriptInterpreterChecked = false, bool isDataContextChecked = false, bool isDataStoreChecked = false)
    parameters:
    - id: isExtensionStoreChecked
      type: System.Boolean
      description: Indicates whether the extension item definition store extistence is chekced.
    - id: isScriptInterpreterChecked
      type: System.Boolean
      description: Indicates whether the script interpreter extistence is chekced.
    - id: isDataContextChecked
      type: System.Boolean
      description: Indicates whether the data context extistence is chekced.
    - id: isDataStoreChecked
      type: System.Boolean
      description: Indicates whether the data store extistence is chekced.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log of check log.
    content.vb: Public Function Check(isExtensionStoreChecked As Boolean = False, isScriptInterpreterChecked As Boolean = False, isDataContextChecked As Boolean = False, isDataStoreChecked As Boolean = False) As IBdoLog
  overload: BindOpen.Application.Scopes.BdoScope.Check*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.BdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  id: LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  nameWithType: BdoScope.LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.BdoScope.LoadExtensions(System.Action<BindOpen.Application.Scopes.IExtensionLoadOptions>, BindOpen.Extensions.References.IBdoExtensionReference[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LoadExtensions
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 122
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nLoads the specified extensions.\n"
  example: []
  syntax:
    content: public IBdoLog LoadExtensions(Action<IExtensionLoadOptions> loadOptionsAction, params IBdoExtensionReference[] references)
    parameters:
    - id: loadOptionsAction
      type: System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions}
      description: The load options action to consider.
    - id: references
      type: BindOpen.Extensions.References.IBdoExtensionReference[]
      description: The extension references to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
    content.vb: Public Function LoadExtensions(loadOptionsAction As Action(Of IExtensionLoadOptions), ParamArray references As IBdoExtensionReference()) As IBdoLog
  overload: BindOpen.Application.Scopes.BdoScope.LoadExtensions*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: BdoScope.LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Scopes.BdoScope.LoadExtensions(System.Action(Of BindOpen.Application.Scopes.IExtensionLoadOptions), BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
- uid: BindOpen.Application.Scopes.BdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.BdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  id: LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: LoadExtensions(IBdoExtensionReference[])
  nameWithType: BdoScope.LoadExtensions(IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.BdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LoadExtensions
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 141
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nLoads the specified extensions.\n"
  example: []
  syntax:
    content: public IBdoLog LoadExtensions(params IBdoExtensionReference[] references)
    parameters:
    - id: references
      type: BindOpen.Extensions.References.IBdoExtensionReference[]
      description: The extension references to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
    content.vb: Public Function LoadExtensions(ParamArray references As IBdoExtensionReference()) As IBdoLog
  overload: BindOpen.Application.Scopes.BdoScope.LoadExtensions*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: BdoScope.LoadExtensions(IBdoExtensionReference())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Scopes.BdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(IBdoExtensionReference())
- uid: BindOpen.Application.Scopes.BdoScope.Clear
  commentId: M:BindOpen.Application.Scopes.BdoScope.Clear
  id: Clear
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BdoScope.Clear()
  fullName: BindOpen.Application.Scopes.BdoScope.Clear()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clear
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 147
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nClears this instance.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: BindOpen.Application.Scopes.BdoScope.Clear*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Scopes.BdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Application.Scopes.BdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  id: Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Application.Scopes.BdoScope
  langs:
  - csharp
  - vb
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: BdoScope.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Application.Scopes.BdoScope.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Application/Scopes/BdoScope.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Update
    path: ../src/BindOpen.Core/Application/Scopes/BdoScope.cs
    startLine: 170
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Application.Scopes
  summary: "\nUpdates this instance.\n"
  remarks: Put reference collections as null if you do not want to repair this instance.
  example: []
  syntax:
    content: >-
      public override IBdoLog Update<T>(T item = null, string[] specificationAreas = null, UpdateModes[] updateModes = null)
          where T : IDataItem
    parameters:
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    - id: updateModes
      type: BindOpen.Data.Common.UpdateModes[]
      description: The update modes to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Log of the operation.
    content.vb: Public Overrides Function Update(Of T As IDataItem)(item As T = Nothing, specificationAreas As String() = Nothing, updateModes As UpdateModes() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  overload: BindOpen.Application.Scopes.BdoScope.Update*
  implements:
  - BindOpen.Application.Scopes.IBdoScope.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: BdoScope.Update(Of T)(T, String(), UpdateModes())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Application.Scopes.BdoScope.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
references:
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: BindOpen.Application.Scopes.IBdoScope
  commentId: T:BindOpen.Application.Scopes.IBdoScope
  parent: BindOpen.Application.Scopes
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone
  commentId: M:BindOpen.Data.Items.DataItem.Clone
  parent: BindOpen.Data.Items.DataItem
  name: Clone()
  nameWithType: DataItem.Clone()
  fullName: BindOpen.Data.Items.DataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone
    name: Clone
    nameWithType: DataItem.Clone
    fullName: BindOpen.Data.Items.DataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone
    name: Clone
    nameWithType: DataItem.Clone
    fullName: BindOpen.Data.Items.DataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  definition: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  name: GetDatasourceDepot()
  nameWithType: BdoDatasourceExtensions.GetDatasourceDepot()
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot()
  spec.csharp:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations
  definition: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: CreateConfiguration<T>(String, IBdoLog)
  nameWithType: BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>(String, IBdoLog)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>(System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)(String, IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)(System.String, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: CreateConfiguration(Of T)(String, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConfiguration<T>
    nameWithType: BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConfiguration(Of T)
    nameWithType: BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations
  definition: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: LoadConfiguration<T>(String, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>(String, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>(System.String, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)(String, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)(System.String, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: LoadConfiguration(Of T)(String, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: LoadConfiguration<T>
    nameWithType: BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: LoadConfiguration(Of T)
    nameWithType: BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_Items
  definition: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: CreateCarrier<T>(IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateCarrier<T>(IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier<T>(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: BdoScopeExtension_Items.CreateCarrier(Of T)(IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(Of T)(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: CreateCarrier(Of T)(IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier<T>
    nameWithType: BdoScopeExtension_Items.CreateCarrier<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier(Of T)
    nameWithType: BdoScopeExtension_Items.CreateCarrier(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_Items
  definition: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: CreateCarrier(IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateCarrier(IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier
    nameWithType: BdoScopeExtension_Items.CreateCarrier
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier
    nameWithType: BdoScopeExtension_Items.CreateCarrier
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(System.String)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,System.String)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_Items
  definition: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,System.String)
  name: CreateConnector<T>(String)
  nameWithType: BdoScopeExtension_Items.CreateConnector<T>(String)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>(System.String)
  nameWithType.vb: BdoScopeExtension_Items.CreateConnector(Of T)(String)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)(System.String)
  name.vb: CreateConnector(Of T)(String)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(System.String)
    name: CreateConnector<T>
    nameWithType: BdoScopeExtension_Items.CreateConnector<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(System.String)
    name: CreateConnector(Of T)
    nameWithType: BdoScopeExtension_Items.CreateConnector(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_Items
  definition: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: CreateConnector<T>(IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateConnector<T>(IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: BdoScopeExtension_Items.CreateConnector(Of T)(IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: CreateConnector(Of T)(IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector<T>
    nameWithType: BdoScopeExtension_Items.CreateConnector<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector(Of T)
    nameWithType: BdoScopeExtension_Items.CreateConnector(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_Items
  definition: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: CreateConnector(IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateConnector(IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector
    nameWithType: BdoScopeExtension_Items.CreateConnector
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector
    nameWithType: BdoScopeExtension_Items.CreateConnector
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_Items
  definition: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: CreateTask<T>(IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateTask<T>(IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask<T>(BindOpen.Extensions.Runtime.IBdoTaskConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: BdoScopeExtension_Items.CreateTask(Of T)(IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(Of T)(BindOpen.Extensions.Runtime.IBdoTaskConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: CreateTask(Of T)(IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask<T>
    nameWithType: BdoScopeExtension_Items.CreateTask<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask(Of T)
    nameWithType: BdoScopeExtension_Items.CreateTask(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Application.Scopes.BdoScopeExtension_Items
  definition: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: CreateTask(IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateTask(IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Extensions.Runtime.IBdoTaskConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask
    nameWithType: BdoScopeExtension_Items.CreateTask
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask
    nameWithType: BdoScopeExtension_Items.CreateTask
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(BindOpen.Application.Scopes.IBdoScope,System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Services.BdoConnectedServiceFactory
  definition: BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(BindOpen.Application.Scopes.IBdoScope,System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
  name: Create<T>(Func<IBdoScope, IBdoLog, IBdoConnector>, IBdoLog)
  nameWithType: BdoConnectedServiceFactory.Create<T>(Func<IBdoScope, IBdoLog, IBdoConnector>, IBdoLog)
  fullName: BindOpen.Application.Services.BdoConnectedServiceFactory.Create<T>(System.Func<BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Runtime.IBdoConnector>, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoConnectedServiceFactory.Create(Of T)(Func(Of IBdoScope, IBdoLog, IBdoConnector), IBdoLog)
  fullName.vb: BindOpen.Application.Services.BdoConnectedServiceFactory.Create(Of T)(System.Func(Of BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Runtime.IBdoConnector), BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Create(Of T)(Func(Of IBdoScope, IBdoLog, IBdoConnector), IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
    name: Create<T>
    nameWithType: BdoConnectedServiceFactory.Create<T>
    fullName: BindOpen.Application.Services.BdoConnectedServiceFactory.Create<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
    name: Create(Of T)
    nameWithType: BdoConnectedServiceFactory.Create(Of T)
    fullName: BindOpen.Application.Services.BdoConnectedServiceFactory.Create(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoConnectionFactory
  definition: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: Open<T>(IDatasource, String, IBdoLog)
  nameWithType: BdoConnectionFactory.Open<T>(IDatasource, String, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>(BindOpen.Data.Items.IDatasource, System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoConnectionFactory.Open(Of T)(IDatasource, String, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)(BindOpen.Data.Items.IDatasource, System.String, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Open(Of T)(IDatasource, String, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: Open<T>
    nameWithType: BdoConnectionFactory.Open<T>
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDatasource
    name: IDatasource
    nameWithType: IDatasource
    fullName: BindOpen.Data.Items.IDatasource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: Open(Of T)
    nameWithType: BdoConnectionFactory.Open(Of T)
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDatasource
    name: IDatasource
    nameWithType: IDatasource
    fullName: BindOpen.Data.Items.IDatasource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoConnectionFactory
  definition: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
  name: Open<T>(IBdoConnectorConfiguration, IBdoLog)
  nameWithType: BdoConnectionFactory.Open<T>(IBdoConnectorConfiguration, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoConnectionFactory.Open(Of T)(IBdoConnectorConfiguration, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Open(Of T)(IBdoConnectorConfiguration, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
    name: Open<T>
    nameWithType: BdoConnectionFactory.Open<T>
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
    name: Open(Of T)
    nameWithType: BdoConnectionFactory.Open(Of T)
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScope.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Application.Scopes.BdoScope})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<BdoScope>(Action<BdoScope>)
  nameWithType: ObjectHelper.Using<BdoScope>(Action<BdoScope>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Application.Scopes.BdoScope>(System.Action<BindOpen.Application.Scopes.BdoScope>)
  nameWithType.vb: ObjectHelper.Using(Of BdoScope)(Action(Of BdoScope))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Application.Scopes.BdoScope)(System.Action(Of BindOpen.Application.Scopes.BdoScope))
  name.vb: Using(Of BdoScope)(Action(Of BdoScope))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<BdoScope>
    nameWithType: ObjectHelper.Using<BdoScope>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Application.Scopes.BdoScope>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.BdoScope
    name: BdoScope
    nameWithType: BdoScope
    fullName: BindOpen.Application.Scopes.BdoScope
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of BdoScope)
    nameWithType: ObjectHelper.Using(Of BdoScope)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Application.Scopes.BdoScope)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.BdoScope
    name: BdoScope
    nameWithType: BdoScope
    fullName: BindOpen.Application.Scopes.BdoScope
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  name: GetDatasourceDepot(IBdoScope)
  nameWithType: BdoDatasourceExtensions.GetDatasourceDepot(IBdoScope)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
  spec.csharp:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot(BindOpen.Application.Scopes.IBdoScope)
    name: GetDatasourceDepot
    nameWithType: BdoDatasourceExtensions.GetDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.GetDatasourceDepot
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions
  commentId: T:BindOpen.Data.Stores.BdoDatasourceExtensions
  parent: BindOpen.Data.Stores
  name: BdoDatasourceExtensions
  nameWithType: BdoDatasourceExtensions
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions
- uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: CreateConfiguration<T>(IBdoScope, String, IBdoLog)
  nameWithType: BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>(IBdoScope, String, IBdoLog)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>(BindOpen.Application.Scopes.IBdoScope, System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)(IBdoScope, String, IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)(BindOpen.Application.Scopes.IBdoScope, System.String, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: CreateConfiguration(Of T)(IBdoScope, String, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConfiguration<T>
    nameWithType: BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConfiguration(Of T)
    nameWithType: BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.CreateConfiguration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations
  commentId: T:BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations
  parent: BindOpen.Application.Scopes
  name: BdoScopeExtension_ItemConfigurations
  nameWithType: BdoScopeExtension_ItemConfigurations
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations
- uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: LoadConfiguration<T>(IBdoScope, String, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>(IBdoScope, String, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>(BindOpen.Application.Scopes.IBdoScope, System.String, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)(IBdoScope, String, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)(BindOpen.Application.Scopes.IBdoScope, System.String, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: LoadConfiguration(Of T)(IBdoScope, String, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: LoadConfiguration<T>
    nameWithType: BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration``1(BindOpen.Application.Scopes.IBdoScope,System.String,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: LoadConfiguration(Of T)
    nameWithType: BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_ItemConfigurations.LoadConfiguration(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: CreateCarrier<T>(IBdoScope, IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateCarrier<T>(IBdoScope, IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier<T>(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoCarrierConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: BdoScopeExtension_Items.CreateCarrier(Of T)(IBdoScope, IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(Of T)(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoCarrierConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: CreateCarrier(Of T)(IBdoScope, IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier<T>
    nameWithType: BdoScopeExtension_Items.CreateCarrier<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier(Of T)
    nameWithType: BdoScopeExtension_Items.CreateCarrier(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items
  commentId: T:BindOpen.Application.Scopes.BdoScopeExtension_Items
  parent: BindOpen.Application.Scopes
  name: BdoScopeExtension_Items
  nameWithType: BdoScopeExtension_Items
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: CreateCarrier(IBdoScope, IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateCarrier(IBdoScope, IBdoCarrierConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoCarrierConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier
    nameWithType: BdoScopeExtension_Items.CreateCarrier
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoCarrierConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateCarrier
    nameWithType: BdoScopeExtension_Items.CreateCarrier
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateCarrier
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    name: IBdoCarrierConfiguration
    nameWithType: IBdoCarrierConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,System.String)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,System.String)
  isExternal: true
  name: CreateConnector<T>(IBdoScope, String)
  nameWithType: BdoScopeExtension_Items.CreateConnector<T>(IBdoScope, String)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>(BindOpen.Application.Scopes.IBdoScope, System.String)
  nameWithType.vb: BdoScopeExtension_Items.CreateConnector(Of T)(IBdoScope, String)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)(BindOpen.Application.Scopes.IBdoScope, System.String)
  name.vb: CreateConnector(Of T)(IBdoScope, String)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,System.String)
    name: CreateConnector<T>
    nameWithType: BdoScopeExtension_Items.CreateConnector<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,System.String)
    name: CreateConnector(Of T)
    nameWithType: BdoScopeExtension_Items.CreateConnector(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: CreateConnector<T>(IBdoScope, IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateConnector<T>(IBdoScope, IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: BdoScopeExtension_Items.CreateConnector(Of T)(IBdoScope, IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: CreateConnector(Of T)(IBdoScope, IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector<T>
    nameWithType: BdoScopeExtension_Items.CreateConnector<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector(Of T)
    nameWithType: BdoScopeExtension_Items.CreateConnector(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: CreateConnector(IBdoScope, IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateConnector(IBdoScope, IBdoConnectorConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector
    nameWithType: BdoScopeExtension_Items.CreateConnector
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateConnector
    nameWithType: BdoScopeExtension_Items.CreateConnector
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateConnector
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: CreateTask<T>(IBdoScope, IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateTask<T>(IBdoScope, IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask<T>(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoTaskConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: BdoScopeExtension_Items.CreateTask(Of T)(IBdoScope, IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(Of T)(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoTaskConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: CreateTask(Of T)(IBdoScope, IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask<T>
    nameWithType: BdoScopeExtension_Items.CreateTask<T>
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask(Of T)
    nameWithType: BdoScopeExtension_Items.CreateTask(Of T)
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: CreateTask(IBdoScope, IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  nameWithType: BdoScopeExtension_Items.CreateTask(IBdoScope, IBdoTaskConfiguration, String, IBdoLog, IBdoScriptVariableSet)
  fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoTaskConfiguration, System.String, BindOpen.System.Diagnostics.IBdoLog, BindOpen.System.Scripting.IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask
    nameWithType: BdoScopeExtension_Items.CreateTask
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoTaskConfiguration,System.String,BindOpen.System.Diagnostics.IBdoLog,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: CreateTask
    nameWithType: BdoScopeExtension_Items.CreateTask
    fullName: BindOpen.Application.Scopes.BdoScopeExtension_Items.CreateTask
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
    name: IBdoTaskConfiguration
    nameWithType: IBdoTaskConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoTaskConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(BindOpen.Application.Scopes.IBdoScope,System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(BindOpen.Application.Scopes.IBdoScope,System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: Create<T>(IBdoScope, Func<IBdoScope, IBdoLog, IBdoConnector>, IBdoLog)
  nameWithType: BdoConnectedServiceFactory.Create<T>(IBdoScope, Func<IBdoScope, IBdoLog, IBdoConnector>, IBdoLog)
  fullName: BindOpen.Application.Services.BdoConnectedServiceFactory.Create<T>(BindOpen.Application.Scopes.IBdoScope, System.Func<BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Runtime.IBdoConnector>, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoConnectedServiceFactory.Create(Of T)(IBdoScope, Func(Of IBdoScope, IBdoLog, IBdoConnector), IBdoLog)
  fullName.vb: BindOpen.Application.Services.BdoConnectedServiceFactory.Create(Of T)(BindOpen.Application.Scopes.IBdoScope, System.Func(Of BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Runtime.IBdoConnector), BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Create(Of T)(IBdoScope, Func(Of IBdoScope, IBdoLog, IBdoConnector), IBdoLog)
  spec.csharp:
  - uid: BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(BindOpen.Application.Scopes.IBdoScope,System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
    name: Create<T>
    nameWithType: BdoConnectedServiceFactory.Create<T>
    fullName: BindOpen.Application.Services.BdoConnectedServiceFactory.Create<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Services.BdoConnectedServiceFactory.Create``1(BindOpen.Application.Scopes.IBdoScope,System.Func{BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Runtime.IBdoConnector},BindOpen.System.Diagnostics.IBdoLog)
    name: Create(Of T)
    nameWithType: BdoConnectedServiceFactory.Create(Of T)
    fullName: BindOpen.Application.Services.BdoConnectedServiceFactory.Create(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Services.BdoConnectedServiceFactory
  commentId: T:BindOpen.Application.Services.BdoConnectedServiceFactory
  parent: BindOpen.Application.Services
  name: BdoConnectedServiceFactory
  nameWithType: BdoConnectedServiceFactory
  fullName: BindOpen.Application.Services.BdoConnectedServiceFactory
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: Open<T>(IBdoScope, IDatasource, String, IBdoLog)
  nameWithType: BdoConnectionFactory.Open<T>(IBdoScope, IDatasource, String, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>(BindOpen.Application.Scopes.IBdoScope, BindOpen.Data.Items.IDatasource, System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoConnectionFactory.Open(Of T)(IBdoScope, IDatasource, String, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)(BindOpen.Application.Scopes.IBdoScope, BindOpen.Data.Items.IDatasource, System.String, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Open(Of T)(IBdoScope, IDatasource, String, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: Open<T>
    nameWithType: BdoConnectionFactory.Open<T>
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDatasource
    name: IDatasource
    nameWithType: IDatasource
    fullName: BindOpen.Data.Items.IDatasource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Data.Items.IDatasource,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: Open(Of T)
    nameWithType: BdoConnectionFactory.Open(Of T)
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDatasource
    name: IDatasource
    nameWithType: IDatasource
    fullName: BindOpen.Data.Items.IDatasource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoConnectionFactory
  commentId: T:BindOpen.Data.Connections.BdoConnectionFactory
  parent: BindOpen.Data.Connections
  name: BdoConnectionFactory
  nameWithType: BdoConnectionFactory
  fullName: BindOpen.Data.Connections.BdoConnectionFactory
- uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
  name: Open<T>(IBdoScope, IBdoConnectorConfiguration, IBdoLog)
  nameWithType: BdoConnectionFactory.Open<T>(IBdoScope, IBdoConnectorConfiguration, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoConnectionFactory.Open(Of T)(IBdoScope, IBdoConnectorConfiguration, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)(BindOpen.Application.Scopes.IBdoScope, BindOpen.Extensions.Runtime.IBdoConnectorConfiguration, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Open(Of T)(IBdoScope, IBdoConnectorConfiguration, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
    name: Open<T>
    nameWithType: BdoConnectionFactory.Open<T>
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnectionFactory.Open``1(BindOpen.Application.Scopes.IBdoScope,BindOpen.Extensions.Runtime.IBdoConnectorConfiguration,BindOpen.System.Diagnostics.IBdoLog)
    name: Open(Of T)
    nameWithType: BdoConnectionFactory.Open(Of T)
    fullName: BindOpen.Data.Connections.BdoConnectionFactory.Open(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
    name: IBdoConnectorConfiguration
    nameWithType: IBdoConnectorConfiguration
    fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores
  commentId: N:BindOpen.Data.Stores
  name: BindOpen.Data.Stores
  nameWithType: BindOpen.Data.Stores
  fullName: BindOpen.Data.Stores
- uid: BindOpen.Application.Services
  commentId: N:BindOpen.Application.Services
  name: BindOpen.Application.Services
  nameWithType: BindOpen.Application.Services
  fullName: BindOpen.Application.Services
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Connections
  commentId: N:BindOpen.Data.Connections
  name: BindOpen.Data.Connections
  nameWithType: BindOpen.Data.Connections
  fullName: BindOpen.Data.Connections
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Application.Scopes.BdoScope.AppDomain*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.AppDomain
  name: AppDomain
  nameWithType: BdoScope.AppDomain
  fullName: BindOpen.Application.Scopes.BdoScope.AppDomain
- uid: BindOpen.Application.Scopes.IBdoScope.AppDomain
  commentId: P:BindOpen.Application.Scopes.IBdoScope.AppDomain
  parent: BindOpen.Application.Scopes.IBdoScope
  name: AppDomain
  nameWithType: IBdoScope.AppDomain
  fullName: BindOpen.Application.Scopes.IBdoScope.AppDomain
- uid: System.AppDomain
  commentId: T:System.AppDomain
  parent: System
  isExternal: true
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: BindOpen.Application.Scopes.BdoScope.ExtensionStore*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.ExtensionStore
  name: ExtensionStore
  nameWithType: BdoScope.ExtensionStore
  fullName: BindOpen.Application.Scopes.BdoScope.ExtensionStore
- uid: BindOpen.Application.Scopes.IBdoScope.ExtensionStore
  commentId: P:BindOpen.Application.Scopes.IBdoScope.ExtensionStore
  parent: BindOpen.Application.Scopes.IBdoScope
  name: ExtensionStore
  nameWithType: IBdoScope.ExtensionStore
  fullName: BindOpen.Application.Scopes.IBdoScope.ExtensionStore
- uid: BindOpen.Extensions.Runtime.IBdoExtensionStore
  commentId: T:BindOpen.Extensions.Runtime.IBdoExtensionStore
  parent: BindOpen.Extensions.Runtime
  name: IBdoExtensionStore
  nameWithType: IBdoExtensionStore
  fullName: BindOpen.Extensions.Runtime.IBdoExtensionStore
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: BindOpen.Application.Scopes.BdoScope.Interpreter*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.Interpreter
  name: Interpreter
  nameWithType: BdoScope.Interpreter
  fullName: BindOpen.Application.Scopes.BdoScope.Interpreter
- uid: BindOpen.Application.Scopes.IBdoScope.Interpreter
  commentId: P:BindOpen.Application.Scopes.IBdoScope.Interpreter
  parent: BindOpen.Application.Scopes.IBdoScope
  name: Interpreter
  nameWithType: IBdoScope.Interpreter
  fullName: BindOpen.Application.Scopes.IBdoScope.Interpreter
- uid: BindOpen.System.Scripting.IBdoScriptInterpreter
  commentId: T:BindOpen.System.Scripting.IBdoScriptInterpreter
  parent: BindOpen.System.Scripting
  name: IBdoScriptInterpreter
  nameWithType: IBdoScriptInterpreter
  fullName: BindOpen.System.Scripting.IBdoScriptInterpreter
- uid: BindOpen.System.Scripting
  commentId: N:BindOpen.System.Scripting
  name: BindOpen.System.Scripting
  nameWithType: BindOpen.System.Scripting
  fullName: BindOpen.System.Scripting
- uid: BindOpen.Application.Scopes.BdoScope.Context*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.Context
  name: Context
  nameWithType: BdoScope.Context
  fullName: BindOpen.Application.Scopes.BdoScope.Context
- uid: BindOpen.Application.Scopes.IBdoScope.Context
  commentId: P:BindOpen.Application.Scopes.IBdoScope.Context
  parent: BindOpen.Application.Scopes.IBdoScope
  name: Context
  nameWithType: IBdoScope.Context
  fullName: BindOpen.Application.Scopes.IBdoScope.Context
- uid: BindOpen.Data.Context.IBdoDataContext
  commentId: T:BindOpen.Data.Context.IBdoDataContext
  parent: BindOpen.Data.Context
  name: IBdoDataContext
  nameWithType: IBdoDataContext
  fullName: BindOpen.Data.Context.IBdoDataContext
- uid: BindOpen.Data.Context
  commentId: N:BindOpen.Data.Context
  name: BindOpen.Data.Context
  nameWithType: BindOpen.Data.Context
  fullName: BindOpen.Data.Context
- uid: BindOpen.Application.Scopes.BdoScope.DataStore*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.DataStore
  name: DataStore
  nameWithType: BdoScope.DataStore
  fullName: BindOpen.Application.Scopes.BdoScope.DataStore
- uid: BindOpen.Application.Scopes.IBdoScope.DataStore
  commentId: P:BindOpen.Application.Scopes.IBdoScope.DataStore
  parent: BindOpen.Application.Scopes.IBdoScope
  name: DataStore
  nameWithType: IBdoScope.DataStore
  fullName: BindOpen.Application.Scopes.IBdoScope.DataStore
- uid: BindOpen.Data.Stores.IBdoDataStore
  commentId: T:BindOpen.Data.Stores.IBdoDataStore
  parent: BindOpen.Data.Stores
  name: IBdoDataStore
  nameWithType: IBdoDataStore
  fullName: BindOpen.Data.Stores.IBdoDataStore
- uid: BindOpen.Application.Scopes.BdoScope.#ctor*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.#ctor
  name: BdoScope
  nameWithType: BdoScope.BdoScope
  fullName: BindOpen.Application.Scopes.BdoScope.BdoScope
- uid: BindOpen.Application.Scopes.BdoScope.Check*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.Check
  name: Check
  nameWithType: BdoScope.Check
  fullName: BindOpen.Application.Scopes.BdoScope.Check
- uid: BindOpen.Application.Scopes.IBdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:BindOpen.Application.Scopes.IBdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: BindOpen.Application.Scopes.IBdoScope
  isExternal: true
  name: Check(Boolean, Boolean, Boolean, Boolean)
  nameWithType: IBdoScope.Check(Boolean, Boolean, Boolean, Boolean)
  fullName: BindOpen.Application.Scopes.IBdoScope.Check(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Application.Scopes.IBdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: Check
    nameWithType: IBdoScope.Check
    fullName: BindOpen.Application.Scopes.IBdoScope.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.IBdoScope.Check(System.Boolean,System.Boolean,System.Boolean,System.Boolean)
    name: Check
    nameWithType: IBdoScope.Check
    fullName: BindOpen.Application.Scopes.IBdoScope.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Application.Scopes.BdoScope.LoadExtensions*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.LoadExtensions
  name: LoadExtensions
  nameWithType: BdoScope.LoadExtensions
  fullName: BindOpen.Application.Scopes.BdoScope.LoadExtensions
- uid: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.IBdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
  parent: BindOpen.Application.Scopes.IBdoScope
  isExternal: true
  name: LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  nameWithType: IBdoScope.LoadExtensions(Action<IExtensionLoadOptions>, IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(System.Action<BindOpen.Application.Scopes.IExtensionLoadOptions>, BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: IBdoScope.LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
  fullName.vb: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(System.Action(Of BindOpen.Application.Scopes.IExtensionLoadOptions), BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(Action(Of IExtensionLoadOptions), IBdoExtensionReference())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: IBdoScope.LoadExtensions
    fullName: BindOpen.Application.Scopes.IBdoScope.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions},BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: IBdoScope.LoadExtensions
    fullName: BindOpen.Application.Scopes.IBdoScope.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions}
  commentId: T:System.Action{BindOpen.Application.Scopes.IExtensionLoadOptions}
  parent: System
  definition: System.Action`1
  name: Action<IExtensionLoadOptions>
  nameWithType: Action<IExtensionLoadOptions>
  fullName: System.Action<BindOpen.Application.Scopes.IExtensionLoadOptions>
  nameWithType.vb: Action(Of IExtensionLoadOptions)
  fullName.vb: System.Action(Of BindOpen.Application.Scopes.IExtensionLoadOptions)
  name.vb: Action(Of IExtensionLoadOptions)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Scopes.IExtensionLoadOptions
    name: IExtensionLoadOptions
    nameWithType: IExtensionLoadOptions
    fullName: BindOpen.Application.Scopes.IExtensionLoadOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.References.IBdoExtensionReference[]
  isExternal: true
  name: IBdoExtensionReference[]
  nameWithType: IBdoExtensionReference[]
  fullName: BindOpen.Extensions.References.IBdoExtensionReference[]
  nameWithType.vb: IBdoExtensionReference()
  fullName.vb: BindOpen.Extensions.References.IBdoExtensionReference()
  name.vb: IBdoExtensionReference()
  spec.csharp:
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  commentId: M:BindOpen.Application.Scopes.IBdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  parent: BindOpen.Application.Scopes.IBdoScope
  name: LoadExtensions(IBdoExtensionReference[])
  nameWithType: IBdoScope.LoadExtensions(IBdoExtensionReference[])
  fullName: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
  nameWithType.vb: IBdoScope.LoadExtensions(IBdoExtensionReference())
  fullName.vb: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference())
  name.vb: LoadExtensions(IBdoExtensionReference())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: IBdoScope.LoadExtensions
    fullName: BindOpen.Application.Scopes.IBdoScope.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.IBdoScope.LoadExtensions(BindOpen.Extensions.References.IBdoExtensionReference[])
    name: LoadExtensions
    nameWithType: IBdoScope.LoadExtensions
    fullName: BindOpen.Application.Scopes.IBdoScope.LoadExtensions
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.References.IBdoExtensionReference
    name: IBdoExtensionReference
    nameWithType: IBdoExtensionReference
    fullName: BindOpen.Extensions.References.IBdoExtensionReference
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScope.Clear*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.Clear
  name: Clear
  nameWithType: BdoScope.Clear
  fullName: BindOpen.Application.Scopes.BdoScope.Clear
- uid: BindOpen.Application.Scopes.IBdoScope.Clear
  commentId: M:BindOpen.Application.Scopes.IBdoScope.Clear
  parent: BindOpen.Application.Scopes.IBdoScope
  name: Clear()
  nameWithType: IBdoScope.Clear()
  fullName: BindOpen.Application.Scopes.IBdoScope.Clear()
  spec.csharp:
  - uid: BindOpen.Application.Scopes.IBdoScope.Clear
    name: Clear
    nameWithType: IBdoScope.Clear
    fullName: BindOpen.Application.Scopes.IBdoScope.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.IBdoScope.Clear
    name: Clear
    nameWithType: IBdoScope.Clear
    fullName: BindOpen.Application.Scopes.IBdoScope.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.BdoScope.Update*
  commentId: Overload:BindOpen.Application.Scopes.BdoScope.Update
  name: Update
  nameWithType: BdoScope.Update
  fullName: BindOpen.Application.Scopes.BdoScope.Update
- uid: BindOpen.Application.Scopes.IBdoScope.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Application.Scopes.IBdoScope
  definition: BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IBdoScope.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Application.Scopes.IBdoScope.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IBdoScope.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Application.Scopes.IBdoScope.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IBdoScope.Update<T>
    fullName: BindOpen.Application.Scopes.IBdoScope.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IBdoScope.Update(Of T)
    fullName: BindOpen.Application.Scopes.IBdoScope.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Common.UpdateModes[]
  isExternal: true
  name: UpdateModes[]
  nameWithType: UpdateModes[]
  fullName: BindOpen.Data.Common.UpdateModes[]
  nameWithType.vb: UpdateModes()
  fullName.vb: BindOpen.Data.Common.UpdateModes()
  name.vb: UpdateModes()
  spec.csharp:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IBdoScope.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Application.Scopes.IBdoScope.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IBdoScope.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Application.Scopes.IBdoScope.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IBdoScope.Update<T>
    fullName: BindOpen.Application.Scopes.IBdoScope.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Scopes.IBdoScope.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IBdoScope.Update(Of T)
    fullName: BindOpen.Application.Scopes.IBdoScope.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
shouldSkipMarkup: true
