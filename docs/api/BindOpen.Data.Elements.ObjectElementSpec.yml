### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Elements.ObjectElementSpec
  commentId: T:BindOpen.Data.Elements.ObjectElementSpec
  id: ObjectElementSpec
  parent: BindOpen.Data.Elements
  children:
  - BindOpen.Data.Elements.ObjectElementSpec.#ctor
  - BindOpen.Data.Elements.ObjectElementSpec.#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])
  - BindOpen.Data.Elements.ObjectElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  - BindOpen.Data.Elements.ObjectElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  - BindOpen.Data.Elements.ObjectElementSpec.ClassFilter
  - BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified
  - BindOpen.Data.Elements.ObjectElementSpec.Clone
  - BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter
  - BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified
  langs:
  - csharp
  - vb
  name: ObjectElementSpec
  nameWithType: ObjectElementSpec
  fullName: BindOpen.Data.Elements.ObjectElementSpec
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ObjectElementSpec
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 10
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThis class represents an object element specification.\n"
  example: []
  syntax:
    content: 'public class ObjectElementSpec : DataElementSpec, IObjectElementSpec, IDataElementSpec, IDataSpecification, IIndexedDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed'
    content.vb: >-
      Public Class ObjectElementSpec
          Inherits DataElementSpec
          Implements IObjectElementSpec, IDataElementSpec, IDataSpecification, IIndexedDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed, IIndexed
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.StoredDataItem
  - BindOpen.Data.Items.NamedDataItem
  - BindOpen.Data.Items.TitledDataItem
  - BindOpen.Data.Items.DescribedDataItem
  - BindOpen.Data.Items.IndexedDataItem
  - BindOpen.Data.Specification.DataSpecification
  - BindOpen.Data.Elements.DataElementSpec
  implements:
  - BindOpen.Data.Elements.IObjectElementSpec
  - BindOpen.Data.Elements.IDataElementSpec
  - BindOpen.Data.Specification.IDataSpecification
  - BindOpen.Data.Items.IIndexedDataItem
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  - BindOpen.Data.Items.IIndexed
  inheritedMembers:
  - BindOpen.Data.Elements.DataElementSpec.__Arenames
  - BindOpen.Data.Elements.DataElementSpec.GroupId
  - BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  - BindOpen.Data.Elements.DataElementSpec.ValueType
  - BindOpen.Data.Elements.DataElementSpec.Aliases
  - BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  - BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  - BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  - BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  - BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  - BindOpen.Data.Elements.DataElementSpec.ItemScript
  - BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  - BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  - BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  - BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  - BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  - BindOpen.Data.Elements.DataElementSpec.DefaultItems
  - BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  - BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  - BindOpen.Data.Elements.DataElementSpec.IsValueList
  - BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  - BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  - BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  - BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  - BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  - BindOpen.Data.Elements.DataElementSpec.DesignStatement
  - BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  - BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  - BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  - BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  - BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  - BindOpen.Data.Elements.DataElementSpec.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  - BindOpen.Data.Specification.DataSpecification.RequirementLevel
  - BindOpen.Data.Specification.DataSpecification.RequirementScript
  - BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
  - BindOpen.Data.Specification.DataSpecification.InheritanceLevel
  - BindOpen.Data.Specification.DataSpecification.SpecificationLevels
  - BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
  - BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
  - BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  - BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  - BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  - BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  - BindOpen.Data.Items.IndexedDataItem.Index
  - BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  - BindOpen.Data.Items.DescribedDataItem.Description
  - BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  - BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.TitledDataItem.Title
  - BindOpen.Data.Items.TitledDataItem.TitleSpecified
  - BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  - BindOpen.Data.Items.NamedDataItem.Name
  - BindOpen.Data.Items.NamedDataItem.NameSpecified
  - BindOpen.Data.Items.NamedDataItem.Key
  - BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  - BindOpen.Data.Items.StoredDataItem.NamePreffix
  - BindOpen.Data.Items.StoredDataItem.CreationDate
  - BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.LastModificationDate
  - BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Data.Elements.ObjectElementSpec.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.ObjectElementSpec})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Elements.ObjectElementSpec.ClassFilter
  commentId: P:BindOpen.Data.Elements.ObjectElementSpec.ClassFilter
  id: ClassFilter
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: ClassFilter
  nameWithType: ObjectElementSpec.ClassFilter
  fullName: BindOpen.Data.Elements.ObjectElementSpec.ClassFilter
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ClassFilter
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 25
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe class filter of this instance.\n"
  example: []
  syntax:
    content: public DataValueFilter ClassFilter { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Specification.DataValueFilter
    content.vb: Public Property ClassFilter As DataValueFilter
  overload: BindOpen.Data.Elements.ObjectElementSpec.ClassFilter*
  implements:
  - BindOpen.Data.Elements.IObjectElementSpec.ClassFilter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified
  commentId: P:BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified
  id: ClassFilterSpecified
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: ClassFilterSpecified
  nameWithType: ObjectElementSpec.ClassFilterSpecified
  fullName: BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ClassFilterSpecified
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 31
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ClassFilter property of this instance.\n"
  example: []
  syntax:
    content: public bool ClassFilterSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ClassFilterSpecified As Boolean
  overload: BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter
  commentId: P:BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter
  id: DefinitionFilter
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: DefinitionFilter
  nameWithType: ObjectElementSpec.DefinitionFilter
  fullName: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DefinitionFilter
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 39
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThe entity filter of this instance.\n"
  example: []
  syntax:
    content: public DataValueFilter DefinitionFilter { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Specification.DataValueFilter
    content.vb: Public Property DefinitionFilter As DataValueFilter
  overload: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter*
  implements:
  - BindOpen.Data.Elements.IObjectElementSpec.DefinitionFilter
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified
  commentId: P:BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified
  id: DefinitionFilterSpecified
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: DefinitionFilterSpecified
  nameWithType: ObjectElementSpec.DefinitionFilterSpecified
  fullName: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DefinitionFilterSpecified
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 45
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nSpecification of the ClassFilter property of this instance.\n"
  example: []
  syntax:
    content: public bool DefinitionFilterSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DefinitionFilterSpecified As Boolean
  overload: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Elements.ObjectElementSpec.#ctor
  commentId: M:BindOpen.Data.Elements.ObjectElementSpec.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: ObjectElementSpec()
  nameWithType: ObjectElementSpec.ObjectElementSpec()
  fullName: BindOpen.Data.Elements.ObjectElementSpec.ObjectElementSpec()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 61
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nInitializes a new object element specification.\n"
  example: []
  syntax:
    content: public ObjectElementSpec()
    content.vb: Public Sub New
  overload: BindOpen.Data.Elements.ObjectElementSpec.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Elements.ObjectElementSpec.#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])
  commentId: M:BindOpen.Data.Elements.ObjectElementSpec.#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])
  id: '#ctor(BindOpen.Data.Common.AccessibilityLevels,BindOpen.Data.Common.SpecificationLevels[])'
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: ObjectElementSpec(AccessibilityLevels, SpecificationLevels[])
  nameWithType: ObjectElementSpec.ObjectElementSpec(AccessibilityLevels, SpecificationLevels[])
  fullName: BindOpen.Data.Elements.ObjectElementSpec.ObjectElementSpec(BindOpen.Data.Common.AccessibilityLevels, BindOpen.Data.Common.SpecificationLevels[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 70
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nInitializes a new object element specification.\n"
  example: []
  syntax:
    content: public ObjectElementSpec(AccessibilityLevels accessibilityLevel = AccessibilityLevels.Public, SpecificationLevels[] specificationLevels = null)
    parameters:
    - id: accessibilityLevel
      type: BindOpen.Data.Common.AccessibilityLevels
      description: The accessibilty level of this instance.
    - id: specificationLevels
      type: BindOpen.Data.Common.SpecificationLevels[]
      description: The specification levels of this instance.
    content.vb: Public Sub New(accessibilityLevel As AccessibilityLevels = AccessibilityLevels.Public, specificationLevels As SpecificationLevels() = Nothing)
  overload: BindOpen.Data.Elements.ObjectElementSpec.#ctor*
  nameWithType.vb: ObjectElementSpec.ObjectElementSpec(AccessibilityLevels, SpecificationLevels())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Elements.ObjectElementSpec.ObjectElementSpec(BindOpen.Data.Common.AccessibilityLevels, BindOpen.Data.Common.SpecificationLevels())
  name.vb: ObjectElementSpec(AccessibilityLevels, SpecificationLevels())
- uid: BindOpen.Data.Elements.ObjectElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  commentId: M:BindOpen.Data.Elements.ObjectElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  id: CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: CheckItem(Object, IDataElement)
  nameWithType: ObjectElementSpec.CheckItem(Object, IDataElement)
  fullName: BindOpen.Data.Elements.ObjectElementSpec.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CheckItem
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 91
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nCheck the specified item.\n"
  example: []
  syntax:
    content: public override IBdoLog CheckItem(object item, IDataElement dataElement = null)
    parameters:
    - id: item
      type: System.Object
      description: The item to consider.
    - id: dataElement
      type: BindOpen.Data.Elements.IDataElement
      description: The element to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log of check log.
    content.vb: Public Overrides Function CheckItem(item As Object, dataElement As IDataElement = Nothing) As IBdoLog
  overridden: BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  overload: BindOpen.Data.Elements.ObjectElementSpec.CheckItem*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Elements.ObjectElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  commentId: M:BindOpen.Data.Elements.ObjectElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  id: CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: CheckElement(IDataElement, String[])
  nameWithType: ObjectElementSpec.CheckElement(IDataElement, String[])
  fullName: BindOpen.Data.Elements.ObjectElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String[])
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CheckElement
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 104
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nCheck the specified item.\n"
  example: []
  syntax:
    content: public override IBdoLog CheckElement(IDataElement dataElement, string[] specificationAreas = null)
    parameters:
    - id: dataElement
      type: BindOpen.Data.Elements.IDataElement
      description: The element to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log of check log.
    content.vb: Public Overrides Function CheckElement(dataElement As IDataElement, specificationAreas As String() = Nothing) As IBdoLog
  overridden: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  overload: BindOpen.Data.Elements.ObjectElementSpec.CheckElement*
  implements:
  - BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  nameWithType.vb: ObjectElementSpec.CheckElement(IDataElement, String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Elements.ObjectElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String())
  name.vb: CheckElement(IDataElement, String())
- uid: BindOpen.Data.Elements.ObjectElementSpec.Clone
  commentId: M:BindOpen.Data.Elements.ObjectElementSpec.Clone
  id: Clone
  parent: BindOpen.Data.Elements.ObjectElementSpec
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: ObjectElementSpec.Clone()
  fullName: BindOpen.Data.Elements.ObjectElementSpec.Clone()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Elements/Object/ObjectElementSpec.cs
    startLine: 125
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overrides Function Clone As Object
  overridden: BindOpen.Data.Elements.DataElementSpec.Clone
  overload: BindOpen.Data.Elements.ObjectElementSpec.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.StoredDataItem
  commentId: T:BindOpen.Data.Items.StoredDataItem
  parent: BindOpen.Data.Items
  name: StoredDataItem
  nameWithType: StoredDataItem
  fullName: BindOpen.Data.Items.StoredDataItem
- uid: BindOpen.Data.Items.NamedDataItem
  commentId: T:BindOpen.Data.Items.NamedDataItem
  parent: BindOpen.Data.Items
  name: NamedDataItem
  nameWithType: NamedDataItem
  fullName: BindOpen.Data.Items.NamedDataItem
- uid: BindOpen.Data.Items.TitledDataItem
  commentId: T:BindOpen.Data.Items.TitledDataItem
  parent: BindOpen.Data.Items
  name: TitledDataItem
  nameWithType: TitledDataItem
  fullName: BindOpen.Data.Items.TitledDataItem
- uid: BindOpen.Data.Items.DescribedDataItem
  commentId: T:BindOpen.Data.Items.DescribedDataItem
  parent: BindOpen.Data.Items
  name: DescribedDataItem
  nameWithType: DescribedDataItem
  fullName: BindOpen.Data.Items.DescribedDataItem
- uid: BindOpen.Data.Items.IndexedDataItem
  commentId: T:BindOpen.Data.Items.IndexedDataItem
  parent: BindOpen.Data.Items
  name: IndexedDataItem
  nameWithType: IndexedDataItem
  fullName: BindOpen.Data.Items.IndexedDataItem
- uid: BindOpen.Data.Specification.DataSpecification
  commentId: T:BindOpen.Data.Specification.DataSpecification
  parent: BindOpen.Data.Specification
  name: DataSpecification
  nameWithType: DataSpecification
  fullName: BindOpen.Data.Specification.DataSpecification
- uid: BindOpen.Data.Elements.DataElementSpec
  commentId: T:BindOpen.Data.Elements.DataElementSpec
  parent: BindOpen.Data.Elements
  name: DataElementSpec
  nameWithType: DataElementSpec
  fullName: BindOpen.Data.Elements.DataElementSpec
- uid: BindOpen.Data.Elements.IObjectElementSpec
  commentId: T:BindOpen.Data.Elements.IObjectElementSpec
  parent: BindOpen.Data.Elements
  name: IObjectElementSpec
  nameWithType: IObjectElementSpec
  fullName: BindOpen.Data.Elements.IObjectElementSpec
- uid: BindOpen.Data.Elements.IDataElementSpec
  commentId: T:BindOpen.Data.Elements.IDataElementSpec
  parent: BindOpen.Data.Elements
  name: IDataElementSpec
  nameWithType: IDataElementSpec
  fullName: BindOpen.Data.Elements.IDataElementSpec
- uid: BindOpen.Data.Specification.IDataSpecification
  commentId: T:BindOpen.Data.Specification.IDataSpecification
  parent: BindOpen.Data.Specification
  name: IDataSpecification
  nameWithType: IDataSpecification
  fullName: BindOpen.Data.Specification.IDataSpecification
- uid: BindOpen.Data.Items.IIndexedDataItem
  commentId: T:BindOpen.Data.Items.IIndexedDataItem
  parent: BindOpen.Data.Items
  name: IIndexedDataItem
  nameWithType: IIndexedDataItem
  fullName: BindOpen.Data.Items.IIndexedDataItem
- uid: BindOpen.Data.Items.IDescribedDataItem
  commentId: T:BindOpen.Data.Items.IDescribedDataItem
  parent: BindOpen.Data.Items
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  commentId: T:BindOpen.Data.Items.ITitledDataItem
  parent: BindOpen.Data.Items
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  commentId: T:BindOpen.Data.Items.INamedDataItem
  parent: BindOpen.Data.Items
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  commentId: T:BindOpen.Data.Items.IStoredDataItem
  parent: BindOpen.Data.Items
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  commentId: T:BindOpen.Data.Items.IStorable
  parent: BindOpen.Data.Items
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  commentId: T:BindOpen.Data.Items.IGloballyTitled
  parent: BindOpen.Data.Items
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.IIndexed
  commentId: T:BindOpen.Data.Items.IIndexed
  parent: BindOpen.Data.Items
  name: IIndexed
  nameWithType: IIndexed
  fullName: BindOpen.Data.Items.IIndexed
- uid: BindOpen.Data.Elements.DataElementSpec.__Arenames
  commentId: F:BindOpen.Data.Elements.DataElementSpec.__Arenames
  parent: BindOpen.Data.Elements.DataElementSpec
  name: __Arenames
  nameWithType: DataElementSpec.__Arenames
  fullName: BindOpen.Data.Elements.DataElementSpec.__Arenames
- uid: BindOpen.Data.Elements.DataElementSpec.GroupId
  commentId: P:BindOpen.Data.Elements.DataElementSpec.GroupId
  parent: BindOpen.Data.Elements.DataElementSpec
  name: GroupId
  nameWithType: DataElementSpec.GroupId
  fullName: BindOpen.Data.Elements.DataElementSpec.GroupId
- uid: BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: GroupIdSpecified
  nameWithType: DataElementSpec.GroupIdSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.GroupIdSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.ValueType
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ValueType
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ValueType
  nameWithType: DataElementSpec.ValueType
  fullName: BindOpen.Data.Elements.DataElementSpec.ValueType
- uid: BindOpen.Data.Elements.DataElementSpec.Aliases
  commentId: P:BindOpen.Data.Elements.DataElementSpec.Aliases
  parent: BindOpen.Data.Elements.DataElementSpec
  name: Aliases
  nameWithType: DataElementSpec.Aliases
  fullName: BindOpen.Data.Elements.DataElementSpec.Aliases
- uid: BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: AliasesSpecified
  nameWithType: DataElementSpec.AliasesSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AliasesSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
  parent: BindOpen.Data.Elements.DataElementSpec
  name: AreaSpecifications
  nameWithType: DataElementSpec.AreaSpecifications
  fullName: BindOpen.Data.Elements.DataElementSpec.AreaSpecifications
- uid: BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: AreaSpecificationsSpecified
  nameWithType: DataElementSpec.AreaSpecificationsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AreaSpecificationsSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  commentId: P:BindOpen.Data.Elements.DataElementSpec.IsAllocatable
  parent: BindOpen.Data.Elements.DataElementSpec
  name: IsAllocatable
  nameWithType: DataElementSpec.IsAllocatable
  fullName: BindOpen.Data.Elements.DataElementSpec.IsAllocatable
- uid: BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: IsAllocatableSpecified
  nameWithType: DataElementSpec.IsAllocatableSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.IsAllocatableSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.ItemScript
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemScript
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ItemScript
  nameWithType: DataElementSpec.ItemScript
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemScript
- uid: BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ItemScriptSpecified
  nameWithType: DataElementSpec.ItemScriptSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemScriptSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
  parent: BindOpen.Data.Elements.DataElementSpec
  name: AvailableItemizationModes
  nameWithType: DataElementSpec.AvailableItemizationModes
  fullName: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModes
- uid: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: AvailableItemizationModesSpecified
  nameWithType: DataElementSpec.AvailableItemizationModesSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.AvailableItemizationModesSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
  parent: BindOpen.Data.Elements.DataElementSpec
  name: DefaultStringItems
  nameWithType: DataElementSpec.DefaultStringItems
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultStringItems
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: DefaultStringItemsSpecified
  nameWithType: DataElementSpec.DefaultStringItemsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultStringItemsSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.DefaultItems
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DefaultItems
  parent: BindOpen.Data.Elements.DataElementSpec
  name: DefaultItems
  nameWithType: DataElementSpec.DefaultItems
  fullName: BindOpen.Data.Elements.DataElementSpec.DefaultItems
- uid: BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  commentId: P:BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
  parent: BindOpen.Data.Elements.DataElementSpec
  name: MinimumItemNumber
  nameWithType: DataElementSpec.MinimumItemNumber
  fullName: BindOpen.Data.Elements.DataElementSpec.MinimumItemNumber
- uid: BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  commentId: P:BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
  parent: BindOpen.Data.Elements.DataElementSpec
  name: MaximumItemNumber
  nameWithType: DataElementSpec.MaximumItemNumber
  fullName: BindOpen.Data.Elements.DataElementSpec.MaximumItemNumber
- uid: BindOpen.Data.Elements.DataElementSpec.IsValueList
  commentId: P:BindOpen.Data.Elements.DataElementSpec.IsValueList
  parent: BindOpen.Data.Elements.DataElementSpec
  name: IsValueList
  nameWithType: DataElementSpec.IsValueList
  fullName: BindOpen.Data.Elements.DataElementSpec.IsValueList
- uid: BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ItemRequirementLevel
  nameWithType: DataElementSpec.ItemRequirementLevel
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemRequirementLevel
- uid: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ItemSpecificationLevels
  nameWithType: DataElementSpec.ItemSpecificationLevels
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevels
- uid: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ItemSpecificationLevelsSpecified
  nameWithType: DataElementSpec.ItemSpecificationLevelsSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ItemSpecificationLevelsSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ConstraintStatement
  nameWithType: DataElementSpec.ConstraintStatement
  fullName: BindOpen.Data.Elements.DataElementSpec.ConstraintStatement
- uid: BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: ConstraintStatementSpecified
  nameWithType: DataElementSpec.ConstraintStatementSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.ConstraintStatementSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.DesignStatement
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DesignStatement
  parent: BindOpen.Data.Elements.DataElementSpec
  name: DesignStatement
  nameWithType: DataElementSpec.DesignStatement
  fullName: BindOpen.Data.Elements.DataElementSpec.DesignStatement
- uid: BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  commentId: P:BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
  parent: BindOpen.Data.Elements.DataElementSpec
  name: DesignStatementSpecified
  nameWithType: DataElementSpec.DesignStatementSpecified
  fullName: BindOpen.Data.Elements.DataElementSpec.DesignStatementSpecified
- uid: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.DataElementSpec
  isExternal: true
  name: AddDefaultItem(Object)
  nameWithType: DataElementSpec.AddDefaultItem(Object)
  fullName: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
    name: AddDefaultItem
    nameWithType: DataElementSpec.AddDefaultItem
    fullName: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem(System.Object)
    name: AddDefaultItem
    nameWithType: DataElementSpec.AddDefaultItem
    fullName: BindOpen.Data.Elements.DataElementSpec.AddDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  parent: BindOpen.Data.Elements.DataElementSpec
  isExternal: true
  name: SetDefaultItem(Object)
  nameWithType: DataElementSpec.SetDefaultItem(Object)
  fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
    name: SetDefaultItem
    nameWithType: DataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Object)
    name: SetDefaultItem
    nameWithType: DataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  commentId: M:BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
  parent: BindOpen.Data.Elements.DataElementSpec
  isExternal: true
  name: SetDefaultItem(List<Object>)
  nameWithType: DataElementSpec.SetDefaultItem(List<Object>)
  fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List<System.Object>)
  nameWithType.vb: DataElementSpec.SetDefaultItem(List(Of Object))
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List(Of System.Object))
  name.vb: SetDefaultItem(List(Of Object))
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
    name: SetDefaultItem
    nameWithType: DataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem(System.Collections.Generic.List{System.Object})
    name: SetDefaultItem
    nameWithType: DataElementSpec.SetDefaultItem
    fullName: BindOpen.Data.Elements.DataElementSpec.SetDefaultItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Elements.DataElementSpec
  name: GetDefaultItemObject(IBdoLog)
  nameWithType: DataElementSpec.GetDefaultItemObject(IBdoLog)
  fullName: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
    name: GetDefaultItemObject
    nameWithType: DataElementSpec.GetDefaultItemObject
    fullName: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject(BindOpen.System.Diagnostics.IBdoLog)
    name: GetDefaultItemObject
    nameWithType: DataElementSpec.GetDefaultItemObject
    fullName: BindOpen.Data.Elements.DataElementSpec.GetDefaultItemObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  parent: BindOpen.Data.Elements.DataElementSpec
  isExternal: true
  name: GetAreaSpecification(String)
  nameWithType: DataElementSpec.GetAreaSpecification(String)
  fullName: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
    name: GetAreaSpecification
    nameWithType: DataElementSpec.GetAreaSpecification
    fullName: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification(System.String)
    name: GetAreaSpecification
    nameWithType: DataElementSpec.GetAreaSpecification
    fullName: BindOpen.Data.Elements.DataElementSpec.GetAreaSpecification
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Elements.DataElementSpec
  definition: BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataElementSpec.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSpec.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSpec.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataElementSpec.Repair<T>
    fullName: BindOpen.Data.Elements.DataElementSpec.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataElementSpec.Repair(Of T)
    fullName: BindOpen.Data.Elements.DataElementSpec.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  parent: BindOpen.Data.Elements.DataElementSpec
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataElementSpec.Dispose(Boolean)
  fullName: BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataElementSpec.Dispose
    fullName: BindOpen.Data.Elements.DataElementSpec.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataElementSpec.Dispose
    fullName: BindOpen.Data.Elements.DataElementSpec.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.RequirementLevel
  commentId: P:BindOpen.Data.Specification.DataSpecification.RequirementLevel
  parent: BindOpen.Data.Specification.DataSpecification
  name: RequirementLevel
  nameWithType: DataSpecification.RequirementLevel
  fullName: BindOpen.Data.Specification.DataSpecification.RequirementLevel
- uid: BindOpen.Data.Specification.DataSpecification.RequirementScript
  commentId: P:BindOpen.Data.Specification.DataSpecification.RequirementScript
  parent: BindOpen.Data.Specification.DataSpecification
  name: RequirementScript
  nameWithType: DataSpecification.RequirementScript
  fullName: BindOpen.Data.Specification.DataSpecification.RequirementScript
- uid: BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
  commentId: P:BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
  parent: BindOpen.Data.Specification.DataSpecification
  name: RequirementScriptSpecified
  nameWithType: DataSpecification.RequirementScriptSpecified
  fullName: BindOpen.Data.Specification.DataSpecification.RequirementScriptSpecified
- uid: BindOpen.Data.Specification.DataSpecification.InheritanceLevel
  commentId: P:BindOpen.Data.Specification.DataSpecification.InheritanceLevel
  parent: BindOpen.Data.Specification.DataSpecification
  name: InheritanceLevel
  nameWithType: DataSpecification.InheritanceLevel
  fullName: BindOpen.Data.Specification.DataSpecification.InheritanceLevel
- uid: BindOpen.Data.Specification.DataSpecification.SpecificationLevels
  commentId: P:BindOpen.Data.Specification.DataSpecification.SpecificationLevels
  parent: BindOpen.Data.Specification.DataSpecification
  name: SpecificationLevels
  nameWithType: DataSpecification.SpecificationLevels
  fullName: BindOpen.Data.Specification.DataSpecification.SpecificationLevels
- uid: BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
  commentId: P:BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
  parent: BindOpen.Data.Specification.DataSpecification
  name: SpecificationLevelsSpecified
  nameWithType: DataSpecification.SpecificationLevelsSpecified
  fullName: BindOpen.Data.Specification.DataSpecification.SpecificationLevelsSpecified
- uid: BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
  commentId: P:BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
  parent: BindOpen.Data.Specification.DataSpecification
  name: AccessibilityLevel
  nameWithType: DataSpecification.AccessibilityLevel
  fullName: BindOpen.Data.Specification.DataSpecification.AccessibilityLevel
- uid: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  commentId: M:BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  parent: BindOpen.Data.Specification.DataSpecification
  name: IsCompatibleWith(IDataItem)
  nameWithType: DataSpecification.IsCompatibleWith(IDataItem)
  fullName: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
    name: IsCompatibleWith
    nameWithType: DataSpecification.IsCompatibleWith
    fullName: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItem
    name: IDataItem
    nameWithType: IDataItem
    fullName: BindOpen.Data.Items.IDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith(BindOpen.Data.Items.IDataItem)
    name: IsCompatibleWith
    nameWithType: DataSpecification.IsCompatibleWith
    fullName: BindOpen.Data.Specification.DataSpecification.IsCompatibleWith
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItem
    name: IDataItem
    nameWithType: IDataItem
    fullName: BindOpen.Data.Items.IDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  commentId: M:BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
  parent: BindOpen.Data.Specification.DataSpecification
  isExternal: true
  name: Update(IDataElementSpec, String[])
  nameWithType: DataSpecification.Update(IDataElementSpec, String[])
  fullName: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec, System.String[])
  nameWithType.vb: DataSpecification.Update(IDataElementSpec, String())
  fullName.vb: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec, System.String())
  name.vb: Update(IDataElementSpec, String())
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
    name: Update
    nameWithType: DataSpecification.Update
    fullName: BindOpen.Data.Specification.DataSpecification.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSpec
    name: IDataElementSpec
    nameWithType: IDataElementSpec
    fullName: BindOpen.Data.Elements.IDataElementSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.Update(BindOpen.Data.Elements.IDataElementSpec,System.String[])
    name: Update
    nameWithType: DataSpecification.Update
    fullName: BindOpen.Data.Specification.DataSpecification.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSpec
    name: IDataElementSpec
    nameWithType: IDataElementSpec
    fullName: BindOpen.Data.Elements.IDataElementSpec
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  commentId: M:BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  parent: BindOpen.Data.Specification.DataSpecification
  name: Check(IDataSpecification)
  nameWithType: DataSpecification.Check(IDataSpecification)
  fullName: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
    name: Check
    nameWithType: DataSpecification.Check
    fullName: BindOpen.Data.Specification.DataSpecification.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.Check(BindOpen.Data.Specification.IDataSpecification)
    name: Check
    nameWithType: DataSpecification.Check
    fullName: BindOpen.Data.Specification.DataSpecification.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  commentId: M:BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  parent: BindOpen.Data.Specification.DataSpecification
  name: Repair(IDataSpecification)
  nameWithType: DataSpecification.Repair(IDataSpecification)
  fullName: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
  spec.csharp:
  - uid: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
    name: Repair
    nameWithType: DataSpecification.Repair
    fullName: BindOpen.Data.Specification.DataSpecification.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Specification.DataSpecification.Repair(BindOpen.Data.Specification.IDataSpecification)
    name: Repair
    nameWithType: DataSpecification.Repair
    fullName: BindOpen.Data.Specification.DataSpecification.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Specification.IDataSpecification
    name: IDataSpecification
    nameWithType: IDataSpecification
    fullName: BindOpen.Data.Specification.IDataSpecification
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IndexedDataItem.Index
  commentId: P:BindOpen.Data.Items.IndexedDataItem.Index
  parent: BindOpen.Data.Items.IndexedDataItem
  name: Index
  nameWithType: IndexedDataItem.Index
  fullName: BindOpen.Data.Items.IndexedDataItem.Index
- uid: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  commentId: P:BindOpen.Data.Items.IndexedDataItem.IndexSpecified
  parent: BindOpen.Data.Items.IndexedDataItem
  name: IndexSpecified
  nameWithType: IndexedDataItem.IndexSpecified
  fullName: BindOpen.Data.Items.IndexedDataItem.IndexSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Description
  commentId: P:BindOpen.Data.Items.DescribedDataItem.Description
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Description
  nameWithType: DescribedDataItem.Description
  fullName: BindOpen.Data.Items.DescribedDataItem.Description
- uid: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  commentId: P:BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  parent: BindOpen.Data.Items.DescribedDataItem
  name: DescriptionSpecified
  nameWithType: DescribedDataItem.DescriptionSpecified
  fullName: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
- uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: Update(IDescribedDataItem)
  nameWithType: DescribedDataItem.Update(IDescribedDataItem)
  fullName: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: DescribedDataItem.Update
    fullName: BindOpen.Data.Items.DescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String)
  nameWithType: DescribedDataItem.AddDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: DescribedDataItem.AddDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: DescribedDataItem.AddDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String)
  nameWithType: DescribedDataItem.SetDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: DescribedDataItem.SetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: DescribedDataItem.SetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: DescribedDataItem.GetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: DescribedDataItem.GetDescription
    fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DescribedDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DescribedDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DescribedDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DescribedDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DescribedDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DescribedDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.Title
  commentId: P:BindOpen.Data.Items.TitledDataItem.Title
  parent: BindOpen.Data.Items.TitledDataItem
  name: Title
  nameWithType: TitledDataItem.Title
  fullName: BindOpen.Data.Items.TitledDataItem.Title
- uid: BindOpen.Data.Items.TitledDataItem.TitleSpecified
  commentId: P:BindOpen.Data.Items.TitledDataItem.TitleSpecified
  parent: BindOpen.Data.Items.TitledDataItem
  name: TitleSpecified
  nameWithType: TitledDataItem.TitleSpecified
  fullName: BindOpen.Data.Items.TitledDataItem.TitleSpecified
- uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  commentId: M:BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  parent: BindOpen.Data.Items.TitledDataItem
  name: Update(ITitledDataItem)
  nameWithType: TitledDataItem.Update(ITitledDataItem)
  fullName: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String)
  nameWithType: TitledDataItem.AddTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String, String)
  nameWithType: TitledDataItem.AddTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String)
  nameWithType: TitledDataItem.SetTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String, String)
  nameWithType: TitledDataItem.SetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: GetTitle(String, String)
  nameWithType: TitledDataItem.GetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.Name
  commentId: P:BindOpen.Data.Items.NamedDataItem.Name
  parent: BindOpen.Data.Items.NamedDataItem
  name: Name
  nameWithType: NamedDataItem.Name
  fullName: BindOpen.Data.Items.NamedDataItem.Name
- uid: BindOpen.Data.Items.NamedDataItem.NameSpecified
  commentId: P:BindOpen.Data.Items.NamedDataItem.NameSpecified
  parent: BindOpen.Data.Items.NamedDataItem
  name: NameSpecified
  nameWithType: NamedDataItem.NameSpecified
  fullName: BindOpen.Data.Items.NamedDataItem.NameSpecified
- uid: BindOpen.Data.Items.NamedDataItem.Key
  commentId: M:BindOpen.Data.Items.NamedDataItem.Key
  parent: BindOpen.Data.Items.NamedDataItem
  name: Key()
  nameWithType: NamedDataItem.Key()
  fullName: BindOpen.Data.Items.NamedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  commentId: M:BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  parent: BindOpen.Data.Items.NamedDataItem
  isExternal: true
  name: GetClonedName(String, String)
  nameWithType: NamedDataItem.GetClonedName(String, String)
  fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.StoredDataItem.NamePreffix
  commentId: P:BindOpen.Data.Items.StoredDataItem.NamePreffix
  parent: BindOpen.Data.Items.StoredDataItem
  name: NamePreffix
  nameWithType: StoredDataItem.NamePreffix
  fullName: BindOpen.Data.Items.StoredDataItem.NamePreffix
- uid: BindOpen.Data.Items.StoredDataItem.CreationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDate
  nameWithType: StoredDataItem.CreationDate
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDate
- uid: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDateSpecified
  nameWithType: StoredDataItem.CreationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDate
  nameWithType: StoredDataItem.LastModificationDate
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDate
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDateSpecified
  nameWithType: StoredDataItem.LastModificationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  commentId: M:BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  parent: BindOpen.Data.Items.StoredDataItem
  name: DeclareUpdate()
  nameWithType: StoredDataItem.DeclareUpdate()
  fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate()
  spec.csharp:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.ObjectElementSpec.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Elements.ObjectElementSpec})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<ObjectElementSpec>(Action<ObjectElementSpec>)
  nameWithType: ObjectHelper.Using<ObjectElementSpec>(Action<ObjectElementSpec>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.ObjectElementSpec>(System.Action<BindOpen.Data.Elements.ObjectElementSpec>)
  nameWithType.vb: ObjectHelper.Using(Of ObjectElementSpec)(Action(Of ObjectElementSpec))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.ObjectElementSpec)(System.Action(Of BindOpen.Data.Elements.ObjectElementSpec))
  name.vb: Using(Of ObjectElementSpec)(Action(Of ObjectElementSpec))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<ObjectElementSpec>
    nameWithType: ObjectHelper.Using<ObjectElementSpec>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Elements.ObjectElementSpec>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Elements.ObjectElementSpec
    name: ObjectElementSpec
    nameWithType: ObjectElementSpec
    fullName: BindOpen.Data.Elements.ObjectElementSpec
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of ObjectElementSpec)
    nameWithType: ObjectHelper.Using(Of ObjectElementSpec)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Elements.ObjectElementSpec)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Elements.ObjectElementSpec
    name: ObjectElementSpec
    nameWithType: ObjectElementSpec
    fullName: BindOpen.Data.Elements.ObjectElementSpec
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Specification
  commentId: N:BindOpen.Data.Specification
  name: BindOpen.Data.Specification
  nameWithType: BindOpen.Data.Specification
  fullName: BindOpen.Data.Specification
- uid: BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataElementSpec.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Elements.DataElementSpec.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataElementSpec.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataElementSpec.Repair<T>
    fullName: BindOpen.Data.Elements.DataElementSpec.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataElementSpec.Repair(Of T)
    fullName: BindOpen.Data.Elements.DataElementSpec.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Elements.ObjectElementSpec.ClassFilter*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.ClassFilter
  name: ClassFilter
  nameWithType: ObjectElementSpec.ClassFilter
  fullName: BindOpen.Data.Elements.ObjectElementSpec.ClassFilter
- uid: BindOpen.Data.Elements.IObjectElementSpec.ClassFilter
  commentId: P:BindOpen.Data.Elements.IObjectElementSpec.ClassFilter
  parent: BindOpen.Data.Elements.IObjectElementSpec
  name: ClassFilter
  nameWithType: IObjectElementSpec.ClassFilter
  fullName: BindOpen.Data.Elements.IObjectElementSpec.ClassFilter
- uid: BindOpen.Data.Specification.DataValueFilter
  commentId: T:BindOpen.Data.Specification.DataValueFilter
  parent: BindOpen.Data.Specification
  name: DataValueFilter
  nameWithType: DataValueFilter
  fullName: BindOpen.Data.Specification.DataValueFilter
- uid: BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified
  name: ClassFilterSpecified
  nameWithType: ObjectElementSpec.ClassFilterSpecified
  fullName: BindOpen.Data.Elements.ObjectElementSpec.ClassFilterSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter
  name: DefinitionFilter
  nameWithType: ObjectElementSpec.DefinitionFilter
  fullName: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilter
- uid: BindOpen.Data.Elements.IObjectElementSpec.DefinitionFilter
  commentId: P:BindOpen.Data.Elements.IObjectElementSpec.DefinitionFilter
  parent: BindOpen.Data.Elements.IObjectElementSpec
  name: DefinitionFilter
  nameWithType: IObjectElementSpec.DefinitionFilter
  fullName: BindOpen.Data.Elements.IObjectElementSpec.DefinitionFilter
- uid: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified
  name: DefinitionFilterSpecified
  nameWithType: ObjectElementSpec.DefinitionFilterSpecified
  fullName: BindOpen.Data.Elements.ObjectElementSpec.DefinitionFilterSpecified
- uid: BindOpen.Data.Elements.ObjectElementSpec.#ctor*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.#ctor
  name: ObjectElementSpec
  nameWithType: ObjectElementSpec.ObjectElementSpec
  fullName: BindOpen.Data.Elements.ObjectElementSpec.ObjectElementSpec
- uid: BindOpen.Data.Common.AccessibilityLevels
  commentId: T:BindOpen.Data.Common.AccessibilityLevels
  parent: BindOpen.Data.Common
  name: AccessibilityLevels
  nameWithType: AccessibilityLevels
  fullName: BindOpen.Data.Common.AccessibilityLevels
- uid: BindOpen.Data.Common.SpecificationLevels[]
  isExternal: true
  name: SpecificationLevels[]
  nameWithType: SpecificationLevels[]
  fullName: BindOpen.Data.Common.SpecificationLevels[]
  nameWithType.vb: SpecificationLevels()
  fullName.vb: BindOpen.Data.Common.SpecificationLevels()
  name.vb: SpecificationLevels()
  spec.csharp:
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  commentId: M:BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  parent: BindOpen.Data.Elements.DataElementSpec
  isExternal: true
  name: CheckItem(Object, IDataElement)
  nameWithType: DataElementSpec.CheckItem(Object, IDataElement)
  fullName: BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
    name: CheckItem
    nameWithType: DataElementSpec.CheckItem
    fullName: BindOpen.Data.Elements.DataElementSpec.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
    name: CheckItem
    nameWithType: DataElementSpec.CheckItem
    fullName: BindOpen.Data.Elements.DataElementSpec.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.ObjectElementSpec.CheckItem*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.CheckItem
  name: CheckItem
  nameWithType: ObjectElementSpec.CheckItem
  fullName: BindOpen.Data.Elements.ObjectElementSpec.CheckItem
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: CheckItem(Object, IDataElement)
  nameWithType: IDataElementSpec.CheckItem(Object, IDataElement)
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object, BindOpen.Data.Elements.IDataElement)
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
    name: CheckItem
    nameWithType: IDataElementSpec.CheckItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckItem(System.Object,BindOpen.Data.Elements.IDataElement)
    name: CheckItem
    nameWithType: IDataElementSpec.CheckItem
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.IDataElement
  commentId: T:BindOpen.Data.Elements.IDataElement
  parent: BindOpen.Data.Elements
  name: IDataElement
  nameWithType: IDataElement
  fullName: BindOpen.Data.Elements.IDataElement
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  commentId: M:BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  parent: BindOpen.Data.Elements.DataElementSpec
  isExternal: true
  name: CheckElement(IDataElement, String[])
  nameWithType: DataElementSpec.CheckElement(IDataElement, String[])
  fullName: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String[])
  nameWithType.vb: DataElementSpec.CheckElement(IDataElement, String())
  fullName.vb: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String())
  name.vb: CheckElement(IDataElement, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
    name: CheckElement
    nameWithType: DataElementSpec.CheckElement
    fullName: BindOpen.Data.Elements.DataElementSpec.CheckElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
    name: CheckElement
    nameWithType: DataElementSpec.CheckElement
    fullName: BindOpen.Data.Elements.DataElementSpec.CheckElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.ObjectElementSpec.CheckElement*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.CheckElement
  name: CheckElement
  nameWithType: ObjectElementSpec.CheckElement
  fullName: BindOpen.Data.Elements.ObjectElementSpec.CheckElement
- uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  commentId: M:BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
  parent: BindOpen.Data.Elements.IDataElementSpec
  isExternal: true
  name: CheckElement(IDataElement, String[])
  nameWithType: IDataElementSpec.CheckElement(IDataElement, String[])
  fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String[])
  nameWithType.vb: IDataElementSpec.CheckElement(IDataElement, String())
  fullName.vb: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement, System.String())
  name.vb: CheckElement(IDataElement, String())
  spec.csharp:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
    name: CheckElement
    nameWithType: IDataElementSpec.CheckElement
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.IDataElementSpec.CheckElement(BindOpen.Data.Elements.IDataElement,System.String[])
    name: CheckElement
    nameWithType: IDataElementSpec.CheckElement
    fullName: BindOpen.Data.Elements.IDataElementSpec.CheckElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElement
    name: IDataElement
    nameWithType: IDataElement
    fullName: BindOpen.Data.Elements.IDataElement
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Elements.DataElementSpec.Clone
  commentId: M:BindOpen.Data.Elements.DataElementSpec.Clone
  parent: BindOpen.Data.Elements.DataElementSpec
  name: Clone()
  nameWithType: DataElementSpec.Clone()
  fullName: BindOpen.Data.Elements.DataElementSpec.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Elements.DataElementSpec.Clone
    name: Clone
    nameWithType: DataElementSpec.Clone
    fullName: BindOpen.Data.Elements.DataElementSpec.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Elements.DataElementSpec.Clone
    name: Clone
    nameWithType: DataElementSpec.Clone
    fullName: BindOpen.Data.Elements.DataElementSpec.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Elements.ObjectElementSpec.Clone*
  commentId: Overload:BindOpen.Data.Elements.ObjectElementSpec.Clone
  name: Clone
  nameWithType: ObjectElementSpec.Clone
  fullName: BindOpen.Data.Elements.ObjectElementSpec.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
