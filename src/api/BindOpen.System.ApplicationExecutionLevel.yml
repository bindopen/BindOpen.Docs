### YamlMime:ManagedReference
items:
- uid: BindOpen.System.ApplicationExecutionLevel
  commentId: T:BindOpen.System.ApplicationExecutionLevel
  id: ApplicationExecutionLevel
  parent: BindOpen.System
  children:
  - BindOpen.System.ApplicationExecutionLevel.Debug
  - BindOpen.System.ApplicationExecutionLevel.None
  - BindOpen.System.ApplicationExecutionLevel.Production
  - BindOpen.System.ApplicationExecutionLevel.Staging
  - BindOpen.System.ApplicationExecutionLevel.value__
  langs:
  - csharp
  - vb
  name: ApplicationExecutionLevel
  nameWithType: ApplicationExecutionLevel
  fullName: BindOpen.System.ApplicationExecutionLevel
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.System
  summary: "\nThis enumerates the possible levels of execution.\n"
  syntax:
    content: 'public sealed class ApplicationExecutionLevel : Enum'
    content.vb: >-
      Public NotInheritable Class ApplicationExecutionLevel
          Inherits

           Enum
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: BindOpen.System.ApplicationExecutionLevel.value__
  commentId: F:BindOpen.System.ApplicationExecutionLevel.value__
  id: value__
  parent: BindOpen.System.ApplicationExecutionLevel
  langs:
  - csharp
  - vb
  name: value__
  nameWithType: ApplicationExecutionLevel.value__
  fullName: BindOpen.System.ApplicationExecutionLevel.value__
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.System
  syntax:
    content: public int value__
    return:
      type: System.Int32
    content.vb: Public value__ As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.System.ApplicationExecutionLevel.None
  commentId: F:BindOpen.System.ApplicationExecutionLevel.None
  id: None
  parent: BindOpen.System.ApplicationExecutionLevel
  langs:
  - csharp
  - vb
  name: None
  nameWithType: ApplicationExecutionLevel.None
  fullName: BindOpen.System.ApplicationExecutionLevel.None
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.System
  summary: "\nNone\n"
  syntax:
    content: public const ApplicationExecutionLevel None
    return:
      type: BindOpen.System.ApplicationExecutionLevel
    content.vb: Public Const None As ApplicationExecutionLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.ApplicationExecutionLevel.Debug
  commentId: F:BindOpen.System.ApplicationExecutionLevel.Debug
  id: Debug
  parent: BindOpen.System.ApplicationExecutionLevel
  langs:
  - csharp
  - vb
  name: Debug
  nameWithType: ApplicationExecutionLevel.Debug
  fullName: BindOpen.System.ApplicationExecutionLevel.Debug
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.System
  summary: "\nDebug.\n"
  syntax:
    content: public const ApplicationExecutionLevel Debug
    return:
      type: BindOpen.System.ApplicationExecutionLevel
    content.vb: Public Const Debug As ApplicationExecutionLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.ApplicationExecutionLevel.Staging
  commentId: F:BindOpen.System.ApplicationExecutionLevel.Staging
  id: Staging
  parent: BindOpen.System.ApplicationExecutionLevel
  langs:
  - csharp
  - vb
  name: Staging
  nameWithType: ApplicationExecutionLevel.Staging
  fullName: BindOpen.System.ApplicationExecutionLevel.Staging
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.System
  summary: "\nStaging.\n"
  syntax:
    content: public const ApplicationExecutionLevel Staging
    return:
      type: BindOpen.System.ApplicationExecutionLevel
    content.vb: Public Const Staging As ApplicationExecutionLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: BindOpen.System.ApplicationExecutionLevel.Production
  commentId: F:BindOpen.System.ApplicationExecutionLevel.Production
  id: Production
  parent: BindOpen.System.ApplicationExecutionLevel
  langs:
  - csharp
  - vb
  name: Production
  nameWithType: ApplicationExecutionLevel.Production
  fullName: BindOpen.System.ApplicationExecutionLevel.Production
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.System
  summary: "\nProduction.\n"
  syntax:
    content: public const ApplicationExecutionLevel Production
    return:
      type: BindOpen.System.ApplicationExecutionLevel
    content.vb: Public Const Production As ApplicationExecutionLevel
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: BindOpen.System
  commentId: N:BindOpen.System
  isExternal: true
  name: BindOpen.System
  nameWithType: BindOpen.System
  fullName: BindOpen.System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.System.ApplicationExecutionLevel
  commentId: T:BindOpen.System.ApplicationExecutionLevel
  parent: BindOpen.System
  isExternal: true
  name: ApplicationExecutionLevel
  nameWithType: ApplicationExecutionLevel
  fullName: BindOpen.System.ApplicationExecutionLevel
shouldSkipMarkup: true
