### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Stores.BdoDbModelDepot
  commentId: T:BindOpen.Data.Stores.BdoDbModelDepot
  id: BdoDbModelDepot
  parent: BindOpen.Data.Stores
  children:
  - BindOpen.Data.Stores.BdoDbModelDepot.#ctor
  - BindOpen.Data.Stores.BdoDbModelDepot.#ctor(BindOpen.Data.Models.BdoDbModel[])
  - BindOpen.Data.Stores.BdoDbModelDepot.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  - BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.BdoDbModelDepot.GetModel(System.String)
  - BindOpen.Data.Stores.BdoDbModelDepot.GetModel``1
  - BindOpen.Data.Stores.BdoDbModelDepot.Models
  langs:
  - csharp
  - vb
  name: BdoDbModelDepot
  nameWithType: BdoDbModelDepot
  fullName: BindOpen.Data.Stores.BdoDbModelDepot
  type: Class
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: BdoDbModelDepot
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 15
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nThis class represents a database model depot.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class BdoDbModelDepot : TBdoDepot<BdoDbModel>, IBdoDbModelDepot, ITBdoDepot<BdoDbModel>, IDataItemSet<BdoDbModel>, IBdoDepot, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced
    content.vb: >-
      <Serializable>

      Public Class BdoDbModelDepot
          Inherits TBdoDepot(Of BdoDbModel)
          Implements IBdoDbModelDepot, ITBdoDepot(Of BdoDbModel), IDataItemSet(Of BdoDbModel), IBdoDepot, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  implements:
  - BindOpen.Data.Stores.IBdoDbModelDepot
  - BindOpen.Data.Stores.ITBdoDepot{BindOpen.Data.Models.BdoDbModel}
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}
  - BindOpen.Data.Stores.IBdoDepot
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  inheritedMembers:
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}._scope
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.WithScope(BindOpen.Application.Scopes.IBdoScope)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.Scope
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.LazyLoadFunction
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}._items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.ClearItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Remove(System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.HasItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.HasItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.GetItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(System.Collections.Generic.List{BindOpen.Data.Models.BdoDbModel},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Check``1(System.Boolean,{T1},System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Clone
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.OnPropertyChanged(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.ItemsSpecified
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Count
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Item(System.Int32)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Item(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.PropertyChanged
  - BindOpen.Data.Items.IdentifiedDataItem.Key
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Stores.BdoDbModelDepot.Models
  commentId: P:BindOpen.Data.Stores.BdoDbModelDepot.Models
  id: Models
  parent: BindOpen.Data.Stores.BdoDbModelDepot
  langs:
  - csharp
  - vb
  name: Models
  nameWithType: BdoDbModelDepot.Models
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.Models
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Models
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 29
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nQueries of this instance.\n"
  example: []
  syntax:
    content: public List<BdoDbModel> Models { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Models.BdoDbModel}
    content.vb: Public Property Models As List(Of BdoDbModel)
  overload: BindOpen.Data.Stores.BdoDbModelDepot.Models*
  implements:
  - BindOpen.Data.Stores.IBdoDbModelDepot.Models
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDbModelDepot.#ctor
  commentId: M:BindOpen.Data.Stores.BdoDbModelDepot.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Stores.BdoDbModelDepot
  langs:
  - csharp
  - vb
  name: BdoDbModelDepot()
  nameWithType: BdoDbModelDepot.BdoDbModelDepot()
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.BdoDbModelDepot()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: .ctor
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 48
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nInstantiates a new instance of the BdoDbModelDepot class.\n"
  example: []
  syntax:
    content: public BdoDbModelDepot()
    content.vb: Public Sub New
  overload: BindOpen.Data.Stores.BdoDbModelDepot.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDbModelDepot.#ctor(BindOpen.Data.Models.BdoDbModel[])
  commentId: M:BindOpen.Data.Stores.BdoDbModelDepot.#ctor(BindOpen.Data.Models.BdoDbModel[])
  id: '#ctor(BindOpen.Data.Models.BdoDbModel[])'
  parent: BindOpen.Data.Stores.BdoDbModelDepot
  langs:
  - csharp
  - vb
  name: BdoDbModelDepot(BdoDbModel[])
  nameWithType: BdoDbModelDepot.BdoDbModelDepot(BdoDbModel[])
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.BdoDbModelDepot(BindOpen.Data.Models.BdoDbModel[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: .ctor
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 57
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nInstantiates a new instance of the BdoDbModelDepot class.\n"
  example: []
  syntax:
    content: public BdoDbModelDepot(params BdoDbModel[] models)
    parameters:
    - id: models
      type: BindOpen.Data.Models.BdoDbModel[]
    content.vb: Public Sub New(ParamArray models As BdoDbModel())
  overload: BindOpen.Data.Stores.BdoDbModelDepot.#ctor*
  nameWithType.vb: BdoDbModelDepot.BdoDbModelDepot(BdoDbModel())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Stores.BdoDbModelDepot.BdoDbModelDepot(BindOpen.Data.Models.BdoDbModel())
  name.vb: BdoDbModelDepot(BdoDbModel())
- uid: BindOpen.Data.Stores.BdoDbModelDepot.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  commentId: M:BindOpen.Data.Stores.BdoDbModelDepot.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  id: Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  parent: BindOpen.Data.Stores.BdoDbModelDepot
  langs:
  - csharp
  - vb
  name: Add(BdoDbModel, IDataItemSet<BdoDbModel>)
  nameWithType: BdoDbModelDepot.Add(BdoDbModel, IDataItemSet<BdoDbModel>)
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.Add(BindOpen.Data.Models.BdoDbModel, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Add
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 78
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nAdds a new item.\n"
  remarks: The new item must have a name.
  example: []
  syntax:
    content: public override void Add(BdoDbModel item, IDataItemSet<BdoDbModel> referenceCollection = null)
    parameters:
    - id: item
      type: BindOpen.Data.Models.BdoDbModel
      description: The new item to add.
    - id: referenceCollection
      type: BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}
      description: The reference collection to consider.
    content.vb: Public Overrides Sub Add(item As BdoDbModel, referenceCollection As IDataItemSet(Of BdoDbModel) = Nothing)
  overridden: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  overload: BindOpen.Data.Stores.BdoDbModelDepot.Add*
  implements:
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  nameWithType.vb: BdoDbModelDepot.Add(BdoDbModel, IDataItemSet(Of BdoDbModel))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Stores.BdoDbModelDepot.Add(BindOpen.Data.Models.BdoDbModel, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel))
  name.vb: Add(BdoDbModel, IDataItemSet(Of BdoDbModel))
- uid: BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  id: AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.BdoDbModelDepot
  langs:
  - csharp
  - vb
  name: AddFromAssembly(String, IBdoLog)
  nameWithType: BdoDbModelDepot.AddFromAssembly(String, IBdoLog)
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: AddFromAssembly
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 98
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nAdd the items from the specified assembly.\n"
  example: []
  syntax:
    content: public override IBdoDepot AddFromAssembly(string assemblyName, IBdoLog log = null)
    parameters:
    - id: assemblyName
      type: System.String
      description: The name of the assembly.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: BindOpen.Data.Stores.IBdoDepot
    content.vb: Public Overrides Function AddFromAssembly(assemblyName As String, log As IBdoLog = Nothing) As IBdoDepot
  overridden: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly*
  implements:
  - BindOpen.Data.Stores.IBdoDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Stores.BdoDbModelDepot.GetModel``1
  commentId: M:BindOpen.Data.Stores.BdoDbModelDepot.GetModel``1
  id: GetModel``1
  parent: BindOpen.Data.Stores.BdoDbModelDepot
  langs:
  - csharp
  - vb
  name: GetModel<T>()
  nameWithType: BdoDbModelDepot.GetModel<T>()
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.GetModel<T>()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: GetModel
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 123
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nGets the database model of the specified type and with the specified name.\n"
  example: []
  syntax:
    content: >-
      public T GetModel<T>()
          where T : BdoDbModel
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function GetModel(Of T As BdoDbModel) As T
  overload: BindOpen.Data.Stores.BdoDbModelDepot.GetModel*
  implements:
  - BindOpen.Data.Stores.IBdoDbModelDepot.GetModel``1
  nameWithType.vb: BdoDbModelDepot.GetModel(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Stores.BdoDbModelDepot.GetModel(Of T)()
  name.vb: GetModel(Of T)()
- uid: BindOpen.Data.Stores.BdoDbModelDepot.GetModel(System.String)
  commentId: M:BindOpen.Data.Stores.BdoDbModelDepot.GetModel(System.String)
  id: GetModel(System.String)
  parent: BindOpen.Data.Stores.BdoDbModelDepot
  langs:
  - csharp
  - vb
  name: GetModel(String)
  nameWithType: BdoDbModelDepot.GetModel(String)
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.GetModel(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: GetModel
    path: ../src/BindOpen.Databases/Data/Stores/Depots/DbModels/BdoDbModelDepot.cs
    startLine: 135
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Stores
  summary: "\nGets the database model with the specified name.\n"
  example: []
  syntax:
    content: public IBdoDbModel GetModel(string name)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    return:
      type: BindOpen.Data.Models.IBdoDbModel
      description: Returns the database model with the specified name.
    content.vb: Public Function GetModel(name As String) As IBdoDbModel
  overload: BindOpen.Data.Stores.BdoDbModelDepot.GetModel*
  implements:
  - BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Data.Stores
  commentId: N:BindOpen.Data.Stores
  name: BindOpen.Data.Stores
  nameWithType: BindOpen.Data.Stores
  fullName: BindOpen.Data.Stores
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  commentId: T:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<BdoDbModel>
  nameWithType: DataItemSet<BdoDbModel>
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>
  nameWithType.vb: DataItemSet(Of BdoDbModel)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel)
  name.vb: DataItemSet(Of BdoDbModel)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  commentId: T:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  parent: BindOpen.Data.Stores
  definition: BindOpen.Data.Stores.TBdoDepot`1
  name: TBdoDepot<BdoDbModel>
  nameWithType: TBdoDepot<BdoDbModel>
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>
  nameWithType.vb: TBdoDepot(Of BdoDbModel)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel)
  name.vb: TBdoDepot(Of BdoDbModel)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.IBdoDbModelDepot
  commentId: T:BindOpen.Data.Stores.IBdoDbModelDepot
  parent: BindOpen.Data.Stores
  name: IBdoDbModelDepot
  nameWithType: IBdoDbModelDepot
  fullName: BindOpen.Data.Stores.IBdoDbModelDepot
- uid: BindOpen.Data.Stores.ITBdoDepot{BindOpen.Data.Models.BdoDbModel}
  commentId: T:BindOpen.Data.Stores.ITBdoDepot{BindOpen.Data.Models.BdoDbModel}
  parent: BindOpen.Data.Stores
  definition: BindOpen.Data.Stores.ITBdoDepot`1
  name: ITBdoDepot<BdoDbModel>
  nameWithType: ITBdoDepot<BdoDbModel>
  fullName: BindOpen.Data.Stores.ITBdoDepot<BindOpen.Data.Models.BdoDbModel>
  nameWithType.vb: ITBdoDepot(Of BdoDbModel)
  fullName.vb: BindOpen.Data.Stores.ITBdoDepot(Of BindOpen.Data.Models.BdoDbModel)
  name.vb: ITBdoDepot(Of BdoDbModel)
  spec.csharp:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}
  commentId: T:BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<BdoDbModel>
  nameWithType: IDataItemSet<BdoDbModel>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>
  nameWithType.vb: IDataItemSet(Of BdoDbModel)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel)
  name.vb: IDataItemSet(Of BdoDbModel)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.IBdoDepot
  commentId: T:BindOpen.Data.Stores.IBdoDepot
  parent: BindOpen.Data.Stores
  isExternal: true
  name: IBdoDepot
  nameWithType: IBdoDepot
  fullName: BindOpen.Data.Stores.IBdoDepot
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}._scope
  commentId: F:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}._scope
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1._scope
  name: _scope
  nameWithType: TBdoDepot<BdoDbModel>._scope
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>._scope
  nameWithType.vb: TBdoDepot(Of BdoDbModel)._scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel)._scope
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAllAssemblies(IBdoLog)
  nameWithType: TBdoDepot<BdoDbModel>.AddFromAllAssemblies(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of BdoDbModel).AddFromAllAssemblies(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot<BdoDbModel>.AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.AddFromAllAssemblies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot(Of BdoDbModel).AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).AddFromAllAssemblies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAssembly<T1>(IBdoLog)
  nameWithType: TBdoDepot<BdoDbModel>.AddFromAssembly<T1>(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.AddFromAssembly<T1>(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of BdoDbModel).AddFromAssembly(Of T1)(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).AddFromAssembly(Of T1)(BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddFromAssembly(Of T1)(IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly<T1>
    nameWithType: TBdoDepot<BdoDbModel>.AddFromAssembly<T1>
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.AddFromAssembly<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly(Of T1)
    nameWithType: TBdoDepot(Of BdoDbModel).AddFromAssembly(Of T1)
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).AddFromAssembly(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  name: LoadLazy(IBdoLog)
  nameWithType: TBdoDepot<BdoDbModel>.LoadLazy(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of BdoDbModel).LoadLazy(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot<BdoDbModel>.LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.LoadLazy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot(Of BdoDbModel).LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).LoadLazy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.WithScope(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.WithScope(BindOpen.Application.Scopes.IBdoScope)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
  name: WithScope(IBdoScope)
  nameWithType: TBdoDepot<BdoDbModel>.WithScope(IBdoScope)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.WithScope(BindOpen.Application.Scopes.IBdoScope)
  nameWithType.vb: TBdoDepot(Of BdoDbModel).WithScope(IBdoScope)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).WithScope(BindOpen.Application.Scopes.IBdoScope)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot<BdoDbModel>.WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.WithScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot(Of BdoDbModel).WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).WithScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.Scope
  commentId: P:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.Scope
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1.Scope
  name: Scope
  nameWithType: TBdoDepot<BdoDbModel>.Scope
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.Scope
  nameWithType.vb: TBdoDepot(Of BdoDbModel).Scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).Scope
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.LazyLoadFunction
  commentId: P:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.LazyLoadFunction
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1.LazyLoadFunction
  name: LazyLoadFunction
  nameWithType: TBdoDepot<BdoDbModel>.LazyLoadFunction
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.LazyLoadFunction
  nameWithType.vb: TBdoDepot(Of BdoDbModel).LazyLoadFunction
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).LazyLoadFunction
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}._items
  commentId: F:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}._items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<BdoDbModel>._items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>._items
  nameWithType.vb: DataItemSet(Of BdoDbModel)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel)._items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.ClearItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<BdoDbModel>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.ClearItems()
  nameWithType.vb: DataItemSet(Of BdoDbModel).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<BdoDbModel>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of BdoDbModel).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(BdoDbModel[])
  nameWithType: DataItemSet<BdoDbModel>.Add(BdoDbModel[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Add(BindOpen.Data.Models.BdoDbModel[])
  nameWithType.vb: DataItemSet(Of BdoDbModel).Add(BdoDbModel())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add(BindOpen.Data.Models.BdoDbModel())
  name.vb: Add(BdoDbModel())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<BdoDbModel>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of BdoDbModel).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Remove(System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  name: Remove(String[])
  nameWithType: DataItemSet<BdoDbModel>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of BdoDbModel).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<BdoDbModel>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of BdoDbModel).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.HasItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<BdoDbModel>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.HasItems()
  nameWithType.vb: DataItemSet(Of BdoDbModel).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<BdoDbModel>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.HasItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of BdoDbModel).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).HasItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.HasItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  name: HasItem(String)
  nameWithType: DataItemSet<BdoDbModel>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of BdoDbModel).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<BdoDbModel>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.HasItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of BdoDbModel).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).HasItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.GetItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  name: GetItem(String)
  nameWithType: DataItemSet<BdoDbModel>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of BdoDbModel).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<BdoDbModel>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.GetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of BdoDbModel).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).GetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<BdoDbModel>)
  nameWithType: DataItemSet<BdoDbModel>.GetCommonItemKeys(IDataItemSet<BdoDbModel>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>)
  nameWithType.vb: DataItemSet(Of BdoDbModel).GetCommonItemKeys(IDataItemSet(Of BdoDbModel))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel))
  name.vb: GetCommonItemKeys(IDataItemSet(Of BdoDbModel))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<BdoDbModel>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.GetCommonItemKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of BdoDbModel).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).GetCommonItemKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(System.Collections.Generic.List{BindOpen.Data.Models.BdoDbModel},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(System.Collections.Generic.List{BindOpen.Data.Models.BdoDbModel},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(List<BdoDbModel>, IDataItemSet<BdoDbModel>)
  nameWithType: DataItemSet<BdoDbModel>.Add(List<BdoDbModel>, IDataItemSet<BdoDbModel>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Add(System.Collections.Generic.List<BindOpen.Data.Models.BdoDbModel>, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>)
  nameWithType.vb: DataItemSet(Of BdoDbModel).Add(List(Of BdoDbModel), IDataItemSet(Of BdoDbModel))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add(System.Collections.Generic.List(Of BindOpen.Data.Models.BdoDbModel), BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel))
  name.vb: Add(List(Of BdoDbModel), IDataItemSet(Of BdoDbModel))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<BdoDbModel>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of BdoDbModel).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<BdoDbModel>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of BdoDbModel).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<BdoDbModel>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Update<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of BdoDbModel).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Update(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Check``1(System.Boolean,{T1},System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<BdoDbModel>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of BdoDbModel).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<BdoDbModel>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Check<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of BdoDbModel).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Check(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<BdoDbModel>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of BdoDbModel).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<BdoDbModel>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Repair<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of BdoDbModel).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Repair(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<BdoDbModel>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of BdoDbModel).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<BdoDbModel>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of BdoDbModel).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<BdoDbModel>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of BdoDbModel).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<BdoDbModel>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of BdoDbModel).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Clone
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Clone
  name: Clone()
  nameWithType: DataItemSet<BdoDbModel>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Clone()
  nameWithType.vb: DataItemSet(Of BdoDbModel).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<BdoDbModel>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of BdoDbModel).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.OnPropertyChanged(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<BdoDbModel>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of BdoDbModel).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<BdoDbModel>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of BdoDbModel).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Items
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<BdoDbModel>.Items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Items
  nameWithType.vb: DataItemSet(Of BdoDbModel).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.ItemsSpecified
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<BdoDbModel>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of BdoDbModel).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Count
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Count
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<BdoDbModel>.Count
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Count
  nameWithType.vb: DataItemSet(Of BdoDbModel).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Count
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Item(System.Int32)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: DataItemSet<BdoDbModel>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of BdoDbModel).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<BdoDbModel>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of BdoDbModel).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Item(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  name: Item[String]
  nameWithType: DataItemSet<BdoDbModel>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Item[System.String]
  nameWithType.vb: DataItemSet(Of BdoDbModel).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<BdoDbModel>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of BdoDbModel).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.PropertyChanged
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<BdoDbModel>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.PropertyChanged
  nameWithType.vb: DataItemSet(Of BdoDbModel).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).PropertyChanged
- uid: BindOpen.Data.Items.IdentifiedDataItem.Key
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Key
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: Key()
  nameWithType: IdentifiedDataItem.Key()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  isExternal: true
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  isExternal: true
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Items.DataItemSet`1
  commentId: T:BindOpen.Data.Items.DataItemSet`1
  isExternal: true
  name: DataItemSet<T>
  nameWithType: DataItemSet<T>
  fullName: BindOpen.Data.Items.DataItemSet<T>
  nameWithType.vb: DataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)
  name.vb: DataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1
  commentId: T:BindOpen.Data.Stores.TBdoDepot`1
  isExternal: true
  name: TBdoDepot<T>
  nameWithType: TBdoDepot<T>
  fullName: BindOpen.Data.Stores.TBdoDepot<T>
  nameWithType.vb: TBdoDepot(Of T)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T)
  name.vb: TBdoDepot(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.ITBdoDepot`1
  commentId: T:BindOpen.Data.Stores.ITBdoDepot`1
  isExternal: true
  name: ITBdoDepot<T>
  nameWithType: ITBdoDepot<T>
  fullName: BindOpen.Data.Stores.ITBdoDepot<T>
  nameWithType.vb: ITBdoDepot(Of T)
  fullName.vb: BindOpen.Data.Stores.ITBdoDepot(Of T)
  name.vb: ITBdoDepot(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  commentId: T:BindOpen.Data.Items.IDataItemSet`1
  isExternal: true
  name: IDataItemSet<T>
  nameWithType: IDataItemSet<T>
  fullName: BindOpen.Data.Items.IDataItemSet<T>
  nameWithType.vb: IDataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T)
  name.vb: IDataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1._scope
  commentId: F:BindOpen.Data.Stores.TBdoDepot`1._scope
  isExternal: true
  name: _scope
  nameWithType: TBdoDepot<T>._scope
  fullName: BindOpen.Data.Stores.TBdoDepot<T>._scope
  nameWithType.vb: TBdoDepot(Of T)._scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T)._scope
- uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: AddFromAllAssemblies(IBdoLog)
  nameWithType: TBdoDepot<T>.AddFromAllAssemblies(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).AddFromAllAssemblies(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot<T>.AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAllAssemblies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot(Of T).AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAllAssemblies
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: AddFromAssembly<T1>(IBdoLog)
  nameWithType: TBdoDepot<T>.AddFromAssembly<T1>(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly<T1>(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).AddFromAssembly(Of T1)(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly(Of T1)(BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddFromAssembly(Of T1)(IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly<T1>
    nameWithType: TBdoDepot<T>.AddFromAssembly<T1>
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly(Of T1)
    nameWithType: TBdoDepot(Of T).AddFromAssembly(Of T1)
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: LoadLazy(IBdoLog)
  nameWithType: TBdoDepot<T>.LoadLazy(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).LoadLazy(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot<T>.LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.LoadLazy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot(Of T).LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).LoadLazy
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
  isExternal: true
  name: WithScope(IBdoScope)
  nameWithType: TBdoDepot<T>.WithScope(IBdoScope)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.WithScope(BindOpen.Application.Scopes.IBdoScope)
  nameWithType.vb: TBdoDepot(Of T).WithScope(IBdoScope)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).WithScope(BindOpen.Application.Scopes.IBdoScope)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot<T>.WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.WithScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot(Of T).WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).WithScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.Scope
  commentId: P:BindOpen.Data.Stores.TBdoDepot`1.Scope
  isExternal: true
  name: Scope
  nameWithType: TBdoDepot<T>.Scope
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.Scope
  nameWithType.vb: TBdoDepot(Of T).Scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).Scope
- uid: BindOpen.Data.Stores.TBdoDepot`1.LazyLoadFunction
  commentId: P:BindOpen.Data.Stores.TBdoDepot`1.LazyLoadFunction
  isExternal: true
  name: LazyLoadFunction
  nameWithType: TBdoDepot<T>.LazyLoadFunction
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.LazyLoadFunction
  nameWithType.vb: TBdoDepot(Of T).LazyLoadFunction
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).LazyLoadFunction
- uid: BindOpen.Data.Items.DataItemSet`1._items
  commentId: F:BindOpen.Data.Items.DataItemSet`1._items
  isExternal: true
  name: _items
  nameWithType: DataItemSet<T>._items
  fullName: BindOpen.Data.Items.DataItemSet<T>._items
  nameWithType.vb: DataItemSet(Of T)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)._items
- uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.ClearItems
  isExternal: true
  name: ClearItems()
  nameWithType: DataItemSet<T>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems()
  nameWithType.vb: DataItemSet(Of T).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<T>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of T).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).ClearItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  isExternal: true
  name: Add(T[])
  nameWithType: DataItemSet<T>.Add(T[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T[])
  nameWithType.vb: DataItemSet(Of T).Add(T())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T())
  name.vb: Add(T())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  isExternal: true
  name: Remove(String[])
  nameWithType: DataItemSet<T>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of T).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<T>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of T).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItems
  isExternal: true
  name: HasItems()
  nameWithType: DataItemSet<T>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems()
  nameWithType.vb: DataItemSet(Of T).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<T>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of T).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItems
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  isExternal: true
  name: HasItem(String)
  nameWithType: DataItemSet<T>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of T).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<T>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of T).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  isExternal: true
  name: GetItem(String)
  nameWithType: DataItemSet<T>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of T).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<T>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of T).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetItem
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: GetCommonItemKeys(IDataItemSet<T>)
  nameWithType: DataItemSet<T>.GetCommonItemKeys(IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).GetCommonItemKeys(IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: GetCommonItemKeys(IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<T>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of T).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(List<T>, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(List<T>, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(System.Collections.Generic.List<T>, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(List(Of T), IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(System.Collections.Generic.List(Of T), BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(List(Of T), IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<T>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of T).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<T>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of T).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<T>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of T).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<T>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of T).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<T>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<T>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of T).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<T>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<T>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of T).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: DataItemSet<T>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<T>.Clone()
  nameWithType.vb: DataItemSet(Of T).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<T>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of T).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<T>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of T).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<T>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of T).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Items
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Items
  isExternal: true
  name: Items
  nameWithType: DataItemSet<T>.Items
  fullName: BindOpen.Data.Items.DataItemSet<T>.Items
  nameWithType.vb: DataItemSet(Of T).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Items
- uid: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  isExternal: true
  name: ItemsSpecified
  nameWithType: DataItemSet<T>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<T>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of T).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet`1.Count
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Count
  isExternal: true
  name: Count
  nameWithType: DataItemSet<T>.Count
  fullName: BindOpen.Data.Items.DataItemSet<T>.Count
  nameWithType.vb: DataItemSet(Of T).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Count
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: DataItemSet<T>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of T).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: DataItemSet<T>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.String]
  nameWithType.vb: DataItemSet(Of T).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: DataItemSet<T>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<T>.PropertyChanged
  nameWithType.vb: DataItemSet(Of T).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).PropertyChanged
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDbModelDepot.Models*
  commentId: Overload:BindOpen.Data.Stores.BdoDbModelDepot.Models
  name: Models
  nameWithType: BdoDbModelDepot.Models
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.Models
- uid: BindOpen.Data.Stores.IBdoDbModelDepot.Models
  commentId: P:BindOpen.Data.Stores.IBdoDbModelDepot.Models
  parent: BindOpen.Data.Stores.IBdoDbModelDepot
  name: Models
  nameWithType: IBdoDbModelDepot.Models
  fullName: BindOpen.Data.Stores.IBdoDbModelDepot.Models
- uid: System.Collections.Generic.List{BindOpen.Data.Models.BdoDbModel}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Models.BdoDbModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BdoDbModel>
  nameWithType: List<BdoDbModel>
  fullName: System.Collections.Generic.List<BindOpen.Data.Models.BdoDbModel>
  nameWithType.vb: List(Of BdoDbModel)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Models.BdoDbModel)
  name.vb: List(Of BdoDbModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Stores.BdoDbModelDepot.#ctor*
  commentId: Overload:BindOpen.Data.Stores.BdoDbModelDepot.#ctor
  name: BdoDbModelDepot
  nameWithType: BdoDbModelDepot.BdoDbModelDepot
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.BdoDbModelDepot
- uid: BindOpen.Data.Models.BdoDbModel[]
  isExternal: true
  name: BdoDbModel[]
  nameWithType: BdoDbModel[]
  fullName: BindOpen.Data.Models.BdoDbModel[]
  nameWithType.vb: BdoDbModel()
  fullName.vb: BindOpen.Data.Models.BdoDbModel()
  name.vb: BdoDbModel()
  spec.csharp:
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(BdoDbModel, IDataItemSet<BdoDbModel>)
  nameWithType: DataItemSet<BdoDbModel>.Add(BdoDbModel, IDataItemSet<BdoDbModel>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Add(BindOpen.Data.Models.BdoDbModel, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>)
  nameWithType.vb: DataItemSet(Of BdoDbModel).Add(BdoDbModel, IDataItemSet(Of BdoDbModel))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add(BindOpen.Data.Models.BdoDbModel, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel))
  name.vb: Add(BdoDbModel, IDataItemSet(Of BdoDbModel))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<BdoDbModel>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Models.BdoDbModel>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of BdoDbModel).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDbModelDepot.Add*
  commentId: Overload:BindOpen.Data.Stores.BdoDbModelDepot.Add
  name: Add
  nameWithType: BdoDbModelDepot.Add
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.Add
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  commentId: M:BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}.Add(BindOpen.Data.Models.BdoDbModel,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel})
  parent: BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(BdoDbModel, IDataItemSet<BdoDbModel>)
  nameWithType: IDataItemSet<BdoDbModel>.Add(BdoDbModel, IDataItemSet<BdoDbModel>)
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>.Add(BindOpen.Data.Models.BdoDbModel, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>)
  nameWithType.vb: IDataItemSet(Of BdoDbModel).Add(BdoDbModel, IDataItemSet(Of BdoDbModel))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add(BindOpen.Data.Models.BdoDbModel, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel))
  name.vb: Add(BdoDbModel, IDataItemSet(Of BdoDbModel))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet<BdoDbModel>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Models.BdoDbModel>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet(Of BdoDbModel).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Models.BdoDbModel).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Models.BdoDbModel
    name: BdoDbModel
    nameWithType: BdoDbModel
    fullName: BindOpen.Data.Models.BdoDbModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Models.BdoDbModel
  commentId: T:BindOpen.Data.Models.BdoDbModel
  parent: BindOpen.Data.Models
  name: BdoDbModel
  nameWithType: BdoDbModel
  fullName: BindOpen.Data.Models.BdoDbModel
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(T, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(T, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(T, IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T, BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(T, IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(T, IDataItemSet<T>)
  nameWithType: IDataItemSet<T>.Add(T, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.IDataItemSet<T>.Add(T, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: IDataItemSet(Of T).Add(T, IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T).Add(T, BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(T, IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet<T>.Add
    fullName: BindOpen.Data.Items.IDataItemSet<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: IDataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.IDataItemSet(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Models
  commentId: N:BindOpen.Data.Models
  name: BindOpen.Data.Models
  nameWithType: BindOpen.Data.Models
  fullName: BindOpen.Data.Models
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Models.BdoDbModel}
  definition: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAssembly(String, IBdoLog)
  nameWithType: TBdoDepot<BdoDbModel>.AddFromAssembly(String, IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of BdoDbModel).AddFromAssembly(String, IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot<BdoDbModel>.AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Models.BdoDbModel>.AddFromAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot(Of BdoDbModel).AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Models.BdoDbModel).AddFromAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly*
  commentId: Overload:BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly
  name: AddFromAssembly
  nameWithType: BdoDbModelDepot.AddFromAssembly
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.AddFromAssembly
- uid: BindOpen.Data.Stores.IBdoDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.IBdoDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.IBdoDepot
  isExternal: true
  name: AddFromAssembly(String, IBdoLog)
  nameWithType: IBdoDepot.AddFromAssembly(String, IBdoLog)
  fullName: BindOpen.Data.Stores.IBdoDepot.AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: IBdoDepot.AddFromAssembly
    fullName: BindOpen.Data.Stores.IBdoDepot.AddFromAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDepot.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: IBdoDepot.AddFromAssembly
    fullName: BindOpen.Data.Stores.IBdoDepot.AddFromAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: AddFromAssembly(String, IBdoLog)
  nameWithType: TBdoDepot<T>.AddFromAssembly(String, IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).AddFromAssembly(String, IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot<T>.AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot(Of T).AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  isExternal: true
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Stores.BdoDbModelDepot.GetModel*
  commentId: Overload:BindOpen.Data.Stores.BdoDbModelDepot.GetModel
  name: GetModel
  nameWithType: BdoDbModelDepot.GetModel
  fullName: BindOpen.Data.Stores.BdoDbModelDepot.GetModel
- uid: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel``1
  commentId: M:BindOpen.Data.Stores.IBdoDbModelDepot.GetModel``1
  parent: BindOpen.Data.Stores.IBdoDbModelDepot
  name: GetModel<T>()
  nameWithType: IBdoDbModelDepot.GetModel<T>()
  fullName: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel<T>()
  nameWithType.vb: IBdoDbModelDepot.GetModel(Of T)()
  fullName.vb: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(Of T)()
  name.vb: GetModel(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel``1
    name: GetModel<T>
    nameWithType: IBdoDbModelDepot.GetModel<T>
    fullName: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel``1
    name: GetModel(Of T)
    nameWithType: IBdoDbModelDepot.GetModel(Of T)
    fullName: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(System.String)
  commentId: M:BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(System.String)
  parent: BindOpen.Data.Stores.IBdoDbModelDepot
  isExternal: true
  name: GetModel(String)
  nameWithType: IBdoDbModelDepot.GetModel(String)
  fullName: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(System.String)
    name: GetModel
    nameWithType: IBdoDbModelDepot.GetModel
    fullName: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel(System.String)
    name: GetModel
    nameWithType: IBdoDbModelDepot.GetModel
    fullName: BindOpen.Data.Stores.IBdoDbModelDepot.GetModel
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Models.IBdoDbModel
  commentId: T:BindOpen.Data.Models.IBdoDbModel
  parent: BindOpen.Data.Models
  name: IBdoDbModel
  nameWithType: IBdoDbModel
  fullName: BindOpen.Data.Models.IBdoDbModel
shouldSkipMarkup: true
