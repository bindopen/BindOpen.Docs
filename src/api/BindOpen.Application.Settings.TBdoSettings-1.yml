### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Settings.TBdoSettings`1
  commentId: T:BindOpen.Application.Settings.TBdoSettings`1
  id: TBdoSettings`1
  parent: BindOpen.Application.Settings
  children:
  - BindOpen.Application.Settings.TBdoSettings`1.#ctor
  - BindOpen.Application.Settings.TBdoSettings`1.#ctor(BindOpen.Application.Scopes.IBdoScope,`0)
  - BindOpen.Application.Settings.TBdoSettings`1._configuration
  - BindOpen.Application.Settings.TBdoSettings`1._scope
  - BindOpen.Application.Settings.TBdoSettings`1.BdoScope
  - BindOpen.Application.Settings.TBdoSettings`1.Configuration
  - BindOpen.Application.Settings.TBdoSettings`1.Dispose(System.Boolean)
  - BindOpen.Application.Settings.TBdoSettings`1.Get(System.String)
  - BindOpen.Application.Settings.TBdoSettings`1.Get``1(System.String)
  - BindOpen.Application.Settings.TBdoSettings`1.GetProperty``1(``0,System.String)
  - BindOpen.Application.Settings.TBdoSettings`1.GetProperty``1(System.String)
  - BindOpen.Application.Settings.TBdoSettings`1.Key
  - BindOpen.Application.Settings.TBdoSettings`1.Set(System.String,System.Object)
  - BindOpen.Application.Settings.TBdoSettings`1.SetProperty(System.Object,System.String)
  - BindOpen.Application.Settings.TBdoSettings`1.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  - BindOpen.Application.Settings.TBdoSettings`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Application.Settings.TBdoSettings`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  langs:
  - csharp
  - vb
  name: TBdoSettings<Q>
  nameWithType: TBdoSettings<Q>
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nThis class represents a configuration.\n"
  syntax:
    content: 'public class TBdoSettings<Q> : DataItem, ITBdoSettings<Q>, IBdoSettings, IDataItem, ICloneable, IDisposable, IReferenced where Q : class, IBdoBaseConfiguration, new()'
    typeParameters:
    - id: Q
    content.vb: >-
      Public Class TBdoSettings(Of Q As {Class, IBdoBaseConfiguration, New})
          Inherits DataItem
          Implements ITBdoSettings(Of Q), IBdoSettings, IDataItem, ICloneable, IDisposable, IReferenced
  inheritance:
  - System.Object
  derivedClasses:
  - BindOpen.Application.Settings.BdoDefaultSettings
  - BindOpen.Application.Settings.BdoHostSettings
  - BindOpen.Application.Settings.TBdoAppSettings`1
  implements:
  - BindOpen.Application.Settings.ITBdoSettings{{Q}}
  - BindOpen.Application.Settings.IBdoSettings
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IReferenced
  nameWithType.vb: TBdoSettings(Of Q)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q)
  name.vb: TBdoSettings(Of Q)
- uid: BindOpen.Application.Settings.TBdoSettings`1._scope
  commentId: F:BindOpen.Application.Settings.TBdoSettings`1._scope
  id: _scope
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: _scope
  nameWithType: TBdoSettings<Q>._scope
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>._scope
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nThe scope of this instance.\n"
  syntax:
    content: protected IBdoScope _scope
    return:
      type: BindOpen.Application.Scopes.IBdoScope
    content.vb: Protected _scope As IBdoScope
  nameWithType.vb: TBdoSettings(Of Q)._scope
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q)._scope
- uid: BindOpen.Application.Settings.TBdoSettings`1._configuration
  commentId: F:BindOpen.Application.Settings.TBdoSettings`1._configuration
  id: _configuration
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: _configuration
  nameWithType: TBdoSettings<Q>._configuration
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>._configuration
  type: Field
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nThe configuration of this instance.\n"
  syntax:
    content: protected Q _configuration
    return:
      type: '{Q}'
    content.vb: Protected _configuration As Q
  nameWithType.vb: TBdoSettings(Of Q)._configuration
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q)._configuration
- uid: BindOpen.Application.Settings.TBdoSettings`1.#ctor
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.#ctor
  id: '#ctor'
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: TBdoSettings()
  nameWithType: TBdoSettings<Q>.TBdoSettings()
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.TBdoSettings()
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nInstantiates a new instance of the TBdoSettings class.\n"
  syntax:
    content: public TBdoSettings()
    content.vb: Public Sub New
  overload: BindOpen.Application.Settings.TBdoSettings`1.#ctor*
  nameWithType.vb: TBdoSettings(Of Q).TBdoSettings()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).TBdoSettings()
- uid: BindOpen.Application.Settings.TBdoSettings`1.#ctor(BindOpen.Application.Scopes.IBdoScope,`0)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.#ctor(BindOpen.Application.Scopes.IBdoScope,`0)
  id: '#ctor(BindOpen.Application.Scopes.IBdoScope,`0)'
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: TBdoSettings(IBdoScope, Q)
  nameWithType: TBdoSettings<Q>.TBdoSettings(IBdoScope, Q)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.TBdoSettings(BindOpen.Application.Scopes.IBdoScope, Q)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nInstantiates a new instance of the TBdoSettings class.\n"
  syntax:
    content: public TBdoSettings(IBdoScope scope, Q configuration)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: configuration
      type: '{Q}'
      description: The configuration to consider.
    content.vb: Public Sub New(scope As IBdoScope, configuration As Q)
  overload: BindOpen.Application.Settings.TBdoSettings`1.#ctor*
  nameWithType.vb: TBdoSettings(Of Q).TBdoSettings(IBdoScope, Q)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).TBdoSettings(BindOpen.Application.Scopes.IBdoScope, Q)
- uid: BindOpen.Application.Settings.TBdoSettings`1.Key
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.Key
  id: Key
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: Key()
  nameWithType: TBdoSettings<Q>.Key()
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Key()
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nReturns the key of this instance.\n"
  syntax:
    content: public string Key()
    return:
      type: System.String
    content.vb: Public Function Key As String
  overload: BindOpen.Application.Settings.TBdoSettings`1.Key*
  nameWithType.vb: TBdoSettings(Of Q).Key()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Key()
- uid: BindOpen.Application.Settings.TBdoSettings`1.Get``1(System.String)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.Get``1(System.String)
  id: Get``1(System.String)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: Get<T>(String)
  nameWithType: TBdoSettings<Q>.Get<T>(String)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Get<T>(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nGets the specified value.\n"
  syntax:
    content: public T Get<T>(string name)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Get(Of T)(name As String) As T
  overload: BindOpen.Application.Settings.TBdoSettings`1.Get*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
  nameWithType.vb: TBdoSettings(Of Q).Get(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
- uid: BindOpen.Application.Settings.TBdoSettings`1.Get(System.String)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.Get(System.String)
  id: Get(System.String)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: Get(String)
  nameWithType: TBdoSettings<Q>.Get(String)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Get(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nGets the specified value.\n"
  syntax:
    content: public object Get(string name)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    return:
      type: System.Object
    content.vb: Public Function Get(name As String) As Object
  overload: BindOpen.Application.Settings.TBdoSettings`1.Get*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  nameWithType.vb: TBdoSettings(Of Q).Get(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Get(System.String)
- uid: BindOpen.Application.Settings.TBdoSettings`1.GetProperty``1(System.String)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.GetProperty``1(System.String)
  id: GetProperty``1(System.String)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: GetProperty<T>(String)
  nameWithType: TBdoSettings<Q>.GetProperty<T>(String)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.GetProperty<T>(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nGets the specified value.\n"
  syntax:
    content: public T GetProperty<T>(string propertyName = null)
    parameters:
    - id: propertyName
      type: System.String
      description: The calling property name to consider.
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetProperty(Of T)(propertyName As String = Nothing) As T
  overload: BindOpen.Application.Settings.TBdoSettings`1.GetProperty*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
  nameWithType.vb: TBdoSettings(Of Q).GetProperty(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
- uid: BindOpen.Application.Settings.TBdoSettings`1.GetProperty``1(``0,System.String)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.GetProperty``1(``0,System.String)
  id: GetProperty``1(``0,System.String)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: GetProperty<T>(T, String)
  nameWithType: TBdoSettings<Q>.GetProperty<T>(T, String)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.GetProperty<T>(T, System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nGets the specified value.\n"
  syntax:
    content: >-
      public T GetProperty<T>(T defaultValue, string propertyName = null)
          where T : struct, IConvertible, ValueType
    parameters:
    - id: defaultValue
      type: '{T}'
      description: The default value to consider.
    - id: propertyName
      type: System.String
      description: The calling property name to consider.
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetProperty(Of T As {Structure, IConvertible, ValueType})(defaultValue As T, propertyName As String = Nothing) As T
  overload: BindOpen.Application.Settings.TBdoSettings`1.GetProperty*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.GetProperty``1({T},System.String)
  nameWithType.vb: TBdoSettings(Of Q).GetProperty(Of T)(T, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).GetProperty(Of T)(T, System.String)
  name.vb: GetProperty(Of T)(T, String)
- uid: BindOpen.Application.Settings.TBdoSettings`1.Set(System.String,System.Object)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.Set(System.String,System.Object)
  id: Set(System.String,System.Object)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: Set(String, Object)
  nameWithType: TBdoSettings<Q>.Set(String, Object)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Set(System.String, System.Object)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSets the specified value.\n"
  syntax:
    content: public void Set(string name, object value)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    - id: value
      type: System.Object
      description: The value to set.
    content.vb: Public Sub Set(name As String, value As Object)
  overload: BindOpen.Application.Settings.TBdoSettings`1.Set*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
  nameWithType.vb: TBdoSettings(Of Q).Set(String, Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Set(System.String, System.Object)
- uid: BindOpen.Application.Settings.TBdoSettings`1.SetProperty(System.Object,System.String)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.SetProperty(System.Object,System.String)
  id: SetProperty(System.Object,System.String)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: SetProperty(Object, String)
  nameWithType: TBdoSettings<Q>.SetProperty(Object, String)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.SetProperty(System.Object, System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nSets the specified value.\n"
  syntax:
    content: public void SetProperty(object value, string propertyName = null)
    parameters:
    - id: value
      type: System.Object
      description: The value to set.
    - id: propertyName
      type: System.String
      description: The calling property name to consider.
    content.vb: Public Sub SetProperty(value As Object, propertyName As String = Nothing)
  overload: BindOpen.Application.Settings.TBdoSettings`1.SetProperty*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
  nameWithType.vb: TBdoSettings(Of Q).SetProperty(Object, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).SetProperty(System.Object, System.String)
- uid: BindOpen.Application.Settings.TBdoSettings`1.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  id: UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: UpdateFromFile(String, SpecificationLevels[], IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  nameWithType: TBdoSettings<Q>.UpdateFromFile(String, SpecificationLevels[], IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.UpdateFromFile(System.String, BindOpen.Data.Common.SpecificationLevels[], BindOpen.Data.Elements.IDataElementSpecSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, System.Xml.Schema.XmlSchemaSet)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nLoads the application settings of this instance.\n"
  syntax:
    content: public virtual IBdoLog UpdateFromFile(string filePath, SpecificationLevels[] specificationLevels = null, IDataElementSpecSet specificationSet = null, IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, XmlSchemaSet xmlSchemaSet = null)
    parameters:
    - id: filePath
      type: System.String
      description: The file path to consider.
    - id: specificationLevels
      type: BindOpen.Data.Common.SpecificationLevels[]
      description: The specification levels to consider.
    - id: specificationSet
      type: BindOpen.Data.Elements.IDataElementSpecSet
      description: The specification set to consider.
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The script variable set to consider.
    - id: xmlSchemaSet
      type: System.Xml.Schema.XmlSchemaSet
      description: The XML schema set to consider for checking.
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the loading log.
    content.vb: Public Overridable Function UpdateFromFile(filePath As String, specificationLevels As SpecificationLevels() = Nothing, specificationSet As IDataElementSpecSet = Nothing, scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, xmlSchemaSet As XmlSchemaSet = Nothing) As IBdoLog
  overload: BindOpen.Application.Settings.TBdoSettings`1.UpdateFromFile*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  nameWithType.vb: TBdoSettings(Of Q).UpdateFromFile(String, SpecificationLevels(), IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).UpdateFromFile(System.String, BindOpen.Data.Common.SpecificationLevels(), BindOpen.Data.Elements.IDataElementSpecSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, System.Xml.Schema.XmlSchemaSet)
  name.vb: UpdateFromFile(String, SpecificationLevels(), IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
- uid: BindOpen.Application.Settings.TBdoSettings`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: TBdoSettings<Q>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nUpdates information for storage.\n"
  syntax:
    content: public override void UpdateStorageInfo(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateStorageInfo(log As IBdoLog = Nothing)
  overload: BindOpen.Application.Settings.TBdoSettings`1.UpdateStorageInfo*
  nameWithType.vb: TBdoSettings(Of Q).UpdateStorageInfo(IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
- uid: BindOpen.Application.Settings.TBdoSettings`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: TBdoSettings<Q>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nUpdates information for runtime.\n"
  syntax:
    content: public override void UpdateRuntimeInfo(IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The set of script variables to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateRuntimeInfo(scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing)
  overload: BindOpen.Application.Settings.TBdoSettings`1.UpdateRuntimeInfo*
  nameWithType.vb: TBdoSettings(Of Q).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
- uid: BindOpen.Application.Settings.TBdoSettings`1.Dispose(System.Boolean)
  commentId: M:BindOpen.Application.Settings.TBdoSettings`1.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: TBdoSettings<Q>.Dispose(Boolean)
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Dispose(System.Boolean)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nDisposes this instance. \n"
  syntax:
    content: protected override void Dispose(bool isDisposing)
    parameters:
    - id: isDisposing
      type: System.Boolean
    content.vb: Protected Overrides Sub Dispose(isDisposing As Boolean)
  overload: BindOpen.Application.Settings.TBdoSettings`1.Dispose*
  nameWithType.vb: TBdoSettings(Of Q).Dispose(Boolean)
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Dispose(System.Boolean)
- uid: BindOpen.Application.Settings.TBdoSettings`1.BdoScope
  commentId: P:BindOpen.Application.Settings.TBdoSettings`1.BdoScope
  id: BdoScope
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: BdoScope
  nameWithType: TBdoSettings<Q>.BdoScope
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.BdoScope
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nThe application scope of this instance.\n"
  syntax:
    content: public IBdoScope BdoScope { get; }
    parameters: []
    return:
      type: BindOpen.Application.Scopes.IBdoScope
    content.vb: Public ReadOnly Property BdoScope As IBdoScope
  overload: BindOpen.Application.Settings.TBdoSettings`1.BdoScope*
  implements:
  - BindOpen.Application.Settings.IBdoSettings.BdoScope
  nameWithType.vb: TBdoSettings(Of Q).BdoScope
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).BdoScope
- uid: BindOpen.Application.Settings.TBdoSettings`1.Configuration
  commentId: P:BindOpen.Application.Settings.TBdoSettings`1.Configuration
  id: Configuration
  parent: BindOpen.Application.Settings.TBdoSettings`1
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: TBdoSettings<Q>.Configuration
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Configuration
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Settings
  summary: "\nThe item of this instance.\n"
  syntax:
    content: public Q Configuration { get; }
    parameters: []
    return:
      type: '{Q}'
    content.vb: Public ReadOnly Property Configuration As Q
  overload: BindOpen.Application.Settings.TBdoSettings`1.Configuration*
  implements:
  - BindOpen.Application.Settings.ITBdoSettings{{Q}}.Configuration
  nameWithType.vb: TBdoSettings(Of Q).Configuration
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Configuration
references:
- uid: BindOpen.Application.Settings
  commentId: N:BindOpen.Application.Settings
  isExternal: true
  name: BindOpen.Application.Settings
  nameWithType: BindOpen.Application.Settings
  fullName: BindOpen.Application.Settings
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Application.Settings.ITBdoSettings{{Q}}
  commentId: T:BindOpen.Application.Settings.ITBdoSettings{`0}
  parent: BindOpen.Application.Settings
  definition: BindOpen.Application.Settings.ITBdoSettings`1
  name: ITBdoSettings<Q>
  nameWithType: ITBdoSettings<Q>
  fullName: BindOpen.Application.Settings.ITBdoSettings<Q>
  nameWithType.vb: ITBdoSettings(Of Q)
  fullName.vb: BindOpen.Application.Settings.ITBdoSettings(Of Q)
  name.vb: ITBdoSettings(Of Q)
  spec.csharp:
  - uid: BindOpen.Application.Settings.ITBdoSettings`1
    name: ITBdoSettings
    nameWithType: ITBdoSettings
    fullName: BindOpen.Application.Settings.ITBdoSettings
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Q
    nameWithType: Q
    fullName: Q
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Settings.ITBdoSettings`1
    name: ITBdoSettings
    nameWithType: ITBdoSettings
    fullName: BindOpen.Application.Settings.ITBdoSettings
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Q
    nameWithType: Q
    fullName: Q
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings
  commentId: T:BindOpen.Application.Settings.IBdoSettings
  parent: BindOpen.Application.Settings
  isExternal: true
  name: IBdoSettings
  nameWithType: IBdoSettings
  fullName: BindOpen.Application.Settings.IBdoSettings
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Settings.ITBdoSettings`1
  commentId: T:BindOpen.Application.Settings.ITBdoSettings`1
  isExternal: true
  name: ITBdoSettings<Q>
  nameWithType: ITBdoSettings<Q>
  fullName: BindOpen.Application.Settings.ITBdoSettings<Q>
  nameWithType.vb: ITBdoSettings(Of Q)
  fullName.vb: BindOpen.Application.Settings.ITBdoSettings(Of Q)
  name.vb: ITBdoSettings(Of Q)
  spec.csharp:
  - uid: BindOpen.Application.Settings.ITBdoSettings`1
    name: ITBdoSettings
    nameWithType: ITBdoSettings
    fullName: BindOpen.Application.Settings.ITBdoSettings
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: Q
    nameWithType: Q
    fullName: Q
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Application.Settings.ITBdoSettings`1
    name: ITBdoSettings
    nameWithType: ITBdoSettings
    fullName: BindOpen.Application.Settings.ITBdoSettings
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: Q
    nameWithType: Q
    fullName: Q
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope
  isExternal: true
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: '{Q}'
  commentId: '!:Q'
  definition: Q
  name: Q
  nameWithType: Q
  fullName: Q
- uid: Q
  name: Q
  nameWithType: Q
  fullName: Q
- uid: BindOpen.Application.Settings.TBdoSettings`1.#ctor*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.#ctor
  isExternal: true
  name: TBdoSettings
  nameWithType: TBdoSettings<Q>.TBdoSettings
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.TBdoSettings
  nameWithType.vb: TBdoSettings(Of Q).TBdoSettings
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).TBdoSettings
- uid: BindOpen.Application.Settings.TBdoSettings`1.Key*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.Key
  isExternal: true
  name: Key
  nameWithType: TBdoSettings<Q>.Key
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Key
  nameWithType.vb: TBdoSettings(Of Q).Key
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Settings.TBdoSettings`1.Get*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.Get
  isExternal: true
  name: Get
  nameWithType: TBdoSettings<Q>.Get
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Get
  nameWithType.vb: TBdoSettings(Of Q).Get
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Get
- uid: BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: Get<T>(String)
  nameWithType: IBdoSettings.Get<T>(String)
  fullName: BindOpen.Application.Settings.IBdoSettings.Get<T>(System.String)
  nameWithType.vb: IBdoSettings.Get(Of T)(String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.Get(Of T)(System.String)
  name.vb: Get(Of T)(String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
    name: Get<T>
    nameWithType: IBdoSettings.Get<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.Get<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get``1(System.String)
    name: Get(Of T)
    nameWithType: IBdoSettings.Get(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.Get(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: Get(String)
  nameWithType: IBdoSettings.Get(String)
  fullName: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
    name: Get
    nameWithType: IBdoSettings.Get
    fullName: BindOpen.Application.Settings.IBdoSettings.Get
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.Get(System.String)
    name: Get
    nameWithType: IBdoSettings.Get
    fullName: BindOpen.Application.Settings.IBdoSettings.Get
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.TBdoSettings`1.GetProperty*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.GetProperty
  isExternal: true
  name: GetProperty
  nameWithType: TBdoSettings<Q>.GetProperty
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.GetProperty
  nameWithType.vb: TBdoSettings(Of Q).GetProperty
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).GetProperty
- uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: GetProperty<T>(String)
  nameWithType: IBdoSettings.GetProperty<T>(String)
  fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>(System.String)
  nameWithType.vb: IBdoSettings.GetProperty(Of T)(String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)(System.String)
  name.vb: GetProperty(Of T)(String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
    name: GetProperty<T>
    nameWithType: IBdoSettings.GetProperty<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(System.String)
    name: GetProperty(Of T)
    nameWithType: IBdoSettings.GetProperty(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1({T},System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  definition: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  name: GetProperty<T>(T, String)
  nameWithType: IBdoSettings.GetProperty<T>(T, String)
  fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>(T, System.String)
  nameWithType.vb: IBdoSettings.GetProperty(Of T)(T, String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)(T, System.String)
  name.vb: GetProperty(Of T)(T, String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty<T>
    nameWithType: IBdoSettings.GetProperty<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty(Of T)
    nameWithType: IBdoSettings.GetProperty(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
  isExternal: true
  name: GetProperty<T>(T, String)
  nameWithType: IBdoSettings.GetProperty<T>(T, String)
  fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>(T, System.String)
  nameWithType.vb: IBdoSettings.GetProperty(Of T)(T, String)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)(T, System.String)
  name.vb: GetProperty(Of T)(T, String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty<T>
    nameWithType: IBdoSettings.GetProperty<T>
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.GetProperty``1(``0,System.String)
    name: GetProperty(Of T)
    nameWithType: IBdoSettings.GetProperty(Of T)
    fullName: BindOpen.Application.Settings.IBdoSettings.GetProperty(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.TBdoSettings`1.Set*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.Set
  isExternal: true
  name: Set
  nameWithType: TBdoSettings<Q>.Set
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Set
  nameWithType.vb: TBdoSettings(Of Q).Set
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Set
- uid: BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: Set(String, Object)
  nameWithType: IBdoSettings.Set(String, Object)
  fullName: BindOpen.Application.Settings.IBdoSettings.Set(System.String, System.Object)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
    name: Set
    nameWithType: IBdoSettings.Set
    fullName: BindOpen.Application.Settings.IBdoSettings.Set
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.Set(System.String,System.Object)
    name: Set
    nameWithType: IBdoSettings.Set
    fullName: BindOpen.Application.Settings.IBdoSettings.Set
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.TBdoSettings`1.SetProperty*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.SetProperty
  isExternal: true
  name: SetProperty
  nameWithType: TBdoSettings<Q>.SetProperty
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.SetProperty
  nameWithType.vb: TBdoSettings(Of Q).SetProperty
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).SetProperty
- uid: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: SetProperty(Object, String)
  nameWithType: IBdoSettings.SetProperty(Object, String)
  fullName: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
    name: SetProperty
    nameWithType: IBdoSettings.SetProperty
    fullName: BindOpen.Application.Settings.IBdoSettings.SetProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.SetProperty(System.Object,System.String)
    name: SetProperty
    nameWithType: IBdoSettings.SetProperty
    fullName: BindOpen.Application.Settings.IBdoSettings.SetProperty
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Settings.TBdoSettings`1.UpdateFromFile*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.UpdateFromFile
  isExternal: true
  name: UpdateFromFile
  nameWithType: TBdoSettings<Q>.UpdateFromFile
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.UpdateFromFile
  nameWithType.vb: TBdoSettings(Of Q).UpdateFromFile
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).UpdateFromFile
- uid: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  commentId: M:BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: UpdateFromFile(String, SpecificationLevels[], IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  nameWithType: IBdoSettings.UpdateFromFile(String, SpecificationLevels[], IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  fullName: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String, BindOpen.Data.Common.SpecificationLevels[], BindOpen.Data.Elements.IDataElementSpecSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, System.Xml.Schema.XmlSchemaSet)
  nameWithType.vb: IBdoSettings.UpdateFromFile(String, SpecificationLevels(), IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  fullName.vb: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String, BindOpen.Data.Common.SpecificationLevels(), BindOpen.Data.Elements.IDataElementSpecSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, System.Xml.Schema.XmlSchemaSet)
  name.vb: UpdateFromFile(String, SpecificationLevels(), IDataElementSpecSet, IBdoScope, IBdoScriptVariableSet, XmlSchemaSet)
  spec.csharp:
  - uid: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
    name: UpdateFromFile
    nameWithType: IBdoSettings.UpdateFromFile
    fullName: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSpecSet
    name: IDataElementSpecSet
    nameWithType: IDataElementSpecSet
    fullName: BindOpen.Data.Elements.IDataElementSpecSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.Schema.XmlSchemaSet
    name: XmlSchemaSet
    nameWithType: XmlSchemaSet
    fullName: System.Xml.Schema.XmlSchemaSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile(System.String,BindOpen.Data.Common.SpecificationLevels[],BindOpen.Data.Elements.IDataElementSpecSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,System.Xml.Schema.XmlSchemaSet)
    name: UpdateFromFile
    nameWithType: IBdoSettings.UpdateFromFile
    fullName: BindOpen.Application.Settings.IBdoSettings.UpdateFromFile
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSpecSet
    name: IDataElementSpecSet
    nameWithType: IDataElementSpecSet
    fullName: BindOpen.Data.Elements.IDataElementSpecSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Xml.Schema.XmlSchemaSet
    name: XmlSchemaSet
    nameWithType: XmlSchemaSet
    fullName: System.Xml.Schema.XmlSchemaSet
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.SpecificationLevels[]
  isExternal: true
  name: SpecificationLevels[]
  nameWithType: SpecificationLevels[]
  fullName: BindOpen.Data.Common.SpecificationLevels[]
  nameWithType.vb: SpecificationLevels()
  fullName.vb: BindOpen.Data.Common.SpecificationLevels()
  name.vb: SpecificationLevels()
  spec.csharp:
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Common.SpecificationLevels
    name: SpecificationLevels
    nameWithType: SpecificationLevels
    fullName: BindOpen.Data.Common.SpecificationLevels
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Elements.IDataElementSpecSet
  isExternal: true
  name: IDataElementSpecSet
  nameWithType: IDataElementSpecSet
  fullName: BindOpen.Data.Elements.IDataElementSpecSet
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  isExternal: true
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: System.Xml.Schema.XmlSchemaSet
  isExternal: true
  name: XmlSchemaSet
  nameWithType: XmlSchemaSet
  fullName: System.Xml.Schema.XmlSchemaSet
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Application.Settings.TBdoSettings`1.UpdateStorageInfo*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.UpdateStorageInfo
  isExternal: true
  name: UpdateStorageInfo
  nameWithType: TBdoSettings<Q>.UpdateStorageInfo
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.UpdateStorageInfo
  nameWithType.vb: TBdoSettings(Of Q).UpdateStorageInfo
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).UpdateStorageInfo
- uid: BindOpen.Application.Settings.TBdoSettings`1.UpdateRuntimeInfo*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.UpdateRuntimeInfo
  isExternal: true
  name: UpdateRuntimeInfo
  nameWithType: TBdoSettings<Q>.UpdateRuntimeInfo
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.UpdateRuntimeInfo
  nameWithType.vb: TBdoSettings(Of Q).UpdateRuntimeInfo
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).UpdateRuntimeInfo
- uid: BindOpen.Application.Settings.TBdoSettings`1.Dispose*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.Dispose
  isExternal: true
  name: Dispose
  nameWithType: TBdoSettings<Q>.Dispose
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Dispose
  nameWithType.vb: TBdoSettings(Of Q).Dispose
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Dispose
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Settings.TBdoSettings`1.BdoScope*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.BdoScope
  isExternal: true
  name: BdoScope
  nameWithType: TBdoSettings<Q>.BdoScope
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.BdoScope
  nameWithType.vb: TBdoSettings(Of Q).BdoScope
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).BdoScope
- uid: BindOpen.Application.Settings.IBdoSettings.BdoScope
  commentId: P:BindOpen.Application.Settings.IBdoSettings.BdoScope
  parent: BindOpen.Application.Settings.IBdoSettings
  isExternal: true
  name: BdoScope
  nameWithType: IBdoSettings.BdoScope
  fullName: BindOpen.Application.Settings.IBdoSettings.BdoScope
- uid: BindOpen.Application.Settings.TBdoSettings`1.Configuration*
  commentId: Overload:BindOpen.Application.Settings.TBdoSettings`1.Configuration
  isExternal: true
  name: Configuration
  nameWithType: TBdoSettings<Q>.Configuration
  fullName: BindOpen.Application.Settings.TBdoSettings<Q>.Configuration
  nameWithType.vb: TBdoSettings(Of Q).Configuration
  fullName.vb: BindOpen.Application.Settings.TBdoSettings(Of Q).Configuration
- uid: BindOpen.Application.Settings.ITBdoSettings{{Q}}.Configuration
  commentId: P:BindOpen.Application.Settings.ITBdoSettings{`0}.Configuration
  parent: BindOpen.Application.Settings.ITBdoSettings{{Q}}
  definition: BindOpen.Application.Settings.ITBdoSettings`1.Configuration
  name: Configuration
  nameWithType: ITBdoSettings<Q>.Configuration
  fullName: BindOpen.Application.Settings.ITBdoSettings<Q>.Configuration
  nameWithType.vb: ITBdoSettings(Of Q).Configuration
  fullName.vb: BindOpen.Application.Settings.ITBdoSettings(Of Q).Configuration
- uid: BindOpen.Application.Settings.ITBdoSettings`1.Configuration
  commentId: P:BindOpen.Application.Settings.ITBdoSettings`1.Configuration
  isExternal: true
  name: Configuration
  nameWithType: ITBdoSettings<Q>.Configuration
  fullName: BindOpen.Application.Settings.ITBdoSettings<Q>.Configuration
  nameWithType.vb: ITBdoSettings(Of Q).Configuration
  fullName.vb: BindOpen.Application.Settings.ITBdoSettings(Of Q).Configuration
shouldSkipMarkup: true
