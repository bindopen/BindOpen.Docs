### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Carriers.RepositoryFolder
  commentId: T:BindOpen.Extensions.Carriers.RepositoryFolder
  id: RepositoryFolder
  parent: BindOpen.Extensions.Carriers
  children:
  - BindOpen.Extensions.Carriers.RepositoryFolder.#ctor
  - BindOpen.Extensions.Carriers.RepositoryFolder.#ctor(System.String)
  - BindOpen.Extensions.Carriers.RepositoryFolder.Check``1(System.Boolean,``0,System.String[])
  langs:
  - csharp
  - vb
  name: RepositoryFolder
  nameWithType: RepositoryFolder
  fullName: BindOpen.Extensions.Carriers.RepositoryFolder
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Carriers
  summary: "\nThis class represents a repository folder.\n"
  syntax:
    content: 'public class RepositoryFolder : RepositoryItem'
    content.vb: >-
      Public Class RepositoryFolder
          Inherits RepositoryItem
  inheritance:
  - System.Object
  - BindOpen.Extensions.Carriers.RepositoryItem
  inheritedMembers:
  - BindOpen.Extensions.Carriers.RepositoryItem.SetPath(System.String,System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Extensions.Carriers.RepositoryFolder.#ctor
  commentId: M:BindOpen.Extensions.Carriers.RepositoryFolder.#ctor
  id: '#ctor'
  parent: BindOpen.Extensions.Carriers.RepositoryFolder
  langs:
  - csharp
  - vb
  name: RepositoryFolder()
  nameWithType: RepositoryFolder.RepositoryFolder()
  fullName: BindOpen.Extensions.Carriers.RepositoryFolder.RepositoryFolder()
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Carriers
  summary: "\nInstantiates a new instance of the RepositoryFolder class.\n"
  syntax:
    content: public RepositoryFolder()
    content.vb: Public Sub New
  overload: BindOpen.Extensions.Carriers.RepositoryFolder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.RepositoryFolder.#ctor(System.String)
  commentId: M:BindOpen.Extensions.Carriers.RepositoryFolder.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: BindOpen.Extensions.Carriers.RepositoryFolder
  langs:
  - csharp
  - vb
  name: RepositoryFolder(String)
  nameWithType: RepositoryFolder.RepositoryFolder(String)
  fullName: BindOpen.Extensions.Carriers.RepositoryFolder.RepositoryFolder(System.String)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Carriers
  summary: "\nInstantiates a new instance of the RepositoryFolder class.\n"
  syntax:
    content: public RepositoryFolder(string path)
    parameters:
    - id: path
      type: System.String
      description: The path of the instance.
    content.vb: Public Sub New(path As String)
  overload: BindOpen.Extensions.Carriers.RepositoryFolder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Carriers.RepositoryFolder.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Extensions.Carriers.RepositoryFolder.Check``1(System.Boolean,``0,System.String[])
  id: Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Extensions.Carriers.RepositoryFolder
  langs:
  - csharp
  - vb
  name: Check<T>(Boolean, T, String[])
  nameWithType: RepositoryFolder.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Extensions.Carriers.RepositoryFolder.Check<T>(System.Boolean, T, System.String[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Extensions.Carriers
  summary: "\nChecks this instance.\n"
  syntax:
    content: >-
      public override IBdoLog Check<T>(bool isExistenceChecked = true, T item = null, string[] specificationAreas = null)
          where T : IDataItem
    parameters:
    - id: isExistenceChecked
      type: System.Boolean
      description: Indicates whether the carrier existence is checked.
    - id: item
      type: '{T}'
      description: The item to consider.
    - id: specificationAreas
      type: System.String[]
      description: The specification areas to consider.
    typeParameters:
    - id: T
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the check log.
    content.vb: Public Overrides Function Check(Of T As IDataItem)(isExistenceChecked As Boolean = True, item As T = Nothing, specificationAreas As String() = Nothing) As IBdoLog
  overload: BindOpen.Extensions.Carriers.RepositoryFolder.Check*
  nameWithType.vb: RepositoryFolder.Check(Of T)(Boolean, T, String())
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Extensions.Carriers.RepositoryFolder.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
references:
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  isExternal: true
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Extensions.Carriers.RepositoryItem
  commentId: T:BindOpen.Extensions.Carriers.RepositoryItem
  parent: BindOpen.Extensions.Carriers
  isExternal: true
  name: RepositoryItem
  nameWithType: RepositoryItem
  fullName: BindOpen.Extensions.Carriers.RepositoryItem
- uid: BindOpen.Extensions.Carriers.RepositoryItem.SetPath(System.String,System.String)
  commentId: M:BindOpen.Extensions.Carriers.RepositoryItem.SetPath(System.String,System.String)
  parent: BindOpen.Extensions.Carriers.RepositoryItem
  isExternal: true
  name: SetPath(String, String)
  nameWithType: RepositoryItem.SetPath(String, String)
  fullName: BindOpen.Extensions.Carriers.RepositoryItem.SetPath(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Carriers.RepositoryItem.SetPath(System.String,System.String)
    name: SetPath
    nameWithType: RepositoryItem.SetPath
    fullName: BindOpen.Extensions.Carriers.RepositoryItem.SetPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Carriers.RepositoryItem.SetPath(System.String,System.String)
    name: SetPath
    nameWithType: RepositoryItem.SetPath
    fullName: BindOpen.Extensions.Carriers.RepositoryItem.SetPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Carriers.RepositoryFolder.#ctor*
  commentId: Overload:BindOpen.Extensions.Carriers.RepositoryFolder.#ctor
  isExternal: true
  name: RepositoryFolder
  nameWithType: RepositoryFolder.RepositoryFolder
  fullName: BindOpen.Extensions.Carriers.RepositoryFolder.RepositoryFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Extensions.Carriers.RepositoryFolder.Check*
  commentId: Overload:BindOpen.Extensions.Carriers.RepositoryFolder.Check
  isExternal: true
  name: Check
  nameWithType: RepositoryFolder.Check
  fullName: BindOpen.Extensions.Carriers.RepositoryFolder.Check
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.System.Diagnostics.IBdoLog
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: T
  name: T
  nameWithType: T
  fullName: T
shouldSkipMarkup: true
