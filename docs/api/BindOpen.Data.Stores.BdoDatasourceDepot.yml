### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Stores.BdoDatasourceDepot
  commentId: T:BindOpen.Data.Stores.BdoDatasourceDepot
  id: BdoDatasourceDepot
  parent: BindOpen.Data.Stores
  children:
  - BindOpen.Data.Stores.BdoDatasourceDepot.#ctor
  - BindOpen.Data.Stores.BdoDatasourceDepot.#ctor(BindOpen.Data.Items.Datasource[])
  - BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
  - BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName(System.String)
  - BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  - BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName(System.String)
  - BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection(System.String,System.String)
  - BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
  - BindOpen.Data.Stores.BdoDatasourceDepot.Sources
  langs:
  - csharp
  - vb
  name: BdoDatasourceDepot
  nameWithType: BdoDatasourceDepot
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoDatasourceDepot
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 12
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nThis class represents a data source depot.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class BdoDatasourceDepot : TBdoDepot<Datasource>, IBdoDatasourceDepot, ITBdoDepot<Datasource>, IDataItemSet<Datasource>, IBdoDepot, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced
    content.vb: >-
      <Serializable>

      Public Class BdoDatasourceDepot
          Inherits TBdoDepot(Of Datasource)
          Implements IBdoDatasourceDepot, ITBdoDepot(Of Datasource), IDataItemSet(Of Datasource), IBdoDepot, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot
  - BindOpen.Data.Stores.ITBdoDepot{BindOpen.Data.Items.Datasource}
  - BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource}
  - BindOpen.Data.Stores.IBdoDepot
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  inheritedMembers:
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}._scope
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.Scope
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.LazyLoadFunction
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.WithScope(BindOpen.Application.Scopes.IBdoScope)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}._items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Items
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.ItemsSpecified
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Count
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Item(System.Int32)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Item(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.ClearItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(BindOpen.Data.Items.Datasource[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Remove(System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.HasItems
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.HasItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.GetItem(System.String)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(BindOpen.Data.Items.Datasource,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(System.Collections.Generic.List{BindOpen.Data.Items.Datasource},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Check``1(System.Boolean,{T1},System.String[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Clone
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.PropertyChanged
  - BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.OnPropertyChanged(System.String)
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.Key
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Application.Scopes.IBdoHostOptions)
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Data.Stores.BdoDatasourceDepot.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Stores.BdoDatasourceDepot})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.Sources
  commentId: P:BindOpen.Data.Stores.BdoDatasourceDepot.Sources
  id: Sources
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: Sources
  nameWithType: BdoDatasourceDepot.Sources
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.Sources
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Sources
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 26
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nElements of this instance.\n"
  example: []
  syntax:
    content: public List<Datasource> Sources { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.Items.Datasource}
    content.vb: Public Property Sources As List(Of Datasource)
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.Sources*
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.Sources
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.#ctor
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: BdoDatasourceDepot()
  nameWithType: BdoDatasourceDepot.BdoDatasourceDepot()
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.BdoDatasourceDepot()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 45
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nInstantiates a new instance of the DatasourceDepot class.\n"
  example: []
  syntax:
    content: public BdoDatasourceDepot()
    content.vb: Public Sub New
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.#ctor(BindOpen.Data.Items.Datasource[])
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.#ctor(BindOpen.Data.Items.Datasource[])
  id: '#ctor(BindOpen.Data.Items.Datasource[])'
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: BdoDatasourceDepot(Datasource[])
  nameWithType: BdoDatasourceDepot.BdoDatasourceDepot(Datasource[])
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.BdoDatasourceDepot(BindOpen.Data.Items.Datasource[])
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 54
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nInstantiates a new instance of the DatasourceDepot class.\n"
  example: []
  syntax:
    content: public BdoDatasourceDepot(params Datasource[] dataSources)
    parameters:
    - id: dataSources
      type: BindOpen.Data.Items.Datasource[]
      description: The data sources to consider.
    content.vb: Public Sub New(ParamArray dataSources As Datasource())
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.#ctor*
  nameWithType.vb: BdoDatasourceDepot.BdoDatasourceDepot(Datasource())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Data.Stores.BdoDatasourceDepot.BdoDatasourceDepot(BindOpen.Data.Items.Datasource())
  name.vb: BdoDatasourceDepot(Datasource())
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName(System.String)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName(System.String)
  id: GetModuleName(System.String)
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: GetModuleName(String)
  nameWithType: BdoDatasourceDepot.GetModuleName(String)
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetModuleName
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 72
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nReturns the module name of the specified data source.\n"
  example: []
  syntax:
    content: public string GetModuleName(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
      description: The name of the data source to consider.
    return:
      type: System.String
      description: The module name corresponding to the specified data module name.
    content.vb: Public Function GetModuleName(sourceName As String) As String
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName*
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName(System.String)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName(System.String)
  id: GetInstanceName(System.String)
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: GetInstanceName(String)
  nameWithType: BdoDatasourceDepot.GetInstanceName(String)
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetInstanceName
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 84
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nReturns the instance name of the specified data source.\n"
  example: []
  syntax:
    content: public string GetInstanceName(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
      description: The name of the data source to consider.
    return:
      type: System.String
      description: The instance name corresponding to the specified data module name.
    content.vb: Public Function GetInstanceName(sourceName As String) As String
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName*
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  id: GetInstanceOtherwiseModuleName(System.String)
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: GetInstanceOtherwiseModuleName(String)
  nameWithType: BdoDatasourceDepot.GetInstanceOtherwiseModuleName(String)
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetInstanceOtherwiseModuleName
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 96
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nReturns the instance name otherwise module name of the specified data source.\n"
  example: []
  syntax:
    content: public string GetInstanceOtherwiseModuleName(string sourceName)
    parameters:
    - id: sourceName
      type: System.String
      description: The name of the data source to consider.
    return:
      type: System.String
      description: The instance name corresponding to the specified data module name.
    content.vb: Public Function GetInstanceOtherwiseModuleName(sourceName As String) As String
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName*
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
  id: GetConnectorConfiguration(System.String,System.String)
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: GetConnectorConfiguration(String, String)
  nameWithType: BdoDatasourceDepot.GetConnectorConfiguration(String, String)
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetConnectorConfiguration
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 115
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nGets the specified connector configuration.\n"
  example: []
  syntax:
    content: public IBdoConnectorConfiguration GetConnectorConfiguration(string sourceName, string connectorDefinitionUniqueId)
    parameters:
    - id: sourceName
      type: System.String
      description: The name of the data module to consider.
    - id: connectorDefinitionUniqueId
      type: System.String
      description: The unique ID of the connector definition to consider.
    return:
      type: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
      description: The specified connector.
    content.vb: Public Function GetConnectorConfiguration(sourceName As String, connectorDefinitionUniqueId As String) As IBdoConnectorConfiguration
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration*
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
  id: HasConnectorConfiguration(System.String,System.String)
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: HasConnectorConfiguration(String, String)
  nameWithType: BdoDatasourceDepot.HasConnectorConfiguration(String, String)
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: HasConnectorConfiguration
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 130
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nIndicates whether this instance has the specified connector configuration.\n"
  example: []
  syntax:
    content: public bool HasConnectorConfiguration(string sourceName, string connectorDefinitionUniqueId)
    parameters:
    - id: sourceName
      type: System.String
      description: The name of the data module to consider.
    - id: connectorDefinitionUniqueId
      type: System.String
      description: The unique ID of the connector definition to consider.
    return:
      type: System.Boolean
      description: The data source with the specified data module name.
    content.vb: Public Function HasConnectorConfiguration(sourceName As String, connectorDefinitionUniqueId As String) As Boolean
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration*
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection(System.String,System.String)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection(System.String,System.String)
  id: GetStringConnection(System.String,System.String)
  parent: BindOpen.Data.Stores.BdoDatasourceDepot
  langs:
  - csharp
  - vb
  name: GetStringConnection(String, String)
  nameWithType: BdoDatasourceDepot.GetStringConnection(String, String)
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetStringConnection
    path: ../src/BindOpen.Core/Data/Stores/Depots/Datasources/BdoDatasourceDepot.cs
    startLine: 143
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Stores
  summary: "\nReturns the connection string corresponding to the specified configuration.\n"
  example: []
  syntax:
    content: public string GetStringConnection(string sourceName, string connectorDefinitionUniqueId)
    parameters:
    - id: sourceName
      type: System.String
      description: The name of the data source to consider.
    - id: connectorDefinitionUniqueId
      type: System.String
      description: The connector unique name to consider.
    return:
      type: System.String
      description: The connection string corresponding to the specified data module name.
    content.vb: Public Function GetStringConnection(sourceName As String, connectorDefinitionUniqueId As String) As String
  overload: BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection*
  implements:
  - BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Data.Stores
  commentId: N:BindOpen.Data.Stores
  name: BindOpen.Data.Stores
  nameWithType: BindOpen.Data.Stores
  fullName: BindOpen.Data.Stores
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  commentId: T:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<Datasource>
  nameWithType: DataItemSet<Datasource>
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>
  nameWithType.vb: DataItemSet(Of Datasource)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource)
  name.vb: DataItemSet(Of Datasource)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  commentId: T:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  parent: BindOpen.Data.Stores
  definition: BindOpen.Data.Stores.TBdoDepot`1
  name: TBdoDepot<Datasource>
  nameWithType: TBdoDepot<Datasource>
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>
  nameWithType.vb: TBdoDepot(Of Datasource)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource)
  name.vb: TBdoDepot(Of Datasource)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot
  commentId: T:BindOpen.Data.Stores.IBdoDatasourceDepot
  parent: BindOpen.Data.Stores
  name: IBdoDatasourceDepot
  nameWithType: IBdoDatasourceDepot
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
- uid: BindOpen.Data.Stores.ITBdoDepot{BindOpen.Data.Items.Datasource}
  commentId: T:BindOpen.Data.Stores.ITBdoDepot{BindOpen.Data.Items.Datasource}
  parent: BindOpen.Data.Stores
  definition: BindOpen.Data.Stores.ITBdoDepot`1
  name: ITBdoDepot<Datasource>
  nameWithType: ITBdoDepot<Datasource>
  fullName: BindOpen.Data.Stores.ITBdoDepot<BindOpen.Data.Items.Datasource>
  nameWithType.vb: ITBdoDepot(Of Datasource)
  fullName.vb: BindOpen.Data.Stores.ITBdoDepot(Of BindOpen.Data.Items.Datasource)
  name.vb: ITBdoDepot(Of Datasource)
  spec.csharp:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource}
  commentId: T:BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource}
  parent: BindOpen.Data.Items
  definition: BindOpen.Data.Items.IDataItemSet`1
  name: IDataItemSet<Datasource>
  nameWithType: IDataItemSet<Datasource>
  fullName: BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Items.Datasource>
  nameWithType.vb: IDataItemSet(Of Datasource)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Items.Datasource)
  name.vb: IDataItemSet(Of Datasource)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.IBdoDepot
  commentId: T:BindOpen.Data.Stores.IBdoDepot
  parent: BindOpen.Data.Stores
  name: IBdoDepot
  nameWithType: IBdoDepot
  fullName: BindOpen.Data.Stores.IBdoDepot
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}._scope
  commentId: F:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}._scope
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1._scope
  name: _scope
  nameWithType: TBdoDepot<Datasource>._scope
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>._scope
  nameWithType.vb: TBdoDepot(Of Datasource)._scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource)._scope
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.Scope
  commentId: P:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.Scope
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1.Scope
  name: Scope
  nameWithType: TBdoDepot<Datasource>.Scope
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.Scope
  nameWithType.vb: TBdoDepot(Of Datasource).Scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).Scope
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.LazyLoadFunction
  commentId: P:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.LazyLoadFunction
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1.LazyLoadFunction
  name: LazyLoadFunction
  nameWithType: TBdoDepot<Datasource>.LazyLoadFunction
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.LazyLoadFunction
  nameWithType.vb: TBdoDepot(Of Datasource).LazyLoadFunction
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).LazyLoadFunction
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAllAssemblies(IBdoLog)
  nameWithType: TBdoDepot<Datasource>.AddFromAllAssemblies(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of Datasource).AddFromAllAssemblies(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot<Datasource>.AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.AddFromAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot(Of Datasource).AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).AddFromAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAssembly(String, IBdoLog)
  nameWithType: TBdoDepot<Datasource>.AddFromAssembly(String, IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of Datasource).AddFromAssembly(String, IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot<Datasource>.AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.AddFromAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot(Of Datasource).AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).AddFromAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAssembly<T1>(IBdoLog)
  nameWithType: TBdoDepot<Datasource>.AddFromAssembly<T1>(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.AddFromAssembly<T1>(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of Datasource).AddFromAssembly(Of T1)(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).AddFromAssembly(Of T1)(BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddFromAssembly(Of T1)(IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly<T1>
    nameWithType: TBdoDepot<Datasource>.AddFromAssembly<T1>
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.AddFromAssembly<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly(Of T1)
    nameWithType: TBdoDepot(Of Datasource).AddFromAssembly(Of T1)
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).AddFromAssembly(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  name: LoadLazy(IBdoLog)
  nameWithType: TBdoDepot<Datasource>.LoadLazy(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of Datasource).LoadLazy(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot<Datasource>.LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.LoadLazy
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot(Of Datasource).LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).LoadLazy
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.WithScope(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}.WithScope(BindOpen.Application.Scopes.IBdoScope)
  parent: BindOpen.Data.Stores.TBdoDepot{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
  name: WithScope(IBdoScope)
  nameWithType: TBdoDepot<Datasource>.WithScope(IBdoScope)
  fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.WithScope(BindOpen.Application.Scopes.IBdoScope)
  nameWithType.vb: TBdoDepot(Of Datasource).WithScope(IBdoScope)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).WithScope(BindOpen.Application.Scopes.IBdoScope)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot<Datasource>.WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot<BindOpen.Data.Items.Datasource>.WithScope
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot(Of Datasource).WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot(Of BindOpen.Data.Items.Datasource).WithScope
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}._items
  commentId: F:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}._items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<Datasource>._items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>._items
  nameWithType.vb: DataItemSet(Of Datasource)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource)._items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Items
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Items
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<Datasource>.Items
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Items
  nameWithType.vb: DataItemSet(Of Datasource).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Items
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.ItemsSpecified
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<Datasource>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of Datasource).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Count
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Count
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<Datasource>.Count
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Count
  nameWithType.vb: DataItemSet(Of Datasource).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Count
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Item(System.Int32)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  name: Item[Int32]
  nameWithType: DataItemSet<Datasource>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of Datasource).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<Datasource>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of Datasource).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Item(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  name: Item[String]
  nameWithType: DataItemSet<Datasource>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Item[System.String]
  nameWithType.vb: DataItemSet(Of Datasource).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<Datasource>.Item
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of Datasource).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.ClearItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<Datasource>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.ClearItems()
  nameWithType.vb: DataItemSet(Of Datasource).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<Datasource>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of Datasource).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(BindOpen.Data.Items.Datasource[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(BindOpen.Data.Items.Datasource[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(Datasource[])
  nameWithType: DataItemSet<Datasource>.Add(Datasource[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Add(BindOpen.Data.Items.Datasource[])
  nameWithType.vb: DataItemSet(Of Datasource).Add(Datasource())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Add(BindOpen.Data.Items.Datasource())
  name.vb: Add(Datasource())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<Datasource>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of Datasource).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Remove(System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  name: Remove(String[])
  nameWithType: DataItemSet<Datasource>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of Datasource).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<Datasource>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of Datasource).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.HasItems
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<Datasource>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.HasItems()
  nameWithType.vb: DataItemSet(Of Datasource).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<Datasource>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of Datasource).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.HasItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  name: HasItem(String)
  nameWithType: DataItemSet<Datasource>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of Datasource).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<Datasource>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of Datasource).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.GetItem(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  name: GetItem(String)
  nameWithType: DataItemSet<Datasource>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of Datasource).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<Datasource>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of Datasource).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<Datasource>)
  nameWithType: DataItemSet<Datasource>.GetCommonItemKeys(IDataItemSet<Datasource>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Items.Datasource>)
  nameWithType.vb: DataItemSet(Of Datasource).GetCommonItemKeys(IDataItemSet(Of Datasource))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Items.Datasource))
  name.vb: GetCommonItemKeys(IDataItemSet(Of Datasource))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<Datasource>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of Datasource).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(BindOpen.Data.Items.Datasource,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(BindOpen.Data.Items.Datasource,BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(Datasource, IDataItemSet<Datasource>)
  nameWithType: DataItemSet<Datasource>.Add(Datasource, IDataItemSet<Datasource>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Add(BindOpen.Data.Items.Datasource, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Items.Datasource>)
  nameWithType.vb: DataItemSet(Of Datasource).Add(Datasource, IDataItemSet(Of Datasource))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Add(BindOpen.Data.Items.Datasource, BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Items.Datasource))
  name.vb: Add(Datasource, IDataItemSet(Of Datasource))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<Datasource>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of Datasource).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(System.Collections.Generic.List{BindOpen.Data.Items.Datasource},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Add(System.Collections.Generic.List{BindOpen.Data.Items.Datasource},BindOpen.Data.Items.IDataItemSet{BindOpen.Data.Items.Datasource})
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(List<Datasource>, IDataItemSet<Datasource>)
  nameWithType: DataItemSet<Datasource>.Add(List<Datasource>, IDataItemSet<Datasource>)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Add(System.Collections.Generic.List<BindOpen.Data.Items.Datasource>, BindOpen.Data.Items.IDataItemSet<BindOpen.Data.Items.Datasource>)
  nameWithType.vb: DataItemSet(Of Datasource).Add(List(Of Datasource), IDataItemSet(Of Datasource))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Add(System.Collections.Generic.List(Of BindOpen.Data.Items.Datasource), BindOpen.Data.Items.IDataItemSet(Of BindOpen.Data.Items.Datasource))
  name.vb: Add(List(Of Datasource), IDataItemSet(Of Datasource))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<Datasource>.Add
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of Datasource).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Update``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<Datasource>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of Datasource).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<Datasource>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of Datasource).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Check``1(System.Boolean,{T1},System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<Datasource>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of Datasource).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<Datasource>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of Datasource).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Repair``1({T1},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<Datasource>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of Datasource).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<Datasource>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of Datasource).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<Datasource>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of Datasource).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<Datasource>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of Datasource).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<Datasource>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of Datasource).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<Datasource>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of Datasource).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.Clone
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.Clone
  name: Clone()
  nameWithType: DataItemSet<Datasource>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Clone()
  nameWithType.vb: DataItemSet(Of Datasource).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<Datasource>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of Datasource).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.PropertyChanged
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<Datasource>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.PropertyChanged
  nameWithType.vb: DataItemSet(Of Datasource).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}.OnPropertyChanged(System.String)
  parent: BindOpen.Data.Items.DataItemSet{BindOpen.Data.Items.Datasource}
  definition: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<Datasource>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of Datasource).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<Datasource>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Data.Items.Datasource>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of Datasource).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of BindOpen.Data.Items.Datasource).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.Key
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Key
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Key()
  nameWithType: IdentifiedDataItem.Key()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Application.Scopes.IBdoHostOptions)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  parent: BindOpen.Data.Stores.BdoDatasourceExtensions
  definition: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  name: AddFromConfiguration(IBdoHostOptions)
  nameWithType: BdoDatasourceExtensions.AddFromConfiguration(IBdoHostOptions)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Application.Scopes.IBdoHostOptions)
  spec.csharp:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Application.Scopes.IBdoHostOptions)
    name: AddFromConfiguration
    nameWithType: BdoDatasourceExtensions.AddFromConfiguration
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoHostOptions
    name: IBdoHostOptions
    nameWithType: IBdoHostOptions
    fullName: BindOpen.Application.Scopes.IBdoHostOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Application.Scopes.IBdoHostOptions)
    name: AddFromConfiguration
    nameWithType: BdoDatasourceExtensions.AddFromConfiguration
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoHostOptions
    name: IBdoHostOptions
    nameWithType: IBdoHostOptions
    fullName: BindOpen.Application.Scopes.IBdoHostOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Stores.BdoDatasourceDepot})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<BdoDatasourceDepot>(Action<BdoDatasourceDepot>)
  nameWithType: ObjectHelper.Using<BdoDatasourceDepot>(Action<BdoDatasourceDepot>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Stores.BdoDatasourceDepot>(System.Action<BindOpen.Data.Stores.BdoDatasourceDepot>)
  nameWithType.vb: ObjectHelper.Using(Of BdoDatasourceDepot)(Action(Of BdoDatasourceDepot))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Stores.BdoDatasourceDepot)(System.Action(Of BindOpen.Data.Stores.BdoDatasourceDepot))
  name.vb: Using(Of BdoDatasourceDepot)(Action(Of BdoDatasourceDepot))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<BdoDatasourceDepot>
    nameWithType: ObjectHelper.Using<BdoDatasourceDepot>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Stores.BdoDatasourceDepot>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Stores.BdoDatasourceDepot
    name: BdoDatasourceDepot
    nameWithType: BdoDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceDepot
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of BdoDatasourceDepot)
    nameWithType: ObjectHelper.Using(Of BdoDatasourceDepot)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Stores.BdoDatasourceDepot)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Stores.BdoDatasourceDepot
    name: BdoDatasourceDepot
    nameWithType: BdoDatasourceDepot
    fullName: BindOpen.Data.Stores.BdoDatasourceDepot
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Items.DataItemSet`1
  commentId: T:BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<T>
  nameWithType: DataItemSet<T>
  fullName: BindOpen.Data.Items.DataItemSet<T>
  nameWithType.vb: DataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)
  name.vb: DataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1
  commentId: T:BindOpen.Data.Stores.TBdoDepot`1
  name: TBdoDepot<T>
  nameWithType: TBdoDepot<T>
  fullName: BindOpen.Data.Stores.TBdoDepot<T>
  nameWithType.vb: TBdoDepot(Of T)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T)
  name.vb: TBdoDepot(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1
    name: TBdoDepot
    nameWithType: TBdoDepot
    fullName: BindOpen.Data.Stores.TBdoDepot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.ITBdoDepot`1
  commentId: T:BindOpen.Data.Stores.ITBdoDepot`1
  name: ITBdoDepot<T>
  nameWithType: ITBdoDepot<T>
  fullName: BindOpen.Data.Stores.ITBdoDepot<T>
  nameWithType.vb: ITBdoDepot(Of T)
  fullName.vb: BindOpen.Data.Stores.ITBdoDepot(Of T)
  name.vb: ITBdoDepot(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Stores.ITBdoDepot`1
    name: ITBdoDepot
    nameWithType: ITBdoDepot
    fullName: BindOpen.Data.Stores.ITBdoDepot
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItemSet`1
  commentId: T:BindOpen.Data.Items.IDataItemSet`1
  parent: BindOpen.Data.Items
  name: IDataItemSet<T>
  nameWithType: IDataItemSet<T>
  fullName: BindOpen.Data.Items.IDataItemSet<T>
  nameWithType.vb: IDataItemSet(Of T)
  fullName.vb: BindOpen.Data.Items.IDataItemSet(Of T)
  name.vb: IDataItemSet(Of T)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1._scope
  commentId: F:BindOpen.Data.Stores.TBdoDepot`1._scope
  name: _scope
  nameWithType: TBdoDepot<T>._scope
  fullName: BindOpen.Data.Stores.TBdoDepot<T>._scope
  nameWithType.vb: TBdoDepot(Of T)._scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T)._scope
- uid: BindOpen.Data.Stores.TBdoDepot`1.Scope
  commentId: P:BindOpen.Data.Stores.TBdoDepot`1.Scope
  name: Scope
  nameWithType: TBdoDepot<T>.Scope
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.Scope
  nameWithType.vb: TBdoDepot(Of T).Scope
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).Scope
- uid: BindOpen.Data.Stores.TBdoDepot`1.LazyLoadFunction
  commentId: P:BindOpen.Data.Stores.TBdoDepot`1.LazyLoadFunction
  name: LazyLoadFunction
  nameWithType: TBdoDepot<T>.LazyLoadFunction
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.LazyLoadFunction
  nameWithType.vb: TBdoDepot(Of T).LazyLoadFunction
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).LazyLoadFunction
- uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAllAssemblies(IBdoLog)
  nameWithType: TBdoDepot<T>.AddFromAllAssemblies(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).AddFromAllAssemblies(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot<T>.AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAllAssemblies(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAllAssemblies
    nameWithType: TBdoDepot(Of T).AddFromAllAssemblies
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAllAssemblies
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: AddFromAssembly(String, IBdoLog)
  nameWithType: TBdoDepot<T>.AddFromAssembly(String, IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).AddFromAssembly(String, IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot<T>.AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly
    nameWithType: TBdoDepot(Of T).AddFromAssembly
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
  name: AddFromAssembly<T1>(IBdoLog)
  nameWithType: TBdoDepot<T>.AddFromAssembly<T1>(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly<T1>(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).AddFromAssembly(Of T1)(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly(Of T1)(BindOpen.System.Diagnostics.IBdoLog)
  name.vb: AddFromAssembly(Of T1)(IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly<T1>
    nameWithType: TBdoDepot<T>.AddFromAssembly<T1>
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.AddFromAssembly<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.AddFromAssembly``1(BindOpen.System.Diagnostics.IBdoLog)
    name: AddFromAssembly(Of T1)
    nameWithType: TBdoDepot(Of T).AddFromAssembly(Of T1)
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).AddFromAssembly(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  name: LoadLazy(IBdoLog)
  nameWithType: TBdoDepot<T>.LoadLazy(IBdoLog)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: TBdoDepot(Of T).LoadLazy(IBdoLog)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot<T>.LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.LoadLazy
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.LoadLazy(BindOpen.System.Diagnostics.IBdoLog)
    name: LoadLazy
    nameWithType: TBdoDepot(Of T).LoadLazy
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).LoadLazy
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
  name: WithScope(IBdoScope)
  nameWithType: TBdoDepot<T>.WithScope(IBdoScope)
  fullName: BindOpen.Data.Stores.TBdoDepot<T>.WithScope(BindOpen.Application.Scopes.IBdoScope)
  nameWithType.vb: TBdoDepot(Of T).WithScope(IBdoScope)
  fullName.vb: BindOpen.Data.Stores.TBdoDepot(Of T).WithScope(BindOpen.Application.Scopes.IBdoScope)
  spec.csharp:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot<T>.WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot<T>.WithScope
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.TBdoDepot`1.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: TBdoDepot(Of T).WithScope
    fullName: BindOpen.Data.Stores.TBdoDepot(Of T).WithScope
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1._items
  commentId: F:BindOpen.Data.Items.DataItemSet`1._items
  name: _items
  nameWithType: DataItemSet<T>._items
  fullName: BindOpen.Data.Items.DataItemSet<T>._items
  nameWithType.vb: DataItemSet(Of T)._items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T)._items
- uid: BindOpen.Data.Items.DataItemSet`1.Items
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Items
  name: Items
  nameWithType: DataItemSet<T>.Items
  fullName: BindOpen.Data.Items.DataItemSet<T>.Items
  nameWithType.vb: DataItemSet(Of T).Items
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Items
- uid: BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  commentId: P:BindOpen.Data.Items.DataItemSet`1.ItemsSpecified
  name: ItemsSpecified
  nameWithType: DataItemSet<T>.ItemsSpecified
  fullName: BindOpen.Data.Items.DataItemSet<T>.ItemsSpecified
  nameWithType.vb: DataItemSet(Of T).ItemsSpecified
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ItemsSpecified
- uid: BindOpen.Data.Items.DataItemSet`1.Count
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Count
  name: Count
  nameWithType: DataItemSet<T>.Count
  fullName: BindOpen.Data.Items.DataItemSet<T>.Count
  nameWithType.vb: DataItemSet(Of T).Count
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Count
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
  isExternal: true
  name: Item[Int32]
  nameWithType: DataItemSet<T>.Item[Int32]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.Int32]
  nameWithType.vb: DataItemSet(Of T).Item(Int32)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.Int32)
  name.vb: Item(Int32)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.Int32)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  commentId: P:BindOpen.Data.Items.DataItemSet`1.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: DataItemSet<T>.Item[String]
  fullName: BindOpen.Data.Items.DataItemSet<T>.Item[System.String]
  nameWithType.vb: DataItemSet(Of T).Item(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet<T>.Item
    fullName: BindOpen.Data.Items.DataItemSet<T>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Item(System.String)
    name: Item
    nameWithType: DataItemSet(Of T).Item
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.ClearItems
  name: ClearItems()
  nameWithType: DataItemSet<T>.ClearItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems()
  nameWithType.vb: DataItemSet(Of T).ClearItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).ClearItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet<T>.ClearItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.ClearItems
    name: ClearItems
    nameWithType: DataItemSet(Of T).ClearItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).ClearItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0[])
  name: Add(T[])
  nameWithType: DataItemSet<T>.Add(T[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T[])
  nameWithType.vb: DataItemSet(Of T).Add(T())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T())
  name.vb: Add(T())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0[])
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
  isExternal: true
  name: Remove(String[])
  nameWithType: DataItemSet<T>.Remove(String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Remove(System.String[])
  nameWithType.vb: DataItemSet(Of T).Remove(String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Remove(System.String())
  name.vb: Remove(String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet<T>.Remove
    fullName: BindOpen.Data.Items.DataItemSet<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Remove(System.String[])
    name: Remove
    nameWithType: DataItemSet(Of T).Remove
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItems
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItems
  name: HasItems()
  nameWithType: DataItemSet<T>.HasItems()
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems()
  nameWithType.vb: DataItemSet(Of T).HasItems()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItems()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet<T>.HasItems
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItems
    name: HasItems
    nameWithType: DataItemSet(Of T).HasItems
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItems
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
  isExternal: true
  name: HasItem(String)
  nameWithType: DataItemSet<T>.HasItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem(System.String)
  nameWithType.vb: DataItemSet(Of T).HasItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).HasItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet<T>.HasItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.HasItem(System.String)
    name: HasItem
    nameWithType: DataItemSet(Of T).HasItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).HasItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
  isExternal: true
  name: GetItem(String)
  nameWithType: DataItemSet<T>.GetItem(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem(System.String)
  nameWithType.vb: DataItemSet(Of T).GetItem(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetItem(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet<T>.GetItem
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetItem(System.String)
    name: GetItem
    nameWithType: DataItemSet(Of T).GetItem
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetItem
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
  name: GetCommonItemKeys(IDataItemSet<T>)
  nameWithType: DataItemSet<T>.GetCommonItemKeys(IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).GetCommonItemKeys(IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: GetCommonItemKeys(IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet<T>.GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet<T>.GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.GetCommonItemKeys(BindOpen.Data.Items.IDataItemSet{`0})
    name: GetCommonItemKeys
    nameWithType: DataItemSet(Of T).GetCommonItemKeys
    fullName: BindOpen.Data.Items.DataItemSet(Of T).GetCommonItemKeys
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
  name: Add(T, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(T, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(T, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(T, IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(T, BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(T, IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(`0,BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
  isExternal: true
  name: Add(List<T>, IDataItemSet<T>)
  nameWithType: DataItemSet<T>.Add(List<T>, IDataItemSet<T>)
  fullName: BindOpen.Data.Items.DataItemSet<T>.Add(System.Collections.Generic.List<T>, BindOpen.Data.Items.IDataItemSet<T>)
  nameWithType.vb: DataItemSet(Of T).Add(List(Of T), IDataItemSet(Of T))
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Add(System.Collections.Generic.List(Of T), BindOpen.Data.Items.IDataItemSet(Of T))
  name.vb: Add(List(Of T), IDataItemSet(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet<T>.Add
    fullName: BindOpen.Data.Items.DataItemSet<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Add(System.Collections.Generic.List{`0},BindOpen.Data.Items.IDataItemSet{`0})
    name: Add
    nameWithType: DataItemSet(Of T).Add
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Items.IDataItemSet`1
    name: IDataItemSet
    nameWithType: IDataItemSet
    fullName: BindOpen.Data.Items.IDataItemSet
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Update<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Update(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T1>
    nameWithType: DataItemSet<T>.Update<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Update<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T1)
    nameWithType: DataItemSet(Of T).Update(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Update(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T1>(Boolean, T1, String[])
  nameWithType: DataItemSet<T>.Check<T1>(Boolean, T1, String[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>(System.Boolean, T1, System.String[])
  nameWithType.vb: DataItemSet(Of T).Check(Of T1)(Boolean, T1, String())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)(System.Boolean, T1, System.String())
  name.vb: Check(Of T1)(Boolean, T1, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check<T1>
    nameWithType: DataItemSet<T>.Check<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Check<T1>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T1)
    nameWithType: DataItemSet(Of T).Check(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Check(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T1>(T1, String[], UpdateModes[])
  nameWithType: DataItemSet<T>.Repair<T1>(T1, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>(T1, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItemSet(Of T).Repair(Of T1)(T1, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)(T1, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T1)(T1, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T1>
    nameWithType: DataItemSet<T>.Repair<T1>
    fullName: BindOpen.Data.Items.DataItemSet<T>.Repair<T1>
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T1)
    nameWithType: DataItemSet(Of T).Repair(Of T1)
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Repair(Of T1)
  - name: (
    nameWithType: (
    fullName: (
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItemSet<T>.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateStorageInfo(IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet<T>.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItemSet(Of T).UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItemSet<T>.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: DataItemSet(Of T).UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet<T>.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet<T>.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItemSet(Of T).UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItemSet(Of T).UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.Clone
  commentId: M:BindOpen.Data.Items.DataItemSet`1.Clone
  name: Clone()
  nameWithType: DataItemSet<T>.Clone()
  fullName: BindOpen.Data.Items.DataItemSet<T>.Clone()
  nameWithType.vb: DataItemSet(Of T).Clone()
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet<T>.Clone
    fullName: BindOpen.Data.Items.DataItemSet<T>.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.Clone
    name: Clone
    nameWithType: DataItemSet(Of T).Clone
    fullName: BindOpen.Data.Items.DataItemSet(Of T).Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  commentId: E:BindOpen.Data.Items.DataItemSet`1.PropertyChanged
  name: PropertyChanged
  nameWithType: DataItemSet<T>.PropertyChanged
  fullName: BindOpen.Data.Items.DataItemSet<T>.PropertyChanged
  nameWithType.vb: DataItemSet(Of T).PropertyChanged
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).PropertyChanged
- uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  commentId: M:BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
  isExternal: true
  name: OnPropertyChanged(String)
  nameWithType: DataItemSet<T>.OnPropertyChanged(String)
  fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged(System.String)
  nameWithType.vb: DataItemSet(Of T).OnPropertyChanged(String)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet<T>.OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet<T>.OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1.OnPropertyChanged(System.String)
    name: OnPropertyChanged
    nameWithType: DataItemSet(Of T).OnPropertyChanged
    fullName: BindOpen.Data.Items.DataItemSet(Of T).OnPropertyChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  commentId: M:BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
  name: AddFromConfiguration(IBdoDatasourceDepot, IBdoHostOptions)
  nameWithType: BdoDatasourceExtensions.AddFromConfiguration(IBdoDatasourceDepot, IBdoHostOptions)
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot, BindOpen.Application.Scopes.IBdoHostOptions)
  spec.csharp:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
    name: AddFromConfiguration
    nameWithType: BdoDatasourceExtensions.AddFromConfiguration
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot
    name: IBdoDatasourceDepot
    nameWithType: IBdoDatasourceDepot
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoHostOptions
    name: IBdoHostOptions
    nameWithType: IBdoHostOptions
    fullName: BindOpen.Application.Scopes.IBdoHostOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration(BindOpen.Data.Stores.IBdoDatasourceDepot,BindOpen.Application.Scopes.IBdoHostOptions)
    name: AddFromConfiguration
    nameWithType: BdoDatasourceExtensions.AddFromConfiguration
    fullName: BindOpen.Data.Stores.BdoDatasourceExtensions.AddFromConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot
    name: IBdoDatasourceDepot
    nameWithType: IBdoDatasourceDepot
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoHostOptions
    name: IBdoHostOptions
    nameWithType: IBdoHostOptions
    fullName: BindOpen.Application.Scopes.IBdoHostOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceExtensions
  commentId: T:BindOpen.Data.Stores.BdoDatasourceExtensions
  parent: BindOpen.Data.Stores
  name: BdoDatasourceExtensions
  nameWithType: BdoDatasourceExtensions
  fullName: BindOpen.Data.Stores.BdoDatasourceExtensions
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.Sources*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.Sources
  name: Sources
  nameWithType: BdoDatasourceDepot.Sources
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.Sources
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.Sources
  commentId: P:BindOpen.Data.Stores.IBdoDatasourceDepot.Sources
  parent: BindOpen.Data.Stores.IBdoDatasourceDepot
  name: Sources
  nameWithType: IBdoDatasourceDepot.Sources
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.Sources
- uid: System.Collections.Generic.List{BindOpen.Data.Items.Datasource}
  commentId: T:System.Collections.Generic.List{BindOpen.Data.Items.Datasource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Datasource>
  nameWithType: List<Datasource>
  fullName: System.Collections.Generic.List<BindOpen.Data.Items.Datasource>
  nameWithType.vb: List(Of Datasource)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.Items.Datasource)
  name.vb: List(Of Datasource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.#ctor*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.#ctor
  name: BdoDatasourceDepot
  nameWithType: BdoDatasourceDepot.BdoDatasourceDepot
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.BdoDatasourceDepot
- uid: BindOpen.Data.Items.Datasource[]
  isExternal: true
  name: Datasource[]
  nameWithType: Datasource[]
  fullName: BindOpen.Data.Items.Datasource[]
  nameWithType.vb: Datasource()
  fullName.vb: BindOpen.Data.Items.Datasource()
  name.vb: Datasource()
  spec.csharp:
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Data.Items.Datasource
    name: Datasource
    nameWithType: Datasource
    fullName: BindOpen.Data.Items.Datasource
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName
  name: GetModuleName
  nameWithType: BdoDatasourceDepot.GetModuleName
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetModuleName
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName(System.String)
  commentId: M:BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName(System.String)
  parent: BindOpen.Data.Stores.IBdoDatasourceDepot
  isExternal: true
  name: GetModuleName(String)
  nameWithType: IBdoDatasourceDepot.GetModuleName(String)
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName(System.String)
    name: GetModuleName
    nameWithType: IBdoDatasourceDepot.GetModuleName
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName(System.String)
    name: GetModuleName
    nameWithType: IBdoDatasourceDepot.GetModuleName
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetModuleName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName
  name: GetInstanceName
  nameWithType: BdoDatasourceDepot.GetInstanceName
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceName
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName(System.String)
  commentId: M:BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName(System.String)
  parent: BindOpen.Data.Stores.IBdoDatasourceDepot
  isExternal: true
  name: GetInstanceName(String)
  nameWithType: IBdoDatasourceDepot.GetInstanceName(String)
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName(System.String)
    name: GetInstanceName
    nameWithType: IBdoDatasourceDepot.GetInstanceName
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName(System.String)
    name: GetInstanceName
    nameWithType: IBdoDatasourceDepot.GetInstanceName
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName
  name: GetInstanceOtherwiseModuleName
  nameWithType: BdoDatasourceDepot.GetInstanceOtherwiseModuleName
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetInstanceOtherwiseModuleName
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  commentId: M:BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  parent: BindOpen.Data.Stores.IBdoDatasourceDepot
  isExternal: true
  name: GetInstanceOtherwiseModuleName(String)
  nameWithType: IBdoDatasourceDepot.GetInstanceOtherwiseModuleName(String)
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
    name: GetInstanceOtherwiseModuleName
    nameWithType: IBdoDatasourceDepot.GetInstanceOtherwiseModuleName
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName(System.String)
    name: GetInstanceOtherwiseModuleName
    nameWithType: IBdoDatasourceDepot.GetInstanceOtherwiseModuleName
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetInstanceOtherwiseModuleName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration
  name: GetConnectorConfiguration
  nameWithType: BdoDatasourceDepot.GetConnectorConfiguration
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetConnectorConfiguration
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
  commentId: M:BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
  parent: BindOpen.Data.Stores.IBdoDatasourceDepot
  isExternal: true
  name: GetConnectorConfiguration(String, String)
  nameWithType: IBdoDatasourceDepot.GetConnectorConfiguration(String, String)
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
    name: GetConnectorConfiguration
    nameWithType: IBdoDatasourceDepot.GetConnectorConfiguration
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration(System.String,System.String)
    name: GetConnectorConfiguration
    nameWithType: IBdoDatasourceDepot.GetConnectorConfiguration
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetConnectorConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  commentId: T:BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
  parent: BindOpen.Extensions.Runtime
  name: IBdoConnectorConfiguration
  nameWithType: IBdoConnectorConfiguration
  fullName: BindOpen.Extensions.Runtime.IBdoConnectorConfiguration
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration
  name: HasConnectorConfiguration
  nameWithType: BdoDatasourceDepot.HasConnectorConfiguration
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.HasConnectorConfiguration
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
  commentId: M:BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
  parent: BindOpen.Data.Stores.IBdoDatasourceDepot
  isExternal: true
  name: HasConnectorConfiguration(String, String)
  nameWithType: IBdoDatasourceDepot.HasConnectorConfiguration(String, String)
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
    name: HasConnectorConfiguration
    nameWithType: IBdoDatasourceDepot.HasConnectorConfiguration
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration(System.String,System.String)
    name: HasConnectorConfiguration
    nameWithType: IBdoDatasourceDepot.HasConnectorConfiguration
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.HasConnectorConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection*
  commentId: Overload:BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection
  name: GetStringConnection
  nameWithType: BdoDatasourceDepot.GetStringConnection
  fullName: BindOpen.Data.Stores.BdoDatasourceDepot.GetStringConnection
- uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection(System.String,System.String)
  commentId: M:BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection(System.String,System.String)
  parent: BindOpen.Data.Stores.IBdoDatasourceDepot
  isExternal: true
  name: GetStringConnection(String, String)
  nameWithType: IBdoDatasourceDepot.GetStringConnection(String, String)
  fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection(System.String,System.String)
    name: GetStringConnection
    nameWithType: IBdoDatasourceDepot.GetStringConnection
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection(System.String,System.String)
    name: GetStringConnection
    nameWithType: IBdoDatasourceDepot.GetStringConnection
    fullName: BindOpen.Data.Stores.IBdoDatasourceDepot.GetStringConnection
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
