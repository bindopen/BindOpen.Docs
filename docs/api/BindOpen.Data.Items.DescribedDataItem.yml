### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Items.DescribedDataItem
  commentId: T:BindOpen.Data.Items.DescribedDataItem
  id: DescribedDataItem
  parent: BindOpen.Data.Items
  children:
  - BindOpen.Data.Items.DescribedDataItem.#ctor
  - BindOpen.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.Clone
  - BindOpen.Data.Items.DescribedDataItem.Description
  - BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  - BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  - BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  - BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  - BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  langs:
  - csharp
  - vb
  name: DescribedDataItem
  nameWithType: DescribedDataItem
  fullName: BindOpen.Data.Items.DescribedDataItem
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DescribedDataItem
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 10
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nThis class represents described data item.\n"
  example: []
  syntax:
    content: 'public class DescribedDataItem : TitledDataItem, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed'
    content.vb: >-
      Public Class DescribedDataItem
          Inherits TitledDataItem
          Implements IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Data.Items.StoredDataItem
  - BindOpen.Data.Items.NamedDataItem
  - BindOpen.Data.Items.TitledDataItem
  derivedClasses:
  - BindOpen.Application.Languages.ApplicationLanguage
  - BindOpen.Application.Modules.ApplicationModuleInstance
  - BindOpen.Application.Modules.AppModule
  - BindOpen.Application.Modules.AppSection
  - BindOpen.Data.Business.BusinessCase
  - BindOpen.Data.Entities.DataEntity
  - BindOpen.Data.Items.DataSchema
  - BindOpen.Data.Items.IndexedDataItem
  - BindOpen.Extensions.Definition.BdoExtensionDefinitionDto
  - BindOpen.Extensions.Runtime.BdoExtensionItemGroup
  - BindOpen.System.Diagnostics.BdoLog
  - BindOpen.System.Diagnostics.Events.BdoEvent
  implements:
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  inheritedMembers:
  - BindOpen.Data.Items.TitledDataItem.Title
  - BindOpen.Data.Items.TitledDataItem.TitleSpecified
  - BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  - BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  - BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  - BindOpen.Data.Items.NamedDataItem.Name
  - BindOpen.Data.Items.NamedDataItem.NameSpecified
  - BindOpen.Data.Items.NamedDataItem.Key
  - BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  - BindOpen.Data.Items.StoredDataItem.NamePreffix
  - BindOpen.Data.Items.StoredDataItem.CreationDate
  - BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.LastModificationDate
  - BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  - BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Data.Items.DescribedDataItem.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Items.DescribedDataItem})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Items.DescribedDataItem.Description
  commentId: P:BindOpen.Data.Items.DescribedDataItem.Description
  id: Description
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: DescribedDataItem.Description
  fullName: BindOpen.Data.Items.DescribedDataItem.Description
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Description
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 23
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nDescription of this instance.\n"
  example: []
  syntax:
    content: public DictionaryDataItem Description { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DictionaryDataItem
    content.vb: Public Property Description As DictionaryDataItem
  overload: BindOpen.Data.Items.DescribedDataItem.Description*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.Description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  commentId: P:BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  id: DescriptionSpecified
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: DescriptionSpecified
  nameWithType: DescribedDataItem.DescriptionSpecified
  fullName: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DescriptionSpecified
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 29
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nSpecification of the Description property of this instance.\n"
  example: []
  syntax:
    content: public bool DescriptionSpecified { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DescriptionSpecified As Boolean
  overload: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Data.Items.DescribedDataItem.#ctor
  commentId: M:BindOpen.Data.Items.DescribedDataItem.#ctor
  id: '#ctor'
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: DescribedDataItem()
  nameWithType: DescribedDataItem.DescribedDataItem()
  fullName: BindOpen.Data.Items.DescribedDataItem.DescribedDataItem()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 43
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nInstantiates a new instance of the DescribedDataItem class.\n"
  example: []
  syntax:
    content: public DescribedDataItem()
    content.vb: Public Sub New
  overload: BindOpen.Data.Items.DescribedDataItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: DescribedDataItem(String, String, String)
  nameWithType: DescribedDataItem.DescribedDataItem(String, String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.DescribedDataItem(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 53
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nInstantiates a new instance of the DescribedDataItem class considering the specified preffix name.\n"
  example: []
  syntax:
    content: public DescribedDataItem(string name, string namePreffix = "", string id = null)
    parameters:
    - id: name
      type: System.String
      description: The name of this instance.
    - id: namePreffix
      type: System.String
      description: The preffix of the name of this instance.
    - id: id
      type: System.String
      description: The ID to consider.
    content.vb: Public Sub New(name As String, namePreffix As String = "", id As String = Nothing)
  overload: BindOpen.Data.Items.DescribedDataItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: DescribedDataItem(String, String, String, String, String)
  nameWithType: DescribedDataItem.DescribedDataItem(String, String, String, String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.DescribedDataItem(System.String, System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 68
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nInstantiates a new instance of the DescribedDataItem class considering the specified preffix name.\n"
  example: []
  syntax:
    content: public DescribedDataItem(string name, string title, string description, string namePreffix = "", string id = null)
    parameters:
    - id: name
      type: System.String
      description: The name of this instance.
    - id: title
      type: System.String
      description: The title of this instance.
    - id: description
      type: System.String
      description: The description of this instance.
    - id: namePreffix
      type: System.String
      description: The preffix of the name of this instance.
    - id: id
      type: System.String
      description: The ID to consider.
    content.vb: Public Sub New(name As String, title As String, description As String, namePreffix As String = "", id As String = Nothing)
  overload: BindOpen.Data.Items.DescribedDataItem.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  id: Update(BindOpen.Data.Items.IDescribedDataItem)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: Update(IDescribedDataItem)
  nameWithType: DescribedDataItem.Update(IDescribedDataItem)
  fullName: BindOpen.Data.Items.DescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Update
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 94
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nUpdates this instance with the base object.\n"
  example: []
  syntax:
    content: public void Update(IDescribedDataItem updateBaseObject)
    parameters:
    - id: updateBaseObject
      type: BindOpen.Data.Items.IDescribedDataItem
      description: The update base object to consider.
    content.vb: Public Sub Update(updateBaseObject As IDescribedDataItem)
  overload: BindOpen.Data.Items.DescribedDataItem.Update*
  implements:
  - BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  id: AddDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: AddDescription(String)
  nameWithType: DescribedDataItem.AddDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddDescription
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 111
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nAdds the title text.\n"
  example: []
  syntax:
    content: public void AddDescription(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub AddDescription(text As String)
  overload: BindOpen.Data.Items.DescribedDataItem.AddDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String,System.String)
  id: AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: AddDescription(String, String)
  nameWithType: DescribedDataItem.AddDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AddDescription
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 121
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nAdds the title text.\n"
  example: []
  syntax:
    content: public void AddDescription(string key, string text)
    parameters:
    - id: key
      type: System.String
      description: The key to consider.
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub AddDescription(key As String, text As String)
  overload: BindOpen.Data.Items.DescribedDataItem.AddDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  id: SetDescription(System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: SetDescription(String)
  nameWithType: DescribedDataItem.SetDescription(String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDescription
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 130
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nSets the title text.\n"
  example: []
  syntax:
    content: public void SetDescription(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub SetDescription(text As String)
  overload: BindOpen.Data.Items.DescribedDataItem.SetDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String,System.String)
  id: SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: SetDescription(String, String)
  nameWithType: DescribedDataItem.SetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetDescription
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 140
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nSets the title text.\n"
  example: []
  syntax:
    content: public void SetDescription(string key = "*", string text = "*")
    parameters:
    - id: key
      type: System.String
      description: The key to consider.
    - id: text
      type: System.String
      description: The text to consider.
    content.vb: Public Sub SetDescription(key As String = "*", text As String = "*")
  overload: BindOpen.Data.Items.DescribedDataItem.SetDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String,System.String)
  id: GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: GetDescription(String, String)
  nameWithType: DescribedDataItem.GetDescription(String, String)
  fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetDescription
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 158
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nReturns the description label.\n"
  example: []
  syntax:
    content: public virtual string GetDescription(string variantName = "*", string defaultVariantName = "*")
    parameters:
    - id: variantName
      type: System.String
      description: The variant variant name to consider.
    - id: defaultVariantName
      type: System.String
      description: The default variant name to consider.
    return:
      type: System.String
    content.vb: Public Overridable Function GetDescription(variantName As String = "*", defaultVariantName As String = "*") As String
  overload: BindOpen.Data.Items.DescribedDataItem.GetDescription*
  implements:
  - BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Data.Items.DescribedDataItem.Clone
  commentId: M:BindOpen.Data.Items.DescribedDataItem.Clone
  id: Clone
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: DescribedDataItem.Clone()
  fullName: BindOpen.Data.Items.DescribedDataItem.Clone()
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Clone
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 171
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nClones this instance.\n"
  example: []
  syntax:
    content: public override object Clone()
    return:
      type: System.Object
      description: Returns a cloned instance.
    content.vb: Public Overrides Function Clone As Object
  overridden: BindOpen.Data.Items.TitledDataItem.Clone
  overload: BindOpen.Data.Items.DescribedDataItem.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DescribedDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateStorageInfo
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 192
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nUpdates information for storage.\n"
  example: []
  syntax:
    content: public override void UpdateStorageInfo(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateStorageInfo(log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DescribedDataItem
  langs:
  - csharp
  - vb
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DescribedDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Items/DescribedDataItem.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateRuntimeInfo
    path: ../src/BindOpen.Core/Data/Items/DescribedDataItem.cs
    startLine: 204
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Items
  summary: "\nUpdates information for runtime.\n"
  example: []
  syntax:
    content: public override void UpdateRuntimeInfo(IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The set of script variables to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateRuntimeInfo(scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Data.Items.StoredDataItem
  commentId: T:BindOpen.Data.Items.StoredDataItem
  parent: BindOpen.Data.Items
  name: StoredDataItem
  nameWithType: StoredDataItem
  fullName: BindOpen.Data.Items.StoredDataItem
- uid: BindOpen.Data.Items.NamedDataItem
  commentId: T:BindOpen.Data.Items.NamedDataItem
  parent: BindOpen.Data.Items
  name: NamedDataItem
  nameWithType: NamedDataItem
  fullName: BindOpen.Data.Items.NamedDataItem
- uid: BindOpen.Data.Items.TitledDataItem
  commentId: T:BindOpen.Data.Items.TitledDataItem
  parent: BindOpen.Data.Items
  name: TitledDataItem
  nameWithType: TitledDataItem
  fullName: BindOpen.Data.Items.TitledDataItem
- uid: BindOpen.Data.Items.IDescribedDataItem
  commentId: T:BindOpen.Data.Items.IDescribedDataItem
  parent: BindOpen.Data.Items
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  commentId: T:BindOpen.Data.Items.ITitledDataItem
  parent: BindOpen.Data.Items
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  commentId: T:BindOpen.Data.Items.INamedDataItem
  parent: BindOpen.Data.Items
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  commentId: T:BindOpen.Data.Items.IStoredDataItem
  parent: BindOpen.Data.Items
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  commentId: T:BindOpen.Data.Items.IStorable
  parent: BindOpen.Data.Items
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  commentId: T:BindOpen.Data.Items.IGloballyTitled
  parent: BindOpen.Data.Items
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  commentId: T:BindOpen.Data.Items.IGloballyDescribed
  parent: BindOpen.Data.Items
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: BindOpen.Data.Items.TitledDataItem.Title
  commentId: P:BindOpen.Data.Items.TitledDataItem.Title
  parent: BindOpen.Data.Items.TitledDataItem
  name: Title
  nameWithType: TitledDataItem.Title
  fullName: BindOpen.Data.Items.TitledDataItem.Title
- uid: BindOpen.Data.Items.TitledDataItem.TitleSpecified
  commentId: P:BindOpen.Data.Items.TitledDataItem.TitleSpecified
  parent: BindOpen.Data.Items.TitledDataItem
  name: TitleSpecified
  nameWithType: TitledDataItem.TitleSpecified
  fullName: BindOpen.Data.Items.TitledDataItem.TitleSpecified
- uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  commentId: M:BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  parent: BindOpen.Data.Items.TitledDataItem
  name: Update(ITitledDataItem)
  nameWithType: TitledDataItem.Update(ITitledDataItem)
  fullName: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.Update(BindOpen.Data.Items.ITitledDataItem)
    name: Update
    nameWithType: TitledDataItem.Update
    fullName: BindOpen.Data.Items.TitledDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.ITitledDataItem
    name: ITitledDataItem
    nameWithType: ITitledDataItem
    fullName: BindOpen.Data.Items.ITitledDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String)
  nameWithType: TitledDataItem.AddTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: AddTitle(String, String)
  nameWithType: TitledDataItem.AddTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.AddTitle(System.String,System.String)
    name: AddTitle
    nameWithType: TitledDataItem.AddTitle
    fullName: BindOpen.Data.Items.TitledDataItem.AddTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String)
  nameWithType: TitledDataItem.SetTitle(String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: SetTitle(String, String)
  nameWithType: TitledDataItem.SetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.SetTitle(System.String,System.String)
    name: SetTitle
    nameWithType: TitledDataItem.SetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.SetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  commentId: M:BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
  parent: BindOpen.Data.Items.TitledDataItem
  isExternal: true
  name: GetTitle(String, String)
  nameWithType: TitledDataItem.GetTitle(String, String)
  fullName: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.GetTitle(System.String,System.String)
    name: GetTitle
    nameWithType: TitledDataItem.GetTitle
    fullName: BindOpen.Data.Items.TitledDataItem.GetTitle
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.Name
  commentId: P:BindOpen.Data.Items.NamedDataItem.Name
  parent: BindOpen.Data.Items.NamedDataItem
  name: Name
  nameWithType: NamedDataItem.Name
  fullName: BindOpen.Data.Items.NamedDataItem.Name
- uid: BindOpen.Data.Items.NamedDataItem.NameSpecified
  commentId: P:BindOpen.Data.Items.NamedDataItem.NameSpecified
  parent: BindOpen.Data.Items.NamedDataItem
  name: NameSpecified
  nameWithType: NamedDataItem.NameSpecified
  fullName: BindOpen.Data.Items.NamedDataItem.NameSpecified
- uid: BindOpen.Data.Items.NamedDataItem.Key
  commentId: M:BindOpen.Data.Items.NamedDataItem.Key
  parent: BindOpen.Data.Items.NamedDataItem
  name: Key()
  nameWithType: NamedDataItem.Key()
  fullName: BindOpen.Data.Items.NamedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.Key
    name: Key
    nameWithType: NamedDataItem.Key
    fullName: BindOpen.Data.Items.NamedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  commentId: M:BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
  parent: BindOpen.Data.Items.NamedDataItem
  isExternal: true
  name: GetClonedName(String, String)
  nameWithType: NamedDataItem.GetClonedName(String, String)
  fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.NamedDataItem.GetClonedName(System.String,System.String)
    name: GetClonedName
    nameWithType: NamedDataItem.GetClonedName
    fullName: BindOpen.Data.Items.NamedDataItem.GetClonedName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.StoredDataItem.NamePreffix
  commentId: P:BindOpen.Data.Items.StoredDataItem.NamePreffix
  parent: BindOpen.Data.Items.StoredDataItem
  name: NamePreffix
  nameWithType: StoredDataItem.NamePreffix
  fullName: BindOpen.Data.Items.StoredDataItem.NamePreffix
- uid: BindOpen.Data.Items.StoredDataItem.CreationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDate
  nameWithType: StoredDataItem.CreationDate
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDate
- uid: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: CreationDateSpecified
  nameWithType: StoredDataItem.CreationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.CreationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDate
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDate
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDate
  nameWithType: StoredDataItem.LastModificationDate
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDate
- uid: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  commentId: P:BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
  parent: BindOpen.Data.Items.StoredDataItem
  name: LastModificationDateSpecified
  nameWithType: StoredDataItem.LastModificationDateSpecified
  fullName: BindOpen.Data.Items.StoredDataItem.LastModificationDateSpecified
- uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  commentId: M:BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  parent: BindOpen.Data.Items.StoredDataItem
  name: DeclareUpdate()
  nameWithType: StoredDataItem.DeclareUpdate()
  fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate()
  spec.csharp:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
    name: DeclareUpdate
    nameWithType: StoredDataItem.DeclareUpdate
    fullName: BindOpen.Data.Items.StoredDataItem.DeclareUpdate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Data.Items.DescribedDataItem})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<DescribedDataItem>(Action<DescribedDataItem>)
  nameWithType: ObjectHelper.Using<DescribedDataItem>(Action<DescribedDataItem>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Items.DescribedDataItem>(System.Action<BindOpen.Data.Items.DescribedDataItem>)
  nameWithType.vb: ObjectHelper.Using(Of DescribedDataItem)(Action(Of DescribedDataItem))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Items.DescribedDataItem)(System.Action(Of BindOpen.Data.Items.DescribedDataItem))
  name.vb: Using(Of DescribedDataItem)(Action(Of DescribedDataItem))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<DescribedDataItem>
    nameWithType: ObjectHelper.Using<DescribedDataItem>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Data.Items.DescribedDataItem>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Items.DescribedDataItem
    name: DescribedDataItem
    nameWithType: DescribedDataItem
    fullName: BindOpen.Data.Items.DescribedDataItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of DescribedDataItem)
    nameWithType: ObjectHelper.Using(Of DescribedDataItem)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Data.Items.DescribedDataItem)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Items.DescribedDataItem
    name: DescribedDataItem
    nameWithType: DescribedDataItem
    fullName: BindOpen.Data.Items.DescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Items.DescribedDataItem.Description*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.Description
  name: Description
  nameWithType: DescribedDataItem.Description
  fullName: BindOpen.Data.Items.DescribedDataItem.Description
- uid: BindOpen.Data.Items.IGloballyDescribed.Description
  commentId: P:BindOpen.Data.Items.IGloballyDescribed.Description
  parent: BindOpen.Data.Items.IGloballyDescribed
  name: Description
  nameWithType: IGloballyDescribed.Description
  fullName: BindOpen.Data.Items.IGloballyDescribed.Description
- uid: BindOpen.Data.Items.DictionaryDataItem
  commentId: T:BindOpen.Data.Items.DictionaryDataItem
  parent: BindOpen.Data.Items
  name: DictionaryDataItem
  nameWithType: DictionaryDataItem
  fullName: BindOpen.Data.Items.DictionaryDataItem
- uid: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
  name: DescriptionSpecified
  nameWithType: DescribedDataItem.DescriptionSpecified
  fullName: BindOpen.Data.Items.DescribedDataItem.DescriptionSpecified
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Items.DescribedDataItem.#ctor*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.#ctor
  name: DescribedDataItem
  nameWithType: DescribedDataItem.DescribedDataItem
  fullName: BindOpen.Data.Items.DescribedDataItem.DescribedDataItem
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Items.DescribedDataItem.Update*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.Update
  name: Update
  nameWithType: DescribedDataItem.Update
  fullName: BindOpen.Data.Items.DescribedDataItem.Update
- uid: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  commentId: M:BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  parent: BindOpen.Data.Items.IDescribedDataItem
  name: Update(IDescribedDataItem)
  nameWithType: IDescribedDataItem.Update(IDescribedDataItem)
  fullName: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: IDescribedDataItem.Update
    fullName: BindOpen.Data.Items.IDescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDescribedDataItem.Update(BindOpen.Data.Items.IDescribedDataItem)
    name: Update
    nameWithType: IDescribedDataItem.Update
    fullName: BindOpen.Data.Items.IDescribedDataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Items.IDescribedDataItem
    name: IDescribedDataItem
    nameWithType: IDescribedDataItem
    fullName: BindOpen.Data.Items.IDescribedDataItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.AddDescription*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.AddDescription
  name: AddDescription
  nameWithType: DescribedDataItem.AddDescription
  fullName: BindOpen.Data.Items.DescribedDataItem.AddDescription
- uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: AddDescription(String)
  nameWithType: IGloballyDescribed.AddDescription(String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: AddDescription(String, String)
  nameWithType: IGloballyDescribed.AddDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.AddDescription(System.String,System.String)
    name: AddDescription
    nameWithType: IGloballyDescribed.AddDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.AddDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.SetDescription*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.SetDescription
  name: SetDescription
  nameWithType: DescribedDataItem.SetDescription
  fullName: BindOpen.Data.Items.DescribedDataItem.SetDescription
- uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: SetDescription(String)
  nameWithType: IGloballyDescribed.SetDescription(String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: SetDescription(String, String)
  nameWithType: IGloballyDescribed.SetDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.SetDescription(System.String,System.String)
    name: SetDescription
    nameWithType: IGloballyDescribed.SetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.SetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.GetDescription*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.GetDescription
  name: GetDescription
  nameWithType: DescribedDataItem.GetDescription
  fullName: BindOpen.Data.Items.DescribedDataItem.GetDescription
- uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  commentId: M:BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
  parent: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: GetDescription(String, String)
  nameWithType: IGloballyDescribed.GetDescription(String, String)
  fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: IGloballyDescribed.GetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IGloballyDescribed.GetDescription(System.String,System.String)
    name: GetDescription
    nameWithType: IGloballyDescribed.GetDescription
    fullName: BindOpen.Data.Items.IGloballyDescribed.GetDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.Clone
  commentId: M:BindOpen.Data.Items.TitledDataItem.Clone
  parent: BindOpen.Data.Items.TitledDataItem
  name: Clone()
  nameWithType: TitledDataItem.Clone()
  fullName: BindOpen.Data.Items.TitledDataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.Clone
    name: Clone
    nameWithType: TitledDataItem.Clone
    fullName: BindOpen.Data.Items.TitledDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.Clone
    name: Clone
    nameWithType: TitledDataItem.Clone
    fullName: BindOpen.Data.Items.TitledDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.Clone*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.Clone
  name: Clone
  nameWithType: DescribedDataItem.Clone
  fullName: BindOpen.Data.Items.DescribedDataItem.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.TitledDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: TitledDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: TitledDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: TitledDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.TitledDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
  name: UpdateStorageInfo
  nameWithType: DescribedDataItem.UpdateStorageInfo
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateStorageInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.TitledDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: TitledDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: TitledDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: TitledDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.TitledDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo*
  commentId: Overload:BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
  name: UpdateRuntimeInfo
  nameWithType: DescribedDataItem.UpdateRuntimeInfo
  fullName: BindOpen.Data.Items.DescribedDataItem.UpdateRuntimeInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope
  commentId: T:BindOpen.Application.Scopes.IBdoScope
  parent: BindOpen.Application.Scopes
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  commentId: T:BindOpen.System.Scripting.IBdoScriptVariableSet
  parent: BindOpen.System.Scripting
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: BindOpen.System.Scripting
  commentId: N:BindOpen.System.Scripting
  name: BindOpen.System.Scripting
  nameWithType: BindOpen.System.Scripting
  fullName: BindOpen.System.Scripting
shouldSkipMarkup: true
