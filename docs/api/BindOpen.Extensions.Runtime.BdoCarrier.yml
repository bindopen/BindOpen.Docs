### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Runtime.BdoCarrier
  commentId: T:BindOpen.Extensions.Runtime.BdoCarrier
  id: BdoCarrier
  parent: BindOpen.Extensions.Runtime
  children:
  - BindOpen.Extensions.Runtime.BdoCarrier.#ctor
  - BindOpen.Extensions.Runtime.BdoCarrier.#ctor(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration)
  - BindOpen.Extensions.Runtime.BdoCarrier.#ctor(System.String,System.String)
  - BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  - BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  - BindOpen.Extensions.Runtime.BdoCarrier.Flag
  - BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  - BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  - BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  - BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  - BindOpen.Extensions.Runtime.BdoCarrier.Path
  - BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  - BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
  - BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  langs:
  - csharp
  - vb
  name: BdoCarrier
  nameWithType: BdoCarrier
  fullName: BindOpen.Extensions.Runtime.BdoCarrier
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoCarrier
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 15
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThis class represents a carrier.\n"
  example: []
  syntax:
    content: 'public abstract class BdoCarrier : TBdoExtensionItem<IBdoCarrierDefinition>, IBdoCarrier, ITBdoExtensionItem<IBdoCarrierDefinition>, IBdoExtensionItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed'
    content.vb: >-
      Public MustInherit Class BdoCarrier
          Inherits TBdoExtensionItem(Of IBdoCarrierDefinition)
          Implements IBdoCarrier, ITBdoExtensionItem(Of IBdoCarrierDefinition), IBdoExtensionItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Items.IdentifiedDataItem
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  derivedClasses:
  - BindOpen.Extensions.Carriers.RepositoryItem
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  - BindOpen.Extensions.Runtime.IBdoExtensionItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.INamed
  inheritedMembers:
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}._configuration
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Name
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.AsElement(System.String)
  - BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  - BindOpen.Data.Items.IdentifiedDataItem.Id
  - BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  - BindOpen.Data.Items.IdentifiedDataItem.Key
  - BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - BindOpen.Data.Items.IdentifiedDataItem.Clone
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - BindOpen.Extensions.Runtime.BdoCarrier.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Extensions.Runtime.BdoCarrier})
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  id: Configuration
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: BdoCarrier.Configuration
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Configuration
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 26
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThe configuration of this instance.\n"
  example: []
  syntax:
    content: public IBdoCarrierConfiguration Configuration { get; }
    parameters: []
    return:
      type: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
    content.vb: Public ReadOnly Property Configuration As IBdoCarrierConfiguration
  overload: BindOpen.Extensions.Runtime.BdoCarrier.Configuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Path
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.Path
  id: Path
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: BdoCarrier.Path
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Path
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Path
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 43
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nPath of this instance.\n"
  example: []
  syntax:
    content: >-
      [DetailProperty("path")]

      public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DetailProperty("path")>

      Public Property Path As String
  overload: BindOpen.Extensions.Runtime.BdoCarrier.Path*
  attributes:
  - type: BindOpen.Extensions.Runtime.DetailPropertyAttribute
    ctor: BindOpen.Extensions.Runtime.DetailPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: path
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  id: ParentPath
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: ParentPath
  nameWithType: BdoCarrier.ParentPath
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ParentPath
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 49
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThe parent path of this instance.\n"
  example: []
  syntax:
    content: >-
      [DetailProperty("parentPath")]

      public string ParentPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DetailProperty("parentPath")>

      Public Property ParentPath As String
  overload: BindOpen.Extensions.Runtime.BdoCarrier.ParentPath*
  attributes:
  - type: BindOpen.Extensions.Runtime.DetailPropertyAttribute
    ctor: BindOpen.Extensions.Runtime.DetailPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: parentPath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  id: CreationDate
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: BdoCarrier.CreationDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: CreationDate
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 57
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThe creation date of this instance.\n"
  example: []
  syntax:
    content: >-
      [DetailProperty("creationDate")]

      public string CreationDate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DetailProperty("creationDate")>

      Public Property CreationDate As String
  overload: BindOpen.Extensions.Runtime.BdoCarrier.CreationDate*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  attributes:
  - type: BindOpen.Extensions.Runtime.DetailPropertyAttribute
    ctor: BindOpen.Extensions.Runtime.DetailPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: creationDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Flag
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.Flag
  id: Flag
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: Flag
  nameWithType: BdoCarrier.Flag
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Flag
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Flag
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 63
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThe information flag of this instance.\n"
  example: []
  syntax:
    content: >-
      [DetailProperty("flag")]

      public string Flag { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DetailProperty("flag")>

      Public Property Flag As String
  overload: BindOpen.Extensions.Runtime.BdoCarrier.Flag*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  attributes:
  - type: BindOpen.Extensions.Runtime.DetailPropertyAttribute
    ctor: BindOpen.Extensions.Runtime.DetailPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: flag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  id: IsReadonly
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: IsReadonly
  nameWithType: BdoCarrier.IsReadonly
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: IsReadonly
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 69
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nIndicates whether this instance is read only.\n"
  example: []
  syntax:
    content: >-
      [DetailProperty("isReadOnly")]

      public bool IsReadonly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <DetailProperty("isReadOnly")>

      Public Property IsReadonly As Boolean
  overload: BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  attributes:
  - type: BindOpen.Extensions.Runtime.DetailPropertyAttribute
    ctor: BindOpen.Extensions.Runtime.DetailPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isReadOnly
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  id: LastAccessDate
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: LastAccessDate
  nameWithType: BdoCarrier.LastAccessDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LastAccessDate
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 76
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThe date of last access of this instance.\n"
  example: []
  syntax:
    content: >-
      [DetailProperty("lastAccessDate")]

      public string LastAccessDate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DetailProperty("lastAccessDate")>

      Public Property LastAccessDate As String
  overload: BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  attributes:
  - type: BindOpen.Extensions.Runtime.DetailPropertyAttribute
    ctor: BindOpen.Extensions.Runtime.DetailPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastAccessDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  id: LastWriteDate
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: LastWriteDate
  nameWithType: BdoCarrier.LastWriteDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: LastWriteDate
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 82
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThe date of last write of this instance.\n"
  example: []
  syntax:
    content: >-
      [DetailProperty("lastWriteDate")]

      public string LastWriteDate { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DetailProperty("lastWriteDate")>

      Public Property LastWriteDate As String
  overload: BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  attributes:
  - type: BindOpen.Extensions.Runtime.DetailPropertyAttribute
    ctor: BindOpen.Extensions.Runtime.DetailPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastWriteDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  commentId: P:BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  id: RelativePath
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: RelativePath
  nameWithType: BdoCarrier.RelativePath
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  type: Property
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: RelativePath
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 88
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nThe relative path of this instance.\n"
  example: []
  syntax:
    content: public string RelativePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RelativePath As String
  overload: BindOpen.Extensions.Runtime.BdoCarrier.RelativePath*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.#ctor
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.#ctor
  id: '#ctor'
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: BdoCarrier()
  nameWithType: BdoCarrier.BdoCarrier()
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.BdoCarrier()
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 111
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nInstantiates a new instance of the Carrier class.\n"
  example: []
  syntax:
    content: protected BdoCarrier()
    content.vb: Protected Sub New
  overload: BindOpen.Extensions.Runtime.BdoCarrier.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Runtime.BdoCarrier.#ctor(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.#ctor(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration)
  id: '#ctor(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration)'
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: BdoCarrier(IBdoCarrierConfiguration)
  nameWithType: BdoCarrier.BdoCarrier(IBdoCarrierConfiguration)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.BdoCarrier(BindOpen.Extensions.Runtime.IBdoCarrierConfiguration)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 119
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nInstantiates a new instance of the Carrier class.\n"
  example: []
  syntax:
    content: protected BdoCarrier(IBdoCarrierConfiguration config)
    parameters:
    - id: config
      type: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
      description: The configuration of this instance.
    content.vb: Protected Sub New(config As IBdoCarrierConfiguration)
  overload: BindOpen.Extensions.Runtime.BdoCarrier.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Runtime.BdoCarrier.#ctor(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: BdoCarrier(String, String)
  nameWithType: BdoCarrier.BdoCarrier(String, String)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.BdoCarrier(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 128
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nInstantiates a new instance of the Connector class.\n"
  example: []
  syntax:
    content: protected BdoCarrier(string path, string relativePath = null)
    parameters:
    - id: path
      type: System.String
      description: The path to consider.
    - id: relativePath
      type: System.String
      description: The path to consider.
    content.vb: Protected Sub New(path As String, relativePath As String = Nothing)
  overload: BindOpen.Extensions.Runtime.BdoCarrier.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  id: AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: AsElement(String, IBdoLog)
  nameWithType: BdoCarrier.AsElement(String, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.AsElement(System.String, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: AsElement
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 141
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nReturns a data element representing this instance.\n"
  example: []
  syntax:
    content: public ICarrierElement AsElement(string name = null, IBdoLog log = null)
    parameters:
    - id: name
      type: System.String
      description: The name of the element to create.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log of the operation.
    return:
      type: BindOpen.Data.Elements.ICarrierElement
      description: Retuns the data element that represents this instace.
    content.vb: Public Function AsElement(name As String = Nothing, log As IBdoLog = Nothing) As ICarrierElement
  overload: BindOpen.Extensions.Runtime.BdoCarrier.AsElement*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String,System.String)
  id: SetPath(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: SetPath(String, String)
  nameWithType: BdoCarrier.SetPath(String, String)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.SetPath(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: SetPath
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 159
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nSets the path of this instance.\n"
  example: []
  syntax:
    content: public virtual void SetPath(string path = null, string relativePath = null)
    parameters:
    - id: path
      type: System.String
      description: The new path to consider. Null to update the existing one.
    - id: relativePath
      type: System.String
      description: The new relative path to consider. Null to keep the existing one.
    content.vb: Public Overridable Sub SetPath(path As String = Nothing, relativePath As String = Nothing)
  overload: BindOpen.Extensions.Runtime.BdoCarrier.SetPath*
  implements:
  - BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: BdoCarrier.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateStorageInfo
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 190
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nUpdates information for storage.\n"
  example: []
  syntax:
    content: public override void UpdateStorageInfo(IBdoLog log = null)
    parameters:
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateStorageInfo(log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.BdoCarrier
  langs:
  - csharp
  - vb
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoCarrier.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: UpdateRuntimeInfo
    path: ../src/BindOpen.Core/Extensions/Runtime/Items/Carriers/BdoCarrier.cs
    startLine: 211
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Extensions.Runtime
  summary: "\nUpdates information for runtime.\n"
  example: []
  syntax:
    content: public override void UpdateRuntimeInfo(IBdoScope scope = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: scope
      type: BindOpen.Application.Scopes.IBdoScope
      description: The scope to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The set of script variables to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to update.
    content.vb: Public Overrides Sub UpdateRuntimeInfo(scope As IBdoScope = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo*
  implements:
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Items.IdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IdentifiedDataItem
  nameWithType: IdentifiedDataItem
  fullName: BindOpen.Data.Items.IdentifiedDataItem
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
  name: TBdoExtensionItem<IBdoCarrierDefinition>
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  name.vb: TBdoExtensionItem(Of IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoCarrier
  commentId: T:BindOpen.Extensions.Runtime.IBdoCarrier
  parent: BindOpen.Extensions.Runtime
  name: IBdoCarrier
  nameWithType: IBdoCarrier
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  name: ITBdoExtensionItem<IBdoCarrierDefinition>
  nameWithType: ITBdoExtensionItem<IBdoCarrierDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>
  nameWithType.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  name.vb: ITBdoExtensionItem(Of IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoExtensionItem
  commentId: T:BindOpen.Extensions.Runtime.IBdoExtensionItem
  parent: BindOpen.Extensions.Runtime
  name: IBdoExtensionItem
  nameWithType: IBdoExtensionItem
  fullName: BindOpen.Extensions.Runtime.IBdoExtensionItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  commentId: T:BindOpen.Data.Items.IIdentifiedDataItem
  parent: BindOpen.Data.Items
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}._configuration
  commentId: F:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}._configuration
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1._configuration
  name: _configuration
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>._configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>._configuration
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition)._configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition)._configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Name
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Name
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Name
  name: Name
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.Name
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.Name
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).Name
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).Name
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  name: IBdoExtensionItem.Configuration
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.IBdoExtensionItem.Configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  name.vb: BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.Definition
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Definition
  name: Definition
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.Definition
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.Definition
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).Definition
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).Definition
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.AsElement(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.AsElement(System.String)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
  name: AsElement(String)
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.AsElement(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.AsElement(System.String)
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).AsElement(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).AsElement(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem(Of IBdoCarrierDefinition).AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).AsElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  parent: BindOpen.Extensions.Runtime.TBdoExtensionItem{BindOpen.Extensions.Definition.IBdoCarrierDefinition}
  definition: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
  name: SetDefinition(IBdoCarrierDefinition)
  nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.SetDefinition(IBdoCarrierDefinition)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  nameWithType.vb: TBdoExtensionItem(Of IBdoCarrierDefinition).SetDefinition(IBdoCarrierDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).SetDefinition(BindOpen.Extensions.Definition.IBdoCarrierDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem<IBdoCarrierDefinition>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<BindOpen.Extensions.Definition.IBdoCarrierDefinition>.SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem(Of IBdoCarrierDefinition).SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoCarrierDefinition).SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoCarrierDefinition
    name: IBdoCarrierDefinition
    nameWithType: IBdoCarrierDefinition
    fullName: BindOpen.Extensions.Definition.IBdoCarrierDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Id
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.Id
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Id
  nameWithType: IdentifiedDataItem.Id
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Id
- uid: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  commentId: P:BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: IdSpecified
  nameWithType: IdentifiedDataItem.IdSpecified
  fullName: BindOpen.Data.Items.IdentifiedDataItem.IdSpecified
- uid: BindOpen.Data.Items.IdentifiedDataItem.Key
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Key
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Key()
  nameWithType: IdentifiedDataItem.Key()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Key
    name: Key
    nameWithType: IdentifiedDataItem.Key
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Key
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: NewGuid()
  nameWithType: IdentifiedDataItem.NewGuid()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
    name: NewGuid
    nameWithType: IdentifiedDataItem.NewGuid
    fullName: BindOpen.Data.Items.IdentifiedDataItem.NewGuid
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
  commentId: M:BindOpen.Data.Items.IdentifiedDataItem.Clone
  parent: BindOpen.Data.Items.IdentifiedDataItem
  name: Clone()
  nameWithType: IdentifiedDataItem.Clone()
  fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
    name: Clone
    nameWithType: IdentifiedDataItem.Clone
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IdentifiedDataItem.Clone
    name: Clone
    nameWithType: IdentifiedDataItem.Clone
    fullName: BindOpen.Data.Items.IdentifiedDataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: DataItem.Dispose(Boolean)
  fullName: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose(System.Boolean)
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{BindOpen.Extensions.Runtime.BdoCarrier})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  name: Using<BdoCarrier>(Action<BdoCarrier>)
  nameWithType: ObjectHelper.Using<BdoCarrier>(Action<BdoCarrier>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Extensions.Runtime.BdoCarrier>(System.Action<BindOpen.Extensions.Runtime.BdoCarrier>)
  nameWithType.vb: ObjectHelper.Using(Of BdoCarrier)(Action(Of BdoCarrier))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Extensions.Runtime.BdoCarrier)(System.Action(Of BindOpen.Extensions.Runtime.BdoCarrier))
  name.vb: Using(Of BdoCarrier)(Action(Of BdoCarrier))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using<BdoCarrier>
    nameWithType: ObjectHelper.Using<BdoCarrier>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<BindOpen.Extensions.Runtime.BdoCarrier>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Runtime.BdoCarrier
    name: BdoCarrier
    nameWithType: BdoCarrier
    fullName: BindOpen.Extensions.Runtime.BdoCarrier
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(System.Action{``0})
    name: Using(Of BdoCarrier)
    nameWithType: ObjectHelper.Using(Of BdoCarrier)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of BindOpen.Extensions.Runtime.BdoCarrier)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Runtime.BdoCarrier
    name: BdoCarrier
    nameWithType: BdoCarrier
    fullName: BindOpen.Extensions.Runtime.BdoCarrier
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
  commentId: T:BindOpen.Extensions.Runtime.TBdoExtensionItem`1
  name: TBdoExtensionItem<T>
  nameWithType: TBdoExtensionItem<T>
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>
  nameWithType.vb: TBdoExtensionItem(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T)
  name.vb: TBdoExtensionItem(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1
    name: TBdoExtensionItem
    nameWithType: TBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  name: ITBdoExtensionItem<T>
  nameWithType: ITBdoExtensionItem<T>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>
  nameWithType.vb: ITBdoExtensionItem(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T)
  name.vb: ITBdoExtensionItem(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1._configuration
  commentId: F:BindOpen.Extensions.Runtime.TBdoExtensionItem`1._configuration
  name: _configuration
  nameWithType: TBdoExtensionItem<T>._configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>._configuration
  nameWithType.vb: TBdoExtensionItem(Of T)._configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T)._configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Name
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Name
  name: Name
  nameWithType: TBdoExtensionItem<T>.Name
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.Name
  nameWithType.vb: TBdoExtensionItem(Of T).Name
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).Name
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.BindOpen#Extensions#Runtime#IBdoExtensionItem#Configuration
  name: IBdoExtensionItem.Configuration
  nameWithType: TBdoExtensionItem<T>.IBdoExtensionItem.Configuration
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  nameWithType.vb: TBdoExtensionItem(Of T).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
  name.vb: BindOpen.Extensions.Runtime.IBdoExtensionItem.Configuration
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Definition
  commentId: P:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.Definition
  name: Definition
  nameWithType: TBdoExtensionItem<T>.Definition
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.Definition
  nameWithType.vb: TBdoExtensionItem(Of T).Definition
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).Definition
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
  isExternal: true
  name: AsElement(String)
  nameWithType: TBdoExtensionItem<T>.AsElement(String)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.AsElement(System.String)
  nameWithType.vb: TBdoExtensionItem(Of T).AsElement(String)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).AsElement(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem<T>.AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.AsElement(System.String)
    name: AsElement
    nameWithType: TBdoExtensionItem(Of T).AsElement
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).AsElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
  commentId: M:BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
  name: SetDefinition(T)
  nameWithType: TBdoExtensionItem<T>.SetDefinition(T)
  fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.SetDefinition(T)
  nameWithType.vb: TBdoExtensionItem(Of T).SetDefinition(T)
  fullName.vb: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).SetDefinition(T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem<T>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem<T>.SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.TBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: TBdoExtensionItem(Of T).SetDefinition
    fullName: BindOpen.Extensions.Runtime.TBdoExtensionItem(Of T).SetDefinition
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
  isExternal: true
  name: Using<T>(T, Action<T>)
  nameWithType: ObjectHelper.Using<T>(T, Action<T>)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>(T, System.Action<T>)
  nameWithType.vb: ObjectHelper.Using(Of T)(T, Action(Of T))
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)(T, System.Action(Of T))
  name.vb: Using(Of T)(T, Action(Of T))
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using<T>
    nameWithType: ObjectHelper.Using<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Using``1(``0,System.Action{``0})
    name: Using(Of T)
    nameWithType: ObjectHelper.Using(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Using(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Configuration*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.Configuration
  name: Configuration
  nameWithType: BdoCarrier.Configuration
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Configuration
- uid: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  commentId: T:BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
  parent: BindOpen.Extensions.Runtime
  name: IBdoCarrierConfiguration
  nameWithType: IBdoCarrierConfiguration
  fullName: BindOpen.Extensions.Runtime.IBdoCarrierConfiguration
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Path*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.Path
  name: Path
  nameWithType: BdoCarrier.Path
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Path
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Extensions.Runtime.BdoCarrier.ParentPath*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
  name: ParentPath
  nameWithType: BdoCarrier.ParentPath
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.ParentPath
- uid: BindOpen.Extensions.Runtime.BdoCarrier.CreationDate*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
  name: CreationDate
  nameWithType: BdoCarrier.CreationDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.CreationDate
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  name: CreationDate
  nameWithType: IBdoCarrier.CreationDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.CreationDate
- uid: BindOpen.Extensions.Runtime.BdoCarrier.Flag*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.Flag
  name: Flag
  nameWithType: BdoCarrier.Flag
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.Flag
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.Flag
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  name: Flag
  nameWithType: IBdoCarrier.Flag
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.Flag
- uid: BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
  name: IsReadonly
  nameWithType: BdoCarrier.IsReadonly
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.IsReadonly
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  name: IsReadonly
  nameWithType: IBdoCarrier.IsReadonly
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.IsReadonly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
  name: LastAccessDate
  nameWithType: BdoCarrier.LastAccessDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.LastAccessDate
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  name: LastAccessDate
  nameWithType: IBdoCarrier.LastAccessDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.LastAccessDate
- uid: BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
  name: LastWriteDate
  nameWithType: BdoCarrier.LastWriteDate
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.LastWriteDate
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  name: LastWriteDate
  nameWithType: IBdoCarrier.LastWriteDate
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.LastWriteDate
- uid: BindOpen.Extensions.Runtime.BdoCarrier.RelativePath*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
  name: RelativePath
  nameWithType: BdoCarrier.RelativePath
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.RelativePath
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  commentId: P:BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  name: RelativePath
  nameWithType: IBdoCarrier.RelativePath
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.RelativePath
- uid: BindOpen.Extensions.Runtime.BdoCarrier.#ctor*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.#ctor
  name: BdoCarrier
  nameWithType: BdoCarrier.BdoCarrier
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.BdoCarrier
- uid: BindOpen.Extensions.Runtime.BdoCarrier.AsElement*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.AsElement
  name: AsElement
  nameWithType: BdoCarrier.AsElement
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.AsElement
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  isExternal: true
  name: AsElement(String, IBdoLog)
  nameWithType: IBdoCarrier.AsElement(String, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AsElement
    nameWithType: IBdoCarrier.AsElement
    fullName: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AsElement
    nameWithType: IBdoCarrier.AsElement
    fullName: BindOpen.Extensions.Runtime.IBdoCarrier.AsElement
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Data.Elements.ICarrierElement
  commentId: T:BindOpen.Data.Elements.ICarrierElement
  parent: BindOpen.Data.Elements
  name: ICarrierElement
  nameWithType: ICarrierElement
  fullName: BindOpen.Data.Elements.ICarrierElement
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: BindOpen.Extensions.Runtime.BdoCarrier.SetPath*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.SetPath
  name: SetPath
  nameWithType: BdoCarrier.SetPath
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.SetPath
- uid: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
  commentId: M:BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
  parent: BindOpen.Extensions.Runtime.IBdoCarrier
  isExternal: true
  name: SetPath(String, String)
  nameWithType: IBdoCarrier.SetPath(String, String)
  fullName: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String, System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
    name: SetPath
    nameWithType: IBdoCarrier.SetPath
    fullName: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath(System.String,System.String)
    name: SetPath
    nameWithType: IBdoCarrier.SetPath
    fullName: BindOpen.Extensions.Runtime.IBdoCarrier.SetPath
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo
  name: UpdateStorageInfo
  nameWithType: BdoCarrier.UpdateStorageInfo
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateStorageInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo*
  commentId: Overload:BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo
  name: UpdateRuntimeInfo
  nameWithType: BdoCarrier.UpdateRuntimeInfo
  fullName: BindOpen.Extensions.Runtime.BdoCarrier.UpdateRuntimeInfo
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Scopes.IBdoScope
  commentId: T:BindOpen.Application.Scopes.IBdoScope
  parent: BindOpen.Application.Scopes
  name: IBdoScope
  nameWithType: IBdoScope
  fullName: BindOpen.Application.Scopes.IBdoScope
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  commentId: T:BindOpen.System.Scripting.IBdoScriptVariableSet
  parent: BindOpen.System.Scripting
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: BindOpen.Application.Scopes
  commentId: N:BindOpen.Application.Scopes
  name: BindOpen.Application.Scopes
  nameWithType: BindOpen.Application.Scopes
  fullName: BindOpen.Application.Scopes
- uid: BindOpen.System.Scripting
  commentId: N:BindOpen.System.Scripting
  name: BindOpen.System.Scripting
  nameWithType: BindOpen.System.Scripting
  fullName: BindOpen.System.Scripting
shouldSkipMarkup: true
