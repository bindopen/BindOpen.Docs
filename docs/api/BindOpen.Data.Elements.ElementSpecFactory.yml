### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Elements.ElementSpecFactory
  commentId: T:BindOpen.Data.Elements.ElementSpecFactory
  id: ElementSpecFactory
  parent: BindOpen.Data.Elements
  children:
  - BindOpen.Data.Elements.ElementSpecFactory.Create(System.String,BindOpen.Data.Common.DataValueType)
  - BindOpen.Data.Elements.ElementSpecFactory.Create(System.String,System.Type)
  langs:
  - csharp
  - vb
  name: ElementSpecFactory
  nameWithType: ElementSpecFactory
  fullName: BindOpen.Data.Elements.ElementSpecFactory
  type: Class
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Factories/ElementSpecFactory.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: ElementSpecFactory
    path: ../src/BindOpen.Core/Data/Elements/Factories/ElementSpecFactory.cs
    startLine: 11
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nThis static class provides methods to create element specifications.\n"
  example: []
  syntax:
    content: public static class ElementSpecFactory
    content.vb: Public Module ElementSpecFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: BindOpen.Data.Elements.ElementSpecFactory.Create(System.String,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Elements.ElementSpecFactory.Create(System.String,BindOpen.Data.Common.DataValueType)
  id: Create(System.String,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Elements.ElementSpecFactory
  langs:
  - csharp
  - vb
  name: Create(String, DataValueType)
  nameWithType: ElementSpecFactory.Create(String, DataValueType)
  fullName: BindOpen.Data.Elements.ElementSpecFactory.Create(System.String, BindOpen.Data.Common.DataValueType)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Factories/ElementSpecFactory.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Create
    path: ../src/BindOpen.Core/Data/Elements/Factories/ElementSpecFactory.cs
    startLine: 20
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nCreates a data element of the specified kind.\n"
  example: []
  syntax:
    content: public static DataElementSpec Create(string name, DataValueType valueType)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    - id: valueType
      type: BindOpen.Data.Common.DataValueType
      description: The value type to consider.
    return:
      type: BindOpen.Data.Elements.DataElementSpec
    content.vb: Public Shared Function Create(name As String, valueType As DataValueType) As DataElementSpec
  overload: BindOpen.Data.Elements.ElementSpecFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Elements.ElementSpecFactory.Create(System.String,System.Type)
  commentId: M:BindOpen.Data.Elements.ElementSpecFactory.Create(System.String,System.Type)
  id: Create(System.String,System.Type)
  parent: BindOpen.Data.Elements.ElementSpecFactory
  langs:
  - csharp
  - vb
  name: Create(String, Type)
  nameWithType: ElementSpecFactory.Create(String, Type)
  fullName: BindOpen.Data.Elements.ElementSpecFactory.Create(System.String, System.Type)
  type: Method
  source:
    remote:
      path: src/BindOpen.Core/Data/Elements/Factories/ElementSpecFactory.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Create
    path: ../src/BindOpen.Core/Data/Elements/Factories/ElementSpecFactory.cs
    startLine: 49
  assemblies:
  - BindOpen.Core
  namespace: BindOpen.Data.Elements
  summary: "\nCreates a data element of the specified kind.\n"
  example: []
  syntax:
    content: public static DataElementSpec Create(string name, Type type)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    - id: type
      type: System.Type
      description: The value type to consider.
    return:
      type: BindOpen.Data.Elements.DataElementSpec
    content.vb: Public Shared Function Create(name As String, type As Type) As DataElementSpec
  overload: BindOpen.Data.Elements.ElementSpecFactory.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Elements.ElementSpecFactory.Create*
  commentId: Overload:BindOpen.Data.Elements.ElementSpecFactory.Create
  name: Create
  nameWithType: ElementSpecFactory.Create
  fullName: BindOpen.Data.Elements.ElementSpecFactory.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Data.Common.DataValueType
  commentId: T:BindOpen.Data.Common.DataValueType
  parent: BindOpen.Data.Common
  name: DataValueType
  nameWithType: DataValueType
  fullName: BindOpen.Data.Common.DataValueType
- uid: BindOpen.Data.Elements.DataElementSpec
  commentId: T:BindOpen.Data.Elements.DataElementSpec
  parent: BindOpen.Data.Elements
  name: DataElementSpec
  nameWithType: DataElementSpec
  fullName: BindOpen.Data.Elements.DataElementSpec
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
shouldSkipMarkup: true
