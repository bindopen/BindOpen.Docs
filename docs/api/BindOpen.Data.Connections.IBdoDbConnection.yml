### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Connections.IBdoDbConnection
  commentId: T:BindOpen.Data.Connections.IBdoDbConnection
  id: IBdoDbConnection
  parent: BindOpen.Data.Connections
  children:
  - BindOpen.Data.Connections.IBdoDbConnection.Connector
  - BindOpen.Data.Connections.IBdoDbConnection.Native
  langs:
  - csharp
  - vb
  name: IBdoDbConnection
  nameWithType: IBdoDbConnection
  fullName: BindOpen.Data.Connections.IBdoDbConnection
  type: Interface
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/Interfaces/IBdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: IBdoDbConnection
    path: ../src/BindOpen.Databases/Data/Connections/Interfaces/IBdoDbConnection.cs
    startLine: 8
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nThis interfaces represents a connection.\n"
  example: []
  syntax:
    content: 'public interface IBdoDbConnection : IBdoConnection, IDbConnection, IDisposable'
    content.vb: >-
      Public Interface IBdoDbConnection
          Inherits IBdoConnection, IDbConnection
  inheritedMembers:
  - BindOpen.Data.Connections.IBdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  - BindOpen.Data.Connections.IBdoConnection.Connect
  - BindOpen.Data.Connections.IBdoConnection.Disconnect
  - BindOpen.Data.Connections.IBdoConnection.ConnectionString
  - BindOpen.Data.Connections.IBdoConnection.ConnectionTimeout
  - BindOpen.Data.Connections.IBdoConnection.State
  - System.Data.IDbConnection.BeginTransaction
  - System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  - System.Data.IDbConnection.ChangeDatabase(System.String)
  - System.Data.IDbConnection.Close
  - System.Data.IDbConnection.CreateCommand
  - System.Data.IDbConnection.Open
  - System.Data.IDbConnection.Database
  - System.IDisposable.Dispose
  extensionMethods:
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - System.Data.IDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
  - BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Data.Connections.IBdoDbConnection.Native
  commentId: P:BindOpen.Data.Connections.IBdoDbConnection.Native
  id: Native
  parent: BindOpen.Data.Connections.IBdoDbConnection
  langs:
  - csharp
  - vb
  name: Native
  nameWithType: IBdoDbConnection.Native
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Native
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/Interfaces/IBdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Native
    path: ../src/BindOpen.Databases/Data/Connections/Interfaces/IBdoDbConnection.cs
    startLine: 14
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nGets the .NET database connection of this instance.\n"
  example: []
  syntax:
    content: IDbConnection Native { get; }
    parameters: []
    return:
      type: System.Data.IDbConnection
      description: Returns the connection of this instance.
    content.vb: ReadOnly Property Native As IDbConnection
  overload: BindOpen.Data.Connections.IBdoDbConnection.Native*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: BindOpen.Data.Connections.IBdoDbConnection.Connector
  commentId: P:BindOpen.Data.Connections.IBdoDbConnection.Connector
  id: Connector
  parent: BindOpen.Data.Connections.IBdoDbConnection
  langs:
  - csharp
  - vb
  name: Connector
  nameWithType: IBdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Connector
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Data/Connections/Interfaces/IBdoDbConnection.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Connector
    path: ../src/BindOpen.Databases/Data/Connections/Interfaces/IBdoDbConnection.cs
    startLine: 19
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Data.Connections
  summary: "\nConnector of the connection.\n"
  example: []
  syntax:
    content: IBdoDbConnector Connector { get; }
    parameters: []
    return:
      type: BindOpen.Extensions.Connectors.IBdoDbConnector
    content.vb: ReadOnly Property Connector As IBdoDbConnector
  overload: BindOpen.Data.Connections.IBdoDbConnection.Connector*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: BindOpen.Data.Connections
  commentId: N:BindOpen.Data.Connections
  name: BindOpen.Data.Connections
  nameWithType: BindOpen.Data.Connections
  fullName: BindOpen.Data.Connections
- uid: BindOpen.Data.Connections.IBdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  commentId: M:BindOpen.Data.Connections.IBdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: WithConnector(IBdoConnector)
  nameWithType: IBdoConnection.WithConnector(IBdoConnector)
  fullName: BindOpen.Data.Connections.IBdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  spec.csharp:
  - uid: BindOpen.Data.Connections.IBdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
    name: WithConnector
    nameWithType: IBdoConnection.WithConnector
    fullName: BindOpen.Data.Connections.IBdoConnection.WithConnector
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.IBdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
    name: WithConnector
    nameWithType: IBdoConnection.WithConnector
    fullName: BindOpen.Data.Connections.IBdoConnection.WithConnector
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoConnection.Connect
  commentId: M:BindOpen.Data.Connections.IBdoConnection.Connect
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: Connect()
  nameWithType: IBdoConnection.Connect()
  fullName: BindOpen.Data.Connections.IBdoConnection.Connect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.IBdoConnection.Connect
    name: Connect
    nameWithType: IBdoConnection.Connect
    fullName: BindOpen.Data.Connections.IBdoConnection.Connect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.IBdoConnection.Connect
    name: Connect
    nameWithType: IBdoConnection.Connect
    fullName: BindOpen.Data.Connections.IBdoConnection.Connect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.IBdoConnection.Disconnect
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: Disconnect()
  nameWithType: IBdoConnection.Disconnect()
  fullName: BindOpen.Data.Connections.IBdoConnection.Disconnect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.IBdoConnection.Disconnect
    name: Disconnect
    nameWithType: IBdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.IBdoConnection.Disconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.IBdoConnection.Disconnect
    name: Disconnect
    nameWithType: IBdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.IBdoConnection.Disconnect
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoConnection.ConnectionString
  commentId: P:BindOpen.Data.Connections.IBdoConnection.ConnectionString
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: ConnectionString
  nameWithType: IBdoConnection.ConnectionString
  fullName: BindOpen.Data.Connections.IBdoConnection.ConnectionString
- uid: BindOpen.Data.Connections.IBdoConnection.ConnectionTimeout
  commentId: P:BindOpen.Data.Connections.IBdoConnection.ConnectionTimeout
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: ConnectionTimeout
  nameWithType: IBdoConnection.ConnectionTimeout
  fullName: BindOpen.Data.Connections.IBdoConnection.ConnectionTimeout
- uid: BindOpen.Data.Connections.IBdoConnection.State
  commentId: P:BindOpen.Data.Connections.IBdoConnection.State
  parent: BindOpen.Data.Connections.IBdoConnection
  isExternal: true
  name: State
  nameWithType: IBdoConnection.State
  fullName: BindOpen.Data.Connections.IBdoConnection.State
- uid: System.Data.IDbConnection.BeginTransaction
  commentId: M:System.Data.IDbConnection.BeginTransaction
  parent: System.Data.IDbConnection
  isExternal: true
  name: BeginTransaction()
  nameWithType: IDbConnection.BeginTransaction()
  fullName: System.Data.IDbConnection.BeginTransaction()
  spec.csharp:
  - uid: System.Data.IDbConnection.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.BeginTransaction
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  parent: System.Data.IDbConnection
  isExternal: true
  name: BeginTransaction(IsolationLevel)
  nameWithType: IDbConnection.BeginTransaction(IsolationLevel)
  fullName: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: IDbConnection.BeginTransaction
    fullName: System.Data.IDbConnection.BeginTransaction
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.ChangeDatabase(System.String)
  commentId: M:System.Data.IDbConnection.ChangeDatabase(System.String)
  parent: System.Data.IDbConnection
  isExternal: true
  name: ChangeDatabase(String)
  nameWithType: IDbConnection.ChangeDatabase(String)
  fullName: System.Data.IDbConnection.ChangeDatabase(System.String)
  spec.csharp:
  - uid: System.Data.IDbConnection.ChangeDatabase(System.String)
    name: ChangeDatabase
    nameWithType: IDbConnection.ChangeDatabase
    fullName: System.Data.IDbConnection.ChangeDatabase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.ChangeDatabase(System.String)
    name: ChangeDatabase
    nameWithType: IDbConnection.ChangeDatabase
    fullName: System.Data.IDbConnection.ChangeDatabase
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.Close
  commentId: M:System.Data.IDbConnection.Close
  parent: System.Data.IDbConnection
  isExternal: true
  name: Close()
  nameWithType: IDbConnection.Close()
  fullName: System.Data.IDbConnection.Close()
  spec.csharp:
  - uid: System.Data.IDbConnection.Close
    name: Close
    nameWithType: IDbConnection.Close
    fullName: System.Data.IDbConnection.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.Close
    name: Close
    nameWithType: IDbConnection.Close
    fullName: System.Data.IDbConnection.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.CreateCommand
  commentId: M:System.Data.IDbConnection.CreateCommand
  parent: System.Data.IDbConnection
  isExternal: true
  name: CreateCommand()
  nameWithType: IDbConnection.CreateCommand()
  fullName: System.Data.IDbConnection.CreateCommand()
  spec.csharp:
  - uid: System.Data.IDbConnection.CreateCommand
    name: CreateCommand
    nameWithType: IDbConnection.CreateCommand
    fullName: System.Data.IDbConnection.CreateCommand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.CreateCommand
    name: CreateCommand
    nameWithType: IDbConnection.CreateCommand
    fullName: System.Data.IDbConnection.CreateCommand
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.Open
  commentId: M:System.Data.IDbConnection.Open
  parent: System.Data.IDbConnection
  isExternal: true
  name: Open()
  nameWithType: IDbConnection.Open()
  fullName: System.Data.IDbConnection.Open()
  spec.csharp:
  - uid: System.Data.IDbConnection.Open
    name: Open
    nameWithType: IDbConnection.Open
    fullName: System.Data.IDbConnection.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Data.IDbConnection.Open
    name: Open
    nameWithType: IDbConnection.Open
    fullName: System.Data.IDbConnection.Open
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.Database
  commentId: P:System.Data.IDbConnection.Database
  parent: System.Data.IDbConnection
  isExternal: true
  name: Database
  nameWithType: IDbConnection.Database
  fullName: System.Data.IDbConnection.Database
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  name: CreateCommand(String)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(String)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: CreateCommand(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data.IDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  name: CreateCommand<T>(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand<T>(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoDbConnectionExtensions.CreateCommand(Of T)(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: CreateCommand(Of T)(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand<T>
    nameWithType: BdoDbConnectionExtensions.CreateCommand<T>
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand(Of T)
    nameWithType: BdoDbConnectionExtensions.CreateCommand(Of T)
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  name: BeginTransaction()
  nameWithType: BdoDbConnectionExtensions.BeginTransaction()
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction()
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  name: BeginTransaction(IsolationLevel)
  nameWithType: BdoDbConnectionExtensions.BeginTransaction(IsolationLevel)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoDbConnection.BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoDbConnectionExtensions
  definition: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  name: GetIdentity(Int64, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.GetIdentity(Int64, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.IBdoConnection
  commentId: T:BindOpen.Data.Connections.IBdoConnection
  parent: BindOpen.Data.Connections
  isExternal: true
  name: IBdoConnection
  nameWithType: IBdoConnection
  fullName: BindOpen.Data.Connections.IBdoConnection
- uid: System.Data.IDbConnection
  commentId: T:System.Data.IDbConnection
  parent: System.Data
  isExternal: true
  name: IDbConnection
  nameWithType: IDbConnection
  fullName: System.Data.IDbConnection
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
  isExternal: true
  name: CreateCommand(IBdoDbConnection, String)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(IBdoDbConnection, String)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,System.String)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions
  commentId: T:BindOpen.Data.Connections.BdoDbConnectionExtensions
  parent: BindOpen.Data.Connections
  name: BdoDbConnectionExtensions
  nameWithType: BdoDbConnectionExtensions
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: CreateCommand(IBdoDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand(IBdoDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection, BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(BindOpen.Data.Connections.IBdoDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand
    nameWithType: BdoDbConnectionExtensions.CreateCommand
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: CreateCommand<T>(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.CreateCommand<T>(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>(System.Data.IDbConnection, BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoDbConnectionExtensions.CreateCommand(Of T)(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)(System.Data.IDbConnection, BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: CreateCommand(Of T)(IDbConnection, IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand<T>
    nameWithType: BdoDbConnectionExtensions.CreateCommand<T>
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDbConnection
    name: IDbConnection
    nameWithType: IDbConnection
    fullName: System.Data.IDbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand``1(System.Data.IDbConnection,BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: CreateCommand(Of T)
    nameWithType: BdoDbConnectionExtensions.CreateCommand(Of T)
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.CreateCommand(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Data.IDbConnection
    name: IDbConnection
    nameWithType: IDbConnection
    fullName: System.Data.IDbConnection
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.IDbQuery
    name: IDbQuery
    nameWithType: IDbQuery
    fullName: BindOpen.Data.Queries.IDbQuery
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Queries.DbQueryParameterMode
    name: DbQueryParameterMode
    nameWithType: DbQueryParameterMode
    fullName: BindOpen.Data.Queries.DbQueryParameterMode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  name: BeginTransaction(IBdoDbConnection)
  nameWithType: BdoDbConnectionExtensions.BeginTransaction(IBdoDbConnection)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
  isExternal: true
  name: BeginTransaction(IBdoDbConnection, IsolationLevel)
  nameWithType: BdoDbConnectionExtensions.BeginTransaction(IBdoDbConnection, IsolationLevel)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection, System.Data.IsolationLevel)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction(BindOpen.Data.Connections.IBdoDbConnection,System.Data.IsolationLevel)
    name: BeginTransaction
    nameWithType: BdoDbConnectionExtensions.BeginTransaction
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.BeginTransaction
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Data.IsolationLevel
    name: IsolationLevel
    nameWithType: IsolationLevel
    fullName: System.Data.IsolationLevel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: GetIdentity(IBdoDbConnection, Int64, IBdoLog)
  nameWithType: BdoDbConnectionExtensions.GetIdentity(IBdoDbConnection, Int64, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection, System.Int64, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity(BindOpen.Data.Connections.IBdoDbConnection,System.Int64@,BindOpen.System.Diagnostics.IBdoLog)
    name: GetIdentity
    nameWithType: BdoDbConnectionExtensions.GetIdentity
    fullName: BindOpen.Data.Connections.BdoDbConnectionExtensions.GetIdentity
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: System.Int64
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Data
  commentId: N:System.Data
  isExternal: true
  name: System.Data
  nameWithType: System.Data
  fullName: System.Data
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Connections.IBdoDbConnection.Native*
  commentId: Overload:BindOpen.Data.Connections.IBdoDbConnection.Native
  name: Native
  nameWithType: IBdoDbConnection.Native
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Native
- uid: BindOpen.Data.Connections.IBdoDbConnection.Connector*
  commentId: Overload:BindOpen.Data.Connections.IBdoDbConnection.Connector
  name: Connector
  nameWithType: IBdoDbConnection.Connector
  fullName: BindOpen.Data.Connections.IBdoDbConnection.Connector
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.IBdoDbConnector
  parent: BindOpen.Extensions.Connectors
  name: IBdoDbConnector
  nameWithType: IBdoDbConnector
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
shouldSkipMarkup: true
