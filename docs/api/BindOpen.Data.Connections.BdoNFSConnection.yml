### YamlMime:ManagedReference
items:
- uid: BindOpen.Data.Connections.BdoNFSConnection
  commentId: T:BindOpen.Data.Connections.BdoNFSConnection
  id: BdoNFSConnection
  parent: BindOpen.Data.Connections
  children:
  - BindOpen.Data.Connections.BdoNFSConnection.#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)
  - BindOpen.Data.Connections.BdoNFSConnection.Connect
  - BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  - BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  - BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  - BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  - BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  - BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  langs:
  - csharp
  - vb
  name: BdoNFSConnection
  nameWithType: BdoNFSConnection
  fullName: BindOpen.Data.Connections.BdoNFSConnection
  type: Class
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: BdoNFSConnection
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 13
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nThis class represents a file NFS connector.\n"
  example: []
  syntax:
    content: 'public class BdoNFSConnection : BdoRepoConnection, IDataItem, ICloneable, IRepoConnection, IBdoConnection, IDisposable'
    content.vb: >-
      Public Class BdoNFSConnection
          Inherits BdoRepoConnection
          Implements IDataItem, ICloneable, IRepoConnection, IBdoConnection, IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - BindOpen.Data.Items.DataItem
  - BindOpen.Data.Connections.BdoConnection
  - BindOpen.Data.Connections.BdoRepoConnection
  implements:
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - BindOpen.Data.Connections.IBdoConnection
  - System.IDisposable
  inheritedMembers:
  - BindOpen.Data.Connections.BdoRepoConnection.Connector
  - BindOpen.Data.Connections.BdoConnection._connector
  - BindOpen.Data.Connections.BdoConnection.ConnectionString
  - BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
  - BindOpen.Data.Connections.BdoConnection.State
  - BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  - BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  - BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - BindOpen.Data.Items.DataItem.Clone
  - BindOpen.Data.Items.DataItem.Clone``1
  - BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.DataItem.Dispose
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  - System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  - System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  - System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Data.Connections.BdoNFSConnection.#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)
  id: '#ctor(BindOpen.Extensions.Connectors.BdoNFSConnector)'
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: BdoNFSConnection(BdoNFSConnector)
  nameWithType: BdoNFSConnection.BdoNFSConnection(BdoNFSConnector)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.BdoNFSConnection(BindOpen.Extensions.Connectors.BdoNFSConnector)
  type: Constructor
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: .ctor
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 24
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nInstantiates a new instance of the NFSConnection class.\n"
  example: []
  syntax:
    content: public BdoNFSConnection(BdoNFSConnector connector)
    parameters:
    - id: connector
      type: BindOpen.Extensions.Connectors.BdoNFSConnector
    content.vb: Public Sub New(connector As BdoNFSConnector)
  overload: BindOpen.Data.Connections.BdoNFSConnection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Data.Connections.BdoNFSConnection.Connect
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Connect
  id: Connect
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: BdoNFSConnection.Connect()
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Connect()
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Connect
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 41
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nConnects this instance.\n"
  example: []
  syntax:
    content: public override IBdoLog Connect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Connect As IBdoLog
  overridden: BindOpen.Data.Connections.BdoConnection.Connect
  overload: BindOpen.Data.Connections.BdoNFSConnection.Connect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  id: Disconnect
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: BdoNFSConnection.Disconnect()
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Disconnect()
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Disconnect
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 50
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDisconnects this instance.\n"
  example: []
  syntax:
    content: public override IBdoLog Disconnect()
    return:
      type: BindOpen.System.Diagnostics.IBdoLog
      description: Returns the log of process.
    content.vb: Public Overrides Function Disconnect As IBdoLog
  overridden: BindOpen.Data.Connections.BdoConnection.Disconnect
  overload: BindOpen.Data.Connections.BdoNFSConnection.Disconnect*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Pull(String, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Pull(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Pull
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 72
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPulls a remote file to a local URI.\n"
  example: []
  syntax:
    content: public override void Pull(string remoteFileUri, string localUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: remoteFileUri
      type: System.String
      description: The URI of the remote file to consider.
    - id: localUri
      type: System.String
      description: The local URI to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Pull(remoteFileUri As String, localUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  id: Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Pull(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoNFSConnection.Pull(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Pull
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 101
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPulls a remote files in folder to a local URI.\n"
  example: []
  syntax:
    content: public override void Pull(string remoteFileUri, string remoteFilter, string localFolderUri, bool canOverwrite, IBdoLog log = null, bool isRecursive = false)
    parameters:
    - id: remoteFileUri
      type: System.String
      description: The URI of the remote file to consider.
    - id: remoteFilter
      type: System.String
      description: The remote filter to consider.
    - id: localFolderUri
      type: System.String
      description: The URI of the local folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    content.vb: Public Overrides Sub Pull(remoteFileUri As String, remoteFilter As String, localFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing, isRecursive As Boolean = False)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Pull(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Pull(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Pull
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 119
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPulls remote files to a local URI.\n"
  example: []
  syntax:
    content: public override void Pull(List<string> remoteFileUris, string localFolderUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: remoteFileUris
      type: System.Collections.Generic.List{System.String}
      description: The remote URIs to consider.
    - id: localFolderUri
      type: System.String
      description: The URI of the local folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the local files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Pull(remoteFileUris As List(Of String), localFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  nameWithType.vb: BdoNFSConnection.Pull(List(Of String), String, Boolean, IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Connections.BdoNFSConnection.Pull(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Pull(List(Of String), String, Boolean, IBdoLog)
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Push(String, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Push(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Push
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 137
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPosts a local file to a remote Uri.\n"
  example: []
  syntax:
    content: public override void Push(string localFileUri, string remotePathUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local Uri to consider.
    - id: remotePathUri
      type: System.String
      description: The Uri of the remote path to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Push(localFileUri As String, remotePathUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Push*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  id: Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Push(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoNFSConnection.Push(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Push
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 166
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPushes a local file into folder to a remote URI.\n"
  example: []
  syntax:
    content: public override void Push(string localFileUri, string localFilter, string remoteFolderUri, bool canOverwrite, IBdoLog log = null, bool isRecursive = false)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local URI to consider.
    - id: localFilter
      type: System.String
      description: The local filter to consider.
    - id: remoteFolderUri
      type: System.String
      description: The URI of the remote folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote file can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    content.vb: Public Overrides Sub Push(localFileUri As String, localFilter As String, remoteFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing, isRecursive As Boolean = False)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Push*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  id: Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: Push(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoNFSConnection.Push(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: Push
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 184
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nPushes local files to a remote URI.\n"
  example: []
  syntax:
    content: public override void Push(List<string> localFileUris, string remoteFolderUri, bool canOverwrite, IBdoLog log = null)
    parameters:
    - id: localFileUris
      type: System.Collections.Generic.List{System.String}
      description: The local URIs to consider.
    - id: remoteFolderUri
      type: System.String
      description: The URI of the remote folder to consider.
    - id: canOverwrite
      type: System.Boolean
      description: Indicates whether the remote files can be overwritten.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Overrides Sub Push(localFileUris As List(Of String), remoteFolderUri As String, canOverwrite As Boolean, log As IBdoLog = Nothing)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  overload: BindOpen.Data.Connections.BdoNFSConnection.Push*
  nameWithType.vb: BdoNFSConnection.Push(List(Of String), String, Boolean, IBdoLog)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: BindOpen.Data.Connections.BdoNFSConnection.Push(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Push(List(Of String), String, Boolean, IBdoLog)
- uid: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  id: WaitForFile(System.String,System.Int32,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: WaitForFile(String, Int32, IBdoLog)
  nameWithType: BdoNFSConnection.WaitForFile(String, Int32, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile(System.String, System.Int32, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: WaitForFile
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 202
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nWaits for the specified file to be accessible.\n"
  example: []
  syntax:
    content: public static bool WaitForFile(string path, int aSecondNumber = 4, IBdoLog log = null)
    parameters:
    - id: path
      type: System.String
      description: The path of the file to consider.
    - id: aSecondNumber
      type: System.Int32
      description: The number of seconds to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: System.Boolean
      description: Returns true if the file is available. False otherwise.
    content.vb: Public Shared Function WaitForFile(path As String, aSecondNumber As Integer = 4, log As IBdoLog = Nothing) As Boolean
  overload: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  id: GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoNFSConnection.GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.GetFiles(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: GetFiles
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 244
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nGets the list of elements of the remote folder.\n"
  example: []
  syntax:
    content: public override List<RepositoryItem> GetFiles(string folderUri, string filter, bool isRecursive, IBdoLog log = null, CarrierKind_standard fileKind = CarrierKind_standard.Any)
    parameters:
    - id: folderUri
      type: System.String
      description: The Uri of the folder path to consider.
    - id: filter
      type: System.String
      description: The filter to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: fileKind
      type: BindOpen.Extensions.Carriers.CarrierKind_standard
      description: The kind of files to consider.
    return:
      type: System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}
      description: Lists of elements of the remote folder.
    content.vb: Public Overrides Function GetFiles(folderUri As String, filter As String, isRecursive As Boolean, log As IBdoLog = Nothing, fileKind As CarrierKind_standard = CarrierKind_standard.Any) As List(Of RepositoryItem)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  overload: BindOpen.Data.Connections.BdoNFSConnection.GetFiles*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  id: DeleteFile(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: DeleteFile(String, IBdoLog)
  nameWithType: BdoNFSConnection.DeleteFile(String, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile(System.String, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DeleteFile
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 363
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDeletes a local file.\n"
  example: []
  syntax:
    content: public static void DeleteFile(string localFileUri, IBdoLog log = null)
    parameters:
    - id: localFileUri
      type: System.String
      description: The local Uri to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Shared Sub DeleteFile(localFileUri As String, log As IBdoLog = Nothing)
  overload: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  id: DeleteFolder(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: DeleteFolder(String, IBdoLog)
  nameWithType: BdoNFSConnection.DeleteFolder(String, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder(System.String, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DeleteFolder
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 388
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDeletes a local folder.\n"
  example: []
  syntax:
    content: public static void DeleteFolder(string localfolderUri, IBdoLog log = null)
    parameters:
    - id: localfolderUri
      type: System.String
      description: The local Uri to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    content.vb: Public Shared Sub DeleteFolder(localfolderUri As String, log As IBdoLog = Nothing)
  overload: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  id: DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoNFSConnection
  langs:
  - csharp
  - vb
  name: DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoNFSConnection.DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems(System.String, System.String, System.DateTime, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  type: Method
  source:
    remote:
      path: src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
      branch: feature/dbqueries
      repo: https://github.com/bindopen/BindOpen.git
    id: DeleteItems
    path: ../src/BindOpen.Runtime/Data/Connections/BdoNFSConnection.cs
    startLine: 417
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Data.Connections
  summary: "\nDeletes the items.\n"
  example: []
  syntax:
    content: public override void DeleteItems(string folderUri, string filter, DateTime timeLimit, bool isRecursive, IBdoLog log = null, CarrierKind_standard fileKind = CarrierKind_standard.Any)
    parameters:
    - id: folderUri
      type: System.String
      description: The Uri of the folder path to consider.
    - id: filter
      type: System.String
      description: The filter to consider.
    - id: timeLimit
      type: System.DateTime
      description: The date time limit to consider.
    - id: isRecursive
      type: System.Boolean
      description: Indicates whether the search is folder recursive.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    - id: fileKind
      type: BindOpen.Extensions.Carriers.CarrierKind_standard
      description: The kind of elements to consider.
    content.vb: Public Overrides Sub DeleteItems(folderUri As String, filter As String, timeLimit As Date, isRecursive As Boolean, log As IBdoLog = Nothing, fileKind As CarrierKind_standard = CarrierKind_standard.Any)
  overridden: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  overload: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: BindOpen.Data.Connections
  commentId: N:BindOpen.Data.Connections
  name: BindOpen.Data.Connections
  nameWithType: BindOpen.Data.Connections
  fullName: BindOpen.Data.Connections
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: BindOpen.Data.Items.DataItem
  commentId: T:BindOpen.Data.Items.DataItem
  parent: BindOpen.Data.Items
  name: DataItem
  nameWithType: DataItem
  fullName: BindOpen.Data.Items.DataItem
- uid: BindOpen.Data.Connections.BdoConnection
  commentId: T:BindOpen.Data.Connections.BdoConnection
  parent: BindOpen.Data.Connections
  name: BdoConnection
  nameWithType: BdoConnection
  fullName: BindOpen.Data.Connections.BdoConnection
- uid: BindOpen.Data.Connections.BdoRepoConnection
  commentId: T:BindOpen.Data.Connections.BdoRepoConnection
  parent: BindOpen.Data.Connections
  name: BdoRepoConnection
  nameWithType: BdoRepoConnection
  fullName: BindOpen.Data.Connections.BdoRepoConnection
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: BindOpen.Data.Connections.IBdoConnection
  commentId: T:BindOpen.Data.Connections.IBdoConnection
  parent: BindOpen.Data.Connections
  name: IBdoConnection
  nameWithType: IBdoConnection
  fullName: BindOpen.Data.Connections.IBdoConnection
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Connections.BdoRepoConnection.Connector
  commentId: P:BindOpen.Data.Connections.BdoRepoConnection.Connector
  parent: BindOpen.Data.Connections.BdoRepoConnection
  name: Connector
  nameWithType: BdoRepoConnection.Connector
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Connector
- uid: BindOpen.Data.Connections.BdoConnection._connector
  commentId: F:BindOpen.Data.Connections.BdoConnection._connector
  parent: BindOpen.Data.Connections.BdoConnection
  name: _connector
  nameWithType: BdoConnection._connector
  fullName: BindOpen.Data.Connections.BdoConnection._connector
- uid: BindOpen.Data.Connections.BdoConnection.ConnectionString
  commentId: P:BindOpen.Data.Connections.BdoConnection.ConnectionString
  parent: BindOpen.Data.Connections.BdoConnection
  name: ConnectionString
  nameWithType: BdoConnection.ConnectionString
  fullName: BindOpen.Data.Connections.BdoConnection.ConnectionString
- uid: BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
  commentId: P:BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
  parent: BindOpen.Data.Connections.BdoConnection
  name: ConnectionTimeout
  nameWithType: BdoConnection.ConnectionTimeout
  fullName: BindOpen.Data.Connections.BdoConnection.ConnectionTimeout
- uid: BindOpen.Data.Connections.BdoConnection.State
  commentId: P:BindOpen.Data.Connections.BdoConnection.State
  parent: BindOpen.Data.Connections.BdoConnection
  name: State
  nameWithType: BdoConnection.State
  fullName: BindOpen.Data.Connections.BdoConnection.State
- uid: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  parent: BindOpen.Data.Connections.BdoConnection
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: BdoConnection.Dispose(Boolean)
  fullName: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BdoConnection.Dispose
    fullName: BindOpen.Data.Connections.BdoConnection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.Dispose(System.Boolean)
    name: Dispose
    nameWithType: BdoConnection.Dispose
    fullName: BindOpen.Data.Connections.BdoConnection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  commentId: M:BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  parent: BindOpen.Data.Connections.BdoConnection
  name: WithConnector(IBdoConnector)
  nameWithType: BdoConnection.WithConnector(IBdoConnector)
  fullName: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
    name: WithConnector
    nameWithType: BdoConnection.WithConnector
    fullName: BindOpen.Data.Connections.BdoConnection.WithConnector
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.WithConnector(BindOpen.Extensions.Runtime.IBdoConnector)
    name: WithConnector
    nameWithType: BdoConnection.WithConnector
    fullName: BindOpen.Data.Connections.BdoConnection.WithConnector
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Runtime.IBdoConnector
    name: IBdoConnector
    nameWithType: IBdoConnector
    fullName: BindOpen.Extensions.Runtime.IBdoConnector
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  commentId: M:BindOpen.Data.Items.DataItem.InitializeLifetimeService
  parent: BindOpen.Data.Items.DataItem
  name: InitializeLifetimeService()
  nameWithType: DataItem.InitializeLifetimeService()
  fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: DataItem.InitializeLifetimeService
    fullName: BindOpen.Data.Items.DataItem.InitializeLifetimeService
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone
  commentId: M:BindOpen.Data.Items.DataItem.Clone
  parent: BindOpen.Data.Items.DataItem
  name: Clone()
  nameWithType: DataItem.Clone()
  fullName: BindOpen.Data.Items.DataItem.Clone()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone
    name: Clone
    nameWithType: DataItem.Clone
    fullName: BindOpen.Data.Items.DataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone
    name: Clone
    nameWithType: DataItem.Clone
    fullName: BindOpen.Data.Items.DataItem.Clone
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Clone``1
  commentId: M:BindOpen.Data.Items.DataItem.Clone``1
  parent: BindOpen.Data.Items.DataItem
  name: Clone<T>()
  nameWithType: DataItem.Clone<T>()
  fullName: BindOpen.Data.Items.DataItem.Clone<T>()
  nameWithType.vb: DataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.DataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone<T>
    nameWithType: DataItem.Clone<T>
    fullName: BindOpen.Data.Items.DataItem.Clone<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Clone``1
    name: Clone(Of T)
    nameWithType: DataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.DataItem.Clone(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: DataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: DataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateStorageInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.DataItem
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: DataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: DataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.DataItem.UpdateRuntimeInfo
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: DataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: DataItem.Update
    fullName: BindOpen.Data.Items.DataItem.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: DataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: DataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: DataItem.Check
    fullName: BindOpen.Data.Items.DataItem.Check
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  definition: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.DataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: DataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: DataItem.Repair
    fullName: BindOpen.Data.Items.DataItem.Repair
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Dispose
  commentId: M:BindOpen.Data.Items.DataItem.Dispose
  parent: BindOpen.Data.Items.DataItem
  name: Dispose()
  nameWithType: DataItem.Dispose()
  fullName: BindOpen.Data.Items.DataItem.Dispose()
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Dispose
    name: Dispose
    nameWithType: DataItem.Dispose
    fullName: BindOpen.Data.Items.DataItem.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  name: IsScalar()
  nameWithType: DataValueTypeExtension.IsScalar()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  parent: BindOpen.Data.Common.DataValueTypeExtension
  definition: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  name: GetValueType()
  nameWithType: DataValueTypeExtension.GetValueType()
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType()
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  name: ToKey()
  nameWithType: ObjectHelper.ToKey()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  name: KeyEquals(Object)
  nameWithType: ObjectHelper.KeyEquals(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  name: ToNotNullString()
  nameWithType: ObjectHelper.ToNotNullString()
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString()
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  name: ToString(DataValueType)
  nameWithType: ObjectHelper.ToString(DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  name: Update(Object)
  nameWithType: ObjectHelper.Update(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  parent: BindOpen.Data.Helpers.Objects.ObjectHelper
  definition: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  name: UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  parent: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  definition: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  name: ToJson(String)
  nameWithType: ObjectNotationHelper_Json.ToJson(String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  name: ToXml(IBdoLog)
  nameWithType: XmlHelper.ToXml(IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Helpers.Serialization.XmlHelper
  definition: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  name: SaveXml(String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: DataItem.Update<T>
    fullName: BindOpen.Data.Items.DataItem.Update<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: DataItem.Update(Of T)
    fullName: BindOpen.Data.Items.DataItem.Update(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: DataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.DataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: DataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.DataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: DataItem.Check<T>
    fullName: BindOpen.Data.Items.DataItem.Check<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: DataItem.Check(Of T)
    fullName: BindOpen.Data.Items.DataItem.Check(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: DataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.DataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: DataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.DataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: DataItem.Repair<T>
    fullName: BindOpen.Data.Items.DataItem.Repair<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.DataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: DataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.DataItem.Repair(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  isExternal: true
  name: IsScalar(Object)
  nameWithType: DataValueTypeExtension.IsScalar(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.IsScalar(System.Object)
    name: IsScalar
    nameWithType: DataValueTypeExtension.IsScalar
    fullName: BindOpen.Data.Common.DataValueTypeExtension.IsScalar
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common.DataValueTypeExtension
  commentId: T:BindOpen.Data.Common.DataValueTypeExtension
  parent: BindOpen.Data.Common
  name: DataValueTypeExtension
  nameWithType: DataValueTypeExtension
  fullName: BindOpen.Data.Common.DataValueTypeExtension
- uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  commentId: M:BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  isExternal: true
  name: GetValueType(Object)
  nameWithType: DataValueTypeExtension.GetValueType(Object)
  fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Common.DataValueTypeExtension.GetValueType(System.Object)
    name: GetValueType
    nameWithType: DataValueTypeExtension.GetValueType
    fullName: BindOpen.Data.Common.DataValueTypeExtension.GetValueType
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  isExternal: true
  name: ToKey(Object)
  nameWithType: ObjectHelper.ToKey(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey(System.Object)
    name: ToKey
    nameWithType: ObjectHelper.ToKey
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToKey
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper
  commentId: T:BindOpen.Data.Helpers.Objects.ObjectHelper
  parent: BindOpen.Data.Helpers.Objects
  name: ObjectHelper
  nameWithType: ObjectHelper
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
  isExternal: true
  name: KeyEquals(Object, Object)
  nameWithType: ObjectHelper.KeyEquals(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals(System.Object,System.Object)
    name: KeyEquals
    nameWithType: ObjectHelper.KeyEquals
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.KeyEquals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  isExternal: true
  name: ToNotNullString(Object)
  nameWithType: ObjectHelper.ToNotNullString(Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString(System.Object)
    name: ToNotNullString
    nameWithType: ObjectHelper.ToNotNullString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToNotNullString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
  isExternal: true
  name: ToString(Object, DataValueType)
  nameWithType: ObjectHelper.ToString(Object, DataValueType)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object, BindOpen.Data.Common.DataValueType)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString(System.Object,BindOpen.Data.Common.DataValueType)
    name: ToString
    nameWithType: ObjectHelper.ToString
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.DataValueType
    name: DataValueType
    nameWithType: DataValueType
    fullName: BindOpen.Data.Common.DataValueType
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
  isExternal: true
  name: Update(Object, Object)
  nameWithType: ObjectHelper.Update(Object, Object)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object, System.Object)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.Update(System.Object,System.Object)
    name: Update
    nameWithType: ObjectHelper.Update
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  commentId: M:BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
  isExternal: true
  name: UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  nameWithType: ObjectHelper.UpdateFromElementSet<T>(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  nameWithType.vb: ObjectHelper.UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  fullName.vb: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)(System.Object, BindOpen.Data.Elements.IDataElementSet, BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet)
  name.vb: UpdateFromElementSet(Of T)(Object, IDataElementSet, IBdoScope, IBdoScriptVariableSet)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet<T>
    nameWithType: ObjectHelper.UpdateFromElementSet<T>
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet``1(System.Object,BindOpen.Data.Elements.IDataElementSet,BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet)
    name: UpdateFromElementSet(Of T)
    nameWithType: ObjectHelper.UpdateFromElementSet(Of T)
    fullName: BindOpen.Data.Helpers.Objects.ObjectHelper.UpdateFromElementSet(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Elements.IDataElementSet
    name: IDataElementSet
    nameWithType: IDataElementSet
    fullName: BindOpen.Data.Elements.IDataElementSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  commentId: M:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
  isExternal: true
  name: ToJson(Object, String)
  nameWithType: ObjectNotationHelper_Json.ToJson(Object, String)
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object, System.String)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson(System.Object,System.String)
    name: ToJson
    nameWithType: ObjectNotationHelper_Json.ToJson
    fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json.ToJson
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  commentId: T:BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
  parent: BindOpen.Data.Helpers.Serialization
  name: ObjectNotationHelper_Json
  nameWithType: ObjectNotationHelper_Json
  fullName: BindOpen.Data.Helpers.Serialization.ObjectNotationHelper_Json
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: ToXml(Object, IBdoLog)
  nameWithType: XmlHelper.ToXml(Object, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml(System.Object,BindOpen.System.Diagnostics.IBdoLog)
    name: ToXml
    nameWithType: XmlHelper.ToXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.ToXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper
  commentId: T:BindOpen.Data.Helpers.Serialization.XmlHelper
  parent: BindOpen.Data.Helpers.Serialization
  name: XmlHelper
  nameWithType: XmlHelper
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper
- uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: SaveXml(Object, String, IBdoLog)
  nameWithType: XmlHelper.SaveXml(Object, String, IBdoLog)
  fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object, System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml(System.Object,System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: SaveXml
    nameWithType: XmlHelper.SaveXml
    fullName: BindOpen.Data.Helpers.Serialization.XmlHelper.SaveXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Common
  commentId: N:BindOpen.Data.Common
  name: BindOpen.Data.Common
  nameWithType: BindOpen.Data.Common
  fullName: BindOpen.Data.Common
- uid: BindOpen.Data.Helpers.Objects
  commentId: N:BindOpen.Data.Helpers.Objects
  name: BindOpen.Data.Helpers.Objects
  nameWithType: BindOpen.Data.Helpers.Objects
  fullName: BindOpen.Data.Helpers.Objects
- uid: BindOpen.Data.Helpers.Serialization
  commentId: N:BindOpen.Data.Helpers.Serialization
  name: BindOpen.Data.Helpers.Serialization
  nameWithType: BindOpen.Data.Helpers.Serialization
  fullName: BindOpen.Data.Helpers.Serialization
- uid: BindOpen.Data.Connections.BdoNFSConnection.#ctor*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.#ctor
  name: BdoNFSConnection
  nameWithType: BdoNFSConnection.BdoNFSConnection
  fullName: BindOpen.Data.Connections.BdoNFSConnection.BdoNFSConnection
- uid: BindOpen.Extensions.Connectors.BdoNFSConnector
  commentId: T:BindOpen.Extensions.Connectors.BdoNFSConnector
  parent: BindOpen.Extensions.Connectors
  name: BdoNFSConnector
  nameWithType: BdoNFSConnector
  fullName: BindOpen.Extensions.Connectors.BdoNFSConnector
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: BindOpen.Data.Connections.BdoConnection.Connect
  commentId: M:BindOpen.Data.Connections.BdoConnection.Connect
  parent: BindOpen.Data.Connections.BdoConnection
  name: Connect()
  nameWithType: BdoConnection.Connect()
  fullName: BindOpen.Data.Connections.BdoConnection.Connect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.Connect
    name: Connect
    nameWithType: BdoConnection.Connect
    fullName: BindOpen.Data.Connections.BdoConnection.Connect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.Connect
    name: Connect
    nameWithType: BdoConnection.Connect
    fullName: BindOpen.Data.Connections.BdoConnection.Connect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.Connect*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Connect
  name: Connect
  nameWithType: BdoNFSConnection.Connect
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Connect
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Data.Connections.BdoConnection.Disconnect
  commentId: M:BindOpen.Data.Connections.BdoConnection.Disconnect
  parent: BindOpen.Data.Connections.BdoConnection
  name: Disconnect()
  nameWithType: BdoConnection.Disconnect()
  fullName: BindOpen.Data.Connections.BdoConnection.Disconnect()
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoConnection.Disconnect
    name: Disconnect
    nameWithType: BdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.BdoConnection.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoConnection.Disconnect
    name: Disconnect
    nameWithType: BdoConnection.Disconnect
    fullName: BindOpen.Data.Connections.BdoConnection.Disconnect
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.Disconnect*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Disconnect
  name: Disconnect
  nameWithType: BdoNFSConnection.Disconnect
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Disconnect
- uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Pull(String, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Pull(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.Pull*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Pull
  name: Pull
  nameWithType: BdoNFSConnection.Pull
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Pull
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Pull(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoRepoConnection.Pull(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Pull(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Pull(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoRepoConnection.Pull(List(Of String), String, Boolean, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Pull(List(Of String), String, Boolean, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Pull(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Pull
    nameWithType: BdoRepoConnection.Pull
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Pull
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Push(String, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Push(String, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.Push*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.Push
  name: Push
  nameWithType: BdoNFSConnection.Push
  fullName: BindOpen.Data.Connections.BdoNFSConnection.Push
- uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Push(String, String, String, Boolean, IBdoLog, Boolean)
  nameWithType: BdoRepoConnection.Push(String, String, String, Boolean, IBdoLog, Boolean)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String, System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.String,System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: Push(List<String>, String, Boolean, IBdoLog)
  nameWithType: BdoRepoConnection.Push(List<String>, String, Boolean, IBdoLog)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List<System.String>, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: BdoRepoConnection.Push(List(Of String), String, Boolean, IBdoLog)
  fullName.vb: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List(Of System.String), System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog)
  name.vb: Push(List(Of String), String, Boolean, IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.Push(System.Collections.Generic.List{System.String},System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog)
    name: Push
    nameWithType: BdoRepoConnection.Push
    fullName: BindOpen.Data.Connections.BdoRepoConnection.Push
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.WaitForFile
  name: WaitForFile
  nameWithType: BdoNFSConnection.WaitForFile
  fullName: BindOpen.Data.Connections.BdoNFSConnection.WaitForFile
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoRepoConnection.GetFiles(String, String, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String, System.String, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: GetFiles
    nameWithType: BdoRepoConnection.GetFiles
    fullName: BindOpen.Data.Connections.BdoRepoConnection.GetFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.GetFiles(System.String,System.String,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: GetFiles
    nameWithType: BdoRepoConnection.GetFiles
    fullName: BindOpen.Data.Connections.BdoRepoConnection.GetFiles
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.GetFiles*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.GetFiles
  name: GetFiles
  nameWithType: BdoNFSConnection.GetFiles
  fullName: BindOpen.Data.Connections.BdoNFSConnection.GetFiles
- uid: BindOpen.Extensions.Carriers.CarrierKind_standard
  commentId: T:BindOpen.Extensions.Carriers.CarrierKind_standard
  parent: BindOpen.Extensions.Carriers
  name: CarrierKind_standard
  nameWithType: CarrierKind_standard
  fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
- uid: System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}
  commentId: T:System.Collections.Generic.List{BindOpen.Extensions.Carriers.RepositoryItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<RepositoryItem>
  nameWithType: List<RepositoryItem>
  fullName: System.Collections.Generic.List<BindOpen.Extensions.Carriers.RepositoryItem>
  nameWithType.vb: List(Of RepositoryItem)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Extensions.Carriers.RepositoryItem)
  name.vb: List(Of RepositoryItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Carriers.RepositoryItem
    name: RepositoryItem
    nameWithType: RepositoryItem
    fullName: BindOpen.Extensions.Carriers.RepositoryItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Carriers.RepositoryItem
    name: RepositoryItem
    nameWithType: RepositoryItem
    fullName: BindOpen.Extensions.Carriers.RepositoryItem
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Carriers
  commentId: N:BindOpen.Extensions.Carriers
  name: BindOpen.Extensions.Carriers
  nameWithType: BindOpen.Extensions.Carriers
  fullName: BindOpen.Extensions.Carriers
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.DeleteFile
  name: DeleteFile
  nameWithType: BdoNFSConnection.DeleteFile
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFile
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder
  name: DeleteFolder
  nameWithType: BdoNFSConnection.DeleteFolder
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteFolder
- uid: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  commentId: M:BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
  parent: BindOpen.Data.Connections.BdoRepoConnection
  isExternal: true
  name: DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  nameWithType: BdoRepoConnection.DeleteItems(String, String, DateTime, Boolean, IBdoLog, CarrierKind_standard)
  fullName: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String, System.String, System.DateTime, System.Boolean, BindOpen.System.Diagnostics.IBdoLog, BindOpen.Extensions.Carriers.CarrierKind_standard)
  spec.csharp:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: DeleteItems
    nameWithType: BdoRepoConnection.DeleteItems
    fullName: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems(System.String,System.String,System.DateTime,System.Boolean,BindOpen.System.Diagnostics.IBdoLog,BindOpen.Extensions.Carriers.CarrierKind_standard)
    name: DeleteItems
    nameWithType: BdoRepoConnection.DeleteItems
    fullName: BindOpen.Data.Connections.BdoRepoConnection.DeleteItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Extensions.Carriers.CarrierKind_standard
    name: CarrierKind_standard
    nameWithType: CarrierKind_standard
    fullName: BindOpen.Extensions.Carriers.CarrierKind_standard
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems*
  commentId: Overload:BindOpen.Data.Connections.BdoNFSConnection.DeleteItems
  name: DeleteItems
  nameWithType: BdoNFSConnection.DeleteItems
  fullName: BindOpen.Data.Connections.BdoNFSConnection.DeleteItems
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
shouldSkipMarkup: true
