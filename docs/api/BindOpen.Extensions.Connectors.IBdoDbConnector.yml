### YamlMime:ManagedReference
items:
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector
  commentId: T:BindOpen.Extensions.Connectors.IBdoDbConnector
  id: IBdoDbConnector
  parent: BindOpen.Extensions.Connectors
  children:
  - BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  - BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  - BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  - BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  - BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  - BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  - BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  - BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  langs:
  - csharp
  - vb
  name: IBdoDbConnector
  nameWithType: IBdoDbConnector
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector
  type: Interface
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: IBdoDbConnector
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 12
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThis class defines a database connector.\n"
  example: []
  syntax:
    content: 'public interface IBdoDbConnector : ITBdoConnector<IBdoDbConnection>, IBdoConnector, ITBdoExtensionItem<IBdoConnectorDefinition>, IBdoExtensionItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, INamed'
    content.vb: >-
      Public Interface IBdoDbConnector
          Inherits ITBdoConnector(Of IBdoDbConnection)
  inheritedMembers:
  - BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.UsingConnection(System.Action{BindOpen.Data.Connections.IBdoDbConnection},System.Boolean)
  - BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.UsingConnection(System.Action{BindOpen.Data.Connections.IBdoDbConnection,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  - BindOpen.Extensions.Runtime.IBdoConnector.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString(System.String)
  - BindOpen.Extensions.Runtime.IBdoConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  - BindOpen.Extensions.Runtime.IBdoConnector.ConnectionString
  - BindOpen.Extensions.Runtime.IBdoConnector.ConnectionTimeOut
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoConnectorDefinition)
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.Configuration
  - BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.Definition
  - BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  - BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  - BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  - BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  - BindOpen.Data.Items.IDataItem.Clone``1
  - System.ICloneable.Clone
  - System.IDisposable.Dispose
  - BindOpen.Data.Items.IIdentified.Id
  - BindOpen.Data.Items.IReferenced.Key
  - BindOpen.Data.Items.INamed.Name
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  id: Provider
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: IBdoDbConnector.Provider
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Provider
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 23
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe provider of this instance.\n"
  example: []
  syntax:
    content: string Provider { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Provider As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  id: ServerAddress
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: ServerAddress
  nameWithType: IBdoDbConnector.ServerAddress
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: ServerAddress
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 28
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe server address of this instance.\n"
  example: []
  syntax:
    content: string ServerAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property ServerAddress As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  id: InitialCatalog
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: InitialCatalog
  nameWithType: IBdoDbConnector.InitialCatalog
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: InitialCatalog
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 33
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe initial catalog of this instance.\n"
  example: []
  syntax:
    content: string InitialCatalog { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property InitialCatalog As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  id: IntegratedSecurity
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: IntegratedSecurity
  nameWithType: IBdoDbConnector.IntegratedSecurity
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: IntegratedSecurity
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 38
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe integrated security of this instance.\n"
  example: []
  syntax:
    content: string IntegratedSecurity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property IntegratedSecurity As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  id: UserName
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: IBdoDbConnector.UserName
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: UserName
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 43
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe user name of this instance.\n"
  example: []
  syntax:
    content: string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property UserName As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  id: Password
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: IBdoDbConnector.Password
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: Password
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 48
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe password of this instance.\n"
  example: []
  syntax:
    content: string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property Password As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.Password*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  commentId: P:BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  id: DatabaseConnectorKind
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: DatabaseConnectorKind
  nameWithType: IBdoDbConnector.DatabaseConnectorKind
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  type: Property
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: DatabaseConnectorKind
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 53
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nThe database kind of this instance.\n"
  example: []
  syntax:
    content: BdoDbConnectorKind DatabaseConnectorKind { get; set; }
    parameters: []
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
    content.vb: Property DatabaseConnectorKind As BdoDbConnectorKind
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind*
  modifiers.csharp:
  - get
  - set
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  id: CreateCommandText(BindOpen.Data.Queries.IDbQuery,BindOpen.Data.Queries.DbQueryParameterMode,BindOpen.Data.Elements.IDataElementSet,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IBdoDbConnector.CreateCommandText(IDbQuery, DbQueryParameterMode, IDataElementSet, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText(BindOpen.Data.Queries.IDbQuery, BindOpen.Data.Queries.DbQueryParameterMode, BindOpen.Data.Elements.IDataElementSet, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: CreateCommandText
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 74
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nGets the SQL text of the specified query.\n"
  example: []
  syntax:
    content: string CreateCommandText(IDbQuery query, DbQueryParameterMode parameterMode = DbQueryParameterMode.ValueInjected, IDataElementSet parameterSet = null, IBdoScriptVariableSet scriptVariableSet = null, IBdoLog log = null)
    parameters:
    - id: query
      type: BindOpen.Data.Queries.IDbQuery
      description: The query to consider.
    - id: parameterMode
      type: BindOpen.Data.Queries.DbQueryParameterMode
      description: Indicates whether parameters are replaced.
    - id: parameterSet
      type: BindOpen.Data.Elements.IDataElementSet
      description: The parameter set to consider.
    - id: scriptVariableSet
      type: BindOpen.System.Scripting.IBdoScriptVariableSet
      description: The script variable set to consider.
    - id: log
      type: BindOpen.System.Diagnostics.IBdoLog
      description: The log to consider.
    return:
      type: System.String
      description: Returns the SQL text of the specified query.
    content.vb: Function CreateCommandText(query As IDbQuery, parameterMode As DbQueryParameterMode = DbQueryParameterMode.ValueInjected, parameterSet As IDataElementSet = Nothing, scriptVariableSet As IBdoScriptVariableSet = Nothing, log As IBdoLog = Nothing) As String
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText*
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  commentId: M:BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  id: EstimateDbConnectorKind
  parent: BindOpen.Extensions.Connectors.IBdoDbConnector
  langs:
  - csharp
  - vb
  name: EstimateDbConnectorKind()
  nameWithType: IBdoDbConnector.EstimateDbConnectorKind()
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind()
  type: Method
  source:
    remote:
      path: src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
      branch: master
      repo: https://github.com/bindopen/BindOpen.Databases.git
    id: EstimateDbConnectorKind
    path: ../src/BindOpen.Databases/Extensions/Connectors/Interfaces/IBdoDbConnector.cs
    startLine: 93
  assemblies:
  - BindOpen.Databases
  namespace: BindOpen.Extensions.Connectors
  summary: "\nEstimates the kind of the database connector of this instance.\n"
  example: []
  syntax:
    content: BdoDbConnectorKind EstimateDbConnectorKind()
    return:
      type: BindOpen.Extensions.Connectors.BdoDbConnectorKind
      description: The database connector kind of this instance.
    content.vb: Function EstimateDbConnectorKind As BdoDbConnectorKind
  overload: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind*
references:
- uid: BindOpen.Extensions.Connectors
  commentId: N:BindOpen.Extensions.Connectors
  name: BindOpen.Extensions.Connectors
  nameWithType: BindOpen.Extensions.Connectors
  fullName: BindOpen.Extensions.Connectors
- uid: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}
  definition: BindOpen.Extensions.Runtime.ITBdoConnector`1.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  name: CreateConnection(IBdoLog)
  nameWithType: ITBdoConnector<IBdoDbConnection>.CreateConnection(IBdoLog)
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: ITBdoConnector(Of IBdoDbConnection).CreateConnection(IBdoLog)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection).CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConnection
    nameWithType: ITBdoConnector<IBdoDbConnection>.CreateConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>.CreateConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConnection
    nameWithType: ITBdoConnector(Of IBdoDbConnection).CreateConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection).CreateConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.UsingConnection(System.Action{BindOpen.Data.Connections.IBdoDbConnection},System.Boolean)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.UsingConnection(System.Action{BindOpen.Data.Connections.IBdoDbConnection},System.Boolean)
  parent: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}
  definition: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean)
  name: UsingConnection(Action<IBdoDbConnection>, Boolean)
  nameWithType: ITBdoConnector<IBdoDbConnection>.UsingConnection(Action<IBdoDbConnection>, Boolean)
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>.UsingConnection(System.Action<BindOpen.Data.Connections.IBdoDbConnection>, System.Boolean)
  nameWithType.vb: ITBdoConnector(Of IBdoDbConnection).UsingConnection(Action(Of IBdoDbConnection), Boolean)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection).UsingConnection(System.Action(Of BindOpen.Data.Connections.IBdoDbConnection), System.Boolean)
  name.vb: UsingConnection(Action(Of IBdoDbConnection), Boolean)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector<IBdoDbConnection>.UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>.UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector(Of IBdoDbConnection).UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection).UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.UsingConnection(System.Action{BindOpen.Data.Connections.IBdoDbConnection,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}.UsingConnection(System.Action{BindOpen.Data.Connections.IBdoDbConnection,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  parent: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}
  definition: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  name: UsingConnection(Action<IBdoDbConnection, IBdoLog>, IBdoLog, Boolean)
  nameWithType: ITBdoConnector<IBdoDbConnection>.UsingConnection(Action<IBdoDbConnection, IBdoLog>, IBdoLog, Boolean)
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>.UsingConnection(System.Action<BindOpen.Data.Connections.IBdoDbConnection, BindOpen.System.Diagnostics.IBdoLog>, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  nameWithType.vb: ITBdoConnector(Of IBdoDbConnection).UsingConnection(Action(Of IBdoDbConnection, IBdoLog), IBdoLog, Boolean)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection).UsingConnection(System.Action(Of BindOpen.Data.Connections.IBdoDbConnection, BindOpen.System.Diagnostics.IBdoLog), BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  name.vb: UsingConnection(Action(Of IBdoDbConnection, IBdoLog), IBdoLog, Boolean)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector<IBdoDbConnection>.UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>.UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector(Of IBdoDbConnection).UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection).UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoConnector.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.IBdoConnector.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Extensions.Runtime.IBdoConnector
  isExternal: true
  name: AsElement(String, IBdoLog)
  nameWithType: IBdoConnector.AsElement(String, IBdoLog)
  fullName: BindOpen.Extensions.Runtime.IBdoConnector.AsElement(System.String, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.IBdoConnector.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AsElement
    nameWithType: IBdoConnector.AsElement
    fullName: BindOpen.Extensions.Runtime.IBdoConnector.AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.IBdoConnector.AsElement(System.String,BindOpen.System.Diagnostics.IBdoLog)
    name: AsElement
    nameWithType: IBdoConnector.AsElement
    fullName: BindOpen.Extensions.Runtime.IBdoConnector.AsElement
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString(System.String)
  commentId: M:BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString(System.String)
  parent: BindOpen.Extensions.Runtime.IBdoConnector
  isExternal: true
  name: WithConnectionString(String)
  nameWithType: IBdoConnector.WithConnectionString(String)
  fullName: BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString(System.String)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString(System.String)
    name: WithConnectionString
    nameWithType: IBdoConnector.WithConnectionString
    fullName: BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString(System.String)
    name: WithConnectionString
    nameWithType: IBdoConnector.WithConnectionString
    fullName: BindOpen.Extensions.Runtime.IBdoConnector.WithConnectionString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  commentId: M:BindOpen.Extensions.Runtime.IBdoConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  parent: BindOpen.Extensions.Runtime.IBdoConnector
  isExternal: true
  name: WithScope(IBdoScope)
  nameWithType: IBdoConnector.WithScope(IBdoScope)
  fullName: BindOpen.Extensions.Runtime.IBdoConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.IBdoConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: IBdoConnector.WithScope
    fullName: BindOpen.Extensions.Runtime.IBdoConnector.WithScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.IBdoConnector.WithScope(BindOpen.Application.Scopes.IBdoScope)
    name: WithScope
    nameWithType: IBdoConnector.WithScope
    fullName: BindOpen.Extensions.Runtime.IBdoConnector.WithScope
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoConnector.ConnectionString
  commentId: P:BindOpen.Extensions.Runtime.IBdoConnector.ConnectionString
  parent: BindOpen.Extensions.Runtime.IBdoConnector
  isExternal: true
  name: ConnectionString
  nameWithType: IBdoConnector.ConnectionString
  fullName: BindOpen.Extensions.Runtime.IBdoConnector.ConnectionString
- uid: BindOpen.Extensions.Runtime.IBdoConnector.ConnectionTimeOut
  commentId: P:BindOpen.Extensions.Runtime.IBdoConnector.ConnectionTimeOut
  parent: BindOpen.Extensions.Runtime.IBdoConnector
  isExternal: true
  name: ConnectionTimeOut
  nameWithType: IBdoConnector.ConnectionTimeOut
  fullName: BindOpen.Extensions.Runtime.IBdoConnector.ConnectionTimeOut
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoConnectorDefinition)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.SetDefinition(BindOpen.Extensions.Definition.IBdoConnectorDefinition)
  parent: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
  name: SetDefinition(IBdoConnectorDefinition)
  nameWithType: ITBdoExtensionItem<IBdoConnectorDefinition>.SetDefinition(IBdoConnectorDefinition)
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoConnectorDefinition>.SetDefinition(BindOpen.Extensions.Definition.IBdoConnectorDefinition)
  nameWithType.vb: ITBdoExtensionItem(Of IBdoConnectorDefinition).SetDefinition(IBdoConnectorDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoConnectorDefinition).SetDefinition(BindOpen.Extensions.Definition.IBdoConnectorDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem<IBdoConnectorDefinition>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoConnectorDefinition>.SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    name: IBdoConnectorDefinition
    nameWithType: IBdoConnectorDefinition
    fullName: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem(Of IBdoConnectorDefinition).SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoConnectorDefinition).SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    name: IBdoConnectorDefinition
    nameWithType: IBdoConnectorDefinition
    fullName: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.Configuration
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.Configuration
  parent: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Configuration
  name: Configuration
  nameWithType: ITBdoExtensionItem<IBdoConnectorDefinition>.Configuration
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoConnectorDefinition>.Configuration
  nameWithType.vb: ITBdoExtensionItem(Of IBdoConnectorDefinition).Configuration
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoConnectorDefinition).Configuration
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.Definition
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}.Definition
  parent: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Definition
  name: Definition
  nameWithType: ITBdoExtensionItem<IBdoConnectorDefinition>.Definition
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoConnectorDefinition>.Definition
  nameWithType.vb: ITBdoExtensionItem(Of IBdoConnectorDefinition).Definition
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoConnectorDefinition).Definition
- uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Check(Boolean, String[])
  nameWithType: IDataItem.Check(Boolean, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String[])
  nameWithType.vb: IDataItem.Check(Boolean, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(System.Boolean, System.String())
  name.vb: Check(Boolean, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check(System.Boolean,System.String[])
    name: Check
    nameWithType: IDataItem.Check
    fullName: BindOpen.Data.Items.IDataItem.Check
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,{T},System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Repair(String[], UpdateModes[])
  nameWithType: IDataItem.Repair(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair
    nameWithType: IDataItem.Repair
    fullName: BindOpen.Data.Items.IDataItem.Repair
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Update(String[], UpdateModes[])
  nameWithType: IDataItem.Update(String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update(System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update(System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update
    nameWithType: IDataItem.Update
    fullName: BindOpen.Data.Items.IDataItem.Update
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1({T},System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  parent: BindOpen.Data.Items.IDataItem
  definition: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  nameWithType: IDataItem.UpdateRuntimeInfo(IBdoScope, IBdoScriptVariableSet, IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope, BindOpen.System.Scripting.IBdoScriptVariableSet, BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo(BindOpen.Application.Scopes.IBdoScope,BindOpen.System.Scripting.IBdoScriptVariableSet,BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateRuntimeInfo
    nameWithType: IDataItem.UpdateRuntimeInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateRuntimeInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Scopes.IBdoScope
    name: IBdoScope
    nameWithType: IBdoScope
    fullName: BindOpen.Application.Scopes.IBdoScope
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Scripting.IBdoScriptVariableSet
    name: IBdoScriptVariableSet
    nameWithType: IBdoScriptVariableSet
    fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: UpdateStorageInfo(IBdoLog)
  nameWithType: IDataItem.UpdateStorageInfo(IBdoLog)
  fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.UpdateStorageInfo(BindOpen.System.Diagnostics.IBdoLog)
    name: UpdateStorageInfo
    nameWithType: IDataItem.UpdateStorageInfo
    fullName: BindOpen.Data.Items.IDataItem.UpdateStorageInfo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Clone``1
  commentId: M:BindOpen.Data.Items.IDataItem.Clone``1
  parent: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: Clone<T>()
  nameWithType: IDataItem.Clone<T>()
  fullName: BindOpen.Data.Items.IDataItem.Clone<T>()
  nameWithType.vb: IDataItem.Clone(Of T)()
  fullName.vb: BindOpen.Data.Items.IDataItem.Clone(Of T)()
  name.vb: Clone(Of T)()
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone<T>
    nameWithType: IDataItem.Clone<T>
    fullName: BindOpen.Data.Items.IDataItem.Clone<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Clone``1
    name: Clone(Of T)
    nameWithType: IDataItem.Clone(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Clone(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IIdentified.Id
  commentId: P:BindOpen.Data.Items.IIdentified.Id
  parent: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: Id
  nameWithType: IIdentified.Id
  fullName: BindOpen.Data.Items.IIdentified.Id
- uid: BindOpen.Data.Items.IReferenced.Key
  commentId: M:BindOpen.Data.Items.IReferenced.Key
  parent: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: Key()
  nameWithType: IReferenced.Key()
  fullName: BindOpen.Data.Items.IReferenced.Key()
  spec.csharp:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IReferenced.Key
    name: Key
    nameWithType: IReferenced.Key
    fullName: BindOpen.Data.Items.IReferenced.Key
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.INamed.Name
  commentId: P:BindOpen.Data.Items.INamed.Name
  parent: BindOpen.Data.Items.INamed
  isExternal: true
  name: Name
  nameWithType: INamed.Name
  fullName: BindOpen.Data.Items.INamed.Name
- uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoConnector`1.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  isExternal: true
  name: CreateConnection(IBdoLog)
  nameWithType: ITBdoConnector<T>.CreateConnection(IBdoLog)
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<T>.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  nameWithType.vb: ITBdoConnector(Of T).CreateConnection(IBdoLog)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of T).CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConnection
    nameWithType: ITBdoConnector<T>.CreateConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector<T>.CreateConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.CreateConnection(BindOpen.System.Diagnostics.IBdoLog)
    name: CreateConnection
    nameWithType: ITBdoConnector(Of T).CreateConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector(Of T).CreateConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoConnector{BindOpen.Data.Connections.IBdoDbConnection}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoConnector`1
  name: ITBdoConnector<IBdoDbConnection>
  nameWithType: ITBdoConnector<IBdoDbConnection>
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<BindOpen.Data.Connections.IBdoDbConnection>
  nameWithType.vb: ITBdoConnector(Of IBdoDbConnection)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of BindOpen.Data.Connections.IBdoDbConnection)
  name.vb: ITBdoConnector(Of IBdoDbConnection)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.Connections.IBdoDbConnection
    name: IBdoDbConnection
    nameWithType: IBdoDbConnection
    fullName: BindOpen.Data.Connections.IBdoDbConnection
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean)
  isExternal: true
  name: UsingConnection(Action<T>, Boolean)
  nameWithType: ITBdoConnector<T>.UsingConnection(Action<T>, Boolean)
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<T>.UsingConnection(System.Action<T>, System.Boolean)
  nameWithType.vb: ITBdoConnector(Of T).UsingConnection(Action(Of T), Boolean)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of T).UsingConnection(System.Action(Of T), System.Boolean)
  name.vb: UsingConnection(Action(Of T), Boolean)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector<T>.UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector<T>.UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0},System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector(Of T).UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector(Of T).UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
  isExternal: true
  name: UsingConnection(Action<T, IBdoLog>, IBdoLog, Boolean)
  nameWithType: ITBdoConnector<T>.UsingConnection(Action<T, IBdoLog>, IBdoLog, Boolean)
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<T>.UsingConnection(System.Action<T, BindOpen.System.Diagnostics.IBdoLog>, BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  nameWithType.vb: ITBdoConnector(Of T).UsingConnection(Action(Of T, IBdoLog), IBdoLog, Boolean)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of T).UsingConnection(System.Action(Of T, BindOpen.System.Diagnostics.IBdoLog), BindOpen.System.Diagnostics.IBdoLog, System.Boolean)
  name.vb: UsingConnection(Action(Of T, IBdoLog), IBdoLog, Boolean)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector<T>.UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector<T>.UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1.UsingConnection(System.Action{`0,BindOpen.System.Diagnostics.IBdoLog},BindOpen.System.Diagnostics.IBdoLog,System.Boolean)
    name: UsingConnection
    nameWithType: ITBdoConnector(Of T).UsingConnection
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector(Of T).UsingConnection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.System.Diagnostics.IBdoLog
    name: IBdoLog
    nameWithType: IBdoLog
    fullName: BindOpen.System.Diagnostics.IBdoLog
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.IBdoConnector
  commentId: T:BindOpen.Extensions.Runtime.IBdoConnector
  parent: BindOpen.Extensions.Runtime
  isExternal: true
  name: IBdoConnector
  nameWithType: IBdoConnector
  fullName: BindOpen.Extensions.Runtime.IBdoConnector
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
  commentId: M:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
  isExternal: true
  name: SetDefinition(T)
  nameWithType: ITBdoExtensionItem<T>.SetDefinition(T)
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.SetDefinition(T)
  nameWithType.vb: ITBdoExtensionItem(Of T).SetDefinition(T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).SetDefinition(T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem<T>.SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.SetDefinition(`0)
    name: SetDefinition
    nameWithType: ITBdoExtensionItem(Of T).SetDefinition
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).SetDefinition
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem{BindOpen.Extensions.Definition.IBdoConnectorDefinition}
  parent: BindOpen.Extensions.Runtime
  definition: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  name: ITBdoExtensionItem<IBdoConnectorDefinition>
  nameWithType: ITBdoExtensionItem<IBdoConnectorDefinition>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<BindOpen.Extensions.Definition.IBdoConnectorDefinition>
  nameWithType.vb: ITBdoExtensionItem(Of IBdoConnectorDefinition)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of BindOpen.Extensions.Definition.IBdoConnectorDefinition)
  name.vb: ITBdoExtensionItem(Of IBdoConnectorDefinition)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    name: IBdoConnectorDefinition
    nameWithType: IBdoConnectorDefinition
    fullName: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    name: IBdoConnectorDefinition
    nameWithType: IBdoConnectorDefinition
    fullName: BindOpen.Extensions.Definition.IBdoConnectorDefinition
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Configuration
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Configuration
  isExternal: true
  name: Configuration
  nameWithType: ITBdoExtensionItem<T>.Configuration
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.Configuration
  nameWithType.vb: ITBdoExtensionItem(Of T).Configuration
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).Configuration
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Definition
  commentId: P:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1.Definition
  isExternal: true
  name: Definition
  nameWithType: ITBdoExtensionItem<T>.Definition
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>.Definition
  nameWithType.vb: ITBdoExtensionItem(Of T).Definition
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T).Definition
- uid: BindOpen.Data.Items.IDataItem
  commentId: T:BindOpen.Data.Items.IDataItem
  parent: BindOpen.Data.Items
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  commentId: M:BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
  isExternal: true
  name: Check<T>(Boolean, T, String[])
  nameWithType: IDataItem.Check<T>(Boolean, T, String[])
  fullName: BindOpen.Data.Items.IDataItem.Check<T>(System.Boolean, T, System.String[])
  nameWithType.vb: IDataItem.Check(Of T)(Boolean, T, String())
  fullName.vb: BindOpen.Data.Items.IDataItem.Check(Of T)(System.Boolean, T, System.String())
  name.vb: Check(Of T)(Boolean, T, String())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check<T>
    nameWithType: IDataItem.Check<T>
    fullName: BindOpen.Data.Items.IDataItem.Check<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Check``1(System.Boolean,``0,System.String[])
    name: Check(Of T)
    nameWithType: IDataItem.Check(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Check(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Repair<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Repair<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Repair<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Repair(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Repair(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Repair(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair<T>
    nameWithType: IDataItem.Repair<T>
    fullName: BindOpen.Data.Items.IDataItem.Repair<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Repair``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Repair(Of T)
    nameWithType: IDataItem.Repair(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Repair(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  commentId: M:BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
  isExternal: true
  name: Update<T>(T, String[], UpdateModes[])
  nameWithType: IDataItem.Update<T>(T, String[], UpdateModes[])
  fullName: BindOpen.Data.Items.IDataItem.Update<T>(T, System.String[], BindOpen.Data.Common.UpdateModes[])
  nameWithType.vb: IDataItem.Update(Of T)(T, String(), UpdateModes())
  fullName.vb: BindOpen.Data.Items.IDataItem.Update(Of T)(T, System.String(), BindOpen.Data.Common.UpdateModes())
  name.vb: Update(Of T)(T, String(), UpdateModes())
  spec.csharp:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update<T>
    nameWithType: IDataItem.Update<T>
    fullName: BindOpen.Data.Items.IDataItem.Update<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Data.Items.IDataItem.Update``1(``0,System.String[],BindOpen.Data.Common.UpdateModes[])
    name: Update(Of T)
    nameWithType: IDataItem.Update(Of T)
    fullName: BindOpen.Data.Items.IDataItem.Update(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: BindOpen.Data.Common.UpdateModes
    name: UpdateModes
    nameWithType: UpdateModes
    fullName: BindOpen.Data.Common.UpdateModes
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  commentId: T:BindOpen.Data.Items.IIdentified
  parent: BindOpen.Data.Items
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  commentId: T:BindOpen.Data.Items.IReferenced
  parent: BindOpen.Data.Items
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.INamed
  commentId: T:BindOpen.Data.Items.INamed
  parent: BindOpen.Data.Items
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
  commentId: T:BindOpen.Extensions.Runtime.ITBdoConnector`1
  isExternal: true
  name: ITBdoConnector<T>
  nameWithType: ITBdoConnector<T>
  fullName: BindOpen.Extensions.Runtime.ITBdoConnector<T>
  nameWithType.vb: ITBdoConnector(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoConnector(Of T)
  name.vb: ITBdoConnector(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoConnector`1
    name: ITBdoConnector
    nameWithType: ITBdoConnector
    fullName: BindOpen.Extensions.Runtime.ITBdoConnector
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Extensions.Runtime
  commentId: N:BindOpen.Extensions.Runtime
  isExternal: true
  name: BindOpen.Extensions.Runtime
  nameWithType: BindOpen.Extensions.Runtime
  fullName: BindOpen.Extensions.Runtime
- uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  commentId: T:BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
  isExternal: true
  name: ITBdoExtensionItem<T>
  nameWithType: ITBdoExtensionItem<T>
  fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem<T>
  nameWithType.vb: ITBdoExtensionItem(Of T)
  fullName.vb: BindOpen.Extensions.Runtime.ITBdoExtensionItem(Of T)
  name.vb: ITBdoExtensionItem(Of T)
  spec.csharp:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Extensions.Runtime.ITBdoExtensionItem`1
    name: ITBdoExtensionItem
    nameWithType: ITBdoExtensionItem
    fullName: BindOpen.Extensions.Runtime.ITBdoExtensionItem
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items
  commentId: N:BindOpen.Data.Items
  isExternal: true
  name: BindOpen.Data.Items
  nameWithType: BindOpen.Data.Items
  fullName: BindOpen.Data.Items
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
  name: Provider
  nameWithType: IBdoDbConnector.Provider
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Provider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
  name: ServerAddress
  nameWithType: IBdoDbConnector.ServerAddress
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.ServerAddress
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
  name: InitialCatalog
  nameWithType: IBdoDbConnector.InitialCatalog
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.InitialCatalog
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
  name: IntegratedSecurity
  nameWithType: IBdoDbConnector.IntegratedSecurity
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.IntegratedSecurity
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
  name: UserName
  nameWithType: IBdoDbConnector.UserName
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.UserName
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.Password*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.Password
  name: Password
  nameWithType: IBdoDbConnector.Password
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.Password
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
  name: DatabaseConnectorKind
  nameWithType: IBdoDbConnector.DatabaseConnectorKind
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.DatabaseConnectorKind
- uid: BindOpen.Extensions.Connectors.BdoDbConnectorKind
  commentId: T:BindOpen.Extensions.Connectors.BdoDbConnectorKind
  parent: BindOpen.Extensions.Connectors
  name: BdoDbConnectorKind
  nameWithType: BdoDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.BdoDbConnectorKind
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText
  name: CreateCommandText
  nameWithType: IBdoDbConnector.CreateCommandText
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.CreateCommandText
- uid: BindOpen.Data.Queries.IDbQuery
  commentId: T:BindOpen.Data.Queries.IDbQuery
  parent: BindOpen.Data.Queries
  name: IDbQuery
  nameWithType: IDbQuery
  fullName: BindOpen.Data.Queries.IDbQuery
- uid: BindOpen.Data.Queries.DbQueryParameterMode
  commentId: T:BindOpen.Data.Queries.DbQueryParameterMode
  parent: BindOpen.Data.Queries
  name: DbQueryParameterMode
  nameWithType: DbQueryParameterMode
  fullName: BindOpen.Data.Queries.DbQueryParameterMode
- uid: BindOpen.Data.Elements.IDataElementSet
  commentId: T:BindOpen.Data.Elements.IDataElementSet
  parent: BindOpen.Data.Elements
  isExternal: true
  name: IDataElementSet
  nameWithType: IDataElementSet
  fullName: BindOpen.Data.Elements.IDataElementSet
- uid: BindOpen.System.Scripting.IBdoScriptVariableSet
  commentId: T:BindOpen.System.Scripting.IBdoScriptVariableSet
  parent: BindOpen.System.Scripting
  isExternal: true
  name: IBdoScriptVariableSet
  nameWithType: IBdoScriptVariableSet
  fullName: BindOpen.System.Scripting.IBdoScriptVariableSet
- uid: BindOpen.System.Diagnostics.IBdoLog
  commentId: T:BindOpen.System.Diagnostics.IBdoLog
  parent: BindOpen.System.Diagnostics
  isExternal: true
  name: IBdoLog
  nameWithType: IBdoLog
  fullName: BindOpen.System.Diagnostics.IBdoLog
- uid: BindOpen.Data.Queries
  commentId: N:BindOpen.Data.Queries
  name: BindOpen.Data.Queries
  nameWithType: BindOpen.Data.Queries
  fullName: BindOpen.Data.Queries
- uid: BindOpen.Data.Elements
  commentId: N:BindOpen.Data.Elements
  isExternal: true
  name: BindOpen.Data.Elements
  nameWithType: BindOpen.Data.Elements
  fullName: BindOpen.Data.Elements
- uid: BindOpen.System.Scripting
  commentId: N:BindOpen.System.Scripting
  isExternal: true
  name: BindOpen.System.Scripting
  nameWithType: BindOpen.System.Scripting
  fullName: BindOpen.System.Scripting
- uid: BindOpen.System.Diagnostics
  commentId: N:BindOpen.System.Diagnostics
  isExternal: true
  name: BindOpen.System.Diagnostics
  nameWithType: BindOpen.System.Diagnostics
  fullName: BindOpen.System.Diagnostics
- uid: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind*
  commentId: Overload:BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
  name: EstimateDbConnectorKind
  nameWithType: IBdoDbConnector.EstimateDbConnectorKind
  fullName: BindOpen.Extensions.Connectors.IBdoDbConnector.EstimateDbConnectorKind
shouldSkipMarkup: true
