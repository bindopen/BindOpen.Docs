### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Limitations.ProductLimitation
  commentId: T:BindOpen.Application.Limitations.ProductLimitation
  id: ProductLimitation
  parent: BindOpen.Application.Limitations
  children:
  - BindOpen.Application.Limitations.ProductLimitation.#ctor
  - BindOpen.Application.Limitations.ProductLimitation.Description
  - BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle
  - BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl
  - BindOpen.Application.Limitations.ProductLimitation.IsCritical
  - BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation
  - BindOpen.Application.Limitations.ProductLimitation.IsTracked
  - BindOpen.Application.Limitations.ProductLimitation.LimitValue
  - BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName
  - BindOpen.Application.Limitations.ProductLimitation.RegistrationMode
  - BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences
  - BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue
  langs:
  - csharp
  - vb
  name: ProductLimitation
  nameWithType: ProductLimitation
  fullName: BindOpen.Application.Limitations.ProductLimitation
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nThis class represents a product limitation.\n"
  syntax:
    content: 'public class ProductLimitation : DataItem'
    content.vb: >-
      Public Class ProductLimitation
          Inherits DataItem
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Limitations.ProductLimitation.#ctor
  commentId: M:BindOpen.Application.Limitations.ProductLimitation.#ctor
  id: '#ctor'
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: ProductLimitation()
  nameWithType: ProductLimitation.ProductLimitation()
  fullName: BindOpen.Application.Limitations.ProductLimitation.ProductLimitation()
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nInstantiates a new instance of the ProductLimitation class.\n"
  syntax:
    content: public ProductLimitation()
    content.vb: Public Sub New
  overload: BindOpen.Application.Limitations.ProductLimitation.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.RegistrationMode
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.RegistrationMode
  id: RegistrationMode
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: RegistrationMode
  nameWithType: ProductLimitation.RegistrationMode
  fullName: BindOpen.Application.Limitations.ProductLimitation.RegistrationMode
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nThe registration mode of this instance.\n"
  syntax:
    content: public string RegistrationMode { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RegistrationMode As String
  overload: BindOpen.Application.Limitations.ProductLimitation.RegistrationMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName
  id: MetricsConfigurationUniqueName
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: MetricsConfigurationUniqueName
  nameWithType: ProductLimitation.MetricsConfigurationUniqueName
  fullName: BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nThe business metrics unique ID of this instance.\n"
  syntax:
    content: public string MetricsConfigurationUniqueName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MetricsConfigurationUniqueName As String
  overload: BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle
  id: DisplayedTitle
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: DisplayedTitle
  nameWithType: ProductLimitation.DisplayedTitle
  fullName: BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nDisplayed metrics title of this instance.\n"
  remarks: It is used if the business metrics cannot be found.
  syntax:
    content: public DictionaryDataItem DisplayedTitle { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DictionaryDataItem
    content.vb: Public Property DisplayedTitle As DictionaryDataItem
  overload: BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.Description
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.Description
  id: Description
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ProductLimitation.Description
  fullName: BindOpen.Application.Limitations.ProductLimitation.Description
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nDisplayed metrics description of this instance.\n"
  remarks: It is used if the business metrics cannot be found.
  syntax:
    content: public DictionaryDataItem Description { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DictionaryDataItem
    content.vb: Public Property Description As DictionaryDataItem
  overload: BindOpen.Application.Limitations.ProductLimitation.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.LimitValue
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.LimitValue
  id: LimitValue
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: LimitValue
  nameWithType: ProductLimitation.LimitValue
  fullName: BindOpen.Application.Limitations.ProductLimitation.LimitValue
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nThe limit value of this instance.\n"
  syntax:
    content: public int LimitValue { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LimitValue As Integer
  overload: BindOpen.Application.Limitations.ProductLimitation.LimitValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue
  id: WarningThresholdValue
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: WarningThresholdValue
  nameWithType: ProductLimitation.WarningThresholdValue
  fullName: BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nThe warning threshold value of this instance.\n"
  syntax:
    content: public int WarningThresholdValue { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WarningThresholdValue As Integer
  overload: BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation
  id: IsOnlyDuringEvaluation
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: IsOnlyDuringEvaluation
  nameWithType: ProductLimitation.IsOnlyDuringEvaluation
  fullName: BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nIndicates whether this instance is during evaluation only.\n"
  syntax:
    content: public bool IsOnlyDuringEvaluation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOnlyDuringEvaluation As Boolean
  overload: BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.IsTracked
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.IsTracked
  id: IsTracked
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: IsTracked
  nameWithType: ProductLimitation.IsTracked
  fullName: BindOpen.Application.Limitations.ProductLimitation.IsTracked
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nIndicates whether this instance is tracked.\n"
  syntax:
    content: public bool IsTracked { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsTracked As Boolean
  overload: BindOpen.Application.Limitations.ProductLimitation.IsTracked*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.IsCritical
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.IsCritical
  id: IsCritical
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: IsCritical
  nameWithType: ProductLimitation.IsCritical
  fullName: BindOpen.Application.Limitations.ProductLimitation.IsCritical
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nIndicates whether this instance is critical.\n"
  syntax:
    content: public bool IsCritical { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCritical As Boolean
  overload: BindOpen.Application.Limitations.ProductLimitation.IsCritical*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl
  id: ExtraPurchaseUrl
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: ExtraPurchaseUrl
  nameWithType: ProductLimitation.ExtraPurchaseUrl
  fullName: BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nThe extra purchase URL of this instance.\n"
  syntax:
    content: public string ExtraPurchaseUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExtraPurchaseUrl As String
  overload: BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences
  commentId: P:BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences
  id: TargetElementReferences
  parent: BindOpen.Application.Limitations.ProductLimitation
  langs:
  - csharp
  - vb
  name: TargetElementReferences
  nameWithType: ProductLimitation.TargetElementReferences
  fullName: BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Limitations
  summary: "\nThe target element references of this instance.\n"
  syntax:
    content: public List<DataReference> TargetElementReferences { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{BindOpen.Data.References.DataReference}
    content.vb: Public Property TargetElementReferences As List(Of DataReference)
  overload: BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Application.Limitations
  commentId: N:BindOpen.Application.Limitations
  isExternal: true
  name: BindOpen.Application.Limitations
  nameWithType: BindOpen.Application.Limitations
  fullName: BindOpen.Application.Limitations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Limitations.ProductLimitation.#ctor*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.#ctor
  isExternal: true
  name: ProductLimitation
  nameWithType: ProductLimitation.ProductLimitation
  fullName: BindOpen.Application.Limitations.ProductLimitation.ProductLimitation
- uid: BindOpen.Application.Limitations.ProductLimitation.RegistrationMode*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.RegistrationMode
  isExternal: true
  name: RegistrationMode
  nameWithType: ProductLimitation.RegistrationMode
  fullName: BindOpen.Application.Limitations.ProductLimitation.RegistrationMode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName
  isExternal: true
  name: MetricsConfigurationUniqueName
  nameWithType: ProductLimitation.MetricsConfigurationUniqueName
  fullName: BindOpen.Application.Limitations.ProductLimitation.MetricsConfigurationUniqueName
- uid: BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle
  isExternal: true
  name: DisplayedTitle
  nameWithType: ProductLimitation.DisplayedTitle
  fullName: BindOpen.Application.Limitations.ProductLimitation.DisplayedTitle
- uid: BindOpen.Data.Items.DictionaryDataItem
  isExternal: true
  name: DictionaryDataItem
  nameWithType: DictionaryDataItem
  fullName: BindOpen.Data.Items.DictionaryDataItem
- uid: BindOpen.Application.Limitations.ProductLimitation.Description*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.Description
  isExternal: true
  name: Description
  nameWithType: ProductLimitation.Description
  fullName: BindOpen.Application.Limitations.ProductLimitation.Description
- uid: BindOpen.Application.Limitations.ProductLimitation.LimitValue*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.LimitValue
  isExternal: true
  name: LimitValue
  nameWithType: ProductLimitation.LimitValue
  fullName: BindOpen.Application.Limitations.ProductLimitation.LimitValue
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue
  isExternal: true
  name: WarningThresholdValue
  nameWithType: ProductLimitation.WarningThresholdValue
  fullName: BindOpen.Application.Limitations.ProductLimitation.WarningThresholdValue
- uid: BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation
  isExternal: true
  name: IsOnlyDuringEvaluation
  nameWithType: ProductLimitation.IsOnlyDuringEvaluation
  fullName: BindOpen.Application.Limitations.ProductLimitation.IsOnlyDuringEvaluation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Limitations.ProductLimitation.IsTracked*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.IsTracked
  isExternal: true
  name: IsTracked
  nameWithType: ProductLimitation.IsTracked
  fullName: BindOpen.Application.Limitations.ProductLimitation.IsTracked
- uid: BindOpen.Application.Limitations.ProductLimitation.IsCritical*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.IsCritical
  isExternal: true
  name: IsCritical
  nameWithType: ProductLimitation.IsCritical
  fullName: BindOpen.Application.Limitations.ProductLimitation.IsCritical
- uid: BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl
  isExternal: true
  name: ExtraPurchaseUrl
  nameWithType: ProductLimitation.ExtraPurchaseUrl
  fullName: BindOpen.Application.Limitations.ProductLimitation.ExtraPurchaseUrl
- uid: BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences*
  commentId: Overload:BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences
  isExternal: true
  name: TargetElementReferences
  nameWithType: ProductLimitation.TargetElementReferences
  fullName: BindOpen.Application.Limitations.ProductLimitation.TargetElementReferences
- uid: System.Collections.Generic.List{BindOpen.Data.References.DataReference}
  commentId: '!:System.Collections.Generic.List{BindOpen.Data.References.DataReference}'
  definition: System.Collections.Generic.List`1
  name: List<DataReference>
  nameWithType: List<DataReference>
  fullName: System.Collections.Generic.List<BindOpen.Data.References.DataReference>
  nameWithType.vb: List(Of DataReference)
  fullName.vb: System.Collections.Generic.List(Of BindOpen.Data.References.DataReference)
  name.vb: List(Of DataReference)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Data.References.DataReference
    name: DataReference
    nameWithType: DataReference
    fullName: BindOpen.Data.References.DataReference
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Data.References.DataReference
    name: DataReference
    nameWithType: DataReference
    fullName: BindOpen.Data.References.DataReference
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: System.Collections.Generic.List<>
  nameWithType.vb: List(Of )
  fullName.vb: System.Collections.Generic.List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
