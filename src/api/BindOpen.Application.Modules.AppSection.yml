### YamlMime:ManagedReference
items:
- uid: BindOpen.Application.Modules.AppSection
  commentId: T:BindOpen.Application.Modules.AppSection
  id: AppSection
  parent: BindOpen.Application.Modules
  children:
  - BindOpen.Application.Modules.AppSection.#ctor(System.String,BindOpen.Application.Modules.IAppModule,BindOpen.Application.Modules.IAppSection)
  - BindOpen.Application.Modules.AppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  - BindOpen.Application.Modules.AppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  - BindOpen.Application.Modules.AppSection.GetSubSectionWithName(System.String)
  - BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName(System.String)
  - BindOpen.Application.Modules.AppSection.IconFileName
  - BindOpen.Application.Modules.AppSection.IsVisible
  - BindOpen.Application.Modules.AppSection.Key
  - BindOpen.Application.Modules.AppSection.Module
  - BindOpen.Application.Modules.AppSection.Parent
  - BindOpen.Application.Modules.AppSection.Rank
  - BindOpen.Application.Modules.AppSection.SubSections
  - BindOpen.Application.Modules.AppSection.ThumbIconFileName
  langs:
  - csharp
  - vb
  name: AppSection
  nameWithType: AppSection
  fullName: BindOpen.Application.Modules.AppSection
  type: Class
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThis class represents a visitor application module section.\n"
  syntax:
    content: 'public class AppSection : DescribedDataItem, IAppSection, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed'
    content.vb: >-
      Public Class AppSection
          Inherits DescribedDataItem
          Implements IAppSection, IDescribedDataItem, ITitledDataItem, INamedDataItem, IStoredDataItem, IIdentifiedDataItem, IDataItem, ICloneable, IDisposable, IIdentified, IReferenced, IStorable, INamed, IGloballyTitled, IGloballyDescribed
  inheritance:
  - System.Object
  implements:
  - BindOpen.Application.Modules.IAppSection
  - BindOpen.Data.Items.IDescribedDataItem
  - BindOpen.Data.Items.ITitledDataItem
  - BindOpen.Data.Items.INamedDataItem
  - BindOpen.Data.Items.IStoredDataItem
  - BindOpen.Data.Items.IIdentifiedDataItem
  - BindOpen.Data.Items.IDataItem
  - System.ICloneable
  - System.IDisposable
  - BindOpen.Data.Items.IIdentified
  - BindOpen.Data.Items.IReferenced
  - BindOpen.Data.Items.IStorable
  - BindOpen.Data.Items.INamed
  - BindOpen.Data.Items.IGloballyTitled
  - BindOpen.Data.Items.IGloballyDescribed
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: BindOpen.Application.Modules.AppSection.#ctor(System.String,BindOpen.Application.Modules.IAppModule,BindOpen.Application.Modules.IAppSection)
  commentId: M:BindOpen.Application.Modules.AppSection.#ctor(System.String,BindOpen.Application.Modules.IAppModule,BindOpen.Application.Modules.IAppSection)
  id: '#ctor(System.String,BindOpen.Application.Modules.IAppModule,BindOpen.Application.Modules.IAppSection)'
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: AppSection(String, IAppModule, IAppSection)
  nameWithType: AppSection.AppSection(String, IAppModule, IAppSection)
  fullName: BindOpen.Application.Modules.AppSection.AppSection(System.String, BindOpen.Application.Modules.IAppModule, BindOpen.Application.Modules.IAppSection)
  type: Constructor
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nInitializes a new instance of the ApplicationModuleSection class.\n"
  syntax:
    content: public AppSection(string name, IAppModule module = null, IAppSection parent = null)
    parameters:
    - id: name
      type: System.String
      description: The name to consider.
    - id: module
      type: BindOpen.Application.Modules.IAppModule
      description: The application module of the instance.
    - id: parent
      type: BindOpen.Application.Modules.IAppSection
      description: The parent section of the instance.
    content.vb: Public Sub New(name As String, module As IAppModule = Nothing, parent As IAppSection = Nothing)
  overload: BindOpen.Application.Modules.AppSection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  commentId: M:BindOpen.Application.Modules.AppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  id: AddSection(BindOpen.Application.Modules.IAppSection)
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: AddSection(IAppSection)
  nameWithType: AppSection.AddSection(IAppSection)
  fullName: BindOpen.Application.Modules.AppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nAdds the specified section.\n"
  syntax:
    content: public void AddSection(IAppSection section)
    parameters:
    - id: section
      type: BindOpen.Application.Modules.IAppSection
      description: The section to add.
    content.vb: Public Sub AddSection(section As IAppSection)
  overload: BindOpen.Application.Modules.AppSection.AddSection*
  implements:
  - BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  commentId: M:BindOpen.Application.Modules.AppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  id: AddSections(BindOpen.Application.Modules.AppSection[])
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: AddSections(AppSection[])
  nameWithType: AppSection.AddSections(AppSection[])
  fullName: BindOpen.Application.Modules.AppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nAdds the specified sections.\n"
  syntax:
    content: public IAppSection AddSections(params AppSection[] sections)
    parameters:
    - id: sections
      type: BindOpen.Application.Modules.AppSection[]
      description: The sections to add.
    return:
      type: BindOpen.Application.Modules.IAppSection
      description: Returns the specified sections.
    content.vb: Public Function AddSections(ParamArray sections As AppSection()) As IAppSection
  overload: BindOpen.Application.Modules.AppSection.AddSections*
  implements:
  - BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  nameWithType.vb: AppSection.AddSections(AppSection())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: BindOpen.Application.Modules.AppSection.AddSections(BindOpen.Application.Modules.AppSection())
  name.vb: AddSections(AppSection())
- uid: BindOpen.Application.Modules.AppSection.Key
  commentId: M:BindOpen.Application.Modules.AppSection.Key
  id: Key
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: Key()
  nameWithType: AppSection.Key()
  fullName: BindOpen.Application.Modules.AppSection.Key()
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nReturns the identifier key.\n"
  syntax:
    content: public override string Key()
    return:
      type: System.String
    content.vb: Public Overrides Function Key As String
  overload: BindOpen.Application.Modules.AppSection.Key*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: BindOpen.Application.Modules.AppSection.GetSubSectionWithName(System.String)
  commentId: M:BindOpen.Application.Modules.AppSection.GetSubSectionWithName(System.String)
  id: GetSubSectionWithName(System.String)
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: GetSubSectionWithName(String)
  nameWithType: AppSection.GetSubSectionWithName(String)
  fullName: BindOpen.Application.Modules.AppSection.GetSubSectionWithName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nReturns the sub section with the specified name.\n"
  syntax:
    content: public IAppSection GetSubSectionWithName(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the sub application sections to return.
    return:
      type: BindOpen.Application.Modules.IAppSection
      description: The sub application section with the specified name.
    content.vb: Public Function GetSubSectionWithName(name As String) As IAppSection
  overload: BindOpen.Application.Modules.AppSection.GetSubSectionWithName*
  implements:
  - BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName(System.String)
  commentId: M:BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName(System.String)
  id: GetSubSectionWithUniqueName(System.String)
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: GetSubSectionWithUniqueName(String)
  nameWithType: AppSection.GetSubSectionWithUniqueName(String)
  fullName: BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName(System.String)
  type: Method
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nReturns the sub section with the specified unique name.\n"
  syntax:
    content: public IAppSection GetSubSectionWithUniqueName(string key)
    parameters:
    - id: key
      type: System.String
      description: The key of the sub application sections to return.
    return:
      type: BindOpen.Application.Modules.IAppSection
      description: The sub application sections with the specified unique name.
    content.vb: Public Function GetSubSectionWithUniqueName(key As String) As IAppSection
  overload: BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName*
  implements:
  - BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.Module
  commentId: P:BindOpen.Application.Modules.AppSection.Module
  id: Module
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: AppSection.Module
  fullName: BindOpen.Application.Modules.AppSection.Module
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe module of this instance.\n"
  syntax:
    content: public IAppModule Module { get; set; }
    parameters: []
    return:
      type: BindOpen.Application.Modules.IAppModule
    content.vb: Public Property Module As IAppModule
  overload: BindOpen.Application.Modules.AppSection.Module*
  implements:
  - BindOpen.Application.Modules.IAppSection.Module
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.Parent
  commentId: P:BindOpen.Application.Modules.AppSection.Parent
  id: Parent
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: AppSection.Parent
  fullName: BindOpen.Application.Modules.AppSection.Parent
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe section parent of this instance.\n"
  syntax:
    content: public IAppSection Parent { get; set; }
    parameters: []
    return:
      type: BindOpen.Application.Modules.IAppSection
    content.vb: Public Property Parent As IAppSection
  overload: BindOpen.Application.Modules.AppSection.Parent*
  implements:
  - BindOpen.Application.Modules.IAppSection.Parent
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.SubSections
  commentId: P:BindOpen.Application.Modules.AppSection.SubSections
  id: SubSections
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: SubSections
  nameWithType: AppSection.SubSections
  fullName: BindOpen.Application.Modules.AppSection.SubSections
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nThe sub sections of this instance.\n"
  syntax:
    content: public DataItemSet<AppSection> SubSections { get; set; }
    parameters: []
    return:
      type: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Modules.AppSection}
    content.vb: Public Property SubSections As DataItemSet(Of AppSection)
  overload: BindOpen.Application.Modules.AppSection.SubSections*
  implements:
  - BindOpen.Application.Modules.IAppSection.SubSections
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.IsVisible
  commentId: P:BindOpen.Application.Modules.AppSection.IsVisible
  id: IsVisible
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: IsVisible
  nameWithType: AppSection.IsVisible
  fullName: BindOpen.Application.Modules.AppSection.IsVisible
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nIndicates whether this instance is visible.\n"
  syntax:
    content: public bool IsVisible { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsVisible As Boolean
  overload: BindOpen.Application.Modules.AppSection.IsVisible*
  implements:
  - BindOpen.Application.Modules.IAppSection.IsVisible
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.IconFileName
  commentId: P:BindOpen.Application.Modules.AppSection.IconFileName
  id: IconFileName
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: IconFileName
  nameWithType: AppSection.IconFileName
  fullName: BindOpen.Application.Modules.AppSection.IconFileName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nFile name of the icon of this instance.\n"
  syntax:
    content: public string IconFileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IconFileName As String
  overload: BindOpen.Application.Modules.AppSection.IconFileName*
  implements:
  - BindOpen.Application.Modules.IAppSection.IconFileName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.ThumbIconFileName
  commentId: P:BindOpen.Application.Modules.AppSection.ThumbIconFileName
  id: ThumbIconFileName
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: ThumbIconFileName
  nameWithType: AppSection.ThumbIconFileName
  fullName: BindOpen.Application.Modules.AppSection.ThumbIconFileName
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nFile name of the thumb icon of this instance.\n"
  syntax:
    content: public string ThumbIconFileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThumbIconFileName As String
  overload: BindOpen.Application.Modules.AppSection.ThumbIconFileName*
  implements:
  - BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: BindOpen.Application.Modules.AppSection.Rank
  commentId: P:BindOpen.Application.Modules.AppSection.Rank
  id: Rank
  parent: BindOpen.Application.Modules.AppSection
  langs:
  - csharp
  - vb
  name: Rank
  nameWithType: AppSection.Rank
  fullName: BindOpen.Application.Modules.AppSection.Rank
  type: Property
  source:
    path: BindOpen.Runtime
    isExternal: true
  assemblies:
  - BindOpen.Runtime
  namespace: BindOpen.Application.Modules
  summary: "\nRank of this instance.\n"
  syntax:
    content: public int Rank { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Rank As Integer
  overload: BindOpen.Application.Modules.AppSection.Rank*
  implements:
  - BindOpen.Application.Modules.IAppSection.Rank
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: BindOpen.Application.Modules
  commentId: N:BindOpen.Application.Modules
  isExternal: true
  name: BindOpen.Application.Modules
  nameWithType: BindOpen.Application.Modules
  fullName: BindOpen.Application.Modules
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: BindOpen.Application.Modules.IAppSection
  commentId: T:BindOpen.Application.Modules.IAppSection
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppSection
  nameWithType: IAppSection
  fullName: BindOpen.Application.Modules.IAppSection
- uid: BindOpen.Data.Items.IDescribedDataItem
  isExternal: true
  name: IDescribedDataItem
  nameWithType: IDescribedDataItem
  fullName: BindOpen.Data.Items.IDescribedDataItem
- uid: BindOpen.Data.Items.ITitledDataItem
  isExternal: true
  name: ITitledDataItem
  nameWithType: ITitledDataItem
  fullName: BindOpen.Data.Items.ITitledDataItem
- uid: BindOpen.Data.Items.INamedDataItem
  isExternal: true
  name: INamedDataItem
  nameWithType: INamedDataItem
  fullName: BindOpen.Data.Items.INamedDataItem
- uid: BindOpen.Data.Items.IStoredDataItem
  isExternal: true
  name: IStoredDataItem
  nameWithType: IStoredDataItem
  fullName: BindOpen.Data.Items.IStoredDataItem
- uid: BindOpen.Data.Items.IIdentifiedDataItem
  isExternal: true
  name: IIdentifiedDataItem
  nameWithType: IIdentifiedDataItem
  fullName: BindOpen.Data.Items.IIdentifiedDataItem
- uid: BindOpen.Data.Items.IDataItem
  isExternal: true
  name: IDataItem
  nameWithType: IDataItem
  fullName: BindOpen.Data.Items.IDataItem
- uid: System.ICloneable
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: BindOpen.Data.Items.IIdentified
  isExternal: true
  name: IIdentified
  nameWithType: IIdentified
  fullName: BindOpen.Data.Items.IIdentified
- uid: BindOpen.Data.Items.IReferenced
  isExternal: true
  name: IReferenced
  nameWithType: IReferenced
  fullName: BindOpen.Data.Items.IReferenced
- uid: BindOpen.Data.Items.IStorable
  isExternal: true
  name: IStorable
  nameWithType: IStorable
  fullName: BindOpen.Data.Items.IStorable
- uid: BindOpen.Data.Items.INamed
  isExternal: true
  name: INamed
  nameWithType: INamed
  fullName: BindOpen.Data.Items.INamed
- uid: BindOpen.Data.Items.IGloballyTitled
  isExternal: true
  name: IGloballyTitled
  nameWithType: IGloballyTitled
  fullName: BindOpen.Data.Items.IGloballyTitled
- uid: BindOpen.Data.Items.IGloballyDescribed
  isExternal: true
  name: IGloballyDescribed
  nameWithType: IGloballyDescribed
  fullName: BindOpen.Data.Items.IGloballyDescribed
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: BindOpen.Application.Modules.AppSection.#ctor*
  commentId: Overload:BindOpen.Application.Modules.AppSection.#ctor
  isExternal: true
  name: AppSection
  nameWithType: AppSection.AppSection
  fullName: BindOpen.Application.Modules.AppSection.AppSection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: BindOpen.Application.Modules.IAppModule
  commentId: T:BindOpen.Application.Modules.IAppModule
  parent: BindOpen.Application.Modules
  isExternal: true
  name: IAppModule
  nameWithType: IAppModule
  fullName: BindOpen.Application.Modules.IAppModule
- uid: BindOpen.Application.Modules.AppSection.AddSection*
  commentId: Overload:BindOpen.Application.Modules.AppSection.AddSection
  isExternal: true
  name: AddSection
  nameWithType: AppSection.AddSection
  fullName: BindOpen.Application.Modules.AppSection.AddSection
- uid: BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  commentId: M:BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: AddSection(IAppSection)
  nameWithType: IAppSection.AddSection(IAppSection)
  fullName: BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
    name: AddSection
    nameWithType: IAppSection.AddSection
    fullName: BindOpen.Application.Modules.IAppSection.AddSection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppSection.AddSection(BindOpen.Application.Modules.IAppSection)
    name: AddSection
    nameWithType: IAppSection.AddSection
    fullName: BindOpen.Application.Modules.IAppSection.AddSection
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.IAppSection
    name: IAppSection
    nameWithType: IAppSection
    fullName: BindOpen.Application.Modules.IAppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppSection.AddSections*
  commentId: Overload:BindOpen.Application.Modules.AppSection.AddSections
  isExternal: true
  name: AddSections
  nameWithType: AppSection.AddSections
  fullName: BindOpen.Application.Modules.AppSection.AddSections
- uid: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  commentId: M:BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: AddSections(AppSection[])
  nameWithType: IAppSection.AddSections(AppSection[])
  fullName: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
  nameWithType.vb: IAppSection.AddSections(AppSection())
  fullName.vb: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection())
  name.vb: AddSections(AppSection())
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
    name: AddSections
    nameWithType: IAppSection.AddSections
    fullName: BindOpen.Application.Modules.IAppSection.AddSections
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppSection.AddSections(BindOpen.Application.Modules.AppSection[])
    name: AddSections
    nameWithType: IAppSection.AddSections
    fullName: BindOpen.Application.Modules.IAppSection.AddSections
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppSection[]
  isExternal: true
  name: AppSection[]
  nameWithType: AppSection[]
  fullName: BindOpen.Application.Modules.AppSection[]
  nameWithType.vb: AppSection()
  fullName.vb: BindOpen.Application.Modules.AppSection()
  name.vb: AppSection()
  spec.csharp:
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: BindOpen.Application.Modules.AppSection.Key*
  commentId: Overload:BindOpen.Application.Modules.AppSection.Key
  isExternal: true
  name: Key
  nameWithType: AppSection.Key
  fullName: BindOpen.Application.Modules.AppSection.Key
- uid: BindOpen.Application.Modules.AppSection.GetSubSectionWithName*
  commentId: Overload:BindOpen.Application.Modules.AppSection.GetSubSectionWithName
  isExternal: true
  name: GetSubSectionWithName
  nameWithType: AppSection.GetSubSectionWithName
  fullName: BindOpen.Application.Modules.AppSection.GetSubSectionWithName
- uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  commentId: M:BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: GetSubSectionWithName(String)
  nameWithType: IAppSection.GetSubSectionWithName(String)
  fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
    name: GetSubSectionWithName
    nameWithType: IAppSection.GetSubSectionWithName
    fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName(System.String)
    name: GetSubSectionWithName
    nameWithType: IAppSection.GetSubSectionWithName
    fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName*
  commentId: Overload:BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName
  isExternal: true
  name: GetSubSectionWithUniqueName
  nameWithType: AppSection.GetSubSectionWithUniqueName
  fullName: BindOpen.Application.Modules.AppSection.GetSubSectionWithUniqueName
- uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  commentId: M:BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: GetSubSectionWithUniqueName(String)
  nameWithType: IAppSection.GetSubSectionWithUniqueName(String)
  fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
  spec.csharp:
  - uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
    name: GetSubSectionWithUniqueName
    nameWithType: IAppSection.GetSubSectionWithUniqueName
    fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName(System.String)
    name: GetSubSectionWithUniqueName
    nameWithType: IAppSection.GetSubSectionWithUniqueName
    fullName: BindOpen.Application.Modules.IAppSection.GetSubSectionWithUniqueName
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppSection.Module*
  commentId: Overload:BindOpen.Application.Modules.AppSection.Module
  isExternal: true
  name: Module
  nameWithType: AppSection.Module
  fullName: BindOpen.Application.Modules.AppSection.Module
- uid: BindOpen.Application.Modules.IAppSection.Module
  commentId: P:BindOpen.Application.Modules.IAppSection.Module
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: Module
  nameWithType: IAppSection.Module
  fullName: BindOpen.Application.Modules.IAppSection.Module
- uid: BindOpen.Application.Modules.AppSection.Parent*
  commentId: Overload:BindOpen.Application.Modules.AppSection.Parent
  isExternal: true
  name: Parent
  nameWithType: AppSection.Parent
  fullName: BindOpen.Application.Modules.AppSection.Parent
- uid: BindOpen.Application.Modules.IAppSection.Parent
  commentId: P:BindOpen.Application.Modules.IAppSection.Parent
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: Parent
  nameWithType: IAppSection.Parent
  fullName: BindOpen.Application.Modules.IAppSection.Parent
- uid: BindOpen.Application.Modules.AppSection.SubSections*
  commentId: Overload:BindOpen.Application.Modules.AppSection.SubSections
  isExternal: true
  name: SubSections
  nameWithType: AppSection.SubSections
  fullName: BindOpen.Application.Modules.AppSection.SubSections
- uid: BindOpen.Application.Modules.IAppSection.SubSections
  commentId: P:BindOpen.Application.Modules.IAppSection.SubSections
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: SubSections
  nameWithType: IAppSection.SubSections
  fullName: BindOpen.Application.Modules.IAppSection.SubSections
- uid: BindOpen.Data.Items.DataItemSet{BindOpen.Application.Modules.AppSection}
  commentId: '!:BindOpen.Data.Items.DataItemSet{BindOpen.Application.Modules.AppSection}'
  definition: BindOpen.Data.Items.DataItemSet`1
  name: DataItemSet<AppSection>
  nameWithType: DataItemSet<AppSection>
  fullName: BindOpen.Data.Items.DataItemSet<BindOpen.Application.Modules.AppSection>
  nameWithType.vb: DataItemSet(Of AppSection)
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of BindOpen.Application.Modules.AppSection)
  name.vb: DataItemSet(Of AppSection)
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: BindOpen.Application.Modules.AppSection
    name: AppSection
    nameWithType: AppSection
    fullName: BindOpen.Application.Modules.AppSection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Data.Items.DataItemSet`1
  isExternal: true
  name: DataItemSet<>
  nameWithType: DataItemSet<>
  fullName: BindOpen.Data.Items.DataItemSet<>
  nameWithType.vb: DataItemSet(Of )
  fullName.vb: BindOpen.Data.Items.DataItemSet(Of )
  name.vb: DataItemSet(Of )
  spec.csharp:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: BindOpen.Data.Items.DataItemSet`1
    name: DataItemSet
    nameWithType: DataItemSet
    fullName: BindOpen.Data.Items.DataItemSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: BindOpen.Application.Modules.AppSection.IsVisible*
  commentId: Overload:BindOpen.Application.Modules.AppSection.IsVisible
  isExternal: true
  name: IsVisible
  nameWithType: AppSection.IsVisible
  fullName: BindOpen.Application.Modules.AppSection.IsVisible
- uid: BindOpen.Application.Modules.IAppSection.IsVisible
  commentId: P:BindOpen.Application.Modules.IAppSection.IsVisible
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: IsVisible
  nameWithType: IAppSection.IsVisible
  fullName: BindOpen.Application.Modules.IAppSection.IsVisible
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: BindOpen.Application.Modules.AppSection.IconFileName*
  commentId: Overload:BindOpen.Application.Modules.AppSection.IconFileName
  isExternal: true
  name: IconFileName
  nameWithType: AppSection.IconFileName
  fullName: BindOpen.Application.Modules.AppSection.IconFileName
- uid: BindOpen.Application.Modules.IAppSection.IconFileName
  commentId: P:BindOpen.Application.Modules.IAppSection.IconFileName
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: IconFileName
  nameWithType: IAppSection.IconFileName
  fullName: BindOpen.Application.Modules.IAppSection.IconFileName
- uid: BindOpen.Application.Modules.AppSection.ThumbIconFileName*
  commentId: Overload:BindOpen.Application.Modules.AppSection.ThumbIconFileName
  isExternal: true
  name: ThumbIconFileName
  nameWithType: AppSection.ThumbIconFileName
  fullName: BindOpen.Application.Modules.AppSection.ThumbIconFileName
- uid: BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  commentId: P:BindOpen.Application.Modules.IAppSection.ThumbIconFileName
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: ThumbIconFileName
  nameWithType: IAppSection.ThumbIconFileName
  fullName: BindOpen.Application.Modules.IAppSection.ThumbIconFileName
- uid: BindOpen.Application.Modules.AppSection.Rank*
  commentId: Overload:BindOpen.Application.Modules.AppSection.Rank
  isExternal: true
  name: Rank
  nameWithType: AppSection.Rank
  fullName: BindOpen.Application.Modules.AppSection.Rank
- uid: BindOpen.Application.Modules.IAppSection.Rank
  commentId: P:BindOpen.Application.Modules.IAppSection.Rank
  parent: BindOpen.Application.Modules.IAppSection
  isExternal: true
  name: Rank
  nameWithType: IAppSection.Rank
  fullName: BindOpen.Application.Modules.IAppSection.Rank
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
shouldSkipMarkup: true
